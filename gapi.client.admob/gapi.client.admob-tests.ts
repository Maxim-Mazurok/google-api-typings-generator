/* This is stub file for gapi.client.admob definition tests */
/* IMPORTANT.
* This file was automatically generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
* In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
**/

// Revision: 20210222

gapi.load('client', () => {
    /** now we can use gapi.client */
    gapi.client.load('admob', 'v1', () => {
        /** now we can use gapi.client.admob */

        /** don't forget to authenticate your client before sending any request to resources: */
        /** declare client_id registered in Google Developers Console */
        const client_id = '<<PUT YOUR CLIENT ID HERE>>';
        const scope = [
            /** See your AdMob data */
            'https://www.googleapis.com/auth/admob.readonly',
            /** See your AdMob data */
            'https://www.googleapis.com/auth/admob.report',
        ];
        const immediate = false;
        gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
            if (authResult && !authResult.error) {
                /** handle successful authorization */
                run();
            } else {
                /** handle authorization error */
            }
        });
    });

    async function run() {
        /** Gets information about the specified AdMob publisher account. */
        await gapi.client.admob.accounts.get({
            name: "Test string",
        });
        /** Generates an AdMob Mediation report based on the provided report specification. Returns result of a server-side streaming RPC. The result is returned in a sequence of responses. */
        await gapi.client.admob.accounts.mediationReport.generate({
            parent: "Test string",
        }, {
            reportSpec: {
                dateRange: {
                    endDate: {
                        day: 42,
                        month: 42,
                        year: 42,
                    },
                    startDate: {
                        day: 42,
                        month: 42,
                        year: 42,
                    },
                },
                dimensionFilters: [
                    {
                        dimension: "Test string",
                        matchesAny: {
                            values: [
                                "Test string"                            ],
                        },
                    }                ],
                dimensions: [
                    "Test string"                ],
                localizationSettings: {
                    currencyCode: "Test string",
                    languageCode: "Test string",
                },
                maxReportRows: 42,
                metrics: [
                    "Test string"                ],
                sortConditions: [
                    {
                        dimension: "Test string",
                        metric: "Test string",
                        order: "Test string",
                    }                ],
                timeZone: "Test string",
            },
        });
        /** Generates an AdMob Network report based on the provided report specification. Returns result of a server-side streaming RPC. The result is returned in a sequence of responses. */
        await gapi.client.admob.accounts.networkReport.generate({
            parent: "Test string",
        }, {
            reportSpec: {
                dateRange: {
                    endDate: {
                        day: 42,
                        month: 42,
                        year: 42,
                    },
                    startDate: {
                        day: 42,
                        month: 42,
                        year: 42,
                    },
                },
                dimensionFilters: [
                    {
                        dimension: "Test string",
                        matchesAny: {
                            values: [
                                "Test string"                            ],
                        },
                    }                ],
                dimensions: [
                    "Test string"                ],
                localizationSettings: {
                    currencyCode: "Test string",
                    languageCode: "Test string",
                },
                maxReportRows: 42,
                metrics: [
                    "Test string"                ],
                sortConditions: [
                    {
                        dimension: "Test string",
                        metric: "Test string",
                        order: "Test string",
                    }                ],
                timeZone: "Test string",
            },
        });
        /** List the AdMob publisher account accessible with the client credential. Currently, all credentials have access to at most one AdMob account. */
        await gapi.client.admob.accounts.list({
            pageSize: 42,
            pageToken: "Test string",
        });
        /** Generates an AdMob Mediation report based on the provided report specification. Returns result of a server-side streaming RPC. The result is returned in a sequence of responses. */
        await gapi.client.admob.accounts.mediationReport.generate({
            parent: "Test string",
        }, {
            reportSpec: {
                dateRange: {
                    endDate: {
                        day: 42,
                        month: 42,
                        year: 42,
                    },
                    startDate: {
                        day: 42,
                        month: 42,
                        year: 42,
                    },
                },
                dimensionFilters: [
                    {
                        dimension: "Test string",
                        matchesAny: {
                            values: [
                                "Test string"                            ],
                        },
                    }                ],
                dimensions: [
                    "Test string"                ],
                localizationSettings: {
                    currencyCode: "Test string",
                    languageCode: "Test string",
                },
                maxReportRows: 42,
                metrics: [
                    "Test string"                ],
                sortConditions: [
                    {
                        dimension: "Test string",
                        metric: "Test string",
                        order: "Test string",
                    }                ],
                timeZone: "Test string",
            },
        });
        /** Generates an AdMob Network report based on the provided report specification. Returns result of a server-side streaming RPC. The result is returned in a sequence of responses. */
        await gapi.client.admob.accounts.networkReport.generate({
            parent: "Test string",
        }, {
            reportSpec: {
                dateRange: {
                    endDate: {
                        day: 42,
                        month: 42,
                        year: 42,
                    },
                    startDate: {
                        day: 42,
                        month: 42,
                        year: 42,
                    },
                },
                dimensionFilters: [
                    {
                        dimension: "Test string",
                        matchesAny: {
                            values: [
                                "Test string"                            ],
                        },
                    }                ],
                dimensions: [
                    "Test string"                ],
                localizationSettings: {
                    currencyCode: "Test string",
                    languageCode: "Test string",
                },
                maxReportRows: 42,
                metrics: [
                    "Test string"                ],
                sortConditions: [
                    {
                        dimension: "Test string",
                        metric: "Test string",
                        order: "Test string",
                    }                ],
                timeZone: "Test string",
            },
        });
    }
});
