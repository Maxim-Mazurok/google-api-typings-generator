/* This is stub file for gapi.client.paymentsresellersubscription-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20250625

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://paymentsresellersubscription.googleapis.com/$discovery/rest?version=v1',
  );
  /** now we can use gapi.client.paymentsresellersubscription */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** See and/or control the devices that you selected */
    'https://www.googleapis.com/auth/sdm.service',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Currently, it doesn't support **YouTube** products. Retrieves the products that can be resold by the partner. It should be autenticated with a service account. */
    await gapi.client.paymentsresellersubscription.partners.products.list({
      filter: 'Test string',
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Currently, it is only enabeld for **YouTube**. Finds eligible promotions for the current user. The API requires user authorization via OAuth. The bare minimum oauth scope `openid` is sufficient, which will skip the consent screen. */
    await gapi.client.paymentsresellersubscription.partners.promotions.findEligible(
      {
        parent: 'Test string',
      },
      {
        filter: 'Test string',
        pageSize: 42,
        pageToken: 'Test string',
      },
    );
    /** Currently, it doesn't support **YouTube** promotions. Retrieves the promotions, such as free trial, that can be used by the partner. It should be autenticated with a service account. */
    await gapi.client.paymentsresellersubscription.partners.promotions.list({
      filter: 'Test string',
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Cancels a subscription service either immediately or by the end of the current billing cycle for their customers. It should be called directly by the partner using service accounts. */
    await gapi.client.paymentsresellersubscription.partners.subscriptions.cancel(
      {
        name: 'Test string',
      },
      {
        cancelImmediately: true,
        cancellationReason: 'Test string',
      },
    );
    /** Used by partners to create a subscription for their customers. The created subscription is associated with the end user inferred from the end user credentials. This API must be authorized by the end user using OAuth. */
    await gapi.client.paymentsresellersubscription.partners.subscriptions.create(
      {
        parent: 'Test string',
        subscriptionId: 'Test string',
      },
      {
        cancellationDetails: {
          reason: 'Test string',
        },
        createTime: 'Test string',
        cycleEndTime: 'Test string',
        endUserEntitled: true,
        freeTrialEndTime: 'Test string',
        lineItems: [
          {
            amount: {
              amountMicros: 'Test string',
              currencyCode: 'Test string',
            },
            bundleDetails: {
              bundleElementDetails: [
                {
                  product: 'Test string',
                  userAccountLinkedTime: 'Test string',
                },
              ],
            },
            description: 'Test string',
            finiteBillingCycleDetails: {
              billingCycleCountLimit: 'Test string',
            },
            lineItemFreeTrialEndTime: 'Test string',
            lineItemIndex: 42,
            lineItemPromotionSpecs: [
              {
                freeTrialDuration: {
                  count: 42,
                  unit: 'Test string',
                },
                introductoryPricingDetails: {
                  introductoryPricingSpecs: [
                    {
                      discountAmount: {
                        amountMicros: 'Test string',
                        currencyCode: 'Test string',
                      },
                      discountRatioMicros: 'Test string',
                      recurrenceCount: 42,
                      regionCode: 'Test string',
                    },
                  ],
                },
                promotion: 'Test string',
                type: 'Test string',
              },
            ],
            oneTimeRecurrenceDetails: {
              servicePeriod: {
                endTime: 'Test string',
                startTime: 'Test string',
              },
            },
            product: 'Test string',
            productPayload: {
              googleHomePayload: {
                attachedToGoogleStructure: true,
                partnerStructureId: 'Test string',
              },
              googleOnePayload: {
                campaigns: ['Test string'],
                offering: 'Test string',
                salesChannel: 'Test string',
                storeId: 'Test string',
              },
              youtubePayload: {
                accessEndTime: 'Test string',
                partnerEligibilityIds: ['Test string'],
                partnerPlanType: 'Test string',
              },
            },
            recurrenceType: 'Test string',
            state: 'Test string',
          },
        ],
        migrationDetails: {
          migratedSubscriptionId: 'Test string',
        },
        name: 'Test string',
        partnerUserToken: 'Test string',
        processingState: 'Test string',
        products: ['Test string'],
        promotions: ['Test string'],
        promotionSpecs: [
          {
            freeTrialDuration: {
              count: 42,
              unit: 'Test string',
            },
            introductoryPricingDetails: {
              introductoryPricingSpecs: [
                {
                  discountAmount: {
                    amountMicros: 'Test string',
                    currencyCode: 'Test string',
                  },
                  discountRatioMicros: 'Test string',
                  recurrenceCount: 42,
                  regionCode: 'Test string',
                },
              ],
            },
            promotion: 'Test string',
            type: 'Test string',
          },
        ],
        purchaseTime: 'Test string',
        redirectUri: 'Test string',
        renewalTime: 'Test string',
        serviceLocation: {
          postalCode: 'Test string',
          regionCode: 'Test string',
        },
        state: 'Test string',
        updateTime: 'Test string',
        upgradeDowngradeDetails: {
          billingCycleSpec: 'Test string',
          previousSubscriptionId: 'Test string',
        },
      },
    );
    /** Entitles a previously provisioned subscription to the current end user. The end user identity is inferred from the authorized credential of the request. This API must be authorized by the end user using OAuth. */
    await gapi.client.paymentsresellersubscription.partners.subscriptions.entitle(
      {
        name: 'Test string',
      },
      {
        lineItemEntitlementDetails: [
          {
            lineItemIndex: 42,
            products: ['Test string'],
          },
        ],
      },
    );
    /** [Opt-in only] Most partners should be on auto-extend by default. Extends a subscription service for their customers on an ongoing basis for the subscription to remain active and renewable. It should be called directly by the partner using service accounts. */
    await gapi.client.paymentsresellersubscription.partners.subscriptions.extend(
      {
        name: 'Test string',
      },
      {
        extension: {
          duration: {
            count: 42,
            unit: 'Test string',
          },
          partnerUserToken: 'Test string',
        },
        requestId: 'Test string',
      },
    );
    /** Gets a subscription by id. It should be called directly by the partner using service accounts. */
    await gapi.client.paymentsresellersubscription.partners.subscriptions.get({
      name: 'Test string',
    });
    /** Used by partners to provision a subscription for their customers. This creates a subscription without associating it with the end user account. EntitleSubscription must be called separately using OAuth in order for the end user account to be associated with the subscription. It should be called directly by the partner using service accounts. */
    await gapi.client.paymentsresellersubscription.partners.subscriptions.provision(
      {
        parent: 'Test string',
        subscriptionId: 'Test string',
      },
      {
        cancellationDetails: {
          reason: 'Test string',
        },
        createTime: 'Test string',
        cycleEndTime: 'Test string',
        endUserEntitled: true,
        freeTrialEndTime: 'Test string',
        lineItems: [
          {
            amount: {
              amountMicros: 'Test string',
              currencyCode: 'Test string',
            },
            bundleDetails: {
              bundleElementDetails: [
                {
                  product: 'Test string',
                  userAccountLinkedTime: 'Test string',
                },
              ],
            },
            description: 'Test string',
            finiteBillingCycleDetails: {
              billingCycleCountLimit: 'Test string',
            },
            lineItemFreeTrialEndTime: 'Test string',
            lineItemIndex: 42,
            lineItemPromotionSpecs: [
              {
                freeTrialDuration: {
                  count: 42,
                  unit: 'Test string',
                },
                introductoryPricingDetails: {
                  introductoryPricingSpecs: [
                    {
                      discountAmount: {
                        amountMicros: 'Test string',
                        currencyCode: 'Test string',
                      },
                      discountRatioMicros: 'Test string',
                      recurrenceCount: 42,
                      regionCode: 'Test string',
                    },
                  ],
                },
                promotion: 'Test string',
                type: 'Test string',
              },
            ],
            oneTimeRecurrenceDetails: {
              servicePeriod: {
                endTime: 'Test string',
                startTime: 'Test string',
              },
            },
            product: 'Test string',
            productPayload: {
              googleHomePayload: {
                attachedToGoogleStructure: true,
                partnerStructureId: 'Test string',
              },
              googleOnePayload: {
                campaigns: ['Test string'],
                offering: 'Test string',
                salesChannel: 'Test string',
                storeId: 'Test string',
              },
              youtubePayload: {
                accessEndTime: 'Test string',
                partnerEligibilityIds: ['Test string'],
                partnerPlanType: 'Test string',
              },
            },
            recurrenceType: 'Test string',
            state: 'Test string',
          },
        ],
        migrationDetails: {
          migratedSubscriptionId: 'Test string',
        },
        name: 'Test string',
        partnerUserToken: 'Test string',
        processingState: 'Test string',
        products: ['Test string'],
        promotions: ['Test string'],
        promotionSpecs: [
          {
            freeTrialDuration: {
              count: 42,
              unit: 'Test string',
            },
            introductoryPricingDetails: {
              introductoryPricingSpecs: [
                {
                  discountAmount: {
                    amountMicros: 'Test string',
                    currencyCode: 'Test string',
                  },
                  discountRatioMicros: 'Test string',
                  recurrenceCount: 42,
                  regionCode: 'Test string',
                },
              ],
            },
            promotion: 'Test string',
            type: 'Test string',
          },
        ],
        purchaseTime: 'Test string',
        redirectUri: 'Test string',
        renewalTime: 'Test string',
        serviceLocation: {
          postalCode: 'Test string',
          regionCode: 'Test string',
        },
        state: 'Test string',
        updateTime: 'Test string',
        upgradeDowngradeDetails: {
          billingCycleSpec: 'Test string',
          previousSubscriptionId: 'Test string',
        },
      },
    );
    /** Resumes a suspended subscription. The new billing cycle will start at the time of the request. It should be called directly by the partner using service accounts. */
    await gapi.client.paymentsresellersubscription.partners.subscriptions.resume(
      {
        name: 'Test string',
      },
      {},
    );
    /** Suspends a subscription. Contract terms may dictate if a prorated refund will be issued upon suspension. It should be called directly by the partner using service accounts. */
    await gapi.client.paymentsresellersubscription.partners.subscriptions.suspend(
      {
        name: 'Test string',
      },
      {},
    );
    /** Currently, it is used by **Google One, Play Pass** partners. Revokes the pending cancellation of a subscription, which is currently in `STATE_CANCEL_AT_END_OF_CYCLE` state. If the subscription is already cancelled, the request will fail. It should be called directly by the partner using service accounts. */
    await gapi.client.paymentsresellersubscription.partners.subscriptions.undoCancel(
      {
        name: 'Test string',
      },
      {},
    );
    /** This API replaces user authorized OAuth consent based APIs (Create, Entitle). Issues a timed session token for the given user intent. You can use the session token to redirect the user to Google to finish the signup flow. You can re-generate new session token repeatedly for the same request if necessary, regardless of the previous tokens being expired or not. By default, the session token is valid for 1 hour. */
    await gapi.client.paymentsresellersubscription.partners.userSessions.generate(
      {
        parent: 'Test string',
      },
      {
        intentPayload: {
          createIntent: {
            parent: 'Test string',
            subscription: {
              cancellationDetails: {
                reason: 'Test string',
              },
              createTime: 'Test string',
              cycleEndTime: 'Test string',
              endUserEntitled: true,
              freeTrialEndTime: 'Test string',
              lineItems: [
                {
                  amount: {
                    amountMicros: 'Test string',
                    currencyCode: 'Test string',
                  },
                  bundleDetails: {
                    bundleElementDetails: [
                      {
                        product: 'Test string',
                        userAccountLinkedTime: 'Test string',
                      },
                    ],
                  },
                  description: 'Test string',
                  finiteBillingCycleDetails: {
                    billingCycleCountLimit: 'Test string',
                  },
                  lineItemFreeTrialEndTime: 'Test string',
                  lineItemIndex: 42,
                  lineItemPromotionSpecs: [
                    {
                      freeTrialDuration: {
                        count: 42,
                        unit: 'Test string',
                      },
                      introductoryPricingDetails: {
                        introductoryPricingSpecs: [
                          {
                            discountAmount: {
                              amountMicros: 'Test string',
                              currencyCode: 'Test string',
                            },
                            discountRatioMicros: 'Test string',
                            recurrenceCount: 42,
                            regionCode: 'Test string',
                          },
                        ],
                      },
                      promotion: 'Test string',
                      type: 'Test string',
                    },
                  ],
                  oneTimeRecurrenceDetails: {
                    servicePeriod: {
                      endTime: 'Test string',
                      startTime: 'Test string',
                    },
                  },
                  product: 'Test string',
                  productPayload: {
                    googleHomePayload: {
                      attachedToGoogleStructure: true,
                      partnerStructureId: 'Test string',
                    },
                    googleOnePayload: {
                      campaigns: ['Test string'],
                      offering: 'Test string',
                      salesChannel: 'Test string',
                      storeId: 'Test string',
                    },
                    youtubePayload: {
                      accessEndTime: 'Test string',
                      partnerEligibilityIds: ['Test string'],
                      partnerPlanType: 'Test string',
                    },
                  },
                  recurrenceType: 'Test string',
                  state: 'Test string',
                },
              ],
              migrationDetails: {
                migratedSubscriptionId: 'Test string',
              },
              name: 'Test string',
              partnerUserToken: 'Test string',
              processingState: 'Test string',
              products: ['Test string'],
              promotions: ['Test string'],
              promotionSpecs: [
                {
                  freeTrialDuration: {
                    count: 42,
                    unit: 'Test string',
                  },
                  introductoryPricingDetails: {
                    introductoryPricingSpecs: [
                      {
                        discountAmount: {
                          amountMicros: 'Test string',
                          currencyCode: 'Test string',
                        },
                        discountRatioMicros: 'Test string',
                        recurrenceCount: 42,
                        regionCode: 'Test string',
                      },
                    ],
                  },
                  promotion: 'Test string',
                  type: 'Test string',
                },
              ],
              purchaseTime: 'Test string',
              redirectUri: 'Test string',
              renewalTime: 'Test string',
              serviceLocation: {
                postalCode: 'Test string',
                regionCode: 'Test string',
              },
              state: 'Test string',
              updateTime: 'Test string',
              upgradeDowngradeDetails: {
                billingCycleSpec: 'Test string',
                previousSubscriptionId: 'Test string',
              },
            },
            subscriptionId: 'Test string',
          },
          entitleIntent: {
            name: 'Test string',
          },
        },
      },
    );
  }
});
