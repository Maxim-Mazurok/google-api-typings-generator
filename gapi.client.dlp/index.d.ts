// Type definitions for non-npm package Cloud Data Loss Prevention (DLP) API v2 2.0
// Project: https://cloud.google.com/dlp/docs/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Google API Typings Generator <https://github.com/google-api-typings-generator>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://dlp.googleapis.com/$discovery/rest?version=v2
// Revision: 20200821

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Cloud Data Loss Prevention (DLP) API v2 */
    function load(name: "dlp", version: "v2"): PromiseLike<void>;
    function load(name: "dlp", version: "v2", callback: () => any): void;

    namespace dlp {
        interface GooglePrivacyDlpV2Action {
            /** Enable email notification for project owners and editors on job's completion/failure. */
            jobNotificationEmails?: any;
            /** Publish findings to Cloud Datahub. */
            publishFindingsToCloudDataCatalog?: any;
            /** Publish summary to Cloud Security Command Center (Alpha). */
            publishSummaryToCscc?: any;
            /** Enable Stackdriver metric dlp.googleapis.com/finding_count. */
            publishToStackdriver?: any;
            /** Publish a notification to a pubsub topic. */
            pubSub?: GooglePrivacyDlpV2PublishToPubSub;
            /** Save resulting findings in a provided location. */
            saveFindings?: GooglePrivacyDlpV2SaveFindings;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GooglePrivacyDlpV2ActivateJobTriggerRequest {
        }
        interface GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails {
            /** Categorical stats result */
            categoricalStatsResult?: GooglePrivacyDlpV2CategoricalStatsResult;
            /** Delta-presence result */
            deltaPresenceEstimationResult?: GooglePrivacyDlpV2DeltaPresenceEstimationResult;
            /** K-anonymity result */
            kAnonymityResult?: GooglePrivacyDlpV2KAnonymityResult;
            /** K-map result */
            kMapEstimationResult?: GooglePrivacyDlpV2KMapEstimationResult;
            /** L-divesity result */
            lDiversityResult?: GooglePrivacyDlpV2LDiversityResult;
            /** Numerical stats result */
            numericalStatsResult?: GooglePrivacyDlpV2NumericalStatsResult;
            /** Privacy metric to compute. */
            requestedPrivacyMetric?: GooglePrivacyDlpV2PrivacyMetric;
            /** Input dataset to compute metrics over. */
            requestedSourceTable?: GooglePrivacyDlpV2BigQueryTable;
        }
        interface GooglePrivacyDlpV2AuxiliaryTable {
            /** Required. Quasi-identifier columns. */
            quasiIds?: GooglePrivacyDlpV2QuasiIdField[];
            /** Required. The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero. */
            relativeFrequency?: GooglePrivacyDlpV2FieldId;
            /** Required. Auxiliary table location. */
            table?: GooglePrivacyDlpV2BigQueryTable;
        }
        interface GooglePrivacyDlpV2BigQueryField {
            /** Designated field in the BigQuery table. */
            field?: GooglePrivacyDlpV2FieldId;
            /** Source table of the field. */
            table?: GooglePrivacyDlpV2BigQueryTable;
        }
        interface GooglePrivacyDlpV2BigQueryKey {
            /**
             * Row number inferred at the time the table was scanned. This value is nondeterministic, cannot be queried, and may be null for inspection jobs. To locate findings within a table,
             * specify `inspect_job.storage_config.big_query_options.identifying_fields` in `CreateDlpJobRequest`.
             */
            rowNumber?: string;
            /** Complete BigQuery table reference. */
            tableReference?: GooglePrivacyDlpV2BigQueryTable;
        }
        interface GooglePrivacyDlpV2BigQueryOptions {
            /** References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings. */
            excludedFields?: GooglePrivacyDlpV2FieldId[];
            /**
             * Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in
             * the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed.
             */
            identifyingFields?: GooglePrivacyDlpV2FieldId[];
            /**
             * Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of
             * rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
             */
            rowsLimit?: string;
            /**
             * Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to
             * 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
             */
            rowsLimitPercent?: number;
            sampleMethod?: string;
            /** Complete BigQuery table reference. */
            tableReference?: GooglePrivacyDlpV2BigQueryTable;
        }
        interface GooglePrivacyDlpV2BigQueryTable {
            /** Dataset ID of the table. */
            datasetId?: string;
            /** The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call. */
            projectId?: string;
            /** Name of the table. */
            tableId?: string;
        }
        interface GooglePrivacyDlpV2BoundingBox {
            /** Height of the bounding box in pixels. */
            height?: number;
            /** Left coordinate of the bounding box. (0,0) is upper left. */
            left?: number;
            /** Top coordinate of the bounding box. (0,0) is upper left. */
            top?: number;
            /** Width of the bounding box in pixels. */
            width?: number;
        }
        interface GooglePrivacyDlpV2Bucket {
            /** Upper bound of the range, exclusive; type must match min. */
            max?: GooglePrivacyDlpV2Value;
            /** Lower bound of the range, inclusive. Type should be the same as max if used. */
            min?: GooglePrivacyDlpV2Value;
            /** Required. Replacement value for this bucket. */
            replacementValue?: GooglePrivacyDlpV2Value;
        }
        interface GooglePrivacyDlpV2BucketingConfig {
            /** Set of buckets. Ranges must be non-overlapping. */
            buckets?: GooglePrivacyDlpV2Bucket[];
        }
        interface GooglePrivacyDlpV2ByteContentItem {
            /** Content data to inspect or redact. */
            data?: string;
            /** The type of data stored in the bytes string. Default will be TEXT_UTF8. */
            type?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GooglePrivacyDlpV2CancelDlpJobRequest {
        }
        interface GooglePrivacyDlpV2CategoricalStatsConfig {
            /**
             * Field to compute categorical stats on. All column types are supported except for arrays and structs. However, it may be more informative to use NumericalStats when the field type is
             * supported, depending on the data.
             */
            field?: GooglePrivacyDlpV2FieldId;
        }
        interface GooglePrivacyDlpV2CategoricalStatsHistogramBucket {
            /** Total number of values in this bucket. */
            bucketSize?: string;
            /** Total number of distinct values in this bucket. */
            bucketValueCount?: string;
            /** Sample of value frequencies in this bucket. The total number of values returned per bucket is capped at 20. */
            bucketValues?: GooglePrivacyDlpV2ValueFrequency[];
            /** Lower bound on the value frequency of the values in this bucket. */
            valueFrequencyLowerBound?: string;
            /** Upper bound on the value frequency of the values in this bucket. */
            valueFrequencyUpperBound?: string;
        }
        interface GooglePrivacyDlpV2CategoricalStatsResult {
            /** Histogram of value frequencies in the column. */
            valueFrequencyHistogramBuckets?: GooglePrivacyDlpV2CategoricalStatsHistogramBucket[];
        }
        interface GooglePrivacyDlpV2CharacterMaskConfig {
            /**
             * When masking a string, items in this list will be skipped when replacing characters. For example, if the input string is `555-555-5555` and you instruct Cloud DLP to skip `-` and
             * mask 5 characters with `*`, Cloud DLP returns `***-**5-5555`.
             */
            charactersToIgnore?: GooglePrivacyDlpV2CharsToIgnore[];
            /**
             * Character to use to mask the sensitive values—for example, `*` for an alphabetic string such as a name, or `0` for a numeric string such as ZIP code or credit card number. This
             * string must have a length of 1. If not supplied, this value defaults to `*` for strings, and `0` for digits.
             */
            maskingCharacter?: string;
            /** Number of characters to mask. If not set, all matching chars will be masked. Skipped characters do not count towards this tally. */
            numberToMask?: number;
            /**
             * Mask characters in reverse order. For example, if `masking_character` is `0`, `number_to_mask` is `14`, and `reverse_order` is `false`, then the input string `1234-5678-9012-3456`
             * is masked as `00000000000000-3456`. If `masking_character` is `*`, `number_to_mask` is `3`, and `reverse_order` is `true`, then the string `12345` is masked as `12***`.
             */
            reverseOrder?: boolean;
        }
        interface GooglePrivacyDlpV2CharsToIgnore {
            /** Characters to not transform when masking. */
            charactersToSkip?: string;
            /** Common characters to not transform when masking. Useful to avoid removing punctuation. */
            commonCharactersToIgnore?: string;
        }
        interface GooglePrivacyDlpV2CloudStorageFileSet {
            /** The url, in the format `gs:///`. Trailing wildcard in the path is allowed. */
            url?: string;
        }
        interface GooglePrivacyDlpV2CloudStorageOptions {
            /**
             * Max number of bytes to scan from a file. If a scanned file's size is bigger than this value then the rest of the bytes are omitted. Only one of bytes_limit_per_file and
             * bytes_limit_per_file_percent can be specified.
             */
            bytesLimitPerFile?: string;
            /**
             * Max percentage of bytes to scan from a file. The rest are omitted. The number of bytes scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no
             * limit. Defaults to 0. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified.
             */
            bytesLimitPerFilePercent?: number;
            /** The set of one or more files to scan. */
            fileSet?: GooglePrivacyDlpV2FileSet;
            /**
             * Limits the number of files to scan to this percentage of the input FileSet. Number of files scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no
             * limit. Defaults to 0.
             */
            filesLimitPercent?: number;
            /**
             * List of file type groups to include in the scan. If empty, all files are scanned and available data format processors are applied. In addition, the binary content of the selected
             * files is always scanned as well. Images are scanned only as binary if the specified region does not support image inspection and no file_types were specified. Image inspection is
             * restricted to 'global', 'us', 'asia', and 'europe'.
             */
            fileTypes?: string[];
            sampleMethod?: string;
        }
        interface GooglePrivacyDlpV2CloudStoragePath {
            /** A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt */
            path?: string;
        }
        interface GooglePrivacyDlpV2CloudStorageRegexFileSet {
            /** The name of a Cloud Storage bucket. Required. */
            bucketName?: string;
            /**
             * A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular
             * expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
             */
            excludeRegex?: string[];
            /**
             * A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files,
             * except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular
             * expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
             */
            includeRegex?: string[];
        }
        interface GooglePrivacyDlpV2Color {
            /** The amount of blue in the color as a value in the interval [0, 1]. */
            blue?: number;
            /** The amount of green in the color as a value in the interval [0, 1]. */
            green?: number;
            /** The amount of red in the color as a value in the interval [0, 1]. */
            red?: number;
        }
        interface GooglePrivacyDlpV2Condition {
            /** Required. Field within the record this condition is evaluated against. */
            field?: GooglePrivacyDlpV2FieldId;
            /** Required. Operator used to compare the field or infoType to the value. */
            operator?: string;
            /** Value to compare against. [Mandatory, except for `EXISTS` tests.] */
            value?: GooglePrivacyDlpV2Value;
        }
        interface GooglePrivacyDlpV2Conditions {
            /** A collection of conditions. */
            conditions?: GooglePrivacyDlpV2Condition[];
        }
        interface GooglePrivacyDlpV2Container {
            /** A string representation of the full container name. Examples: - BigQuery: 'Project:DataSetId.TableId' - Google Cloud Storage: 'gs://Bucket/folders/filename.txt' */
            fullPath?: string;
            /** Project where the finding was found. Can be different from the project that owns the finding. */
            projectId?: string;
            /**
             * The rest of the path after the root. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the relative path is `table_id` - Google Cloud Storage file
             * `gs://bucket/folder/filename.txt`, the relative path is `folder/filename.txt`
             */
            relativePath?: string;
            /**
             * The root of the container. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the root is `dataset_id` - For Google Cloud Storage file
             * `gs://bucket/folder/filename.txt`, the root is `gs://bucket`
             */
            rootPath?: string;
            /** Container type, for example BigQuery or Google Cloud Storage. */
            type?: string;
            /**
             * Findings container modification timestamp, if applicable. For Google Cloud Storage contains last file modification timestamp. For BigQuery table contains last_modified_time
             * property. For Datastore - not populated.
             */
            updateTime?: string;
            /** Findings container version, if available ("generation" for Google Cloud Storage). */
            version?: string;
        }
        interface GooglePrivacyDlpV2ContentItem {
            /** Content data to inspect or redact. Replaces `type` and `data`. */
            byteItem?: GooglePrivacyDlpV2ByteContentItem;
            /** Structured content for inspection. See https://cloud.google.com/dlp/docs/inspecting-text#inspecting_a_table to learn more. */
            table?: GooglePrivacyDlpV2Table;
            /** String data to inspect or redact. */
            value?: string;
        }
        interface GooglePrivacyDlpV2ContentLocation {
            /**
             * Name of the container where the finding is located. The top level name is the source file name or table name. Names of some common storage containers are formatted as follows: *
             * BigQuery tables: `{project_id}:{dataset_id}.{table_id}` * Cloud Storage files: `gs://{bucket}/{path}` * Datastore namespace: {namespace} Nested names could be absent if the embedded
             * object has no string identifier (for an example an image contained within a document).
             */
            containerName?: string;
            /**
             * Findings container modification timestamp, if applicable. For Google Cloud Storage contains last file modification timestamp. For BigQuery table contains last_modified_time
             * property. For Datastore - not populated.
             */
            containerTimestamp?: string;
            /** Findings container version, if available ("generation" for Google Cloud Storage). */
            containerVersion?: string;
            /** Location data for document files. */
            documentLocation?: GooglePrivacyDlpV2DocumentLocation;
            /** Location within an image's pixels. */
            imageLocation?: GooglePrivacyDlpV2ImageLocation;
            /** Location within the metadata for inspected content. */
            metadataLocation?: GooglePrivacyDlpV2MetadataLocation;
            /** Location within a row or record of a database table. */
            recordLocation?: GooglePrivacyDlpV2RecordLocation;
        }
        interface GooglePrivacyDlpV2CreateDeidentifyTemplateRequest {
            /** Required. The DeidentifyTemplate to create. */
            deidentifyTemplate?: GooglePrivacyDlpV2DeidentifyTemplate;
            /** Deprecated. This field has no effect. */
            locationId?: string;
            /**
             * The template id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100
             * characters. Can be empty to allow the system to generate one.
             */
            templateId?: string;
        }
        interface GooglePrivacyDlpV2CreateDlpJobRequest {
            /** Set to control what and how to inspect. */
            inspectJob?: GooglePrivacyDlpV2InspectJobConfig;
            /**
             * The job id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100 characters.
             * Can be empty to allow the system to generate one.
             */
            jobId?: string;
            /** Deprecated. This field has no effect. */
            locationId?: string;
            /** Set to choose what metric to calculate. */
            riskJob?: GooglePrivacyDlpV2RiskAnalysisJobConfig;
        }
        interface GooglePrivacyDlpV2CreateInspectTemplateRequest {
            /** Required. The InspectTemplate to create. */
            inspectTemplate?: GooglePrivacyDlpV2InspectTemplate;
            /** Deprecated. This field has no effect. */
            locationId?: string;
            /**
             * The template id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100
             * characters. Can be empty to allow the system to generate one.
             */
            templateId?: string;
        }
        interface GooglePrivacyDlpV2CreateJobTriggerRequest {
            /** Required. The JobTrigger to create. */
            jobTrigger?: GooglePrivacyDlpV2JobTrigger;
            /** Deprecated. This field has no effect. */
            locationId?: string;
            /**
             * The trigger id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100
             * characters. Can be empty to allow the system to generate one.
             */
            triggerId?: string;
        }
        interface GooglePrivacyDlpV2CreateStoredInfoTypeRequest {
            /** Required. Configuration of the storedInfoType to create. */
            config?: GooglePrivacyDlpV2StoredInfoTypeConfig;
            /** Deprecated. This field has no effect. */
            locationId?: string;
            /**
             * The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100
             * characters. Can be empty to allow the system to generate one.
             */
            storedInfoTypeId?: string;
        }
        interface GooglePrivacyDlpV2CryptoDeterministicConfig {
            /**
             * A context may be used for higher security and maintaining referential integrity such that the same identifier in two different contexts will be given a distinct surrogate. The
             * context is appended to plaintext value being encrypted. On decryption the provided context is validated against the value used during encryption. If a context was provided during
             * encryption, same context must be provided during decryption as well. If the context is not set, plaintext would be used as is for encryption. If the context is set but: 1. there is
             * no record present when transforming a given value or 2. the field is not present when transforming a given value, plaintext would be used as is for encryption. Note that case (1) is
             * expected when an `InfoTypeTransformation` is applied to both structured and non-structured `ContentItem`s.
             */
            context?: GooglePrivacyDlpV2FieldId;
            /** The key used by the encryption function. */
            cryptoKey?: GooglePrivacyDlpV2CryptoKey;
            /**
             * The custom info type to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom info type followed by the number of
             * characters comprising the surrogate. The following scheme defines the format: {info type name}({surrogate character count}):{surrogate} For example, if the name of custom info type
             * is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content
             * using the custom info type 'Surrogate'. This facilitates reversal of the surrogate when it occurs in free text. Note: For record transformations where the entire cell in a table is
             * being transformed, surrogates are not mandatory. Surrogates are used to denote the location of the token and are necessary for re-identification in free form text. In order for
             * inspection to work properly, the name of this info type must not occur naturally anywhere in your data; otherwise, inspection may either - reverse a surrogate that does not
             * correspond to an actual identifier - be unable to parse the surrogate and result in an error Therefore, choose your custom info type name carefully after considering what your data
             * looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your
             * data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE.
             */
            surrogateInfoType?: GooglePrivacyDlpV2InfoType;
        }
        interface GooglePrivacyDlpV2CryptoHashConfig {
            /** The key used by the hash function. */
            cryptoKey?: GooglePrivacyDlpV2CryptoKey;
        }
        interface GooglePrivacyDlpV2CryptoKey {
            /** Kms wrapped key */
            kmsWrapped?: GooglePrivacyDlpV2KmsWrappedCryptoKey;
            /** Transient crypto key */
            transient?: GooglePrivacyDlpV2TransientCryptoKey;
            /** Unwrapped crypto key */
            unwrapped?: GooglePrivacyDlpV2UnwrappedCryptoKey;
        }
        interface GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig {
            /** Common alphabets. */
            commonAlphabet?: string;
            /**
             * The 'tweak', a context may be used for higher security since the same identifier in two different contexts won't be given the same surrogate. If the context is not set, a default
             * tweak will be used. If the context is set but: 1. there is no record present when transforming a given value or 1. the field is not present when transforming a given value, a
             * default tweak will be used. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and non-structured `ContentItem`s. Currently, the
             * referenced field may be of value type integer or string. The tweak is constructed as a sequence of bytes in big endian byte order such that: - a 64 bit integer is encoded followed
             * by a single byte of value 1 - a string is encoded in UTF-8 format followed by a single byte of value 2
             */
            context?: GooglePrivacyDlpV2FieldId;
            /** Required. The key used by the encryption algorithm. */
            cryptoKey?: GooglePrivacyDlpV2CryptoKey;
            /**
             * This is supported by mapping these to the alphanumeric characters that the FFX mode natively supports. This happens before/after encryption/decryption. Each character listed must
             * appear only once. Number of characters must be in the range [2, 95]. This must be encoded as ASCII. The order of characters does not matter. The full list of allowed characters is:
             * 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz ~`!@#$%^&*()_-+={[}]|\:;"'<,>.?/
             */
            customAlphabet?: string;
            /** The native way to select the alphabet. Must be in the range [2, 95]. */
            radix?: number;
            /**
             * The custom infoType to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom infoType followed by the number of
             * characters comprising the surrogate. The following scheme defines the format: info_type_name(surrogate_character_count):surrogate For example, if the name of custom infoType is
             * 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content
             * using the custom infoType [`SurrogateType`](https://cloud.google.com/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype). This facilitates reversal of the surrogate when it
             * occurs in free text. In order for inspection to work properly, the name of this infoType must not occur naturally anywhere in your data; otherwise, inspection may find a surrogate
             * that does not correspond to an actual identifier. Therefore, choose your custom infoType name carefully after considering what your data looks like. One way to select a name that
             * has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is
             * entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE
             */
            surrogateInfoType?: GooglePrivacyDlpV2InfoType;
        }
        interface GooglePrivacyDlpV2CustomInfoType {
            /** Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType. */
            detectionRules?: GooglePrivacyDlpV2DetectionRule[];
            /** A list of phrases to detect as a CustomInfoType. */
            dictionary?: GooglePrivacyDlpV2Dictionary;
            /** If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching. */
            exclusionType?: string;
            /**
             * CustomInfoType can either be a new infoType, or an extension of built-in infoType, when the name matches one of existing infoTypes and that infoType is specified in
             * `InspectContent.info_types` field. Specifying the latter adds findings to the one detected by the system. If built-in info type is not specified in `InspectContent.info_types` list
             * then the name is treated as a custom info type.
             */
            infoType?: GooglePrivacyDlpV2InfoType;
            /**
             * Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY`
             * if not specified.
             */
            likelihood?: string;
            /** Regular expression based CustomInfoType. */
            regex?: GooglePrivacyDlpV2Regex;
            /** Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`. */
            storedType?: GooglePrivacyDlpV2StoredType;
            /** Message for detecting output from deidentification transformations that support reversing. */
            surrogateType?: any;
        }
        interface GooglePrivacyDlpV2DatastoreKey {
            /** Datastore entity key. */
            entityKey?: GooglePrivacyDlpV2Key;
        }
        interface GooglePrivacyDlpV2DatastoreOptions {
            /** The kind to process. */
            kind?: GooglePrivacyDlpV2KindExpression;
            /** A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty. */
            partitionId?: GooglePrivacyDlpV2PartitionId;
        }
        interface GooglePrivacyDlpV2DateShiftConfig {
            /** Points to the field that contains the context, for example, an entity id. If set, must also set cryptoKey. If set, shift will be consistent for the given context. */
            context?: GooglePrivacyDlpV2FieldId;
            /**
             * Causes the shift to be computed based on this key and the context. This results in the same shift for the same context and crypto_key. If set, must also set context. Can only be
             * applied to table items.
             */
            cryptoKey?: GooglePrivacyDlpV2CryptoKey;
            /** Required. For example, -5 means shift date to at most 5 days back in the past. */
            lowerBoundDays?: number;
            /**
             * Required. Range of shift in days. Actual shift will be selected at random within this range (inclusive ends). Negative means shift to earlier in time. Must not be more than 365250
             * days (1000 years) each direction. For example, 3 means shift date to at most 3 days into the future.
             */
            upperBoundDays?: number;
        }
        interface GooglePrivacyDlpV2DateTime {
            /** One or more of the following must be set. Must be a valid date or time value. */
            date?: GoogleTypeDate;
            /** Day of week */
            dayOfWeek?: string;
            /** Time of day */
            time?: GoogleTypeTimeOfDay;
            /** Time zone */
            timeZone?: GooglePrivacyDlpV2TimeZone;
        }
        interface GooglePrivacyDlpV2DeidentifyConfig {
            /** Treat the dataset as free-form text and apply the same free text transformation everywhere. */
            infoTypeTransformations?: GooglePrivacyDlpV2InfoTypeTransformations;
            /** Treat the dataset as structured. Transformations can be applied to specific locations within structured datasets, such as transforming a column within a table. */
            recordTransformations?: GooglePrivacyDlpV2RecordTransformations;
            /** Mode for handling transformation errors. If left unspecified, the default mode is `TransformationErrorHandling.ThrowError`. */
            transformationErrorHandling?: GooglePrivacyDlpV2TransformationErrorHandling;
        }
        interface GooglePrivacyDlpV2DeidentifyContentRequest {
            /** Configuration for the de-identification of the content item. Items specified here will override the template referenced by the deidentify_template_name argument. */
            deidentifyConfig?: GooglePrivacyDlpV2DeidentifyConfig;
            /**
             * Template to use. Any configuration directly specified in deidentify_config will override those set in the template. Singular fields that are set in this request will replace their
             * corresponding fields in the template. Repeated fields are appended. Singular sub-messages and groups are recursively merged.
             */
            deidentifyTemplateName?: string;
            /** Configuration for the inspector. Items specified here will override the template referenced by the inspect_template_name argument. */
            inspectConfig?: GooglePrivacyDlpV2InspectConfig;
            /**
             * Template to use. Any configuration directly specified in inspect_config will override those set in the template. Singular fields that are set in this request will replace their
             * corresponding fields in the template. Repeated fields are appended. Singular sub-messages and groups are recursively merged.
             */
            inspectTemplateName?: string;
            /** The item to de-identify. Will be treated as text. */
            item?: GooglePrivacyDlpV2ContentItem;
            /** Deprecated. This field has no effect. */
            locationId?: string;
        }
        interface GooglePrivacyDlpV2DeidentifyContentResponse {
            /** The de-identified item. */
            item?: GooglePrivacyDlpV2ContentItem;
            /** An overview of the changes that were made on the `item`. */
            overview?: GooglePrivacyDlpV2TransformationOverview;
        }
        interface GooglePrivacyDlpV2DeidentifyTemplate {
            /** Output only. The creation timestamp of an inspectTemplate. */
            createTime?: string;
            /** ///////////// // The core content of the template // /////////////// */
            deidentifyConfig?: GooglePrivacyDlpV2DeidentifyConfig;
            /** Short description (max 256 chars). */
            description?: string;
            /** Display name (max 256 chars). */
            displayName?: string;
            /**
             * Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/deidentifyTemplates/TEMPLATE_ID` OR
             * `organizations/ORGANIZATION_ID/deidentifyTemplates/TEMPLATE_ID`
             */
            name?: string;
            /** Output only. The last update timestamp of an inspectTemplate. */
            updateTime?: string;
        }
        interface GooglePrivacyDlpV2DeltaPresenceEstimationConfig {
            /** Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers field must appear in exactly one field of one auxiliary table. */
            auxiliaryTables?: GooglePrivacyDlpV2StatisticalTable[];
            /** Required. Fields considered to be quasi-identifiers. No two fields can have the same tag. */
            quasiIds?: GooglePrivacyDlpV2QuasiId[];
            /** ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code. */
            regionCode?: string;
        }
        interface GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket {
            /** Number of records within these probability bounds. */
            bucketSize?: string;
            /** Total number of distinct quasi-identifier tuple values in this bucket. */
            bucketValueCount?: string;
            /** Sample of quasi-identifier tuple values in this bucket. The total number of classes returned per bucket is capped at 20. */
            bucketValues?: GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues[];
            /** Always greater than or equal to min_probability. */
            maxProbability?: number;
            /** Between 0 and 1. */
            minProbability?: number;
        }
        interface GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues {
            /**
             * The estimated probability that a given individual sharing these quasi-identifier values is in the dataset. This value, typically called δ, is the ratio between the number of records
             * in the dataset with these quasi-identifier values, and the total number of individuals (inside *and* outside the dataset) with these quasi-identifier values. For example, if there
             * are 15 individuals in the dataset who share the same quasi-identifier values, and an estimated 100 people in the entire population with these values, then δ is 0.15.
             */
            estimatedProbability?: number;
            /** The quasi-identifier values. */
            quasiIdsValues?: GooglePrivacyDlpV2Value[];
        }
        interface GooglePrivacyDlpV2DeltaPresenceEstimationResult {
            /**
             * The intervals [min_probability, max_probability) do not overlap. If a value doesn't correspond to any such interval, the associated frequency is zero. For example, the following
             * records: {min_probability: 0, max_probability: 0.1, frequency: 17} {min_probability: 0.2, max_probability: 0.3, frequency: 42} {min_probability: 0.3, max_probability: 0.4,
             * frequency: 99} mean that there are no record with an estimated probability in [0.1, 0.2) nor larger or equal to 0.4.
             */
            deltaPresenceEstimationHistogram?: GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket[];
        }
        interface GooglePrivacyDlpV2DetectionRule {
            /** Hotword-based detection rule. */
            hotwordRule?: GooglePrivacyDlpV2HotwordRule;
        }
        interface GooglePrivacyDlpV2Dictionary {
            /** Newline-delimited file of words in Cloud Storage. Only a single file is accepted. */
            cloudStoragePath?: GooglePrivacyDlpV2CloudStoragePath;
            /** List of words or phrases to search for. */
            wordList?: GooglePrivacyDlpV2WordList;
        }
        interface GooglePrivacyDlpV2DlpJob {
            /** Time when the job was created. */
            createTime?: string;
            /** Time when the job finished. */
            endTime?: string;
            /** A stream of errors encountered running the job. */
            errors?: GooglePrivacyDlpV2Error[];
            /** Results from inspecting a data source. */
            inspectDetails?: GooglePrivacyDlpV2InspectDataSourceDetails;
            /** If created by a job trigger, the resource name of the trigger that instantiated the job. */
            jobTriggerName?: string;
            /** The server-assigned name. */
            name?: string;
            /** Results from analyzing risk of a data source. */
            riskDetails?: GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails;
            /** Time when the job started. */
            startTime?: string;
            /** State of a job. */
            state?: string;
            /** The type of job. */
            type?: string;
        }
        interface GooglePrivacyDlpV2DocumentLocation {
            /** Offset of the line, from the beginning of the file, where the finding is located. */
            fileOffset?: string;
        }
        interface GooglePrivacyDlpV2EntityId {
            /** Composite key indicating which field contains the entity identifier. */
            field?: GooglePrivacyDlpV2FieldId;
        }
        interface GooglePrivacyDlpV2Error {
            /** Detailed error codes and messages. */
            details?: GoogleRpcStatus;
            /** The times the error occurred. */
            timestamps?: string[];
        }
        interface GooglePrivacyDlpV2ExcludeInfoTypes {
            /**
             * InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for
             * `InspectionRuleSet.info_types` containing "PHONE_NUMBER"` and `exclusion_rule` containing `exclude_info_types.info_types` with "EMAIL_ADDRESS" the phone number findings are dropped
             * if they overlap with EMAIL_ADDRESS finding. That leads to "555-222-2222@example.org" to generate only a single finding, namely email address.
             */
            infoTypes?: GooglePrivacyDlpV2InfoType[];
        }
        interface GooglePrivacyDlpV2ExclusionRule {
            /** Dictionary which defines the rule. */
            dictionary?: GooglePrivacyDlpV2Dictionary;
            /** Set of infoTypes for which findings would affect this rule. */
            excludeInfoTypes?: GooglePrivacyDlpV2ExcludeInfoTypes;
            /** How the rule is applied, see MatchingType documentation for details. */
            matchingType?: string;
            /** Regular expression which defines the rule. */
            regex?: GooglePrivacyDlpV2Regex;
        }
        interface GooglePrivacyDlpV2Expressions {
            /** Conditions to apply to the expression. */
            conditions?: GooglePrivacyDlpV2Conditions;
            /** The operator to apply to the result of conditions. Default and currently only supported value is `AND`. */
            logicalOperator?: string;
        }
        interface GooglePrivacyDlpV2FieldId {
            /** Name describing the field. */
            name?: string;
        }
        interface GooglePrivacyDlpV2FieldTransformation {
            /**
             * Only apply the transformation if the condition evaluates to true for the given `RecordCondition`. The conditions are allowed to reference fields that are not used in the actual
             * transformation. Example Use Cases: - Apply a different bucket transformation to an age column if the zip code column for the same record is within a specific range. - Redact a field
             * if the date of birth field is greater than 85.
             */
            condition?: GooglePrivacyDlpV2RecordCondition;
            /** Required. Input field(s) to apply the transformation to. */
            fields?: GooglePrivacyDlpV2FieldId[];
            /** Treat the contents of the field as free text, and selectively transform content that matches an `InfoType`. */
            infoTypeTransformations?: GooglePrivacyDlpV2InfoTypeTransformations;
            /** Apply the transformation to the entire field. */
            primitiveTransformation?: GooglePrivacyDlpV2PrimitiveTransformation;
        }
        interface GooglePrivacyDlpV2FileSet {
            /** The regex-filtered set of files to scan. Exactly one of `url` or `regex_file_set` must be set. */
            regexFileSet?: GooglePrivacyDlpV2CloudStorageRegexFileSet;
            /**
             * The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory
             * represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and
             * `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set.
             */
            url?: string;
        }
        interface GooglePrivacyDlpV2Finding {
            /** Timestamp when finding was detected. */
            createTime?: string;
            /** The type of content that might have been found. Provided if `excluded_types` is false. */
            infoType?: GooglePrivacyDlpV2InfoType;
            /** Time the job started that produced this finding. */
            jobCreateTime?: string;
            /** The job that stored the finding. */
            jobName?: string;
            /**
             * The labels associated with this `Finding`. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.
             * Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a
             * given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
             */
            labels?: { [P in string]: string };
            /** Confidence of how likely it is that the `info_type` is correct. */
            likelihood?: string;
            /** Where the content was found. */
            location?: GooglePrivacyDlpV2Location;
            /** Resource name in format projects/{project}/locations/{location}/findings/{finding} Populated only when viewing persisted findings. */
            name?: string;
            /**
             * The content that was found. Even if the content is not textual, it may be converted to a textual representation here. Provided if `include_quote` is true and the finding is less
             * than or equal to 4096 bytes long. If the finding exceeds 4096 bytes in length, the quote may be omitted.
             */
            quote?: string;
            /**
             * Contains data parsed from quotes. Only populated if include_quote was set to true and a supported infoType was requested. Currently supported infoTypes: DATE, DATE_OF_BIRTH and
             * TIME.
             */
            quoteInfo?: GooglePrivacyDlpV2QuoteInfo;
            /** The job that stored the finding. */
            resourceName?: string;
            /** Job trigger name, if applicable, for this finding. */
            triggerName?: string;
        }
        interface GooglePrivacyDlpV2FindingLimits {
            /** Configuration of findings limit given for specified infoTypes. */
            maxFindingsPerInfoType?: GooglePrivacyDlpV2InfoTypeLimit[];
            /**
             * Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set
             * within `InspectContentRequest`, this field is ignored.
             */
            maxFindingsPerItem?: number;
            /** Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher. */
            maxFindingsPerRequest?: number;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GooglePrivacyDlpV2FinishDlpJobRequest {
        }
        interface GooglePrivacyDlpV2FixedSizeBucketingConfig {
            /**
             * Required. Size of each bucket (except for minimum and maximum buckets). So if `lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the following buckets would be
             * used: -10, 10-20, 20-30, 30-40, 40-50, 50-60, 60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works.
             */
            bucketSize?: number;
            /**
             * Required. Lower bound value of buckets. All values less than `lower_bound` are grouped together into a single bucket; for example if `lower_bound` = 10, then all values less than 10
             * are replaced with the value "-10".
             */
            lowerBound?: GooglePrivacyDlpV2Value;
            /**
             * Required. Upper bound value of buckets. All values greater than upper_bound are grouped together into a single bucket; for example if `upper_bound` = 89, then all values greater
             * than 89 are replaced with the value "89+".
             */
            upperBound?: GooglePrivacyDlpV2Value;
        }
        interface GooglePrivacyDlpV2HotwordRule {
            /** Regular expression pattern defining what qualifies as a hotword. */
            hotwordRegex?: GooglePrivacyDlpV2Regex;
            /** Likelihood adjustment to apply to all matching findings. */
            likelihoodAdjustment?: GooglePrivacyDlpV2LikelihoodAdjustment;
            /**
             * Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in
             * the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex "\(\d{3}\) \d{3}-\d{4}" could be adjusted
             * upwards if the area code is known to be the local area code of a company office using the hotword regex "\(xxx\)", where "xxx" is the area code in question.
             */
            proximity?: GooglePrivacyDlpV2Proximity;
        }
        interface GooglePrivacyDlpV2HybridContentItem {
            /** Supplementary information that will be added to each finding. */
            findingDetails?: GooglePrivacyDlpV2HybridFindingDetails;
            /** The item to inspect. */
            item?: GooglePrivacyDlpV2ContentItem;
        }
        interface GooglePrivacyDlpV2HybridFindingDetails {
            /** Details about the container where the content being inspected is from. */
            containerDetails?: GooglePrivacyDlpV2Container;
            /**
             * Offset in bytes of the line, from the beginning of the file, where the finding is located. Populate if the item being scanned is only part of a bigger item, such as a shard of a
             * file and you want to track the absolute position of the finding.
             */
            fileOffset?: string;
            /**
             * Labels to represent user provided metadata about the data being inspected. If configured by the job, some key values may be required. The labels associated with `Finding`'s produced
             * by hybrid inspection. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be
             * between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples:
             * * `"environment" : "production"` * `"pipeline" : "etl"`
             */
            labels?: { [P in string]: string };
            /** Offset of the row for tables. Populate if the row(s) being scanned are part of a bigger dataset and you want to keep track of their absolute position. */
            rowOffset?: string;
            /**
             * If the container is a table, additional information to make findings meaningful such as the columns that are primary keys. If not known ahead of time, can also be set within each
             * inspect hybrid call and the two will be merged. Note that identifying_fields will only be stored to BigQuery, and only if the BigQuery action has been included.
             */
            tableOptions?: GooglePrivacyDlpV2TableOptions;
        }
        interface GooglePrivacyDlpV2HybridInspectDlpJobRequest {
            /** The item to inspect. */
            hybridItem?: GooglePrivacyDlpV2HybridContentItem;
        }
        interface GooglePrivacyDlpV2HybridInspectJobTriggerRequest {
            /** The item to inspect. */
            hybridItem?: GooglePrivacyDlpV2HybridContentItem;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GooglePrivacyDlpV2HybridInspectResponse {
        }
        interface GooglePrivacyDlpV2HybridInspectStatistics {
            /** The number of hybrid inspection requests aborted because the job ran out of quota or was ended before they could be processed. */
            abortedCount?: string;
            /**
             * The number of hybrid requests currently being processed. Only populated when called via method `getDlpJob`. A burst of traffic may cause hybrid inspect requests to be enqueued.
             * Processing will take place as quickly as possible, but resource limitations may impact how long a request is enqueued for.
             */
            pendingCount?: string;
            /** The number of hybrid inspection requests processed within this job. */
            processedCount?: string;
        }
        interface GooglePrivacyDlpV2HybridOptions {
            /** A short description of where the data is coming from. Will be stored once in the job. 256 max length. */
            description?: string;
            /**
             * To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression:
             * `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10
             * labels can be associated with a given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
             */
            labels?: { [P in string]: string };
            /**
             * These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys
             * must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required.
             */
            requiredFindingLabelKeys?: string[];
            /** If the container is a table, additional information to make findings meaningful such as the columns that are primary keys. */
            tableOptions?: GooglePrivacyDlpV2TableOptions;
        }
        interface GooglePrivacyDlpV2ImageLocation {
            /** Bounding boxes locating the pixels within the image containing the finding. */
            boundingBoxes?: GooglePrivacyDlpV2BoundingBox[];
        }
        interface GooglePrivacyDlpV2ImageRedactionConfig {
            /**
             * Only one per info_type should be provided per request. If not specified, and redact_all_text is false, the DLP API will redact all text that it matches against all info_types that
             * are found, but not specified in another ImageRedactionConfig.
             */
            infoType?: GooglePrivacyDlpV2InfoType;
            /** If true, all text found in the image, regardless whether it matches an info_type, is redacted. Only one should be provided. */
            redactAllText?: boolean;
            /** The color to use when redacting content from an image. If not specified, the default is black. */
            redactionColor?: GooglePrivacyDlpV2Color;
        }
        interface GooglePrivacyDlpV2InfoType {
            /**
             * Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when
             * specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`.
             */
            name?: string;
        }
        interface GooglePrivacyDlpV2InfoTypeDescription {
            /** Description of the infotype. Translated when language is provided in the request. */
            description?: string;
            /** Human readable form of the infoType name. */
            displayName?: string;
            /** Internal name of the infoType. */
            name?: string;
            /** Which parts of the API supports this InfoType. */
            supportedBy?: string[];
        }
        interface GooglePrivacyDlpV2InfoTypeLimit {
            /**
             * Type of information the findings limit applies to. Only one limit per info_type should be provided. If InfoTypeLimit does not have an info_type, the DLP API applies the limit
             * against all info_types that are found but not specified in another InfoTypeLimit.
             */
            infoType?: GooglePrivacyDlpV2InfoType;
            /** Max findings limit for the given infoType. */
            maxFindings?: number;
        }
        interface GooglePrivacyDlpV2InfoTypeStats {
            /** Number of findings for this infoType. */
            count?: string;
            /** The type of finding this stat is for. */
            infoType?: GooglePrivacyDlpV2InfoType;
        }
        interface GooglePrivacyDlpV2InfoTypeTransformation {
            /** InfoTypes to apply the transformation to. An empty list will cause this transformation to apply to all findings that correspond to infoTypes that were requested in `InspectConfig`. */
            infoTypes?: GooglePrivacyDlpV2InfoType[];
            /** Required. Primitive transformation to apply to the infoType. */
            primitiveTransformation?: GooglePrivacyDlpV2PrimitiveTransformation;
        }
        interface GooglePrivacyDlpV2InfoTypeTransformations {
            /** Required. Transformation for each infoType. Cannot specify more than one for a given infoType. */
            transformations?: GooglePrivacyDlpV2InfoTypeTransformation[];
        }
        interface GooglePrivacyDlpV2InspectConfig {
            /** List of options defining data content to scan. If empty, text, images, and other content will be included. */
            contentOptions?: string[];
            /** CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more. */
            customInfoTypes?: GooglePrivacyDlpV2CustomInfoType[];
            /** When true, excludes type information of the findings. */
            excludeInfoTypes?: boolean;
            /** When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote. */
            includeQuote?: boolean;
            /**
             * Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference.
             * When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over
             * time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a
             * default list will be used, which may change over time.
             */
            infoTypes?: GooglePrivacyDlpV2InfoType[];
            /** Configuration to control the number of findings returned. */
            limits?: GooglePrivacyDlpV2FindingLimits;
            /** Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more. */
            minLikelihood?: string;
            /**
             * Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified
             * for each info type.
             */
            ruleSet?: GooglePrivacyDlpV2InspectionRuleSet[];
        }
        interface GooglePrivacyDlpV2InspectContentRequest {
            /** Configuration for the inspector. What specified here will override the template referenced by the inspect_template_name argument. */
            inspectConfig?: GooglePrivacyDlpV2InspectConfig;
            /**
             * Template to use. Any configuration directly specified in inspect_config will override those set in the template. Singular fields that are set in this request will replace their
             * corresponding fields in the template. Repeated fields are appended. Singular sub-messages and groups are recursively merged.
             */
            inspectTemplateName?: string;
            /** The item to inspect. */
            item?: GooglePrivacyDlpV2ContentItem;
            /** Deprecated. This field has no effect. */
            locationId?: string;
        }
        interface GooglePrivacyDlpV2InspectContentResponse {
            /** The findings. */
            result?: GooglePrivacyDlpV2InspectResult;
        }
        interface GooglePrivacyDlpV2InspectDataSourceDetails {
            /** The configuration used for this job. */
            requestedOptions?: GooglePrivacyDlpV2RequestedOptions;
            /** A summary of the outcome of this inspect job. */
            result?: GooglePrivacyDlpV2Result;
        }
        interface GooglePrivacyDlpV2InspectionRule {
            /** Exclusion rule. */
            exclusionRule?: GooglePrivacyDlpV2ExclusionRule;
            /** Hotword-based detection rule. */
            hotwordRule?: GooglePrivacyDlpV2HotwordRule;
        }
        interface GooglePrivacyDlpV2InspectionRuleSet {
            /** List of infoTypes this rule set is applied to. */
            infoTypes?: GooglePrivacyDlpV2InfoType[];
            /** Set of rules to be applied to infoTypes. The rules are applied in order. */
            rules?: GooglePrivacyDlpV2InspectionRule[];
        }
        interface GooglePrivacyDlpV2InspectJobConfig {
            /** Actions to execute at the completion of the job. */
            actions?: GooglePrivacyDlpV2Action[];
            /** How and what to scan for. */
            inspectConfig?: GooglePrivacyDlpV2InspectConfig;
            /** If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template. */
            inspectTemplateName?: string;
            /** The data to scan. */
            storageConfig?: GooglePrivacyDlpV2StorageConfig;
        }
        interface GooglePrivacyDlpV2InspectResult {
            /** List of findings for an item. */
            findings?: GooglePrivacyDlpV2Finding[];
            /**
             * If true, then this item might have more findings than were returned, and the findings returned are an arbitrary subset of all findings. The findings list might be truncated because
             * the input items were too large, or because the server reached the maximum amount of resources allowed for a single API call. For best results, divide the input into smaller batches.
             */
            findingsTruncated?: boolean;
        }
        interface GooglePrivacyDlpV2InspectTemplate {
            /** Output only. The creation timestamp of an inspectTemplate. */
            createTime?: string;
            /** Short description (max 256 chars). */
            description?: string;
            /** Display name (max 256 chars). */
            displayName?: string;
            /** The core content of the template. Configuration of the scanning process. */
            inspectConfig?: GooglePrivacyDlpV2InspectConfig;
            /**
             * Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR
             * `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;
             */
            name?: string;
            /** Output only. The last update timestamp of an inspectTemplate. */
            updateTime?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GooglePrivacyDlpV2JobNotificationEmails {
        }
        interface GooglePrivacyDlpV2JobTrigger {
            /** Output only. The creation timestamp of a triggeredJob. */
            createTime?: string;
            /** User provided description (max 256 chars) */
            description?: string;
            /** Display name (max 100 chars) */
            displayName?: string;
            /**
             * Output only. A stream of errors encountered when the trigger was activated. Repeated errors may result in the JobTrigger automatically being paused. Will return the last 100 errors.
             * Whenever the JobTrigger is modified this list will be cleared.
             */
            errors?: GooglePrivacyDlpV2Error[];
            /** For inspect jobs, a snapshot of the configuration. */
            inspectJob?: GooglePrivacyDlpV2InspectJobConfig;
            /** Output only. The timestamp of the last time this trigger executed. */
            lastRunTime?: string;
            /** Unique resource name for the triggeredJob, assigned by the service when the triggeredJob is created, for example `projects/dlp-test-project/jobTriggers/53234423`. */
            name?: string;
            /** Required. A status for this trigger. */
            status?: string;
            /**
             * A list of triggers which will be OR'ed together. Only one in the list needs to trigger for a job to be started. The list may contain only a single Schedule trigger and must have at
             * least one object.
             */
            triggers?: GooglePrivacyDlpV2Trigger[];
            /** Output only. The last update timestamp of a triggeredJob. */
            updateTime?: string;
        }
        interface GooglePrivacyDlpV2KAnonymityConfig {
            /**
             * Message indicating that multiple rows might be associated to a single individual. If the same entity_id is associated to multiple quasi-identifier tuples over distinct rows, we
             * consider the entire collection of tuples as the composite quasi-identifier. This collection is a multiset: the order in which the different tuples appear in the dataset is ignored,
             * but their frequency is taken into account. Important note: a maximum of 1000 rows can be associated to a single entity ID. If more rows are associated with the same entity ID, some
             * might be ignored.
             */
            entityId?: GooglePrivacyDlpV2EntityId;
            /**
             * Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered a single composite key. Structs and repeated data types are not supported;
             * however, nested fields are supported so long as they are not structs themselves or nested within a repeated field.
             */
            quasiIds?: GooglePrivacyDlpV2FieldId[];
        }
        interface GooglePrivacyDlpV2KAnonymityEquivalenceClass {
            /** Size of the equivalence class, for example number of rows with the above set of values. */
            equivalenceClassSize?: string;
            /** Set of values defining the equivalence class. One value per quasi-identifier column in the original KAnonymity metric message. The order is always the same as the original request. */
            quasiIdsValues?: GooglePrivacyDlpV2Value[];
        }
        interface GooglePrivacyDlpV2KAnonymityHistogramBucket {
            /** Total number of equivalence classes in this bucket. */
            bucketSize?: string;
            /** Total number of distinct equivalence classes in this bucket. */
            bucketValueCount?: string;
            /** Sample of equivalence classes in this bucket. The total number of classes returned per bucket is capped at 20. */
            bucketValues?: GooglePrivacyDlpV2KAnonymityEquivalenceClass[];
            /** Lower bound on the size of the equivalence classes in this bucket. */
            equivalenceClassSizeLowerBound?: string;
            /** Upper bound on the size of the equivalence classes in this bucket. */
            equivalenceClassSizeUpperBound?: string;
        }
        interface GooglePrivacyDlpV2KAnonymityResult {
            /** Histogram of k-anonymity equivalence classes. */
            equivalenceClassHistogramBuckets?: GooglePrivacyDlpV2KAnonymityHistogramBucket[];
        }
        interface GooglePrivacyDlpV2Key {
            /** Entities are partitioned into subsets, currently identified by a project ID and namespace ID. Queries are scoped to a single partition. */
            partitionId?: GooglePrivacyDlpV2PartitionId;
            /**
             * The entity path. An entity path consists of one or more elements composed of a kind and a string or numerical identifier, which identify entities. The first element identifies a
             * _root entity_, the second element identifies a _child_ of the root entity, the third element identifies a child of the second entity, and so forth. The entities identified by all
             * prefixes of the path are called the element's _ancestors_. A path can never be empty, and a path can have at most 100 elements.
             */
            path?: GooglePrivacyDlpV2PathElement[];
        }
        interface GooglePrivacyDlpV2KindExpression {
            /** The name of the kind. */
            name?: string;
        }
        interface GooglePrivacyDlpV2KMapEstimationConfig {
            /** Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table. */
            auxiliaryTables?: GooglePrivacyDlpV2AuxiliaryTable[];
            /** Required. Fields considered to be quasi-identifiers. No two columns can have the same tag. */
            quasiIds?: GooglePrivacyDlpV2TaggedField[];
            /** ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code. */
            regionCode?: string;
        }
        interface GooglePrivacyDlpV2KMapEstimationHistogramBucket {
            /** Number of records within these anonymity bounds. */
            bucketSize?: string;
            /** Total number of distinct quasi-identifier tuple values in this bucket. */
            bucketValueCount?: string;
            /** Sample of quasi-identifier tuple values in this bucket. The total number of classes returned per bucket is capped at 20. */
            bucketValues?: GooglePrivacyDlpV2KMapEstimationQuasiIdValues[];
            /** Always greater than or equal to min_anonymity. */
            maxAnonymity?: string;
            /** Always positive. */
            minAnonymity?: string;
        }
        interface GooglePrivacyDlpV2KMapEstimationQuasiIdValues {
            /** The estimated anonymity for these quasi-identifier values. */
            estimatedAnonymity?: string;
            /** The quasi-identifier values. */
            quasiIdsValues?: GooglePrivacyDlpV2Value[];
        }
        interface GooglePrivacyDlpV2KMapEstimationResult {
            /**
             * The intervals [min_anonymity, max_anonymity] do not overlap. If a value doesn't correspond to any such interval, the associated frequency is zero. For example, the following
             * records: {min_anonymity: 1, max_anonymity: 1, frequency: 17} {min_anonymity: 2, max_anonymity: 3, frequency: 42} {min_anonymity: 5, max_anonymity: 10, frequency: 99} mean that there
             * are no record with an estimated anonymity of 4, 5, or larger than 10.
             */
            kMapEstimationHistogram?: GooglePrivacyDlpV2KMapEstimationHistogramBucket[];
        }
        interface GooglePrivacyDlpV2KmsWrappedCryptoKey {
            /** Required. The resource name of the KMS CryptoKey to use for unwrapping. */
            cryptoKeyName?: string;
            /** Required. The wrapped data crypto key. */
            wrappedKey?: string;
        }
        interface GooglePrivacyDlpV2LargeCustomDictionaryConfig {
            /** Field in a BigQuery table where each cell represents a dictionary phrase. */
            bigQueryField?: GooglePrivacyDlpV2BigQueryField;
            /** Set of files containing newline-delimited lists of dictionary phrases. */
            cloudStorageFileSet?: GooglePrivacyDlpV2CloudStorageFileSet;
            /**
             * Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the
             * dictionary is considered invalid and can no longer be used.
             */
            outputPath?: GooglePrivacyDlpV2CloudStoragePath;
        }
        interface GooglePrivacyDlpV2LargeCustomDictionaryStats {
            /** Approximate number of distinct phrases in the dictionary. */
            approxNumPhrases?: string;
        }
        interface GooglePrivacyDlpV2LDiversityConfig {
            /**
             * Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity computation. When multiple fields are specified, they are considered a single composite
             * key.
             */
            quasiIds?: GooglePrivacyDlpV2FieldId[];
            /** Sensitive field for computing the l-value. */
            sensitiveAttribute?: GooglePrivacyDlpV2FieldId;
        }
        interface GooglePrivacyDlpV2LDiversityEquivalenceClass {
            /** Size of the k-anonymity equivalence class. */
            equivalenceClassSize?: string;
            /** Number of distinct sensitive values in this equivalence class. */
            numDistinctSensitiveValues?: string;
            /** Quasi-identifier values defining the k-anonymity equivalence class. The order is always the same as the original request. */
            quasiIdsValues?: GooglePrivacyDlpV2Value[];
            /** Estimated frequencies of top sensitive values. */
            topSensitiveValues?: GooglePrivacyDlpV2ValueFrequency[];
        }
        interface GooglePrivacyDlpV2LDiversityHistogramBucket {
            /** Total number of equivalence classes in this bucket. */
            bucketSize?: string;
            /** Total number of distinct equivalence classes in this bucket. */
            bucketValueCount?: string;
            /** Sample of equivalence classes in this bucket. The total number of classes returned per bucket is capped at 20. */
            bucketValues?: GooglePrivacyDlpV2LDiversityEquivalenceClass[];
            /** Lower bound on the sensitive value frequencies of the equivalence classes in this bucket. */
            sensitiveValueFrequencyLowerBound?: string;
            /** Upper bound on the sensitive value frequencies of the equivalence classes in this bucket. */
            sensitiveValueFrequencyUpperBound?: string;
        }
        interface GooglePrivacyDlpV2LDiversityResult {
            /** Histogram of l-diversity equivalence class sensitive value frequencies. */
            sensitiveValueFrequencyHistogramBuckets?: GooglePrivacyDlpV2LDiversityHistogramBucket[];
        }
        // tslint:disable-next-line:no-empty-interface
        interface GooglePrivacyDlpV2LeaveUntransformed {
        }
        interface GooglePrivacyDlpV2LikelihoodAdjustment {
            /** Set the likelihood of a finding to a fixed value. */
            fixedLikelihood?: string;
            /**
             * Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then
             * it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment
             * of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.
             */
            relativeLikelihood?: number;
        }
        interface GooglePrivacyDlpV2ListDeidentifyTemplatesResponse {
            /** List of deidentify templates, up to page_size in ListDeidentifyTemplatesRequest. */
            deidentifyTemplates?: GooglePrivacyDlpV2DeidentifyTemplate[];
            /** If the next page is available then the next page token to be used in following ListDeidentifyTemplates request. */
            nextPageToken?: string;
        }
        interface GooglePrivacyDlpV2ListDlpJobsResponse {
            /** A list of DlpJobs that matches the specified filter in the request. */
            jobs?: GooglePrivacyDlpV2DlpJob[];
            /** The standard List next-page token. */
            nextPageToken?: string;
        }
        interface GooglePrivacyDlpV2ListInfoTypesResponse {
            /** Set of sensitive infoTypes. */
            infoTypes?: GooglePrivacyDlpV2InfoTypeDescription[];
        }
        interface GooglePrivacyDlpV2ListInspectTemplatesResponse {
            /** List of inspectTemplates, up to page_size in ListInspectTemplatesRequest. */
            inspectTemplates?: GooglePrivacyDlpV2InspectTemplate[];
            /** If the next page is available then the next page token to be used in following ListInspectTemplates request. */
            nextPageToken?: string;
        }
        interface GooglePrivacyDlpV2ListJobTriggersResponse {
            /** List of triggeredJobs, up to page_size in ListJobTriggersRequest. */
            jobTriggers?: GooglePrivacyDlpV2JobTrigger[];
            /** If the next page is available then the next page token to be used in following ListJobTriggers request. */
            nextPageToken?: string;
        }
        interface GooglePrivacyDlpV2ListStoredInfoTypesResponse {
            /** If the next page is available then the next page token to be used in following ListStoredInfoTypes request. */
            nextPageToken?: string;
            /** List of storedInfoTypes, up to page_size in ListStoredInfoTypesRequest. */
            storedInfoTypes?: GooglePrivacyDlpV2StoredInfoType[];
        }
        interface GooglePrivacyDlpV2Location {
            /**
             * Zero-based byte offsets delimiting the finding. These are relative to the finding's containing element. Note that when the content is not textual, this references the UTF-8 encoded
             * textual representation of the content. Omitted if content is an image.
             */
            byteRange?: GooglePrivacyDlpV2Range;
            /** Unicode character offsets delimiting the finding. These are relative to the finding's containing element. Provided when the content is text. */
            codepointRange?: GooglePrivacyDlpV2Range;
            /** Information about the container where this finding occurred, if available. */
            container?: GooglePrivacyDlpV2Container;
            /** List of nested objects pointing to the precise location of the finding within the file or record. */
            contentLocations?: GooglePrivacyDlpV2ContentLocation[];
        }
        // tslint:disable-next-line:no-empty-interface
        interface GooglePrivacyDlpV2Manual {
        }
        interface GooglePrivacyDlpV2MetadataLocation {
            /** Storage metadata. */
            storageLabel?: GooglePrivacyDlpV2StorageMetadataLabel;
            /** Type of metadata containing the finding. */
            type?: string;
        }
        interface GooglePrivacyDlpV2NumericalStatsConfig {
            /** Field to compute numerical stats on. Supported types are integer, float, date, datetime, timestamp, time. */
            field?: GooglePrivacyDlpV2FieldId;
        }
        interface GooglePrivacyDlpV2NumericalStatsResult {
            /** Maximum value appearing in the column. */
            maxValue?: GooglePrivacyDlpV2Value;
            /** Minimum value appearing in the column. */
            minValue?: GooglePrivacyDlpV2Value;
            /** List of 99 values that partition the set of field values into 100 equal sized buckets. */
            quantileValues?: GooglePrivacyDlpV2Value[];
        }
        interface GooglePrivacyDlpV2OutputStorageConfig {
            /**
             * Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If
             * appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all
             * available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external
             * storage.
             */
            outputSchema?: string;
            /**
             * Store findings in an existing table or a new table in an existing dataset. If table_id is not set a new one will be generated for you with the following format:
             * dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific timezone will be used for generating the date details. For Inspect, each column in an existing output table must have the same name,
             * type, and mode of a field in the `Finding` object. For Risk, an existing output table should be the output of a previous Risk analysis job run on the same source table, with the
             * same privacy metric and quasi-identifiers. Risk jobs that analyze the same table but compute a different privacy metric, or use different sets of quasi-identifiers, cannot store
             * their results in the same table.
             */
            table?: GooglePrivacyDlpV2BigQueryTable;
        }
        interface GooglePrivacyDlpV2PartitionId {
            /** If not empty, the ID of the namespace to which the entities belong. */
            namespaceId?: string;
            /** The ID of the project to which the entities belong. */
            projectId?: string;
        }
        interface GooglePrivacyDlpV2PathElement {
            /** The auto-allocated ID of the entity. Never equal to zero. Values less than zero are discouraged and may not be supported in the future. */
            id?: string;
            /** The kind of the entity. A kind matching regex `__.*__` is reserved/read-only. A kind must not contain more than 1500 bytes when UTF-8 encoded. Cannot be `""`. */
            kind?: string;
            /** The name of the entity. A name matching regex `__.*__` is reserved/read-only. A name must not be more than 1500 bytes when UTF-8 encoded. Cannot be `""`. */
            name?: string;
        }
        interface GooglePrivacyDlpV2PrimitiveTransformation {
            /** Bucketing */
            bucketingConfig?: GooglePrivacyDlpV2BucketingConfig;
            /** Mask */
            characterMaskConfig?: GooglePrivacyDlpV2CharacterMaskConfig;
            /** Deterministic Crypto */
            cryptoDeterministicConfig?: GooglePrivacyDlpV2CryptoDeterministicConfig;
            /** Crypto */
            cryptoHashConfig?: GooglePrivacyDlpV2CryptoHashConfig;
            /** Ffx-Fpe */
            cryptoReplaceFfxFpeConfig?: GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig;
            /** Date Shift */
            dateShiftConfig?: GooglePrivacyDlpV2DateShiftConfig;
            /** Fixed size bucketing */
            fixedSizeBucketingConfig?: GooglePrivacyDlpV2FixedSizeBucketingConfig;
            /** Redact */
            redactConfig?: any;
            /** Replace */
            replaceConfig?: GooglePrivacyDlpV2ReplaceValueConfig;
            /** Replace with infotype */
            replaceWithInfoTypeConfig?: any;
            /** Time extraction */
            timePartConfig?: GooglePrivacyDlpV2TimePartConfig;
        }
        interface GooglePrivacyDlpV2PrivacyMetric {
            /** Categorical stats */
            categoricalStatsConfig?: GooglePrivacyDlpV2CategoricalStatsConfig;
            /** delta-presence */
            deltaPresenceEstimationConfig?: GooglePrivacyDlpV2DeltaPresenceEstimationConfig;
            /** K-anonymity */
            kAnonymityConfig?: GooglePrivacyDlpV2KAnonymityConfig;
            /** k-map */
            kMapEstimationConfig?: GooglePrivacyDlpV2KMapEstimationConfig;
            /** l-diversity */
            lDiversityConfig?: GooglePrivacyDlpV2LDiversityConfig;
            /** Numerical stats */
            numericalStatsConfig?: GooglePrivacyDlpV2NumericalStatsConfig;
        }
        interface GooglePrivacyDlpV2Proximity {
            /** Number of characters after the finding to consider. */
            windowAfter?: number;
            /** Number of characters before the finding to consider. */
            windowBefore?: number;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog {
        }
        // tslint:disable-next-line:no-empty-interface
        interface GooglePrivacyDlpV2PublishSummaryToCscc {
        }
        interface GooglePrivacyDlpV2PublishToPubSub {
            /**
             * Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the
             * notifications. Format is projects/{project}/topics/{topic}.
             */
            topic?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GooglePrivacyDlpV2PublishToStackdriver {
        }
        interface GooglePrivacyDlpV2QuasiId {
            /**
             * A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column
             * (below).
             */
            customTag?: string;
            /** Required. Identifies the column. */
            field?: GooglePrivacyDlpV2FieldId;
            /** If no semantic tag is indicated, we infer the statistical model from the distribution of values in the input data */
            inferred?: any;
            /**
             * A column can be tagged with a InfoType to use the relevant public dataset as a statistical model of population, if available. We currently support US ZIP codes, region codes, ages
             * and genders. To programmatically obtain the list of supported InfoTypes, use ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
             */
            infoType?: GooglePrivacyDlpV2InfoType;
        }
        interface GooglePrivacyDlpV2QuasiIdentifierField {
            /**
             * A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column
             * (below).
             */
            customTag?: string;
            /** Identifies the column. */
            field?: GooglePrivacyDlpV2FieldId;
        }
        interface GooglePrivacyDlpV2QuasiIdField {
            /** A auxiliary field. */
            customTag?: string;
            /** Identifies the column. */
            field?: GooglePrivacyDlpV2FieldId;
        }
        interface GooglePrivacyDlpV2QuoteInfo {
            /** The date time indicated by the quote. */
            dateTime?: GooglePrivacyDlpV2DateTime;
        }
        interface GooglePrivacyDlpV2Range {
            /** Index of the last character of the range (exclusive). */
            end?: string;
            /** Index of the first character of the range (inclusive). */
            start?: string;
        }
        interface GooglePrivacyDlpV2RecordCondition {
            /** An expression. */
            expressions?: GooglePrivacyDlpV2Expressions;
        }
        interface GooglePrivacyDlpV2RecordKey {
            bigQueryKey?: GooglePrivacyDlpV2BigQueryKey;
            datastoreKey?: GooglePrivacyDlpV2DatastoreKey;
            /** Values of identifying columns in the given row. Order of values matches the order of `identifying_fields` specified in the scanning request. */
            idValues?: string[];
        }
        interface GooglePrivacyDlpV2RecordLocation {
            /** Field id of the field containing the finding. */
            fieldId?: GooglePrivacyDlpV2FieldId;
            /** Key of the finding. */
            recordKey?: GooglePrivacyDlpV2RecordKey;
            /** Location within a `ContentItem.Table`. */
            tableLocation?: GooglePrivacyDlpV2TableLocation;
        }
        interface GooglePrivacyDlpV2RecordSuppression {
            /** A condition that when it evaluates to true will result in the record being evaluated to be suppressed from the transformed content. */
            condition?: GooglePrivacyDlpV2RecordCondition;
        }
        interface GooglePrivacyDlpV2RecordTransformations {
            /** Transform the record by applying various field transformations. */
            fieldTransformations?: GooglePrivacyDlpV2FieldTransformation[];
            /** Configuration defining which records get suppressed entirely. Records that match any suppression rule are omitted from the output. */
            recordSuppressions?: GooglePrivacyDlpV2RecordSuppression[];
        }
        // tslint:disable-next-line:no-empty-interface
        interface GooglePrivacyDlpV2RedactConfig {
        }
        interface GooglePrivacyDlpV2RedactImageRequest {
            /** The content must be PNG, JPEG, SVG or BMP. */
            byteItem?: GooglePrivacyDlpV2ByteContentItem;
            /** The configuration for specifying what content to redact from images. */
            imageRedactionConfigs?: GooglePrivacyDlpV2ImageRedactionConfig[];
            /** Whether the response should include findings along with the redacted image. */
            includeFindings?: boolean;
            /** Configuration for the inspector. */
            inspectConfig?: GooglePrivacyDlpV2InspectConfig;
            /** Deprecated. This field has no effect. */
            locationId?: string;
        }
        interface GooglePrivacyDlpV2RedactImageResponse {
            /** If an image was being inspected and the InspectConfig's include_quote was set to true, then this field will include all text, if any, that was found in the image. */
            extractedText?: string;
            /** The findings. Populated when include_findings in the request is true. */
            inspectResult?: GooglePrivacyDlpV2InspectResult;
            /** The redacted image. The type will be the same as the original image. */
            redactedImage?: string;
        }
        interface GooglePrivacyDlpV2Regex {
            /** The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included. */
            groupIndexes?: number[];
            /** Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub. */
            pattern?: string;
        }
        interface GooglePrivacyDlpV2ReidentifyContentRequest {
            /** Configuration for the inspector. */
            inspectConfig?: GooglePrivacyDlpV2InspectConfig;
            /**
             * Template to use. Any configuration directly specified in `inspect_config` will override those set in the template. Singular fields that are set in this request will replace their
             * corresponding fields in the template. Repeated fields are appended. Singular sub-messages and groups are recursively merged.
             */
            inspectTemplateName?: string;
            /** The item to re-identify. Will be treated as text. */
            item?: GooglePrivacyDlpV2ContentItem;
            /** Deprecated. This field has no effect. */
            locationId?: string;
            /**
             * Configuration for the re-identification of the content item. This field shares the same proto message type that is used for de-identification, however its usage here is for the
             * reversal of the previous de-identification. Re-identification is performed by examining the transformations used to de-identify the items and executing the reverse. This requires
             * that only reversible transformations be provided here. The reversible transformations are: - `CryptoDeterministicConfig` - `CryptoReplaceFfxFpeConfig`
             */
            reidentifyConfig?: GooglePrivacyDlpV2DeidentifyConfig;
            /**
             * Template to use. References an instance of `DeidentifyTemplate`. Any configuration directly specified in `reidentify_config` or `inspect_config` will override those set in the
             * template. The `DeidentifyTemplate` used must include only reversible transformations. Singular fields that are set in this request will replace their corresponding fields in the
             * template. Repeated fields are appended. Singular sub-messages and groups are recursively merged.
             */
            reidentifyTemplateName?: string;
        }
        interface GooglePrivacyDlpV2ReidentifyContentResponse {
            /** The re-identified item. */
            item?: GooglePrivacyDlpV2ContentItem;
            /** An overview of the changes that were made to the `item`. */
            overview?: GooglePrivacyDlpV2TransformationOverview;
        }
        interface GooglePrivacyDlpV2ReplaceValueConfig {
            /** Value to replace it with. */
            newValue?: GooglePrivacyDlpV2Value;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GooglePrivacyDlpV2ReplaceWithInfoTypeConfig {
        }
        interface GooglePrivacyDlpV2RequestedOptions {
            /** Inspect config. */
            jobConfig?: GooglePrivacyDlpV2InspectJobConfig;
            /** If run with an InspectTemplate, a snapshot of its state at the time of this run. */
            snapshotInspectTemplate?: GooglePrivacyDlpV2InspectTemplate;
        }
        interface GooglePrivacyDlpV2Result {
            /**
             * Statistics related to the processing of hybrid inspect. Early access feature is in a pre-release state and might change or have limited support. For more information, see
             * https://cloud.google.com/products#product-launch-stages.
             */
            hybridStats?: GooglePrivacyDlpV2HybridInspectStatistics;
            /** Statistics of how many instances of each info type were found during inspect job. */
            infoTypeStats?: GooglePrivacyDlpV2InfoTypeStats[];
            /** Total size in bytes that were processed. */
            processedBytes?: string;
            /** Estimate of the number of bytes to process. */
            totalEstimatedBytes?: string;
        }
        interface GooglePrivacyDlpV2RiskAnalysisJobConfig {
            /** Actions to execute at the completion of the job. Are executed in the order provided. */
            actions?: GooglePrivacyDlpV2Action[];
            /** Privacy metric to compute. */
            privacyMetric?: GooglePrivacyDlpV2PrivacyMetric;
            /** Input dataset to compute metrics over. */
            sourceTable?: GooglePrivacyDlpV2BigQueryTable;
        }
        interface GooglePrivacyDlpV2Row {
            /** Individual cells. */
            values?: GooglePrivacyDlpV2Value[];
        }
        interface GooglePrivacyDlpV2SaveFindings {
            /** Location to store findings outside of DLP. */
            outputConfig?: GooglePrivacyDlpV2OutputStorageConfig;
        }
        interface GooglePrivacyDlpV2Schedule {
            /**
             * With this option a job is started a regular periodic basis. For example: every day (86400 seconds). A scheduled start time will be skipped if the previous execution has not ended
             * when its scheduled time occurs. This value must be set to a time duration greater than or equal to 1 day and can be no longer than 60 days.
             */
            recurrencePeriodDuration?: string;
        }
        interface GooglePrivacyDlpV2StatisticalTable {
            /** Required. Quasi-identifier columns. */
            quasiIds?: GooglePrivacyDlpV2QuasiIdentifierField[];
            /** Required. The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero. */
            relativeFrequency?: GooglePrivacyDlpV2FieldId;
            /** Required. Auxiliary table location. */
            table?: GooglePrivacyDlpV2BigQueryTable;
        }
        interface GooglePrivacyDlpV2StorageConfig {
            /** BigQuery options. */
            bigQueryOptions?: GooglePrivacyDlpV2BigQueryOptions;
            /** Google Cloud Storage options. */
            cloudStorageOptions?: GooglePrivacyDlpV2CloudStorageOptions;
            /** Google Cloud Datastore options. */
            datastoreOptions?: GooglePrivacyDlpV2DatastoreOptions;
            /**
             * Hybrid inspection options. Early access feature is in a pre-release state and might change or have limited support. For more information, see
             * https://cloud.google.com/products#product-launch-stages.
             */
            hybridOptions?: GooglePrivacyDlpV2HybridOptions;
            timespanConfig?: GooglePrivacyDlpV2TimespanConfig;
        }
        interface GooglePrivacyDlpV2StorageMetadataLabel {
            key?: string;
        }
        interface GooglePrivacyDlpV2StoredInfoType {
            /** Current version of the stored info type. */
            currentVersion?: GooglePrivacyDlpV2StoredInfoTypeVersion;
            /** Resource name. */
            name?: string;
            /** Pending versions of the stored info type. Empty if no versions are pending. */
            pendingVersions?: GooglePrivacyDlpV2StoredInfoTypeVersion[];
        }
        interface GooglePrivacyDlpV2StoredInfoTypeConfig {
            /** Description of the StoredInfoType (max 256 characters). */
            description?: string;
            /** Store dictionary-based CustomInfoType. */
            dictionary?: GooglePrivacyDlpV2Dictionary;
            /** Display name of the StoredInfoType (max 256 characters). */
            displayName?: string;
            /** StoredInfoType where findings are defined by a dictionary of phrases. */
            largeCustomDictionary?: GooglePrivacyDlpV2LargeCustomDictionaryConfig;
            /** Store regular expression-based StoredInfoType. */
            regex?: GooglePrivacyDlpV2Regex;
        }
        interface GooglePrivacyDlpV2StoredInfoTypeStats {
            /** StoredInfoType where findings are defined by a dictionary of phrases. */
            largeCustomDictionary?: GooglePrivacyDlpV2LargeCustomDictionaryStats;
        }
        interface GooglePrivacyDlpV2StoredInfoTypeVersion {
            /** StoredInfoType configuration. */
            config?: GooglePrivacyDlpV2StoredInfoTypeConfig;
            /** Create timestamp of the version. Read-only, determined by the system when the version is created. */
            createTime?: string;
            /**
             * Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be
             * displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this
             * data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the
             * UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error.
             */
            errors?: GooglePrivacyDlpV2Error[];
            /** Stored info type version state. Read-only, updated by the system during dictionary creation. */
            state?: string;
            /** Statistics about this storedInfoType version. */
            stats?: GooglePrivacyDlpV2StoredInfoTypeStats;
        }
        interface GooglePrivacyDlpV2StoredType {
            /** Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system. */
            createTime?: string;
            /** Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`. */
            name?: string;
        }
        interface GooglePrivacyDlpV2SummaryResult {
            /** Outcome of the transformation. */
            code?: string;
            /** Number of transformations counted by this result. */
            count?: string;
            /** A place for warnings or errors to show up if a transformation didn't work as expected. */
            details?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GooglePrivacyDlpV2SurrogateType {
        }
        interface GooglePrivacyDlpV2Table {
            /** Headers of the table. */
            headers?: GooglePrivacyDlpV2FieldId[];
            /** Rows of the table. */
            rows?: GooglePrivacyDlpV2Row[];
        }
        interface GooglePrivacyDlpV2TableLocation {
            /**
             * The zero-based index of the row where the finding is located. Only populated for resources that have a natural ordering, not BigQuery. In BigQuery, to identify the row a finding
             * came from, populate BigQueryOptions.identifying_fields with your primary key column names and when you store the findings the value of those columns will be stored inside of
             * Finding.
             */
            rowIndex?: string;
        }
        interface GooglePrivacyDlpV2TableOptions {
            /**
             * The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be
             * traced to the specific row it came from. No more than 3 may be provided.
             */
            identifyingFields?: GooglePrivacyDlpV2FieldId[];
        }
        interface GooglePrivacyDlpV2TaggedField {
            /**
             * A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column
             * (below).
             */
            customTag?: string;
            /** Required. Identifies the column. */
            field?: GooglePrivacyDlpV2FieldId;
            /** If no semantic tag is indicated, we infer the statistical model from the distribution of values in the input data */
            inferred?: any;
            /**
             * A column can be tagged with a InfoType to use the relevant public dataset as a statistical model of population, if available. We currently support US ZIP codes, region codes, ages
             * and genders. To programmatically obtain the list of supported InfoTypes, use ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
             */
            infoType?: GooglePrivacyDlpV2InfoType;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GooglePrivacyDlpV2ThrowError {
        }
        interface GooglePrivacyDlpV2TimePartConfig {
            /** The part of the time to keep. */
            partToExtract?: string;
        }
        interface GooglePrivacyDlpV2TimespanConfig {
            /**
             * When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger
             * executed. This will be based on the time of the execution of the last run of the JobTrigger.
             */
            enableAutoPopulationOfTimespanConfig?: boolean;
            /** Exclude files or rows newer than this value. If set to zero, no upper time limit is applied. */
            endTime?: string;
            /** Exclude files or rows older than this value. */
            startTime?: string;
            /**
             * Specification of the field containing the timestamp of scanned items. Used for data sources like Datastore and BigQuery. For BigQuery: Required to filter out rows based on the given
             * start and end times. If not specified and the table was modified between the given start and end times, the entire table will be scanned. The valid data types of the timestamp field
             * are: `INTEGER`, `DATE`, `TIMESTAMP`, or `DATETIME` BigQuery column. For Datastore. Valid data types of the timestamp field are: `TIMESTAMP`. Datastore entity will be scanned if the
             * timestamp property does not exist or its value is empty or invalid.
             */
            timestampField?: GooglePrivacyDlpV2FieldId;
        }
        interface GooglePrivacyDlpV2TimeZone {
            /** Set only if the offset can be determined. Positive for time ahead of UTC. E.g. For "UTC-9", this value is -540. */
            offsetMinutes?: number;
        }
        interface GooglePrivacyDlpV2TransformationErrorHandling {
            /** Ignore errors */
            leaveUntransformed?: any;
            /** Throw an error */
            throwError?: any;
        }
        interface GooglePrivacyDlpV2TransformationOverview {
            /** Transformations applied to the dataset. */
            transformationSummaries?: GooglePrivacyDlpV2TransformationSummary[];
            /** Total size in bytes that were transformed in some way. */
            transformedBytes?: string;
        }
        interface GooglePrivacyDlpV2TransformationSummary {
            /** Set if the transformation was limited to a specific FieldId. */
            field?: GooglePrivacyDlpV2FieldId;
            /** The field transformation that was applied. If multiple field transformations are requested for a single field, this list will contain all of them; otherwise, only one is supplied. */
            fieldTransformations?: GooglePrivacyDlpV2FieldTransformation[];
            /** Set if the transformation was limited to a specific InfoType. */
            infoType?: GooglePrivacyDlpV2InfoType;
            /** The specific suppression option these stats apply to. */
            recordSuppress?: GooglePrivacyDlpV2RecordSuppression;
            /** Collection of all transformations that took place or had an error. */
            results?: GooglePrivacyDlpV2SummaryResult[];
            /** The specific transformation these stats apply to. */
            transformation?: GooglePrivacyDlpV2PrimitiveTransformation;
            /** Total size in bytes that were transformed in some way. */
            transformedBytes?: string;
        }
        interface GooglePrivacyDlpV2TransientCryptoKey {
            /**
             * Required. Name of the key. This is an arbitrary string used to differentiate different keys. A unique key is generated per name: two separate `TransientCryptoKey` protos share the
             * same generated key if their names are the same. When the data crypto key is generated, this name is not used in any way (repeating the api call will result in a different key being
             * generated).
             */
            name?: string;
        }
        interface GooglePrivacyDlpV2Trigger {
            /**
             * For use with hybrid jobs. Jobs must be manually created and finished. Early access feature is in a pre-release state and might change or have limited support. For more information,
             * see https://cloud.google.com/products#product-launch-stages.
             */
            manual?: any;
            /** Create a job on a repeating basis based on the elapse of time. */
            schedule?: GooglePrivacyDlpV2Schedule;
        }
        interface GooglePrivacyDlpV2UnwrappedCryptoKey {
            /** Required. A 128/192/256 bit key. */
            key?: string;
        }
        interface GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest {
            /** New DeidentifyTemplate value. */
            deidentifyTemplate?: GooglePrivacyDlpV2DeidentifyTemplate;
            /** Mask to control which fields get updated. */
            updateMask?: string;
        }
        interface GooglePrivacyDlpV2UpdateInspectTemplateRequest {
            /** New InspectTemplate value. */
            inspectTemplate?: GooglePrivacyDlpV2InspectTemplate;
            /** Mask to control which fields get updated. */
            updateMask?: string;
        }
        interface GooglePrivacyDlpV2UpdateJobTriggerRequest {
            /** New JobTrigger value. */
            jobTrigger?: GooglePrivacyDlpV2JobTrigger;
            /** Mask to control which fields get updated. */
            updateMask?: string;
        }
        interface GooglePrivacyDlpV2UpdateStoredInfoTypeRequest {
            /** Updated configuration for the storedInfoType. If not provided, a new version of the storedInfoType will be created with the existing configuration. */
            config?: GooglePrivacyDlpV2StoredInfoTypeConfig;
            /** Mask to control which fields get updated. */
            updateMask?: string;
        }
        interface GooglePrivacyDlpV2Value {
            /** boolean */
            booleanValue?: boolean;
            /** date */
            dateValue?: GoogleTypeDate;
            /** day of week */
            dayOfWeekValue?: string;
            /** float */
            floatValue?: number;
            /** integer */
            integerValue?: string;
            /** string */
            stringValue?: string;
            /** timestamp */
            timestampValue?: string;
            /** time of day */
            timeValue?: GoogleTypeTimeOfDay;
        }
        interface GooglePrivacyDlpV2ValueFrequency {
            /** How many times the value is contained in the field. */
            count?: string;
            /** A value contained in the field in question. */
            value?: GooglePrivacyDlpV2Value;
        }
        interface GooglePrivacyDlpV2WordList {
            /** Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required] */
            words?: string[];
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleProtobufEmpty {
        }
        interface GoogleRpcStatus {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?: number;
            /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
            details?: Array<{ [P in string]: any }>;
            /**
             * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the
             * client.
             */
            message?: string;
        }
        interface GoogleTypeDate {
            /** Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant. */
            day?: number;
            /** Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day. */
            month?: number;
            /** Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year. */
            year?: number;
        }
        interface GoogleTypeTimeOfDay {
            /** Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time. */
            hours?: number;
            /** Minutes of hour of day. Must be from 0 to 59. */
            minutes?: number;
            /** Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999. */
            nanos?: number;
            /** Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds. */
            seconds?: number;
        }
        // tslint:disable-next-line:interface-name
        interface InfoTypesResource {
            /** Returns a list of the sensitive information types that the DLP API supports. See https://cloud.google.com/dlp/docs/infotypes-reference to learn more. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** filter to only return infoTypes supported by certain parts of the API. Defaults to supported_by=INSPECT. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** BCP-47 language code for localized infoType friendly names. If omitted, or if localized strings are not available, en-US strings will be returned. */
                languageCode?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The parent resource name. The format of this value is as follows: locations/ LOCATION_ID */
                parent?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListInfoTypesResponse>;
        }
        // tslint:disable-next-line:interface-name
        interface InfoTypesResource {
            /** Returns a list of the sensitive information types that the DLP API supports. See https://cloud.google.com/dlp/docs/infotypes-reference to learn more. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** filter to only return infoTypes supported by certain parts of the API. Defaults to supported_by=INSPECT. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** BCP-47 language code for localized infoType friendly names. If omitted, or if localized strings are not available, en-US strings will be returned. */
                languageCode?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The parent resource name. The format of this value is as follows: locations/ LOCATION_ID */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListInfoTypesResponse>;
        }
        interface LocationsResource {
            infoTypes: InfoTypesResource;
        }
        interface DeidentifyTemplatesResource {
            /**
             * Creates a DeidentifyTemplate for re-using frequently used configuration for de-identifying content, images, and storage. See
             * https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CreateDeidentifyTemplateRequest;
            }): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CreateDeidentifyTemplateRequest): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
            /** Deletes a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and deidentify template to be deleted, for example `organizations/433245324/deidentifyTemplates/432452342` or
                 * projects/project-id/deidentifyTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and deidentify template to be read, for example `organizations/433245324/deidentifyTemplates/432452342` or
                 * projects/project-id/deidentifyTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
            /** Lists DeidentifyTemplates. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case-insensitive, default sorting order is ascending, redundant space characters
                 * are insignificant. Example: `name asc,update_time, create_time desc` Supported fields are: - `create_time`: corresponds to time the template was created. - `update_time`:
                 * corresponds to time the template was last updated. - `name`: corresponds to template's name. - `display_name`: corresponds to template's display name.
                 */
                orderBy?: string;
                /** Size of the page, can be limited by server. If zero server returns a page of max size 100. */
                pageSize?: number;
                /** Page token to continue retrieval. Comes from previous call to `ListDeidentifyTemplates`. */
                pageToken?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListDeidentifyTemplatesResponse>;
            /** Updates the DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and deidentify template to be updated, for example `organizations/433245324/deidentifyTemplates/432452342` or
                 * projects/project-id/deidentifyTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest;
            }): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and deidentify template to be updated, for example `organizations/433245324/deidentifyTemplates/432452342` or
                 * projects/project-id/deidentifyTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
        }
        // tslint:disable-next-line:interface-name
        interface InspectTemplatesResource {
            /**
             * Creates an InspectTemplate for re-using frequently used configuration for inspecting content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates to learn
             * more.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CreateInspectTemplateRequest;
            }): Request<GooglePrivacyDlpV2InspectTemplate>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CreateInspectTemplateRequest): Request<GooglePrivacyDlpV2InspectTemplate>;
            /** Deletes an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and inspectTemplate to be deleted, for example `organizations/433245324/inspectTemplates/432452342` or
                 * projects/project-id/inspectTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and inspectTemplate to be read, for example `organizations/433245324/inspectTemplates/432452342` or
                 * projects/project-id/inspectTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2InspectTemplate>;
            /** Lists InspectTemplates. See https://cloud.google.com/dlp/docs/creating-templates to learn more. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case-insensitive, default sorting order is ascending, redundant space characters
                 * are insignificant. Example: `name asc,update_time, create_time desc` Supported fields are: - `create_time`: corresponds to time the template was created. - `update_time`:
                 * corresponds to time the template was last updated. - `name`: corresponds to template's name. - `display_name`: corresponds to template's display name.
                 */
                orderBy?: string;
                /** Size of the page, can be limited by server. If zero server returns a page of max size 100. */
                pageSize?: number;
                /** Page token to continue retrieval. Comes from previous call to `ListInspectTemplates`. */
                pageToken?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListInspectTemplatesResponse>;
            /** Updates the InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and inspectTemplate to be updated, for example `organizations/433245324/inspectTemplates/432452342` or
                 * projects/project-id/inspectTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2UpdateInspectTemplateRequest;
            }): Request<GooglePrivacyDlpV2InspectTemplate>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and inspectTemplate to be updated, for example `organizations/433245324/inspectTemplates/432452342` or
                 * projects/project-id/inspectTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2UpdateInspectTemplateRequest): Request<GooglePrivacyDlpV2InspectTemplate>;
        }
        interface DeidentifyTemplatesResource {
            /**
             * Creates a DeidentifyTemplate for re-using frequently used configuration for de-identifying content, images, and storage. See
             * https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CreateDeidentifyTemplateRequest;
            }): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CreateDeidentifyTemplateRequest): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
            /** Deletes a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and deidentify template to be deleted, for example `organizations/433245324/deidentifyTemplates/432452342` or
                 * projects/project-id/deidentifyTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and deidentify template to be read, for example `organizations/433245324/deidentifyTemplates/432452342` or
                 * projects/project-id/deidentifyTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
            /** Lists DeidentifyTemplates. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case-insensitive, default sorting order is ascending, redundant space characters
                 * are insignificant. Example: `name asc,update_time, create_time desc` Supported fields are: - `create_time`: corresponds to time the template was created. - `update_time`:
                 * corresponds to time the template was last updated. - `name`: corresponds to template's name. - `display_name`: corresponds to template's display name.
                 */
                orderBy?: string;
                /** Size of the page, can be limited by server. If zero server returns a page of max size 100. */
                pageSize?: number;
                /** Page token to continue retrieval. Comes from previous call to `ListDeidentifyTemplates`. */
                pageToken?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListDeidentifyTemplatesResponse>;
            /** Updates the DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and deidentify template to be updated, for example `organizations/433245324/deidentifyTemplates/432452342` or
                 * projects/project-id/deidentifyTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest;
            }): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and deidentify template to be updated, for example `organizations/433245324/deidentifyTemplates/432452342` or
                 * projects/project-id/deidentifyTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
        }
        // tslint:disable-next-line:interface-name
        interface InspectTemplatesResource {
            /**
             * Creates an InspectTemplate for re-using frequently used configuration for inspecting content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates to learn
             * more.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CreateInspectTemplateRequest;
            }): Request<GooglePrivacyDlpV2InspectTemplate>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CreateInspectTemplateRequest): Request<GooglePrivacyDlpV2InspectTemplate>;
            /** Deletes an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and inspectTemplate to be deleted, for example `organizations/433245324/inspectTemplates/432452342` or
                 * projects/project-id/inspectTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and inspectTemplate to be read, for example `organizations/433245324/inspectTemplates/432452342` or
                 * projects/project-id/inspectTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2InspectTemplate>;
            /** Lists InspectTemplates. See https://cloud.google.com/dlp/docs/creating-templates to learn more. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case-insensitive, default sorting order is ascending, redundant space characters
                 * are insignificant. Example: `name asc,update_time, create_time desc` Supported fields are: - `create_time`: corresponds to time the template was created. - `update_time`:
                 * corresponds to time the template was last updated. - `name`: corresponds to template's name. - `display_name`: corresponds to template's display name.
                 */
                orderBy?: string;
                /** Size of the page, can be limited by server. If zero server returns a page of max size 100. */
                pageSize?: number;
                /** Page token to continue retrieval. Comes from previous call to `ListInspectTemplates`. */
                pageToken?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListInspectTemplatesResponse>;
            /** Updates the InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and inspectTemplate to be updated, for example `organizations/433245324/inspectTemplates/432452342` or
                 * projects/project-id/inspectTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2UpdateInspectTemplateRequest;
            }): Request<GooglePrivacyDlpV2InspectTemplate>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and inspectTemplate to be updated, for example `organizations/433245324/inspectTemplates/432452342` or
                 * projects/project-id/inspectTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2UpdateInspectTemplateRequest): Request<GooglePrivacyDlpV2InspectTemplate>;
        }
        interface StoredInfoTypesResource {
            /** Creates a pre-built stored infoType to be used for inspection. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CreateStoredInfoTypeRequest;
            }): Request<GooglePrivacyDlpV2StoredInfoType>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CreateStoredInfoTypeRequest): Request<GooglePrivacyDlpV2StoredInfoType>;
            /** Deletes a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and storedInfoType to be deleted, for example `organizations/433245324/storedInfoTypes/432452342` or
                 * projects/project-id/storedInfoTypes/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and storedInfoType to be read, for example `organizations/433245324/storedInfoTypes/432452342` or
                 * projects/project-id/storedInfoTypes/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2StoredInfoType>;
            /** Lists stored infoTypes. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case-insensitive, default sorting order is ascending, redundant space characters
                 * are insignificant. Example: `name asc, display_name, create_time desc` Supported fields are: - `create_time`: corresponds to time the most recent version of the resource was
                 * created. - `state`: corresponds to the state of the resource. - `name`: corresponds to resource name. - `display_name`: corresponds to info type's display name.
                 */
                orderBy?: string;
                /** Size of the page, can be limited by server. If zero server returns a page of max size 100. */
                pageSize?: number;
                /** Page token to continue retrieval. Comes from previous call to `ListStoredInfoTypes`. */
                pageToken?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListStoredInfoTypesResponse>;
            /**
             * Updates the stored infoType by creating a new version. The existing version will continue to be used until the new version is ready. See
             * https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and storedInfoType to be updated, for example `organizations/433245324/storedInfoTypes/432452342` or
                 * projects/project-id/storedInfoTypes/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2UpdateStoredInfoTypeRequest;
            }): Request<GooglePrivacyDlpV2StoredInfoType>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and storedInfoType to be updated, for example `organizations/433245324/storedInfoTypes/432452342` or
                 * projects/project-id/storedInfoTypes/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2UpdateStoredInfoTypeRequest): Request<GooglePrivacyDlpV2StoredInfoType>;
        }
        interface LocationsResource {
            deidentifyTemplates: DeidentifyTemplatesResource;
            inspectTemplates: InspectTemplatesResource;
            storedInfoTypes: StoredInfoTypesResource;
        }
        interface StoredInfoTypesResource {
            /** Creates a pre-built stored infoType to be used for inspection. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CreateStoredInfoTypeRequest;
            }): Request<GooglePrivacyDlpV2StoredInfoType>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CreateStoredInfoTypeRequest): Request<GooglePrivacyDlpV2StoredInfoType>;
            /** Deletes a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and storedInfoType to be deleted, for example `organizations/433245324/storedInfoTypes/432452342` or
                 * projects/project-id/storedInfoTypes/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and storedInfoType to be read, for example `organizations/433245324/storedInfoTypes/432452342` or
                 * projects/project-id/storedInfoTypes/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2StoredInfoType>;
            /** Lists stored infoTypes. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case-insensitive, default sorting order is ascending, redundant space characters
                 * are insignificant. Example: `name asc, display_name, create_time desc` Supported fields are: - `create_time`: corresponds to time the most recent version of the resource was
                 * created. - `state`: corresponds to the state of the resource. - `name`: corresponds to resource name. - `display_name`: corresponds to info type's display name.
                 */
                orderBy?: string;
                /** Size of the page, can be limited by server. If zero server returns a page of max size 100. */
                pageSize?: number;
                /** Page token to continue retrieval. Comes from previous call to `ListStoredInfoTypes`. */
                pageToken?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListStoredInfoTypesResponse>;
            /**
             * Updates the stored infoType by creating a new version. The existing version will continue to be used until the new version is ready. See
             * https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and storedInfoType to be updated, for example `organizations/433245324/storedInfoTypes/432452342` or
                 * projects/project-id/storedInfoTypes/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2UpdateStoredInfoTypeRequest;
            }): Request<GooglePrivacyDlpV2StoredInfoType>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and storedInfoType to be updated, for example `organizations/433245324/storedInfoTypes/432452342` or
                 * projects/project-id/storedInfoTypes/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2UpdateStoredInfoTypeRequest): Request<GooglePrivacyDlpV2StoredInfoType>;
        }
        interface OrganizationsResource {
            deidentifyTemplates: DeidentifyTemplatesResource;
            inspectTemplates: InspectTemplatesResource;
            locations: LocationsResource;
            storedInfoTypes: StoredInfoTypesResource;
        }
        interface ContentResource {
            /**
             * De-identifies potentially sensitive info from a ContentItem. This method has limits on input size and output size. See https://cloud.google.com/dlp/docs/deidentify-sensitive-data to
             * learn more. When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically choose what detectors to run. By default this may be all types, but may
             * change over time as detectors are updated.
             */
            deidentify(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope, location
                 * specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent`
                 * string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2DeidentifyContentRequest;
            }): Request<GooglePrivacyDlpV2DeidentifyContentResponse>;
            deidentify(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope, location
                 * specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent`
                 * string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2DeidentifyContentRequest): Request<GooglePrivacyDlpV2DeidentifyContentResponse>;
            /**
             * Finds potentially sensitive info in content. This method has limits on input size, processing time, and output size. When no InfoTypes or CustomInfoTypes are specified in this
             * request, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. For how to guides, see
             * https://cloud.google.com/dlp/docs/inspecting-images and https://cloud.google.com/dlp/docs/inspecting-text,
             */
            inspect(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope, location
                 * specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent`
                 * string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2InspectContentRequest;
            }): Request<GooglePrivacyDlpV2InspectContentResponse>;
            inspect(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope, location
                 * specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent`
                 * string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2InspectContentRequest): Request<GooglePrivacyDlpV2InspectContentResponse>;
            /** Re-identifies content that has been de-identified. See https://cloud.google.com/dlp/docs/pseudonymization#re-identification_in_free_text_code_example to learn more. */
            reidentify(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope,
                 * location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example
                 * `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2ReidentifyContentRequest;
            }): Request<GooglePrivacyDlpV2ReidentifyContentResponse>;
            reidentify(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope,
                 * location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example
                 * `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2ReidentifyContentRequest): Request<GooglePrivacyDlpV2ReidentifyContentResponse>;
        }
        interface DeidentifyTemplatesResource {
            /**
             * Creates a DeidentifyTemplate for re-using frequently used configuration for de-identifying content, images, and storage. See
             * https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CreateDeidentifyTemplateRequest;
            }): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CreateDeidentifyTemplateRequest): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
            /** Deletes a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and deidentify template to be deleted, for example `organizations/433245324/deidentifyTemplates/432452342` or
                 * projects/project-id/deidentifyTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and deidentify template to be read, for example `organizations/433245324/deidentifyTemplates/432452342` or
                 * projects/project-id/deidentifyTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
            /** Lists DeidentifyTemplates. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case-insensitive, default sorting order is ascending, redundant space characters
                 * are insignificant. Example: `name asc,update_time, create_time desc` Supported fields are: - `create_time`: corresponds to time the template was created. - `update_time`:
                 * corresponds to time the template was last updated. - `name`: corresponds to template's name. - `display_name`: corresponds to template's display name.
                 */
                orderBy?: string;
                /** Size of the page, can be limited by server. If zero server returns a page of max size 100. */
                pageSize?: number;
                /** Page token to continue retrieval. Comes from previous call to `ListDeidentifyTemplates`. */
                pageToken?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListDeidentifyTemplatesResponse>;
            /** Updates the DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and deidentify template to be updated, for example `organizations/433245324/deidentifyTemplates/432452342` or
                 * projects/project-id/deidentifyTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest;
            }): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and deidentify template to be updated, for example `organizations/433245324/deidentifyTemplates/432452342` or
                 * projects/project-id/deidentifyTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
        }
        interface DlpJobsResource {
            /**
             * Starts asynchronous cancellation on a long-running DlpJob. The server makes a best effort to cancel the DlpJob, but success is not guaranteed. See
             * https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
             */
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the DlpJob resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CancelDlpJobRequest;
            }): Request<{}>;
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the DlpJob resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CancelDlpJobRequest): Request<{}>;
            /**
             * Creates a new job to inspect storage or calculate risk metrics. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis
             * to learn more. When no InfoTypes or CustomInfoTypes are specified in inspect jobs, the system will automatically choose what detectors to run. By default this may be all types, but
             * may change over time as detectors are updated.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope,
                 * location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example
                 * `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CreateDlpJobRequest;
            }): Request<GooglePrivacyDlpV2DlpJob>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope,
                 * location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example
                 * `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CreateDlpJobRequest): Request<GooglePrivacyDlpV2DlpJob>;
            /**
             * Deletes a long-running DlpJob. This method indicates that the client is no longer interested in the DlpJob result. The job will be cancelled if possible. See
             * https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the DlpJob resource to be deleted. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets the latest state of a long-running DlpJob. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the DlpJob resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2DlpJob>;
            /**
             * Lists DlpJobs that match the specified filter in the request. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to
             * learn more.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Allows filtering. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence
                 * of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * Supported fields/values for inspect jobs: - `state` -
                 * PENDING|RUNNING|CANCELED|FINISHED|FAILED - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY - `trigger_name` - The resource name of the trigger that created job. -
                 * 'end_time` - Corresponds to time the job finished. - 'start_time` - Corresponds to time the job finished. * Supported fields for risk analysis jobs: - `state` -
                 * RUNNING|CANCELED|FINISHED|FAILED - 'end_time` - Corresponds to time the job finished. - 'start_time` - Corresponds to time the job finished. * The operator must be `=` or `!=`.
                 * Examples: * inspected_storage = cloud_storage AND state = done * inspected_storage = cloud_storage OR inspected_storage = bigquery * inspected_storage = cloud_storage AND (state
                 * = done OR state = canceled) * end_time > \"2017-12-12T00:00:00+00:00\" The length of this field should be no more than 500 characters.
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case-insensitive, default sorting order is ascending, redundant space characters
                 * are insignificant. Example: `name asc, end_time asc, create_time desc` Supported fields are: - `create_time`: corresponds to time the job was created. - `end_time`: corresponds
                 * to time the job ended. - `name`: corresponds to job's name. - `state`: corresponds to `state`
                 */
                orderBy?: string;
                /** The standard list page size. */
                pageSize?: number;
                /** The standard list page token. */
                pageToken?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope,
                 * location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example
                 * `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The type of job. Defaults to `DlpJobType.INSPECT` */
                type?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListDlpJobsResponse>;
        }
        // tslint:disable-next-line:interface-name
        interface ImageResource {
            /**
             * Redacts potentially sensitive info from an image. This method has limits on input size, processing time, and output size. See
             * https://cloud.google.com/dlp/docs/redacting-sensitive-data-images to learn more. When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically
             * choose what detectors to run. By default this may be all types, but may change over time as detectors are updated.
             */
            redact(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope, location
                 * specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent`
                 * string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2RedactImageRequest;
            }): Request<GooglePrivacyDlpV2RedactImageResponse>;
            redact(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope, location
                 * specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent`
                 * string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2RedactImageRequest): Request<GooglePrivacyDlpV2RedactImageResponse>;
        }
        // tslint:disable-next-line:interface-name
        interface InspectTemplatesResource {
            /**
             * Creates an InspectTemplate for re-using frequently used configuration for inspecting content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates to learn
             * more.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CreateInspectTemplateRequest;
            }): Request<GooglePrivacyDlpV2InspectTemplate>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CreateInspectTemplateRequest): Request<GooglePrivacyDlpV2InspectTemplate>;
            /** Deletes an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and inspectTemplate to be deleted, for example `organizations/433245324/inspectTemplates/432452342` or
                 * projects/project-id/inspectTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and inspectTemplate to be read, for example `organizations/433245324/inspectTemplates/432452342` or
                 * projects/project-id/inspectTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2InspectTemplate>;
            /** Lists InspectTemplates. See https://cloud.google.com/dlp/docs/creating-templates to learn more. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case-insensitive, default sorting order is ascending, redundant space characters
                 * are insignificant. Example: `name asc,update_time, create_time desc` Supported fields are: - `create_time`: corresponds to time the template was created. - `update_time`:
                 * corresponds to time the template was last updated. - `name`: corresponds to template's name. - `display_name`: corresponds to template's display name.
                 */
                orderBy?: string;
                /** Size of the page, can be limited by server. If zero server returns a page of max size 100. */
                pageSize?: number;
                /** Page token to continue retrieval. Comes from previous call to `ListInspectTemplates`. */
                pageToken?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListInspectTemplatesResponse>;
            /** Updates the InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and inspectTemplate to be updated, for example `organizations/433245324/inspectTemplates/432452342` or
                 * projects/project-id/inspectTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2UpdateInspectTemplateRequest;
            }): Request<GooglePrivacyDlpV2InspectTemplate>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and inspectTemplate to be updated, for example `organizations/433245324/inspectTemplates/432452342` or
                 * projects/project-id/inspectTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2UpdateInspectTemplateRequest): Request<GooglePrivacyDlpV2InspectTemplate>;
        }
        interface JobTriggersResource {
            /** Activate a job trigger. Causes the immediate execute of a trigger instead of waiting on the trigger event to occur. */
            activate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource name of the trigger to activate, for example `projects/dlp-test-project/jobTriggers/53234423`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2ActivateJobTriggerRequest;
            }): Request<GooglePrivacyDlpV2DlpJob>;
            activate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource name of the trigger to activate, for example `projects/dlp-test-project/jobTriggers/53234423`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2ActivateJobTriggerRequest): Request<GooglePrivacyDlpV2DlpJob>;
            /**
             * Creates a job trigger to run DLP actions such as scanning storage for sensitive information on a set schedule. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn
             * more.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope,
                 * location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example
                 * `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CreateJobTriggerRequest;
            }): Request<GooglePrivacyDlpV2JobTrigger>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope,
                 * location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example
                 * `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CreateJobTriggerRequest): Request<GooglePrivacyDlpV2JobTrigger>;
            /** Deletes a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource name of the project and the triggeredJob, for example `projects/dlp-test-project/jobTriggers/53234423`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource name of the project and the triggeredJob, for example `projects/dlp-test-project/jobTriggers/53234423`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2JobTrigger>;
            /** Lists job triggers. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Allows filtering. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence
                 * of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * Supported fields/values for inspect jobs: - `status` -
                 * HEALTHY|PAUSED|CANCELLED - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY - 'last_run_time` - RFC 3339 formatted timestamp, surrounded by quotation marks. Nanoseconds
                 * are ignored. - 'error_count' - Number of errors that have occurred while running. * The operator must be `=` or `!=` for status and inspected_storage. Examples: *
                 * inspected_storage = cloud_storage AND status = HEALTHY * inspected_storage = cloud_storage OR inspected_storage = bigquery * inspected_storage = cloud_storage AND (state =
                 * PAUSED OR state = HEALTHY) * last_run_time > \"2017-12-12T00:00:00+00:00\" The length of this field should be no more than 500 characters.
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Comma separated list of triggeredJob fields to order by, followed by `asc` or `desc` postfix. This list is case-insensitive, default sorting order is ascending, redundant space
                 * characters are insignificant. Example: `name asc,update_time, create_time desc` Supported fields are: - `create_time`: corresponds to time the JobTrigger was created. -
                 * `update_time`: corresponds to time the JobTrigger was last updated. - `last_run_time`: corresponds to the last time the JobTrigger ran. - `name`: corresponds to JobTrigger's
                 * name. - `display_name`: corresponds to JobTrigger's display name. - `status`: corresponds to JobTrigger's status.
                 */
                orderBy?: string;
                /** Size of the page, can be limited by a server. */
                pageSize?: number;
                /** Page token to continue retrieval. Comes from previous call to ListJobTriggers. `order_by` field must not change for subsequent calls. */
                pageToken?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope,
                 * location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example
                 * `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListJobTriggersResponse>;
            /** Updates a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource name of the project and the triggeredJob, for example `projects/dlp-test-project/jobTriggers/53234423`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2UpdateJobTriggerRequest;
            }): Request<GooglePrivacyDlpV2JobTrigger>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource name of the project and the triggeredJob, for example `projects/dlp-test-project/jobTriggers/53234423`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2UpdateJobTriggerRequest): Request<GooglePrivacyDlpV2JobTrigger>;
        }
        interface ContentResource {
            /**
             * De-identifies potentially sensitive info from a ContentItem. This method has limits on input size and output size. See https://cloud.google.com/dlp/docs/deidentify-sensitive-data to
             * learn more. When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically choose what detectors to run. By default this may be all types, but may
             * change over time as detectors are updated.
             */
            deidentify(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope, location
                 * specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent`
                 * string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2DeidentifyContentRequest;
            }): Request<GooglePrivacyDlpV2DeidentifyContentResponse>;
            deidentify(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope, location
                 * specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent`
                 * string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2DeidentifyContentRequest): Request<GooglePrivacyDlpV2DeidentifyContentResponse>;
            /**
             * Finds potentially sensitive info in content. This method has limits on input size, processing time, and output size. When no InfoTypes or CustomInfoTypes are specified in this
             * request, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. For how to guides, see
             * https://cloud.google.com/dlp/docs/inspecting-images and https://cloud.google.com/dlp/docs/inspecting-text,
             */
            inspect(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope, location
                 * specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent`
                 * string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2InspectContentRequest;
            }): Request<GooglePrivacyDlpV2InspectContentResponse>;
            inspect(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope, location
                 * specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent`
                 * string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2InspectContentRequest): Request<GooglePrivacyDlpV2InspectContentResponse>;
            /** Re-identifies content that has been de-identified. See https://cloud.google.com/dlp/docs/pseudonymization#re-identification_in_free_text_code_example to learn more. */
            reidentify(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope,
                 * location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example
                 * `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2ReidentifyContentRequest;
            }): Request<GooglePrivacyDlpV2ReidentifyContentResponse>;
            reidentify(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope,
                 * location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example
                 * `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2ReidentifyContentRequest): Request<GooglePrivacyDlpV2ReidentifyContentResponse>;
        }
        interface DeidentifyTemplatesResource {
            /**
             * Creates a DeidentifyTemplate for re-using frequently used configuration for de-identifying content, images, and storage. See
             * https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CreateDeidentifyTemplateRequest;
            }): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CreateDeidentifyTemplateRequest): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
            /** Deletes a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and deidentify template to be deleted, for example `organizations/433245324/deidentifyTemplates/432452342` or
                 * projects/project-id/deidentifyTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and deidentify template to be read, for example `organizations/433245324/deidentifyTemplates/432452342` or
                 * projects/project-id/deidentifyTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
            /** Lists DeidentifyTemplates. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case-insensitive, default sorting order is ascending, redundant space characters
                 * are insignificant. Example: `name asc,update_time, create_time desc` Supported fields are: - `create_time`: corresponds to time the template was created. - `update_time`:
                 * corresponds to time the template was last updated. - `name`: corresponds to template's name. - `display_name`: corresponds to template's display name.
                 */
                orderBy?: string;
                /** Size of the page, can be limited by server. If zero server returns a page of max size 100. */
                pageSize?: number;
                /** Page token to continue retrieval. Comes from previous call to `ListDeidentifyTemplates`. */
                pageToken?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListDeidentifyTemplatesResponse>;
            /** Updates the DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and deidentify template to be updated, for example `organizations/433245324/deidentifyTemplates/432452342` or
                 * projects/project-id/deidentifyTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest;
            }): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and deidentify template to be updated, for example `organizations/433245324/deidentifyTemplates/432452342` or
                 * projects/project-id/deidentifyTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest): Request<GooglePrivacyDlpV2DeidentifyTemplate>;
        }
        interface DlpJobsResource {
            /**
             * Starts asynchronous cancellation on a long-running DlpJob. The server makes a best effort to cancel the DlpJob, but success is not guaranteed. See
             * https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
             */
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the DlpJob resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CancelDlpJobRequest;
            }): Request<{}>;
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the DlpJob resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CancelDlpJobRequest): Request<{}>;
            /**
             * Creates a new job to inspect storage or calculate risk metrics. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis
             * to learn more. When no InfoTypes or CustomInfoTypes are specified in inspect jobs, the system will automatically choose what detectors to run. By default this may be all types, but
             * may change over time as detectors are updated.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope,
                 * location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example
                 * `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CreateDlpJobRequest;
            }): Request<GooglePrivacyDlpV2DlpJob>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope,
                 * location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example
                 * `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CreateDlpJobRequest): Request<GooglePrivacyDlpV2DlpJob>;
            /**
             * Deletes a long-running DlpJob. This method indicates that the client is no longer interested in the DlpJob result. The job will be cancelled if possible. See
             * https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the DlpJob resource to be deleted. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /**
             * Finish a running hybrid DlpJob. Triggers the finalization steps and running of any enabled actions that have not yet run. Early access feature is in a pre-release state and might
             * change or have limited support. For more information, see https://cloud.google.com/products#product-launch-stages.
             */
            finish(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the DlpJob resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2FinishDlpJobRequest;
            }): Request<{}>;
            finish(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the DlpJob resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2FinishDlpJobRequest): Request<{}>;
            /** Gets the latest state of a long-running DlpJob. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the DlpJob resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2DlpJob>;
            /**
             * Inspect hybrid content and store findings to a job. To review the findings inspect the job. Inspection will occur asynchronously. Early access feature is in a pre-release state and
             * might change or have limited support. For more information, see https://cloud.google.com/products#product-launch-stages.
             */
            hybridInspect(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource name of the job to execute a hybrid inspect on, for example `projects/dlp-test-project/dlpJob/53234423`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2HybridInspectDlpJobRequest;
            }): Request<{}>;
            hybridInspect(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource name of the job to execute a hybrid inspect on, for example `projects/dlp-test-project/dlpJob/53234423`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2HybridInspectDlpJobRequest): Request<{}>;
            /**
             * Lists DlpJobs that match the specified filter in the request. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to
             * learn more.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Allows filtering. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence
                 * of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * Supported fields/values for inspect jobs: - `state` -
                 * PENDING|RUNNING|CANCELED|FINISHED|FAILED - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY - `trigger_name` - The resource name of the trigger that created job. -
                 * 'end_time` - Corresponds to time the job finished. - 'start_time` - Corresponds to time the job finished. * Supported fields for risk analysis jobs: - `state` -
                 * RUNNING|CANCELED|FINISHED|FAILED - 'end_time` - Corresponds to time the job finished. - 'start_time` - Corresponds to time the job finished. * The operator must be `=` or `!=`.
                 * Examples: * inspected_storage = cloud_storage AND state = done * inspected_storage = cloud_storage OR inspected_storage = bigquery * inspected_storage = cloud_storage AND (state
                 * = done OR state = canceled) * end_time > \"2017-12-12T00:00:00+00:00\" The length of this field should be no more than 500 characters.
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case-insensitive, default sorting order is ascending, redundant space characters
                 * are insignificant. Example: `name asc, end_time asc, create_time desc` Supported fields are: - `create_time`: corresponds to time the job was created. - `end_time`: corresponds
                 * to time the job ended. - `name`: corresponds to job's name. - `state`: corresponds to `state`
                 */
                orderBy?: string;
                /** The standard list page size. */
                pageSize?: number;
                /** The standard list page token. */
                pageToken?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope,
                 * location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example
                 * `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The type of job. Defaults to `DlpJobType.INSPECT` */
                type?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListDlpJobsResponse>;
        }
        // tslint:disable-next-line:interface-name
        interface ImageResource {
            /**
             * Redacts potentially sensitive info from an image. This method has limits on input size, processing time, and output size. See
             * https://cloud.google.com/dlp/docs/redacting-sensitive-data-images to learn more. When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically
             * choose what detectors to run. By default this may be all types, but may change over time as detectors are updated.
             */
            redact(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope, location
                 * specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent`
                 * string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2RedactImageRequest;
            }): Request<GooglePrivacyDlpV2RedactImageResponse>;
            redact(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope, location
                 * specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent`
                 * string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2RedactImageRequest): Request<GooglePrivacyDlpV2RedactImageResponse>;
        }
        // tslint:disable-next-line:interface-name
        interface InspectTemplatesResource {
            /**
             * Creates an InspectTemplate for re-using frequently used configuration for inspecting content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates to learn
             * more.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CreateInspectTemplateRequest;
            }): Request<GooglePrivacyDlpV2InspectTemplate>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CreateInspectTemplateRequest): Request<GooglePrivacyDlpV2InspectTemplate>;
            /** Deletes an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and inspectTemplate to be deleted, for example `organizations/433245324/inspectTemplates/432452342` or
                 * projects/project-id/inspectTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and inspectTemplate to be read, for example `organizations/433245324/inspectTemplates/432452342` or
                 * projects/project-id/inspectTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2InspectTemplate>;
            /** Lists InspectTemplates. See https://cloud.google.com/dlp/docs/creating-templates to learn more. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case-insensitive, default sorting order is ascending, redundant space characters
                 * are insignificant. Example: `name asc,update_time, create_time desc` Supported fields are: - `create_time`: corresponds to time the template was created. - `update_time`:
                 * corresponds to time the template was last updated. - `name`: corresponds to template's name. - `display_name`: corresponds to template's display name.
                 */
                orderBy?: string;
                /** Size of the page, can be limited by server. If zero server returns a page of max size 100. */
                pageSize?: number;
                /** Page token to continue retrieval. Comes from previous call to `ListInspectTemplates`. */
                pageToken?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListInspectTemplatesResponse>;
            /** Updates the InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and inspectTemplate to be updated, for example `organizations/433245324/inspectTemplates/432452342` or
                 * projects/project-id/inspectTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2UpdateInspectTemplateRequest;
            }): Request<GooglePrivacyDlpV2InspectTemplate>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and inspectTemplate to be updated, for example `organizations/433245324/inspectTemplates/432452342` or
                 * projects/project-id/inspectTemplates/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2UpdateInspectTemplateRequest): Request<GooglePrivacyDlpV2InspectTemplate>;
        }
        interface JobTriggersResource {
            /** Activate a job trigger. Causes the immediate execute of a trigger instead of waiting on the trigger event to occur. */
            activate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource name of the trigger to activate, for example `projects/dlp-test-project/jobTriggers/53234423`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2ActivateJobTriggerRequest;
            }): Request<GooglePrivacyDlpV2DlpJob>;
            activate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource name of the trigger to activate, for example `projects/dlp-test-project/jobTriggers/53234423`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2ActivateJobTriggerRequest): Request<GooglePrivacyDlpV2DlpJob>;
            /**
             * Creates a job trigger to run DLP actions such as scanning storage for sensitive information on a set schedule. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn
             * more.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope,
                 * location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example
                 * `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CreateJobTriggerRequest;
            }): Request<GooglePrivacyDlpV2JobTrigger>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope,
                 * location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example
                 * `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CreateJobTriggerRequest): Request<GooglePrivacyDlpV2JobTrigger>;
            /** Deletes a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource name of the project and the triggeredJob, for example `projects/dlp-test-project/jobTriggers/53234423`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource name of the project and the triggeredJob, for example `projects/dlp-test-project/jobTriggers/53234423`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2JobTrigger>;
            /**
             * Inspect hybrid content and store findings to a trigger. The inspection will be processed asynchronously. To review the findings monitor the jobs within the trigger. Early access
             * feature is in a pre-release state and might change or have limited support. For more information, see https://cloud.google.com/products#product-launch-stages.
             */
            hybridInspect(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource name of the trigger to execute a hybrid inspect on, for example `projects/dlp-test-project/jobTriggers/53234423`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2HybridInspectJobTriggerRequest;
            }): Request<{}>;
            hybridInspect(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource name of the trigger to execute a hybrid inspect on, for example `projects/dlp-test-project/jobTriggers/53234423`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2HybridInspectJobTriggerRequest): Request<{}>;
            /** Lists job triggers. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Allows filtering. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence
                 * of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * Supported fields/values for inspect jobs: - `status` -
                 * HEALTHY|PAUSED|CANCELLED - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY - 'last_run_time` - RFC 3339 formatted timestamp, surrounded by quotation marks. Nanoseconds
                 * are ignored. - 'error_count' - Number of errors that have occurred while running. * The operator must be `=` or `!=` for status and inspected_storage. Examples: *
                 * inspected_storage = cloud_storage AND status = HEALTHY * inspected_storage = cloud_storage OR inspected_storage = bigquery * inspected_storage = cloud_storage AND (state =
                 * PAUSED OR state = HEALTHY) * last_run_time > \"2017-12-12T00:00:00+00:00\" The length of this field should be no more than 500 characters.
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Comma separated list of triggeredJob fields to order by, followed by `asc` or `desc` postfix. This list is case-insensitive, default sorting order is ascending, redundant space
                 * characters are insignificant. Example: `name asc,update_time, create_time desc` Supported fields are: - `create_time`: corresponds to time the JobTrigger was created. -
                 * `update_time`: corresponds to time the JobTrigger was last updated. - `last_run_time`: corresponds to the last time the JobTrigger ran. - `name`: corresponds to JobTrigger's
                 * name. - `display_name`: corresponds to JobTrigger's display name. - `status`: corresponds to JobTrigger's status.
                 */
                orderBy?: string;
                /** Size of the page, can be limited by a server. */
                pageSize?: number;
                /** Page token to continue retrieval. Comes from previous call to ListJobTriggers. `order_by` field must not change for subsequent calls. */
                pageToken?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](/dlp/docs/specifying-location): + Projects scope,
                 * location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example
                 * `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data:
                 * parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListJobTriggersResponse>;
            /** Updates a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource name of the project and the triggeredJob, for example `projects/dlp-test-project/jobTriggers/53234423`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2UpdateJobTriggerRequest;
            }): Request<GooglePrivacyDlpV2JobTrigger>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource name of the project and the triggeredJob, for example `projects/dlp-test-project/jobTriggers/53234423`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2UpdateJobTriggerRequest): Request<GooglePrivacyDlpV2JobTrigger>;
        }
        interface StoredInfoTypesResource {
            /** Creates a pre-built stored infoType to be used for inspection. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CreateStoredInfoTypeRequest;
            }): Request<GooglePrivacyDlpV2StoredInfoType>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CreateStoredInfoTypeRequest): Request<GooglePrivacyDlpV2StoredInfoType>;
            /** Deletes a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and storedInfoType to be deleted, for example `organizations/433245324/storedInfoTypes/432452342` or
                 * projects/project-id/storedInfoTypes/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and storedInfoType to be read, for example `organizations/433245324/storedInfoTypes/432452342` or
                 * projects/project-id/storedInfoTypes/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2StoredInfoType>;
            /** Lists stored infoTypes. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case-insensitive, default sorting order is ascending, redundant space characters
                 * are insignificant. Example: `name asc, display_name, create_time desc` Supported fields are: - `create_time`: corresponds to time the most recent version of the resource was
                 * created. - `state`: corresponds to the state of the resource. - `name`: corresponds to resource name. - `display_name`: corresponds to info type's display name.
                 */
                orderBy?: string;
                /** Size of the page, can be limited by server. If zero server returns a page of max size 100. */
                pageSize?: number;
                /** Page token to continue retrieval. Comes from previous call to `ListStoredInfoTypes`. */
                pageToken?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListStoredInfoTypesResponse>;
            /**
             * Updates the stored infoType by creating a new version. The existing version will continue to be used until the new version is ready. See
             * https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and storedInfoType to be updated, for example `organizations/433245324/storedInfoTypes/432452342` or
                 * projects/project-id/storedInfoTypes/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2UpdateStoredInfoTypeRequest;
            }): Request<GooglePrivacyDlpV2StoredInfoType>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and storedInfoType to be updated, for example `organizations/433245324/storedInfoTypes/432452342` or
                 * projects/project-id/storedInfoTypes/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2UpdateStoredInfoTypeRequest): Request<GooglePrivacyDlpV2StoredInfoType>;
        }
        interface LocationsResource {
            content: ContentResource;
            deidentifyTemplates: DeidentifyTemplatesResource;
            dlpJobs: DlpJobsResource;
            image: ImageResource;
            inspectTemplates: InspectTemplatesResource;
            jobTriggers: JobTriggersResource;
            storedInfoTypes: StoredInfoTypesResource;
        }
        interface StoredInfoTypesResource {
            /** Creates a pre-built stored infoType to be used for inspection. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2CreateStoredInfoTypeRequest;
            }): Request<GooglePrivacyDlpV2StoredInfoType>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2CreateStoredInfoTypeRequest): Request<GooglePrivacyDlpV2StoredInfoType>;
            /** Deletes a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and storedInfoType to be deleted, for example `organizations/433245324/storedInfoTypes/432452342` or
                 * projects/project-id/storedInfoTypes/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of the organization and storedInfoType to be read, for example `organizations/433245324/storedInfoTypes/432452342` or
                 * projects/project-id/storedInfoTypes/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2StoredInfoType>;
            /** Lists stored infoTypes. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Deprecated. This field has no effect. */
                locationId?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case-insensitive, default sorting order is ascending, redundant space characters
                 * are insignificant. Example: `name asc, display_name, create_time desc` Supported fields are: - `create_time`: corresponds to time the most recent version of the resource was
                 * created. - `state`: corresponds to the state of the resource. - `name`: corresponds to resource name. - `display_name`: corresponds to info type's display name.
                 */
                orderBy?: string;
                /** Size of the page, can be limited by server. If zero server returns a page of max size 100. */
                pageSize?: number;
                /** Page token to continue retrieval. Comes from previous call to `ListStoredInfoTypes`. */
                pageToken?: string;
                /**
                 * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing
                 * location](/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults
                 * to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified
                 * (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the
                 * `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GooglePrivacyDlpV2ListStoredInfoTypesResponse>;
            /**
             * Updates the stored infoType by creating a new version. The existing version will continue to be used until the new version is ready. See
             * https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and storedInfoType to be updated, for example `organizations/433245324/storedInfoTypes/432452342` or
                 * projects/project-id/storedInfoTypes/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GooglePrivacyDlpV2UpdateStoredInfoTypeRequest;
            }): Request<GooglePrivacyDlpV2StoredInfoType>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. Resource name of organization and storedInfoType to be updated, for example `organizations/433245324/storedInfoTypes/432452342` or
                 * projects/project-id/storedInfoTypes/432452342.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GooglePrivacyDlpV2UpdateStoredInfoTypeRequest): Request<GooglePrivacyDlpV2StoredInfoType>;
        }
        interface ProjectsResource {
            content: ContentResource;
            deidentifyTemplates: DeidentifyTemplatesResource;
            dlpJobs: DlpJobsResource;
            image: ImageResource;
            inspectTemplates: InspectTemplatesResource;
            jobTriggers: JobTriggersResource;
            locations: LocationsResource;
            storedInfoTypes: StoredInfoTypesResource;
        }

        const infoTypes: InfoTypesResource;

        const locations: LocationsResource;

        const organizations: OrganizationsResource;

        const projects: ProjectsResource;
    }
}
