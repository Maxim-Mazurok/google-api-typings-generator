/* This is stub file for gapi.client.billingbudgets-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20231022

gapi.load('client', async () => {
    /** now we can use gapi.client */

    await gapi.client.load('https://billingbudgets.googleapis.com/$discovery/rest?version=v1');
    /** now we can use gapi.client.billingbudgets */

    /** don't forget to authenticate your client before sending any request to resources: */
    /** declare client_id registered in Google Developers Console */
    const client_id = '<<PUT YOUR CLIENT ID HERE>>';
    const scope = [
        /** View and manage your Google Cloud Platform billing accounts */
        'https://www.googleapis.com/auth/cloud-billing',
        /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
        'https://www.googleapis.com/auth/cloud-platform',
    ];
    const immediate = false;
    gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
        if (authResult && !authResult.error) {
            /** handle successful authorization */
            run();
        } else {
            /** handle authorization error */
        }
    });

    async function run() {
        /** Creates a new budget. See [Quotas and limits](https://cloud.google.com/billing/quotas) for more information on the limits of the number of budgets you can create. */
        await gapi.client.billingbudgets.billingAccounts.budgets.create({
            parent: "Test string",
        }, {
            amount: {
                lastPeriodAmount: {
                },
                specifiedAmount: {
                    currencyCode: "Test string",
                    nanos: 42,
                    units: "Test string",
                },
            },
            budgetFilter: {
                calendarPeriod: "Test string",
                creditTypes: [
                    "Test string"
                ],
                creditTypesTreatment: "Test string",
                customPeriod: {
                    endDate: {
                        day: 42,
                        month: 42,
                        year: 42,
                    },
                    startDate: {
                        day: 42,
                        month: 42,
                        year: 42,
                    },
                },
                labels: {
                    A: [
                        42
                    ]
                },
                projects: [
                    "Test string"
                ],
                resourceAncestors: [
                    "Test string"
                ],
                services: [
                    "Test string"
                ],
                subaccounts: [
                    "Test string"
                ],
            },
            displayName: "Test string",
            etag: "Test string",
            name: "Test string",
            notificationsRule: {
                disableDefaultIamRecipients: true,
                enableProjectLevelRecipients: true,
                monitoringNotificationChannels: [
                    "Test string"
                ],
                pubsubTopic: "Test string",
                schemaVersion: "Test string",
            },
            thresholdRules: [
                {
                    spendBasis: "Test string",
                    thresholdPercent: 42,
                }
            ],
        });
        /** Deletes a budget. Returns successfully if already deleted. */
        await gapi.client.billingbudgets.billingAccounts.budgets.delete({
            name: "Test string",
        });
        /**
         * Returns a budget. WARNING: There are some fields exposed on the Google Cloud Console that aren't available on this API. When reading from the API, you will not see these fields in the
         * return value, though they may have been set in the Cloud Console.
         */
        await gapi.client.billingbudgets.billingAccounts.budgets.get({
            name: "Test string",
        });
        /**
         * Returns a list of budgets for a billing account. WARNING: There are some fields exposed on the Google Cloud Console that aren't available on this API. When reading from the API, you
         * will not see these fields in the return value, though they may have been set in the Cloud Console.
         */
        await gapi.client.billingbudgets.billingAccounts.budgets.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
            scope: "Test string",
        });
        /**
         * Updates a budget and returns the updated budget. WARNING: There are some fields exposed on the Google Cloud Console that aren't available on this API. Budget fields that are not exposed
         * in this API will not be changed by this method.
         */
        await gapi.client.billingbudgets.billingAccounts.budgets.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            amount: {
                lastPeriodAmount: {
                },
                specifiedAmount: {
                    currencyCode: "Test string",
                    nanos: 42,
                    units: "Test string",
                },
            },
            budgetFilter: {
                calendarPeriod: "Test string",
                creditTypes: [
                    "Test string"
                ],
                creditTypesTreatment: "Test string",
                customPeriod: {
                    endDate: {
                        day: 42,
                        month: 42,
                        year: 42,
                    },
                    startDate: {
                        day: 42,
                        month: 42,
                        year: 42,
                    },
                },
                labels: {
                    A: [
                        42
                    ]
                },
                projects: [
                    "Test string"
                ],
                resourceAncestors: [
                    "Test string"
                ],
                services: [
                    "Test string"
                ],
                subaccounts: [
                    "Test string"
                ],
            },
            displayName: "Test string",
            etag: "Test string",
            name: "Test string",
            notificationsRule: {
                disableDefaultIamRecipients: true,
                enableProjectLevelRecipients: true,
                monitoringNotificationChannels: [
                    "Test string"
                ],
                pubsubTopic: "Test string",
                schemaVersion: "Test string",
            },
            thresholdRules: [
                {
                    spendBasis: "Test string",
                    thresholdPercent: 42,
                }
            ],
        });
    }
});
