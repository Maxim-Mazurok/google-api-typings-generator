// Type definitions for non-npm package Cloud Video Intelligence API v1 1.0
// Project: https://cloud.google.com/video-intelligence/docs/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Google API Typings Generator <https://github.com/google-api-typings-generator>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://videointelligence.googleapis.com/$discovery/rest?version=v1
// Revision: 20200810

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Cloud Video Intelligence API v1 */
    function load(name: "videointelligence", version: "v1"): PromiseLike<void>;
    function load(name: "videointelligence", version: "v1", callback: () => any): void;

    namespace videointelligence {
        interface GoogleCloudVideointelligenceV1_AnnotateVideoProgress {
            /** Progress metadata for all videos specified in `AnnotateVideoRequest`. */
            annotationProgress?: GoogleCloudVideointelligenceV1_VideoAnnotationProgress[];
        }
        interface GoogleCloudVideointelligenceV1_AnnotateVideoRequest {
            /** Required. Requested video annotation features. */
            features?: string[];
            /** The video data bytes. If unset, the input video(s) should be specified via the `input_uri`. If set, `input_uri` must be unset. */
            inputContent?: string;
            /**
             * Input video location. Currently, only [Cloud Storage](https://cloud.google.com/storage/) URIs are supported. URIs must be specified in the following format:
             * `gs://bucket-id/object-id` (other URI formats return google.rpc.Code.INVALID_ARGUMENT). For more information, see [Request
             * URIs](https://cloud.google.com/storage/docs/request-endpoints). To identify multiple videos, a video URI may include wildcards in the `object-id`. Supported wildcards: '*' to match
             * 0 or more characters; '?' to match 1 character. If unset, the input video should be embedded in the request as `input_content`. If set, `input_content` must be unset.
             */
            inputUri?: string;
            /**
             * Optional. Cloud region where annotation should take place. Supported cloud regions are: `us-east1`, `us-west1`, `europe-west1`, `asia-east1`. If no region is specified, the region
             * will be determined based on video file location.
             */
            locationId?: string;
            /**
             * Optional. Location where the output (in JSON format) should be stored. Currently, only [Cloud Storage](https://cloud.google.com/storage/) URIs are supported. These must be specified
             * in the following format: `gs://bucket-id/object-id` (other URI formats return google.rpc.Code.INVALID_ARGUMENT). For more information, see [Request
             * URIs](https://cloud.google.com/storage/docs/request-endpoints).
             */
            outputUri?: string;
            /** Additional video context and/or feature-specific parameters. */
            videoContext?: GoogleCloudVideointelligenceV1_VideoContext;
        }
        interface GoogleCloudVideointelligenceV1_AnnotateVideoResponse {
            /** Annotation results for all videos specified in `AnnotateVideoRequest`. */
            annotationResults?: GoogleCloudVideointelligenceV1_VideoAnnotationResults[];
        }
        interface GoogleCloudVideointelligenceV1_DetectedAttribute {
            /** Detected attribute confidence. Range [0, 1]. */
            confidence?: number;
            /** The name of the attribute, for example, glasses, dark_glasses, mouth_open. A full list of supported type names will be provided in the document. */
            name?: string;
            /** Text value of the detection result. For example, the value for "HairColor" can be "black", "blonde", etc. */
            value?: string;
        }
        interface GoogleCloudVideointelligenceV1_DetectedLandmark {
            /** The confidence score of the detected landmark. Range [0, 1]. */
            confidence?: number;
            /** The name of this landmark, for example, left_hand, right_shoulder. */
            name?: string;
            /** The 2D point of the detected landmark using the normalized image coordindate system. The normalized coordinates have the range from 0 to 1. */
            point?: GoogleCloudVideointelligenceV1_NormalizedVertex;
        }
        interface GoogleCloudVideointelligenceV1_Entity {
            /** Textual description, e.g., `Fixed-gear bicycle`. */
            description?: string;
            /** Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/). */
            entityId?: string;
            /** Language code for `description` in BCP-47 format. */
            languageCode?: string;
        }
        interface GoogleCloudVideointelligenceV1_ExplicitContentAnnotation {
            /** All video frames where explicit content was detected. */
            frames?: GoogleCloudVideointelligenceV1_ExplicitContentFrame[];
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1_ExplicitContentDetectionConfig {
            /** Model to use for explicit content detection. Supported values: "builtin/stable" (the default if unset) and "builtin/latest". */
            model?: string;
        }
        interface GoogleCloudVideointelligenceV1_ExplicitContentFrame {
            /** Likelihood of the pornography content.. */
            pornographyLikelihood?: string;
            /** Time-offset, relative to the beginning of the video, corresponding to the video frame for this location. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1_LabelAnnotation {
            /**
             * Common categories for the detected entity. For example, when the label is `Terrier`, the category is likely `dog`. And in some cases there might be more than one categories e.g.,
             * `Terrier` could also be a `pet`.
             */
            categoryEntities?: GoogleCloudVideointelligenceV1_Entity[];
            /** Detected entity. */
            entity?: GoogleCloudVideointelligenceV1_Entity;
            /** All video frames where a label was detected. */
            frames?: GoogleCloudVideointelligenceV1_LabelFrame[];
            /** All video segments where a label was detected. */
            segments?: GoogleCloudVideointelligenceV1_LabelSegment[];
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1_LabelDetectionConfig {
            /**
             * The confidence threshold we perform filtering on the labels from frame-level detection. If not set, it is set to 0.4 by default. The valid range for this threshold is [0.1, 0.9].
             * Any value set outside of this range will be clipped. Note: For best results, follow the default threshold. We will update the default threshold everytime when we release a new
             * model.
             */
            frameConfidenceThreshold?: number;
            /** What labels should be detected with LABEL_DETECTION, in addition to video-level labels or segment-level labels. If unspecified, defaults to `SHOT_MODE`. */
            labelDetectionMode?: string;
            /** Model to use for label detection. Supported values: "builtin/stable" (the default if unset) and "builtin/latest". */
            model?: string;
            /**
             * Whether the video has been shot from a stationary (i.e., non-moving) camera. When set to true, might improve detection accuracy for moving objects. Should be used with
             * `SHOT_AND_FRAME_MODE` enabled.
             */
            stationaryCamera?: boolean;
            /**
             * The confidence threshold we perform filtering on the labels from video-level and shot-level detections. If not set, it's set to 0.3 by default. The valid range for this threshold is
             * [0.1, 0.9]. Any value set outside of this range will be clipped. Note: For best results, follow the default threshold. We will update the default threshold everytime when we release
             * a new model.
             */
            videoConfidenceThreshold?: number;
        }
        interface GoogleCloudVideointelligenceV1_LabelFrame {
            /** Confidence that the label is accurate. Range: [0, 1]. */
            confidence?: number;
            /** Time-offset, relative to the beginning of the video, corresponding to the video frame for this location. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1_LabelSegment {
            /** Confidence that the label is accurate. Range: [0, 1]. */
            confidence?: number;
            /** Video segment where a label was detected. */
            segment?: GoogleCloudVideointelligenceV1_VideoSegment;
        }
        interface GoogleCloudVideointelligenceV1_LogoRecognitionAnnotation {
            /** Entity category information to specify the logo class that all the logo tracks within this LogoRecognitionAnnotation are recognized as. */
            entity?: GoogleCloudVideointelligenceV1_Entity;
            /** All video segments where the recognized logo appears. There might be multiple instances of the same logo class appearing in one VideoSegment. */
            segments?: GoogleCloudVideointelligenceV1_VideoSegment[];
            /** All logo tracks where the recognized logo appears. Each track corresponds to one logo instance appearing in consecutive frames. */
            tracks?: GoogleCloudVideointelligenceV1_Track[];
        }
        interface GoogleCloudVideointelligenceV1_NormalizedBoundingBox {
            /** Bottom Y coordinate. */
            bottom?: number;
            /** Left X coordinate. */
            left?: number;
            /** Right X coordinate. */
            right?: number;
            /** Top Y coordinate. */
            top?: number;
        }
        interface GoogleCloudVideointelligenceV1_NormalizedBoundingPoly {
            /** Normalized vertices of the bounding polygon. */
            vertices?: GoogleCloudVideointelligenceV1_NormalizedVertex[];
        }
        interface GoogleCloudVideointelligenceV1_NormalizedVertex {
            /** X coordinate. */
            x?: number;
            /** Y coordinate. */
            y?: number;
        }
        interface GoogleCloudVideointelligenceV1_ObjectTrackingAnnotation {
            /** Object category's labeling confidence of this track. */
            confidence?: number;
            /** Entity to specify the object category that this track is labeled as. */
            entity?: GoogleCloudVideointelligenceV1_Entity;
            /**
             * Information corresponding to all frames where this object track appears. Non-streaming batch mode: it may be one or multiple ObjectTrackingFrame messages in frames. Streaming mode:
             * it can only be one ObjectTrackingFrame message in frames.
             */
            frames?: GoogleCloudVideointelligenceV1_ObjectTrackingFrame[];
            /** Non-streaming batch mode ONLY. Each object track corresponds to one video segment where it appears. */
            segment?: GoogleCloudVideointelligenceV1_VideoSegment;
            /**
             * Streaming mode ONLY. In streaming mode, we do not know the end time of a tracked object before it is completed. Hence, there is no VideoSegment info returned. Instead, we provide a
             * unique identifiable integer track_id so that the customers can correlate the results of the ongoing ObjectTrackAnnotation of the same track_id over time.
             */
            trackId?: string;
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1_ObjectTrackingConfig {
            /** Model to use for object tracking. Supported values: "builtin/stable" (the default if unset) and "builtin/latest". */
            model?: string;
        }
        interface GoogleCloudVideointelligenceV1_ObjectTrackingFrame {
            /** The normalized bounding box location of this object track for the frame. */
            normalizedBoundingBox?: GoogleCloudVideointelligenceV1_NormalizedBoundingBox;
            /** The timestamp of the frame in microseconds. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1_ShotChangeDetectionConfig {
            /** Model to use for shot change detection. Supported values: "builtin/stable" (the default if unset) and "builtin/latest". */
            model?: string;
        }
        interface GoogleCloudVideointelligenceV1_SpeechContext {
            /**
             * Optional. A list of strings containing words and phrases "hints" so that the speech recognition is more likely to recognize them. This can be used to improve the accuracy for
             * specific words and phrases, for example, if specific commands are typically spoken by the user. This can also be used to add additional words to the vocabulary of the recognizer.
             * See [usage limits](https://cloud.google.com/speech/limits#content).
             */
            phrases?: string[];
        }
        interface GoogleCloudVideointelligenceV1_SpeechRecognitionAlternative {
            /**
             * Output only. The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for
             * the top alternative. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating
             * `confidence` was not set.
             */
            confidence?: number;
            /** Transcript text representing the words that the user spoke. */
            transcript?: string;
            /**
             * Output only. A list of word-specific information for each recognized word. Note: When `enable_speaker_diarization` is set to true, you will see all the words from the beginning of
             * the audio.
             */
            words?: GoogleCloudVideointelligenceV1_WordInfo[];
        }
        interface GoogleCloudVideointelligenceV1_SpeechTranscription {
            /**
             * May contain one or more recognition hypotheses (up to the maximum specified in `max_alternatives`). These alternatives are ordered in terms of accuracy, with the top (first)
             * alternative being the most probable, as ranked by the recognizer.
             */
            alternatives?: GoogleCloudVideointelligenceV1_SpeechRecognitionAlternative[];
            /**
             * Output only. The [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag of the language in this result. This language code was detected to have the most likelihood of
             * being spoken in the audio.
             */
            languageCode?: string;
        }
        interface GoogleCloudVideointelligenceV1_SpeechTranscriptionConfig {
            /** Optional. For file formats, such as MXF or MKV, supporting multiple audio tracks, specify up to two tracks. Default: track 0. */
            audioTracks?: number[];
            /** Optional. If set, specifies the estimated number of speakers in the conversation. If not set, defaults to '2'. Ignored unless enable_speaker_diarization is set to true. */
            diarizationSpeakerCount?: number;
            /**
             * Optional. If 'true', adds punctuation to recognition result hypotheses. This feature is only available in select languages. Setting this for requests in other languages has no
             * effect at all. The default 'false' value does not add punctuation to result hypotheses. NOTE: "This is currently offered as an experimental service, complimentary to all users. In
             * the future this may be exclusively available as a premium feature."
             */
            enableAutomaticPunctuation?: boolean;
            /**
             * Optional. If 'true', enables speaker detection for each recognized word in the top alternative of the recognition result using a speaker_tag provided in the WordInfo. Note: When
             * this is true, we send all the words from the beginning of the audio for the top alternative in every consecutive response. This is done in order to improve our speaker tags as our
             * models learn to identify the speakers in the conversation over time.
             */
            enableSpeakerDiarization?: boolean;
            /**
             * Optional. If `true`, the top result includes a list of words and the confidence for those words. If `false`, no word-level confidence information is returned. The default is
             * `false`.
             */
            enableWordConfidence?: boolean;
            /**
             * Optional. If set to `true`, the server will attempt to filter out profanities, replacing all but the initial character in each filtered word with asterisks, e.g. "f***". If set to
             * `false` or omitted, profanities won't be filtered out.
             */
            filterProfanity?: boolean;
            /**
             * Required. *Required* The language of the supplied audio as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US". See [Language
             * Support](https://cloud.google.com/speech/docs/languages) for a list of the currently supported language codes.
             */
            languageCode?: string;
            /**
             * Optional. Maximum number of recognition hypotheses to be returned. Specifically, the maximum number of `SpeechRecognitionAlternative` messages within each `SpeechTranscription`. The
             * server may return fewer than `max_alternatives`. Valid values are `0`-`30`. A value of `0` or `1` will return a maximum of one. If omitted, will return a maximum of one.
             */
            maxAlternatives?: number;
            /** Optional. A means to provide context to assist the speech recognition. */
            speechContexts?: GoogleCloudVideointelligenceV1_SpeechContext[];
        }
        interface GoogleCloudVideointelligenceV1_TextAnnotation {
            /** All video segments where OCR detected text appears. */
            segments?: GoogleCloudVideointelligenceV1_TextSegment[];
            /** The detected text. */
            text?: string;
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1_TextDetectionConfig {
            /**
             * Language hint can be specified if the language to be detected is known a priori. It can increase the accuracy of the detection. Language hint must be language code in BCP-47 format.
             * Automatic language detection is performed if no hint is provided.
             */
            languageHints?: string[];
            /** Model to use for text detection. Supported values: "builtin/stable" (the default if unset) and "builtin/latest". */
            model?: string;
        }
        interface GoogleCloudVideointelligenceV1_TextFrame {
            /** Bounding polygon of the detected text for this frame. */
            rotatedBoundingBox?: GoogleCloudVideointelligenceV1_NormalizedBoundingPoly;
            /** Timestamp of this frame. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1_TextSegment {
            /** Confidence for the track of detected text. It is calculated as the highest over all frames where OCR detected text appears. */
            confidence?: number;
            /** Information related to the frames where OCR detected text appears. */
            frames?: GoogleCloudVideointelligenceV1_TextFrame[];
            /** Video segment where a text snippet was detected. */
            segment?: GoogleCloudVideointelligenceV1_VideoSegment;
        }
        interface GoogleCloudVideointelligenceV1_TimestampedObject {
            /** Optional. The attributes of the object in the bounding box. */
            attributes?: GoogleCloudVideointelligenceV1_DetectedAttribute[];
            /** Optional. The detected landmarks. */
            landmarks?: GoogleCloudVideointelligenceV1_DetectedLandmark[];
            /** Normalized Bounding box in a frame, where the object is located. */
            normalizedBoundingBox?: GoogleCloudVideointelligenceV1_NormalizedBoundingBox;
            /** Time-offset, relative to the beginning of the video, corresponding to the video frame for this object. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1_Track {
            /** Optional. Attributes in the track level. */
            attributes?: GoogleCloudVideointelligenceV1_DetectedAttribute[];
            /** Optional. The confidence score of the tracked object. */
            confidence?: number;
            /** Video segment of a track. */
            segment?: GoogleCloudVideointelligenceV1_VideoSegment;
            /** The object with timestamp and attributes per frame in the track. */
            timestampedObjects?: GoogleCloudVideointelligenceV1_TimestampedObject[];
        }
        interface GoogleCloudVideointelligenceV1_VideoAnnotationProgress {
            /** Specifies which feature is being tracked if the request contains more than one feature. */
            feature?: string;
            /** Video file location in [Cloud Storage](https://cloud.google.com/storage/). */
            inputUri?: string;
            /** Approximate percentage processed thus far. Guaranteed to be 100 when fully processed. */
            progressPercent?: number;
            /** Specifies which segment is being tracked if the request contains more than one segment. */
            segment?: GoogleCloudVideointelligenceV1_VideoSegment;
            /** Time when the request was received. */
            startTime?: string;
            /** Time of the most recent update. */
            updateTime?: string;
        }
        interface GoogleCloudVideointelligenceV1_VideoAnnotationResults {
            /** If set, indicates an error. Note that for a single `AnnotateVideoRequest` some videos may succeed and some may fail. */
            error?: GoogleRpc_Status;
            /** Explicit content annotation. */
            explicitAnnotation?: GoogleCloudVideointelligenceV1_ExplicitContentAnnotation;
            /** Label annotations on frame level. There is exactly one element for each unique label. */
            frameLabelAnnotations?: GoogleCloudVideointelligenceV1_LabelAnnotation[];
            /** Video file location in [Cloud Storage](https://cloud.google.com/storage/). */
            inputUri?: string;
            /** Annotations for list of logos detected, tracked and recognized in video. */
            logoRecognitionAnnotations?: GoogleCloudVideointelligenceV1_LogoRecognitionAnnotation[];
            /** Annotations for list of objects detected and tracked in video. */
            objectAnnotations?: GoogleCloudVideointelligenceV1_ObjectTrackingAnnotation[];
            /** Video segment on which the annotation is run. */
            segment?: GoogleCloudVideointelligenceV1_VideoSegment;
            /** Topical label annotations on video level or user-specified segment level. There is exactly one element for each unique label. */
            segmentLabelAnnotations?: GoogleCloudVideointelligenceV1_LabelAnnotation[];
            /**
             * Presence label annotations on video level or user-specified segment level. There is exactly one element for each unique label. Compared to the existing topical
             * `segment_label_annotations`, this field presents more fine-grained, segment-level labels detected in video content and is made available only when the client sets
             * `LabelDetectionConfig.model` to "builtin/latest" in the request.
             */
            segmentPresenceLabelAnnotations?: GoogleCloudVideointelligenceV1_LabelAnnotation[];
            /** Shot annotations. Each shot is represented as a video segment. */
            shotAnnotations?: GoogleCloudVideointelligenceV1_VideoSegment[];
            /** Topical label annotations on shot level. There is exactly one element for each unique label. */
            shotLabelAnnotations?: GoogleCloudVideointelligenceV1_LabelAnnotation[];
            /**
             * Presence label annotations on shot level. There is exactly one element for each unique label. Compared to the existing topical `shot_label_annotations`, this field presents more
             * fine-grained, shot-level labels detected in video content and is made available only when the client sets `LabelDetectionConfig.model` to "builtin/latest" in the request.
             */
            shotPresenceLabelAnnotations?: GoogleCloudVideointelligenceV1_LabelAnnotation[];
            /** Speech transcription. */
            speechTranscriptions?: GoogleCloudVideointelligenceV1_SpeechTranscription[];
            /** OCR text detection and tracking. Annotations for list of detected text snippets. Each will have list of frame information associated with it. */
            textAnnotations?: GoogleCloudVideointelligenceV1_TextAnnotation[];
        }
        interface GoogleCloudVideointelligenceV1_VideoContext {
            /** Config for EXPLICIT_CONTENT_DETECTION. */
            explicitContentDetectionConfig?: GoogleCloudVideointelligenceV1_ExplicitContentDetectionConfig;
            /** Config for LABEL_DETECTION. */
            labelDetectionConfig?: GoogleCloudVideointelligenceV1_LabelDetectionConfig;
            /** Config for OBJECT_TRACKING. */
            objectTrackingConfig?: GoogleCloudVideointelligenceV1_ObjectTrackingConfig;
            /** Video segments to annotate. The segments may overlap and are not required to be contiguous or span the whole video. If unspecified, each video is treated as a single segment. */
            segments?: GoogleCloudVideointelligenceV1_VideoSegment[];
            /** Config for SHOT_CHANGE_DETECTION. */
            shotChangeDetectionConfig?: GoogleCloudVideointelligenceV1_ShotChangeDetectionConfig;
            /** Config for SPEECH_TRANSCRIPTION. */
            speechTranscriptionConfig?: GoogleCloudVideointelligenceV1_SpeechTranscriptionConfig;
            /** Config for TEXT_DETECTION. */
            textDetectionConfig?: GoogleCloudVideointelligenceV1_TextDetectionConfig;
        }
        interface GoogleCloudVideointelligenceV1_VideoSegment {
            /** Time-offset, relative to the beginning of the video, corresponding to the end of the segment (inclusive). */
            endTimeOffset?: string;
            /** Time-offset, relative to the beginning of the video, corresponding to the start of the segment (inclusive). */
            startTimeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1_WordInfo {
            /**
             * Output only. The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for
             * the top alternative. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating
             * `confidence` was not set.
             */
            confidence?: number;
            /**
             * Time offset relative to the beginning of the audio, and corresponding to the end of the spoken word. This field is only set if `enable_word_time_offsets=true` and only in the top
             * hypothesis. This is an experimental feature and the accuracy of the time offset can vary.
             */
            endTime?: string;
            /**
             * Output only. A distinct integer value is assigned for every speaker within the audio. This field specifies which one of those speakers was detected to have spoken this word. Value
             * ranges from 1 up to diarization_speaker_count, and is only set if speaker diarization is enabled.
             */
            speakerTag?: number;
            /**
             * Time offset relative to the beginning of the audio, and corresponding to the start of the spoken word. This field is only set if `enable_word_time_offsets=true` and only in the top
             * hypothesis. This is an experimental feature and the accuracy of the time offset can vary.
             */
            startTime?: string;
            /** The word corresponding to this set of information. */
            word?: string;
        }
        interface GoogleCloudVideointelligenceV1beta2_AnnotateVideoProgress {
            /** Progress metadata for all videos specified in `AnnotateVideoRequest`. */
            annotationProgress?: GoogleCloudVideointelligenceV1beta2_VideoAnnotationProgress[];
        }
        interface GoogleCloudVideointelligenceV1beta2_AnnotateVideoResponse {
            /** Annotation results for all videos specified in `AnnotateVideoRequest`. */
            annotationResults?: GoogleCloudVideointelligenceV1beta2_VideoAnnotationResults[];
        }
        interface GoogleCloudVideointelligenceV1beta2_DetectedAttribute {
            /** Detected attribute confidence. Range [0, 1]. */
            confidence?: number;
            /** The name of the attribute, for example, glasses, dark_glasses, mouth_open. A full list of supported type names will be provided in the document. */
            name?: string;
            /** Text value of the detection result. For example, the value for "HairColor" can be "black", "blonde", etc. */
            value?: string;
        }
        interface GoogleCloudVideointelligenceV1beta2_DetectedLandmark {
            /** The confidence score of the detected landmark. Range [0, 1]. */
            confidence?: number;
            /** The name of this landmark, for example, left_hand, right_shoulder. */
            name?: string;
            /** The 2D point of the detected landmark using the normalized image coordindate system. The normalized coordinates have the range from 0 to 1. */
            point?: GoogleCloudVideointelligenceV1beta2_NormalizedVertex;
        }
        interface GoogleCloudVideointelligenceV1beta2_Entity {
            /** Textual description, e.g., `Fixed-gear bicycle`. */
            description?: string;
            /** Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/). */
            entityId?: string;
            /** Language code for `description` in BCP-47 format. */
            languageCode?: string;
        }
        interface GoogleCloudVideointelligenceV1beta2_ExplicitContentAnnotation {
            /** All video frames where explicit content was detected. */
            frames?: GoogleCloudVideointelligenceV1beta2_ExplicitContentFrame[];
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1beta2_ExplicitContentFrame {
            /** Likelihood of the pornography content.. */
            pornographyLikelihood?: string;
            /** Time-offset, relative to the beginning of the video, corresponding to the video frame for this location. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1beta2_LabelAnnotation {
            /**
             * Common categories for the detected entity. For example, when the label is `Terrier`, the category is likely `dog`. And in some cases there might be more than one categories e.g.,
             * `Terrier` could also be a `pet`.
             */
            categoryEntities?: GoogleCloudVideointelligenceV1beta2_Entity[];
            /** Detected entity. */
            entity?: GoogleCloudVideointelligenceV1beta2_Entity;
            /** All video frames where a label was detected. */
            frames?: GoogleCloudVideointelligenceV1beta2_LabelFrame[];
            /** All video segments where a label was detected. */
            segments?: GoogleCloudVideointelligenceV1beta2_LabelSegment[];
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1beta2_LabelFrame {
            /** Confidence that the label is accurate. Range: [0, 1]. */
            confidence?: number;
            /** Time-offset, relative to the beginning of the video, corresponding to the video frame for this location. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1beta2_LabelSegment {
            /** Confidence that the label is accurate. Range: [0, 1]. */
            confidence?: number;
            /** Video segment where a label was detected. */
            segment?: GoogleCloudVideointelligenceV1beta2_VideoSegment;
        }
        interface GoogleCloudVideointelligenceV1beta2_LogoRecognitionAnnotation {
            /** Entity category information to specify the logo class that all the logo tracks within this LogoRecognitionAnnotation are recognized as. */
            entity?: GoogleCloudVideointelligenceV1beta2_Entity;
            /** All video segments where the recognized logo appears. There might be multiple instances of the same logo class appearing in one VideoSegment. */
            segments?: GoogleCloudVideointelligenceV1beta2_VideoSegment[];
            /** All logo tracks where the recognized logo appears. Each track corresponds to one logo instance appearing in consecutive frames. */
            tracks?: GoogleCloudVideointelligenceV1beta2_Track[];
        }
        interface GoogleCloudVideointelligenceV1beta2_NormalizedBoundingBox {
            /** Bottom Y coordinate. */
            bottom?: number;
            /** Left X coordinate. */
            left?: number;
            /** Right X coordinate. */
            right?: number;
            /** Top Y coordinate. */
            top?: number;
        }
        interface GoogleCloudVideointelligenceV1beta2_NormalizedBoundingPoly {
            /** Normalized vertices of the bounding polygon. */
            vertices?: GoogleCloudVideointelligenceV1beta2_NormalizedVertex[];
        }
        interface GoogleCloudVideointelligenceV1beta2_NormalizedVertex {
            /** X coordinate. */
            x?: number;
            /** Y coordinate. */
            y?: number;
        }
        interface GoogleCloudVideointelligenceV1beta2_ObjectTrackingAnnotation {
            /** Object category's labeling confidence of this track. */
            confidence?: number;
            /** Entity to specify the object category that this track is labeled as. */
            entity?: GoogleCloudVideointelligenceV1beta2_Entity;
            /**
             * Information corresponding to all frames where this object track appears. Non-streaming batch mode: it may be one or multiple ObjectTrackingFrame messages in frames. Streaming mode:
             * it can only be one ObjectTrackingFrame message in frames.
             */
            frames?: GoogleCloudVideointelligenceV1beta2_ObjectTrackingFrame[];
            /** Non-streaming batch mode ONLY. Each object track corresponds to one video segment where it appears. */
            segment?: GoogleCloudVideointelligenceV1beta2_VideoSegment;
            /**
             * Streaming mode ONLY. In streaming mode, we do not know the end time of a tracked object before it is completed. Hence, there is no VideoSegment info returned. Instead, we provide a
             * unique identifiable integer track_id so that the customers can correlate the results of the ongoing ObjectTrackAnnotation of the same track_id over time.
             */
            trackId?: string;
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1beta2_ObjectTrackingFrame {
            /** The normalized bounding box location of this object track for the frame. */
            normalizedBoundingBox?: GoogleCloudVideointelligenceV1beta2_NormalizedBoundingBox;
            /** The timestamp of the frame in microseconds. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1beta2_SpeechRecognitionAlternative {
            /**
             * Output only. The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for
             * the top alternative. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating
             * `confidence` was not set.
             */
            confidence?: number;
            /** Transcript text representing the words that the user spoke. */
            transcript?: string;
            /**
             * Output only. A list of word-specific information for each recognized word. Note: When `enable_speaker_diarization` is set to true, you will see all the words from the beginning of
             * the audio.
             */
            words?: GoogleCloudVideointelligenceV1beta2_WordInfo[];
        }
        interface GoogleCloudVideointelligenceV1beta2_SpeechTranscription {
            /**
             * May contain one or more recognition hypotheses (up to the maximum specified in `max_alternatives`). These alternatives are ordered in terms of accuracy, with the top (first)
             * alternative being the most probable, as ranked by the recognizer.
             */
            alternatives?: GoogleCloudVideointelligenceV1beta2_SpeechRecognitionAlternative[];
            /**
             * Output only. The [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag of the language in this result. This language code was detected to have the most likelihood of
             * being spoken in the audio.
             */
            languageCode?: string;
        }
        interface GoogleCloudVideointelligenceV1beta2_TextAnnotation {
            /** All video segments where OCR detected text appears. */
            segments?: GoogleCloudVideointelligenceV1beta2_TextSegment[];
            /** The detected text. */
            text?: string;
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1beta2_TextFrame {
            /** Bounding polygon of the detected text for this frame. */
            rotatedBoundingBox?: GoogleCloudVideointelligenceV1beta2_NormalizedBoundingPoly;
            /** Timestamp of this frame. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1beta2_TextSegment {
            /** Confidence for the track of detected text. It is calculated as the highest over all frames where OCR detected text appears. */
            confidence?: number;
            /** Information related to the frames where OCR detected text appears. */
            frames?: GoogleCloudVideointelligenceV1beta2_TextFrame[];
            /** Video segment where a text snippet was detected. */
            segment?: GoogleCloudVideointelligenceV1beta2_VideoSegment;
        }
        interface GoogleCloudVideointelligenceV1beta2_TimestampedObject {
            /** Optional. The attributes of the object in the bounding box. */
            attributes?: GoogleCloudVideointelligenceV1beta2_DetectedAttribute[];
            /** Optional. The detected landmarks. */
            landmarks?: GoogleCloudVideointelligenceV1beta2_DetectedLandmark[];
            /** Normalized Bounding box in a frame, where the object is located. */
            normalizedBoundingBox?: GoogleCloudVideointelligenceV1beta2_NormalizedBoundingBox;
            /** Time-offset, relative to the beginning of the video, corresponding to the video frame for this object. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1beta2_Track {
            /** Optional. Attributes in the track level. */
            attributes?: GoogleCloudVideointelligenceV1beta2_DetectedAttribute[];
            /** Optional. The confidence score of the tracked object. */
            confidence?: number;
            /** Video segment of a track. */
            segment?: GoogleCloudVideointelligenceV1beta2_VideoSegment;
            /** The object with timestamp and attributes per frame in the track. */
            timestampedObjects?: GoogleCloudVideointelligenceV1beta2_TimestampedObject[];
        }
        interface GoogleCloudVideointelligenceV1beta2_VideoAnnotationProgress {
            /** Specifies which feature is being tracked if the request contains more than one feature. */
            feature?: string;
            /** Video file location in [Cloud Storage](https://cloud.google.com/storage/). */
            inputUri?: string;
            /** Approximate percentage processed thus far. Guaranteed to be 100 when fully processed. */
            progressPercent?: number;
            /** Specifies which segment is being tracked if the request contains more than one segment. */
            segment?: GoogleCloudVideointelligenceV1beta2_VideoSegment;
            /** Time when the request was received. */
            startTime?: string;
            /** Time of the most recent update. */
            updateTime?: string;
        }
        interface GoogleCloudVideointelligenceV1beta2_VideoAnnotationResults {
            /** If set, indicates an error. Note that for a single `AnnotateVideoRequest` some videos may succeed and some may fail. */
            error?: GoogleRpc_Status;
            /** Explicit content annotation. */
            explicitAnnotation?: GoogleCloudVideointelligenceV1beta2_ExplicitContentAnnotation;
            /** Label annotations on frame level. There is exactly one element for each unique label. */
            frameLabelAnnotations?: GoogleCloudVideointelligenceV1beta2_LabelAnnotation[];
            /** Video file location in [Cloud Storage](https://cloud.google.com/storage/). */
            inputUri?: string;
            /** Annotations for list of logos detected, tracked and recognized in video. */
            logoRecognitionAnnotations?: GoogleCloudVideointelligenceV1beta2_LogoRecognitionAnnotation[];
            /** Annotations for list of objects detected and tracked in video. */
            objectAnnotations?: GoogleCloudVideointelligenceV1beta2_ObjectTrackingAnnotation[];
            /** Video segment on which the annotation is run. */
            segment?: GoogleCloudVideointelligenceV1beta2_VideoSegment;
            /** Topical label annotations on video level or user-specified segment level. There is exactly one element for each unique label. */
            segmentLabelAnnotations?: GoogleCloudVideointelligenceV1beta2_LabelAnnotation[];
            /**
             * Presence label annotations on video level or user-specified segment level. There is exactly one element for each unique label. Compared to the existing topical
             * `segment_label_annotations`, this field presents more fine-grained, segment-level labels detected in video content and is made available only when the client sets
             * `LabelDetectionConfig.model` to "builtin/latest" in the request.
             */
            segmentPresenceLabelAnnotations?: GoogleCloudVideointelligenceV1beta2_LabelAnnotation[];
            /** Shot annotations. Each shot is represented as a video segment. */
            shotAnnotations?: GoogleCloudVideointelligenceV1beta2_VideoSegment[];
            /** Topical label annotations on shot level. There is exactly one element for each unique label. */
            shotLabelAnnotations?: GoogleCloudVideointelligenceV1beta2_LabelAnnotation[];
            /**
             * Presence label annotations on shot level. There is exactly one element for each unique label. Compared to the existing topical `shot_label_annotations`, this field presents more
             * fine-grained, shot-level labels detected in video content and is made available only when the client sets `LabelDetectionConfig.model` to "builtin/latest" in the request.
             */
            shotPresenceLabelAnnotations?: GoogleCloudVideointelligenceV1beta2_LabelAnnotation[];
            /** Speech transcription. */
            speechTranscriptions?: GoogleCloudVideointelligenceV1beta2_SpeechTranscription[];
            /** OCR text detection and tracking. Annotations for list of detected text snippets. Each will have list of frame information associated with it. */
            textAnnotations?: GoogleCloudVideointelligenceV1beta2_TextAnnotation[];
        }
        interface GoogleCloudVideointelligenceV1beta2_VideoSegment {
            /** Time-offset, relative to the beginning of the video, corresponding to the end of the segment (inclusive). */
            endTimeOffset?: string;
            /** Time-offset, relative to the beginning of the video, corresponding to the start of the segment (inclusive). */
            startTimeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1beta2_WordInfo {
            /**
             * Output only. The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for
             * the top alternative. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating
             * `confidence` was not set.
             */
            confidence?: number;
            /**
             * Time offset relative to the beginning of the audio, and corresponding to the end of the spoken word. This field is only set if `enable_word_time_offsets=true` and only in the top
             * hypothesis. This is an experimental feature and the accuracy of the time offset can vary.
             */
            endTime?: string;
            /**
             * Output only. A distinct integer value is assigned for every speaker within the audio. This field specifies which one of those speakers was detected to have spoken this word. Value
             * ranges from 1 up to diarization_speaker_count, and is only set if speaker diarization is enabled.
             */
            speakerTag?: number;
            /**
             * Time offset relative to the beginning of the audio, and corresponding to the start of the spoken word. This field is only set if `enable_word_time_offsets=true` and only in the top
             * hypothesis. This is an experimental feature and the accuracy of the time offset can vary.
             */
            startTime?: string;
            /** The word corresponding to this set of information. */
            word?: string;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_AnnotateVideoProgress {
            /** Progress metadata for all videos specified in `AnnotateVideoRequest`. */
            annotationProgress?: GoogleCloudVideointelligenceV1p1beta1_VideoAnnotationProgress[];
        }
        interface GoogleCloudVideointelligenceV1p1beta1_AnnotateVideoResponse {
            /** Annotation results for all videos specified in `AnnotateVideoRequest`. */
            annotationResults?: GoogleCloudVideointelligenceV1p1beta1_VideoAnnotationResults[];
        }
        interface GoogleCloudVideointelligenceV1p1beta1_DetectedAttribute {
            /** Detected attribute confidence. Range [0, 1]. */
            confidence?: number;
            /** The name of the attribute, for example, glasses, dark_glasses, mouth_open. A full list of supported type names will be provided in the document. */
            name?: string;
            /** Text value of the detection result. For example, the value for "HairColor" can be "black", "blonde", etc. */
            value?: string;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_DetectedLandmark {
            /** The confidence score of the detected landmark. Range [0, 1]. */
            confidence?: number;
            /** The name of this landmark, for example, left_hand, right_shoulder. */
            name?: string;
            /** The 2D point of the detected landmark using the normalized image coordindate system. The normalized coordinates have the range from 0 to 1. */
            point?: GoogleCloudVideointelligenceV1p1beta1_NormalizedVertex;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_Entity {
            /** Textual description, e.g., `Fixed-gear bicycle`. */
            description?: string;
            /** Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/). */
            entityId?: string;
            /** Language code for `description` in BCP-47 format. */
            languageCode?: string;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_ExplicitContentAnnotation {
            /** All video frames where explicit content was detected. */
            frames?: GoogleCloudVideointelligenceV1p1beta1_ExplicitContentFrame[];
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_ExplicitContentFrame {
            /** Likelihood of the pornography content.. */
            pornographyLikelihood?: string;
            /** Time-offset, relative to the beginning of the video, corresponding to the video frame for this location. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_LabelAnnotation {
            /**
             * Common categories for the detected entity. For example, when the label is `Terrier`, the category is likely `dog`. And in some cases there might be more than one categories e.g.,
             * `Terrier` could also be a `pet`.
             */
            categoryEntities?: GoogleCloudVideointelligenceV1p1beta1_Entity[];
            /** Detected entity. */
            entity?: GoogleCloudVideointelligenceV1p1beta1_Entity;
            /** All video frames where a label was detected. */
            frames?: GoogleCloudVideointelligenceV1p1beta1_LabelFrame[];
            /** All video segments where a label was detected. */
            segments?: GoogleCloudVideointelligenceV1p1beta1_LabelSegment[];
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_LabelFrame {
            /** Confidence that the label is accurate. Range: [0, 1]. */
            confidence?: number;
            /** Time-offset, relative to the beginning of the video, corresponding to the video frame for this location. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_LabelSegment {
            /** Confidence that the label is accurate. Range: [0, 1]. */
            confidence?: number;
            /** Video segment where a label was detected. */
            segment?: GoogleCloudVideointelligenceV1p1beta1_VideoSegment;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_LogoRecognitionAnnotation {
            /** Entity category information to specify the logo class that all the logo tracks within this LogoRecognitionAnnotation are recognized as. */
            entity?: GoogleCloudVideointelligenceV1p1beta1_Entity;
            /** All video segments where the recognized logo appears. There might be multiple instances of the same logo class appearing in one VideoSegment. */
            segments?: GoogleCloudVideointelligenceV1p1beta1_VideoSegment[];
            /** All logo tracks where the recognized logo appears. Each track corresponds to one logo instance appearing in consecutive frames. */
            tracks?: GoogleCloudVideointelligenceV1p1beta1_Track[];
        }
        interface GoogleCloudVideointelligenceV1p1beta1_NormalizedBoundingBox {
            /** Bottom Y coordinate. */
            bottom?: number;
            /** Left X coordinate. */
            left?: number;
            /** Right X coordinate. */
            right?: number;
            /** Top Y coordinate. */
            top?: number;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_NormalizedBoundingPoly {
            /** Normalized vertices of the bounding polygon. */
            vertices?: GoogleCloudVideointelligenceV1p1beta1_NormalizedVertex[];
        }
        interface GoogleCloudVideointelligenceV1p1beta1_NormalizedVertex {
            /** X coordinate. */
            x?: number;
            /** Y coordinate. */
            y?: number;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_ObjectTrackingAnnotation {
            /** Object category's labeling confidence of this track. */
            confidence?: number;
            /** Entity to specify the object category that this track is labeled as. */
            entity?: GoogleCloudVideointelligenceV1p1beta1_Entity;
            /**
             * Information corresponding to all frames where this object track appears. Non-streaming batch mode: it may be one or multiple ObjectTrackingFrame messages in frames. Streaming mode:
             * it can only be one ObjectTrackingFrame message in frames.
             */
            frames?: GoogleCloudVideointelligenceV1p1beta1_ObjectTrackingFrame[];
            /** Non-streaming batch mode ONLY. Each object track corresponds to one video segment where it appears. */
            segment?: GoogleCloudVideointelligenceV1p1beta1_VideoSegment;
            /**
             * Streaming mode ONLY. In streaming mode, we do not know the end time of a tracked object before it is completed. Hence, there is no VideoSegment info returned. Instead, we provide a
             * unique identifiable integer track_id so that the customers can correlate the results of the ongoing ObjectTrackAnnotation of the same track_id over time.
             */
            trackId?: string;
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_ObjectTrackingFrame {
            /** The normalized bounding box location of this object track for the frame. */
            normalizedBoundingBox?: GoogleCloudVideointelligenceV1p1beta1_NormalizedBoundingBox;
            /** The timestamp of the frame in microseconds. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_SpeechRecognitionAlternative {
            /**
             * Output only. The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for
             * the top alternative. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating
             * `confidence` was not set.
             */
            confidence?: number;
            /** Transcript text representing the words that the user spoke. */
            transcript?: string;
            /**
             * Output only. A list of word-specific information for each recognized word. Note: When `enable_speaker_diarization` is set to true, you will see all the words from the beginning of
             * the audio.
             */
            words?: GoogleCloudVideointelligenceV1p1beta1_WordInfo[];
        }
        interface GoogleCloudVideointelligenceV1p1beta1_SpeechTranscription {
            /**
             * May contain one or more recognition hypotheses (up to the maximum specified in `max_alternatives`). These alternatives are ordered in terms of accuracy, with the top (first)
             * alternative being the most probable, as ranked by the recognizer.
             */
            alternatives?: GoogleCloudVideointelligenceV1p1beta1_SpeechRecognitionAlternative[];
            /**
             * Output only. The [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag of the language in this result. This language code was detected to have the most likelihood of
             * being spoken in the audio.
             */
            languageCode?: string;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_TextAnnotation {
            /** All video segments where OCR detected text appears. */
            segments?: GoogleCloudVideointelligenceV1p1beta1_TextSegment[];
            /** The detected text. */
            text?: string;
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_TextFrame {
            /** Bounding polygon of the detected text for this frame. */
            rotatedBoundingBox?: GoogleCloudVideointelligenceV1p1beta1_NormalizedBoundingPoly;
            /** Timestamp of this frame. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_TextSegment {
            /** Confidence for the track of detected text. It is calculated as the highest over all frames where OCR detected text appears. */
            confidence?: number;
            /** Information related to the frames where OCR detected text appears. */
            frames?: GoogleCloudVideointelligenceV1p1beta1_TextFrame[];
            /** Video segment where a text snippet was detected. */
            segment?: GoogleCloudVideointelligenceV1p1beta1_VideoSegment;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_TimestampedObject {
            /** Optional. The attributes of the object in the bounding box. */
            attributes?: GoogleCloudVideointelligenceV1p1beta1_DetectedAttribute[];
            /** Optional. The detected landmarks. */
            landmarks?: GoogleCloudVideointelligenceV1p1beta1_DetectedLandmark[];
            /** Normalized Bounding box in a frame, where the object is located. */
            normalizedBoundingBox?: GoogleCloudVideointelligenceV1p1beta1_NormalizedBoundingBox;
            /** Time-offset, relative to the beginning of the video, corresponding to the video frame for this object. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_Track {
            /** Optional. Attributes in the track level. */
            attributes?: GoogleCloudVideointelligenceV1p1beta1_DetectedAttribute[];
            /** Optional. The confidence score of the tracked object. */
            confidence?: number;
            /** Video segment of a track. */
            segment?: GoogleCloudVideointelligenceV1p1beta1_VideoSegment;
            /** The object with timestamp and attributes per frame in the track. */
            timestampedObjects?: GoogleCloudVideointelligenceV1p1beta1_TimestampedObject[];
        }
        interface GoogleCloudVideointelligenceV1p1beta1_VideoAnnotationProgress {
            /** Specifies which feature is being tracked if the request contains more than one feature. */
            feature?: string;
            /** Video file location in [Cloud Storage](https://cloud.google.com/storage/). */
            inputUri?: string;
            /** Approximate percentage processed thus far. Guaranteed to be 100 when fully processed. */
            progressPercent?: number;
            /** Specifies which segment is being tracked if the request contains more than one segment. */
            segment?: GoogleCloudVideointelligenceV1p1beta1_VideoSegment;
            /** Time when the request was received. */
            startTime?: string;
            /** Time of the most recent update. */
            updateTime?: string;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_VideoAnnotationResults {
            /** If set, indicates an error. Note that for a single `AnnotateVideoRequest` some videos may succeed and some may fail. */
            error?: GoogleRpc_Status;
            /** Explicit content annotation. */
            explicitAnnotation?: GoogleCloudVideointelligenceV1p1beta1_ExplicitContentAnnotation;
            /** Label annotations on frame level. There is exactly one element for each unique label. */
            frameLabelAnnotations?: GoogleCloudVideointelligenceV1p1beta1_LabelAnnotation[];
            /** Video file location in [Cloud Storage](https://cloud.google.com/storage/). */
            inputUri?: string;
            /** Annotations for list of logos detected, tracked and recognized in video. */
            logoRecognitionAnnotations?: GoogleCloudVideointelligenceV1p1beta1_LogoRecognitionAnnotation[];
            /** Annotations for list of objects detected and tracked in video. */
            objectAnnotations?: GoogleCloudVideointelligenceV1p1beta1_ObjectTrackingAnnotation[];
            /** Video segment on which the annotation is run. */
            segment?: GoogleCloudVideointelligenceV1p1beta1_VideoSegment;
            /** Topical label annotations on video level or user-specified segment level. There is exactly one element for each unique label. */
            segmentLabelAnnotations?: GoogleCloudVideointelligenceV1p1beta1_LabelAnnotation[];
            /**
             * Presence label annotations on video level or user-specified segment level. There is exactly one element for each unique label. Compared to the existing topical
             * `segment_label_annotations`, this field presents more fine-grained, segment-level labels detected in video content and is made available only when the client sets
             * `LabelDetectionConfig.model` to "builtin/latest" in the request.
             */
            segmentPresenceLabelAnnotations?: GoogleCloudVideointelligenceV1p1beta1_LabelAnnotation[];
            /** Shot annotations. Each shot is represented as a video segment. */
            shotAnnotations?: GoogleCloudVideointelligenceV1p1beta1_VideoSegment[];
            /** Topical label annotations on shot level. There is exactly one element for each unique label. */
            shotLabelAnnotations?: GoogleCloudVideointelligenceV1p1beta1_LabelAnnotation[];
            /**
             * Presence label annotations on shot level. There is exactly one element for each unique label. Compared to the existing topical `shot_label_annotations`, this field presents more
             * fine-grained, shot-level labels detected in video content and is made available only when the client sets `LabelDetectionConfig.model` to "builtin/latest" in the request.
             */
            shotPresenceLabelAnnotations?: GoogleCloudVideointelligenceV1p1beta1_LabelAnnotation[];
            /** Speech transcription. */
            speechTranscriptions?: GoogleCloudVideointelligenceV1p1beta1_SpeechTranscription[];
            /** OCR text detection and tracking. Annotations for list of detected text snippets. Each will have list of frame information associated with it. */
            textAnnotations?: GoogleCloudVideointelligenceV1p1beta1_TextAnnotation[];
        }
        interface GoogleCloudVideointelligenceV1p1beta1_VideoSegment {
            /** Time-offset, relative to the beginning of the video, corresponding to the end of the segment (inclusive). */
            endTimeOffset?: string;
            /** Time-offset, relative to the beginning of the video, corresponding to the start of the segment (inclusive). */
            startTimeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p1beta1_WordInfo {
            /**
             * Output only. The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for
             * the top alternative. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating
             * `confidence` was not set.
             */
            confidence?: number;
            /**
             * Time offset relative to the beginning of the audio, and corresponding to the end of the spoken word. This field is only set if `enable_word_time_offsets=true` and only in the top
             * hypothesis. This is an experimental feature and the accuracy of the time offset can vary.
             */
            endTime?: string;
            /**
             * Output only. A distinct integer value is assigned for every speaker within the audio. This field specifies which one of those speakers was detected to have spoken this word. Value
             * ranges from 1 up to diarization_speaker_count, and is only set if speaker diarization is enabled.
             */
            speakerTag?: number;
            /**
             * Time offset relative to the beginning of the audio, and corresponding to the start of the spoken word. This field is only set if `enable_word_time_offsets=true` and only in the top
             * hypothesis. This is an experimental feature and the accuracy of the time offset can vary.
             */
            startTime?: string;
            /** The word corresponding to this set of information. */
            word?: string;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_AnnotateVideoProgress {
            /** Progress metadata for all videos specified in `AnnotateVideoRequest`. */
            annotationProgress?: GoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress[];
        }
        interface GoogleCloudVideointelligenceV1p2beta1_AnnotateVideoResponse {
            /** Annotation results for all videos specified in `AnnotateVideoRequest`. */
            annotationResults?: GoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults[];
        }
        interface GoogleCloudVideointelligenceV1p2beta1_DetectedAttribute {
            /** Detected attribute confidence. Range [0, 1]. */
            confidence?: number;
            /** The name of the attribute, for example, glasses, dark_glasses, mouth_open. A full list of supported type names will be provided in the document. */
            name?: string;
            /** Text value of the detection result. For example, the value for "HairColor" can be "black", "blonde", etc. */
            value?: string;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_DetectedLandmark {
            /** The confidence score of the detected landmark. Range [0, 1]. */
            confidence?: number;
            /** The name of this landmark, for example, left_hand, right_shoulder. */
            name?: string;
            /** The 2D point of the detected landmark using the normalized image coordindate system. The normalized coordinates have the range from 0 to 1. */
            point?: GoogleCloudVideointelligenceV1p2beta1_NormalizedVertex;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_Entity {
            /** Textual description, e.g., `Fixed-gear bicycle`. */
            description?: string;
            /** Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/). */
            entityId?: string;
            /** Language code for `description` in BCP-47 format. */
            languageCode?: string;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_ExplicitContentAnnotation {
            /** All video frames where explicit content was detected. */
            frames?: GoogleCloudVideointelligenceV1p2beta1_ExplicitContentFrame[];
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_ExplicitContentFrame {
            /** Likelihood of the pornography content.. */
            pornographyLikelihood?: string;
            /** Time-offset, relative to the beginning of the video, corresponding to the video frame for this location. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_LabelAnnotation {
            /**
             * Common categories for the detected entity. For example, when the label is `Terrier`, the category is likely `dog`. And in some cases there might be more than one categories e.g.,
             * `Terrier` could also be a `pet`.
             */
            categoryEntities?: GoogleCloudVideointelligenceV1p2beta1_Entity[];
            /** Detected entity. */
            entity?: GoogleCloudVideointelligenceV1p2beta1_Entity;
            /** All video frames where a label was detected. */
            frames?: GoogleCloudVideointelligenceV1p2beta1_LabelFrame[];
            /** All video segments where a label was detected. */
            segments?: GoogleCloudVideointelligenceV1p2beta1_LabelSegment[];
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_LabelFrame {
            /** Confidence that the label is accurate. Range: [0, 1]. */
            confidence?: number;
            /** Time-offset, relative to the beginning of the video, corresponding to the video frame for this location. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_LabelSegment {
            /** Confidence that the label is accurate. Range: [0, 1]. */
            confidence?: number;
            /** Video segment where a label was detected. */
            segment?: GoogleCloudVideointelligenceV1p2beta1_VideoSegment;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_LogoRecognitionAnnotation {
            /** Entity category information to specify the logo class that all the logo tracks within this LogoRecognitionAnnotation are recognized as. */
            entity?: GoogleCloudVideointelligenceV1p2beta1_Entity;
            /** All video segments where the recognized logo appears. There might be multiple instances of the same logo class appearing in one VideoSegment. */
            segments?: GoogleCloudVideointelligenceV1p2beta1_VideoSegment[];
            /** All logo tracks where the recognized logo appears. Each track corresponds to one logo instance appearing in consecutive frames. */
            tracks?: GoogleCloudVideointelligenceV1p2beta1_Track[];
        }
        interface GoogleCloudVideointelligenceV1p2beta1_NormalizedBoundingBox {
            /** Bottom Y coordinate. */
            bottom?: number;
            /** Left X coordinate. */
            left?: number;
            /** Right X coordinate. */
            right?: number;
            /** Top Y coordinate. */
            top?: number;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_NormalizedBoundingPoly {
            /** Normalized vertices of the bounding polygon. */
            vertices?: GoogleCloudVideointelligenceV1p2beta1_NormalizedVertex[];
        }
        interface GoogleCloudVideointelligenceV1p2beta1_NormalizedVertex {
            /** X coordinate. */
            x?: number;
            /** Y coordinate. */
            y?: number;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_ObjectTrackingAnnotation {
            /** Object category's labeling confidence of this track. */
            confidence?: number;
            /** Entity to specify the object category that this track is labeled as. */
            entity?: GoogleCloudVideointelligenceV1p2beta1_Entity;
            /**
             * Information corresponding to all frames where this object track appears. Non-streaming batch mode: it may be one or multiple ObjectTrackingFrame messages in frames. Streaming mode:
             * it can only be one ObjectTrackingFrame message in frames.
             */
            frames?: GoogleCloudVideointelligenceV1p2beta1_ObjectTrackingFrame[];
            /** Non-streaming batch mode ONLY. Each object track corresponds to one video segment where it appears. */
            segment?: GoogleCloudVideointelligenceV1p2beta1_VideoSegment;
            /**
             * Streaming mode ONLY. In streaming mode, we do not know the end time of a tracked object before it is completed. Hence, there is no VideoSegment info returned. Instead, we provide a
             * unique identifiable integer track_id so that the customers can correlate the results of the ongoing ObjectTrackAnnotation of the same track_id over time.
             */
            trackId?: string;
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_ObjectTrackingFrame {
            /** The normalized bounding box location of this object track for the frame. */
            normalizedBoundingBox?: GoogleCloudVideointelligenceV1p2beta1_NormalizedBoundingBox;
            /** The timestamp of the frame in microseconds. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_SpeechRecognitionAlternative {
            /**
             * Output only. The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for
             * the top alternative. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating
             * `confidence` was not set.
             */
            confidence?: number;
            /** Transcript text representing the words that the user spoke. */
            transcript?: string;
            /**
             * Output only. A list of word-specific information for each recognized word. Note: When `enable_speaker_diarization` is set to true, you will see all the words from the beginning of
             * the audio.
             */
            words?: GoogleCloudVideointelligenceV1p2beta1_WordInfo[];
        }
        interface GoogleCloudVideointelligenceV1p2beta1_SpeechTranscription {
            /**
             * May contain one or more recognition hypotheses (up to the maximum specified in `max_alternatives`). These alternatives are ordered in terms of accuracy, with the top (first)
             * alternative being the most probable, as ranked by the recognizer.
             */
            alternatives?: GoogleCloudVideointelligenceV1p2beta1_SpeechRecognitionAlternative[];
            /**
             * Output only. The [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag of the language in this result. This language code was detected to have the most likelihood of
             * being spoken in the audio.
             */
            languageCode?: string;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_TextAnnotation {
            /** All video segments where OCR detected text appears. */
            segments?: GoogleCloudVideointelligenceV1p2beta1_TextSegment[];
            /** The detected text. */
            text?: string;
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_TextFrame {
            /** Bounding polygon of the detected text for this frame. */
            rotatedBoundingBox?: GoogleCloudVideointelligenceV1p2beta1_NormalizedBoundingPoly;
            /** Timestamp of this frame. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_TextSegment {
            /** Confidence for the track of detected text. It is calculated as the highest over all frames where OCR detected text appears. */
            confidence?: number;
            /** Information related to the frames where OCR detected text appears. */
            frames?: GoogleCloudVideointelligenceV1p2beta1_TextFrame[];
            /** Video segment where a text snippet was detected. */
            segment?: GoogleCloudVideointelligenceV1p2beta1_VideoSegment;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_TimestampedObject {
            /** Optional. The attributes of the object in the bounding box. */
            attributes?: GoogleCloudVideointelligenceV1p2beta1_DetectedAttribute[];
            /** Optional. The detected landmarks. */
            landmarks?: GoogleCloudVideointelligenceV1p2beta1_DetectedLandmark[];
            /** Normalized Bounding box in a frame, where the object is located. */
            normalizedBoundingBox?: GoogleCloudVideointelligenceV1p2beta1_NormalizedBoundingBox;
            /** Time-offset, relative to the beginning of the video, corresponding to the video frame for this object. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_Track {
            /** Optional. Attributes in the track level. */
            attributes?: GoogleCloudVideointelligenceV1p2beta1_DetectedAttribute[];
            /** Optional. The confidence score of the tracked object. */
            confidence?: number;
            /** Video segment of a track. */
            segment?: GoogleCloudVideointelligenceV1p2beta1_VideoSegment;
            /** The object with timestamp and attributes per frame in the track. */
            timestampedObjects?: GoogleCloudVideointelligenceV1p2beta1_TimestampedObject[];
        }
        interface GoogleCloudVideointelligenceV1p2beta1_VideoAnnotationProgress {
            /** Specifies which feature is being tracked if the request contains more than one feature. */
            feature?: string;
            /** Video file location in [Cloud Storage](https://cloud.google.com/storage/). */
            inputUri?: string;
            /** Approximate percentage processed thus far. Guaranteed to be 100 when fully processed. */
            progressPercent?: number;
            /** Specifies which segment is being tracked if the request contains more than one segment. */
            segment?: GoogleCloudVideointelligenceV1p2beta1_VideoSegment;
            /** Time when the request was received. */
            startTime?: string;
            /** Time of the most recent update. */
            updateTime?: string;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_VideoAnnotationResults {
            /** If set, indicates an error. Note that for a single `AnnotateVideoRequest` some videos may succeed and some may fail. */
            error?: GoogleRpc_Status;
            /** Explicit content annotation. */
            explicitAnnotation?: GoogleCloudVideointelligenceV1p2beta1_ExplicitContentAnnotation;
            /** Label annotations on frame level. There is exactly one element for each unique label. */
            frameLabelAnnotations?: GoogleCloudVideointelligenceV1p2beta1_LabelAnnotation[];
            /** Video file location in [Cloud Storage](https://cloud.google.com/storage/). */
            inputUri?: string;
            /** Annotations for list of logos detected, tracked and recognized in video. */
            logoRecognitionAnnotations?: GoogleCloudVideointelligenceV1p2beta1_LogoRecognitionAnnotation[];
            /** Annotations for list of objects detected and tracked in video. */
            objectAnnotations?: GoogleCloudVideointelligenceV1p2beta1_ObjectTrackingAnnotation[];
            /** Video segment on which the annotation is run. */
            segment?: GoogleCloudVideointelligenceV1p2beta1_VideoSegment;
            /** Topical label annotations on video level or user-specified segment level. There is exactly one element for each unique label. */
            segmentLabelAnnotations?: GoogleCloudVideointelligenceV1p2beta1_LabelAnnotation[];
            /**
             * Presence label annotations on video level or user-specified segment level. There is exactly one element for each unique label. Compared to the existing topical
             * `segment_label_annotations`, this field presents more fine-grained, segment-level labels detected in video content and is made available only when the client sets
             * `LabelDetectionConfig.model` to "builtin/latest" in the request.
             */
            segmentPresenceLabelAnnotations?: GoogleCloudVideointelligenceV1p2beta1_LabelAnnotation[];
            /** Shot annotations. Each shot is represented as a video segment. */
            shotAnnotations?: GoogleCloudVideointelligenceV1p2beta1_VideoSegment[];
            /** Topical label annotations on shot level. There is exactly one element for each unique label. */
            shotLabelAnnotations?: GoogleCloudVideointelligenceV1p2beta1_LabelAnnotation[];
            /**
             * Presence label annotations on shot level. There is exactly one element for each unique label. Compared to the existing topical `shot_label_annotations`, this field presents more
             * fine-grained, shot-level labels detected in video content and is made available only when the client sets `LabelDetectionConfig.model` to "builtin/latest" in the request.
             */
            shotPresenceLabelAnnotations?: GoogleCloudVideointelligenceV1p2beta1_LabelAnnotation[];
            /** Speech transcription. */
            speechTranscriptions?: GoogleCloudVideointelligenceV1p2beta1_SpeechTranscription[];
            /** OCR text detection and tracking. Annotations for list of detected text snippets. Each will have list of frame information associated with it. */
            textAnnotations?: GoogleCloudVideointelligenceV1p2beta1_TextAnnotation[];
        }
        interface GoogleCloudVideointelligenceV1p2beta1_VideoSegment {
            /** Time-offset, relative to the beginning of the video, corresponding to the end of the segment (inclusive). */
            endTimeOffset?: string;
            /** Time-offset, relative to the beginning of the video, corresponding to the start of the segment (inclusive). */
            startTimeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p2beta1_WordInfo {
            /**
             * Output only. The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for
             * the top alternative. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating
             * `confidence` was not set.
             */
            confidence?: number;
            /**
             * Time offset relative to the beginning of the audio, and corresponding to the end of the spoken word. This field is only set if `enable_word_time_offsets=true` and only in the top
             * hypothesis. This is an experimental feature and the accuracy of the time offset can vary.
             */
            endTime?: string;
            /**
             * Output only. A distinct integer value is assigned for every speaker within the audio. This field specifies which one of those speakers was detected to have spoken this word. Value
             * ranges from 1 up to diarization_speaker_count, and is only set if speaker diarization is enabled.
             */
            speakerTag?: number;
            /**
             * Time offset relative to the beginning of the audio, and corresponding to the start of the spoken word. This field is only set if `enable_word_time_offsets=true` and only in the top
             * hypothesis. This is an experimental feature and the accuracy of the time offset can vary.
             */
            startTime?: string;
            /** The word corresponding to this set of information. */
            word?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_AnnotateVideoProgress {
            /** Progress metadata for all videos specified in `AnnotateVideoRequest`. */
            annotationProgress?: GoogleCloudVideointelligenceV1p3beta1_VideoAnnotationProgress[];
        }
        interface GoogleCloudVideointelligenceV1p3beta1_AnnotateVideoResponse {
            /** Annotation results for all videos specified in `AnnotateVideoRequest`. */
            annotationResults?: GoogleCloudVideointelligenceV1p3beta1_VideoAnnotationResults[];
        }
        interface GoogleCloudVideointelligenceV1p3beta1_Celebrity {
            /** Textual description of additional information about the celebrity, if applicable. */
            description?: string;
            /** The celebrity name. */
            displayName?: string;
            /**
             * The resource name of the celebrity. Have the format `video-intelligence/kg-mid` indicates a celebrity from preloaded gallery. kg-mid is the id in Google knowledge graph, which is
             * unique for the celebrity.
             */
            name?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_CelebrityRecognitionAnnotation {
            /** The tracks detected from the input video, including recognized celebrities and other detected faces in the video. */
            celebrityTracks?: GoogleCloudVideointelligenceV1p3beta1_CelebrityTrack[];
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_CelebrityTrack {
            /** Top N match of the celebrities for the face in this track. */
            celebrities?: GoogleCloudVideointelligenceV1p3beta1_RecognizedCelebrity[];
            /** A track of a person's face. */
            faceTrack?: GoogleCloudVideointelligenceV1p3beta1_Track;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_DetectedAttribute {
            /** Detected attribute confidence. Range [0, 1]. */
            confidence?: number;
            /** The name of the attribute, for example, glasses, dark_glasses, mouth_open. A full list of supported type names will be provided in the document. */
            name?: string;
            /** Text value of the detection result. For example, the value for "HairColor" can be "black", "blonde", etc. */
            value?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_DetectedLandmark {
            /** The confidence score of the detected landmark. Range [0, 1]. */
            confidence?: number;
            /** The name of this landmark, for example, left_hand, right_shoulder. */
            name?: string;
            /** The 2D point of the detected landmark using the normalized image coordindate system. The normalized coordinates have the range from 0 to 1. */
            point?: GoogleCloudVideointelligenceV1p3beta1_NormalizedVertex;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_Entity {
            /** Textual description, e.g., `Fixed-gear bicycle`. */
            description?: string;
            /** Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/). */
            entityId?: string;
            /** Language code for `description` in BCP-47 format. */
            languageCode?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_ExplicitContentAnnotation {
            /** All video frames where explicit content was detected. */
            frames?: GoogleCloudVideointelligenceV1p3beta1_ExplicitContentFrame[];
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_ExplicitContentFrame {
            /** Likelihood of the pornography content.. */
            pornographyLikelihood?: string;
            /** Time-offset, relative to the beginning of the video, corresponding to the video frame for this location. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_FaceDetectionAnnotation {
            /** The thumbnail of a person's face. */
            thumbnail?: string;
            /** The face tracks with attributes. */
            tracks?: GoogleCloudVideointelligenceV1p3beta1_Track[];
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_LabelAnnotation {
            /**
             * Common categories for the detected entity. For example, when the label is `Terrier`, the category is likely `dog`. And in some cases there might be more than one categories e.g.,
             * `Terrier` could also be a `pet`.
             */
            categoryEntities?: GoogleCloudVideointelligenceV1p3beta1_Entity[];
            /** Detected entity. */
            entity?: GoogleCloudVideointelligenceV1p3beta1_Entity;
            /** All video frames where a label was detected. */
            frames?: GoogleCloudVideointelligenceV1p3beta1_LabelFrame[];
            /** All video segments where a label was detected. */
            segments?: GoogleCloudVideointelligenceV1p3beta1_LabelSegment[];
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_LabelFrame {
            /** Confidence that the label is accurate. Range: [0, 1]. */
            confidence?: number;
            /** Time-offset, relative to the beginning of the video, corresponding to the video frame for this location. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_LabelSegment {
            /** Confidence that the label is accurate. Range: [0, 1]. */
            confidence?: number;
            /** Video segment where a label was detected. */
            segment?: GoogleCloudVideointelligenceV1p3beta1_VideoSegment;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_LogoRecognitionAnnotation {
            /** Entity category information to specify the logo class that all the logo tracks within this LogoRecognitionAnnotation are recognized as. */
            entity?: GoogleCloudVideointelligenceV1p3beta1_Entity;
            /** All video segments where the recognized logo appears. There might be multiple instances of the same logo class appearing in one VideoSegment. */
            segments?: GoogleCloudVideointelligenceV1p3beta1_VideoSegment[];
            /** All logo tracks where the recognized logo appears. Each track corresponds to one logo instance appearing in consecutive frames. */
            tracks?: GoogleCloudVideointelligenceV1p3beta1_Track[];
        }
        interface GoogleCloudVideointelligenceV1p3beta1_NormalizedBoundingBox {
            /** Bottom Y coordinate. */
            bottom?: number;
            /** Left X coordinate. */
            left?: number;
            /** Right X coordinate. */
            right?: number;
            /** Top Y coordinate. */
            top?: number;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_NormalizedBoundingPoly {
            /** Normalized vertices of the bounding polygon. */
            vertices?: GoogleCloudVideointelligenceV1p3beta1_NormalizedVertex[];
        }
        interface GoogleCloudVideointelligenceV1p3beta1_NormalizedVertex {
            /** X coordinate. */
            x?: number;
            /** Y coordinate. */
            y?: number;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_ObjectTrackingAnnotation {
            /** Object category's labeling confidence of this track. */
            confidence?: number;
            /** Entity to specify the object category that this track is labeled as. */
            entity?: GoogleCloudVideointelligenceV1p3beta1_Entity;
            /**
             * Information corresponding to all frames where this object track appears. Non-streaming batch mode: it may be one or multiple ObjectTrackingFrame messages in frames. Streaming mode:
             * it can only be one ObjectTrackingFrame message in frames.
             */
            frames?: GoogleCloudVideointelligenceV1p3beta1_ObjectTrackingFrame[];
            /** Non-streaming batch mode ONLY. Each object track corresponds to one video segment where it appears. */
            segment?: GoogleCloudVideointelligenceV1p3beta1_VideoSegment;
            /**
             * Streaming mode ONLY. In streaming mode, we do not know the end time of a tracked object before it is completed. Hence, there is no VideoSegment info returned. Instead, we provide a
             * unique identifiable integer track_id so that the customers can correlate the results of the ongoing ObjectTrackAnnotation of the same track_id over time.
             */
            trackId?: string;
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_ObjectTrackingFrame {
            /** The normalized bounding box location of this object track for the frame. */
            normalizedBoundingBox?: GoogleCloudVideointelligenceV1p3beta1_NormalizedBoundingBox;
            /** The timestamp of the frame in microseconds. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_PersonDetectionAnnotation {
            /** The detected tracks of a person. */
            tracks?: GoogleCloudVideointelligenceV1p3beta1_Track[];
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_RecognizedCelebrity {
            /** The recognized celebrity. */
            celebrity?: GoogleCloudVideointelligenceV1p3beta1_Celebrity;
            /** Recognition confidence. Range [0, 1]. */
            confidence?: number;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_SpeechRecognitionAlternative {
            /**
             * Output only. The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for
             * the top alternative. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating
             * `confidence` was not set.
             */
            confidence?: number;
            /** Transcript text representing the words that the user spoke. */
            transcript?: string;
            /**
             * Output only. A list of word-specific information for each recognized word. Note: When `enable_speaker_diarization` is set to true, you will see all the words from the beginning of
             * the audio.
             */
            words?: GoogleCloudVideointelligenceV1p3beta1_WordInfo[];
        }
        interface GoogleCloudVideointelligenceV1p3beta1_SpeechTranscription {
            /**
             * May contain one or more recognition hypotheses (up to the maximum specified in `max_alternatives`). These alternatives are ordered in terms of accuracy, with the top (first)
             * alternative being the most probable, as ranked by the recognizer.
             */
            alternatives?: GoogleCloudVideointelligenceV1p3beta1_SpeechRecognitionAlternative[];
            /**
             * Output only. The [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag of the language in this result. This language code was detected to have the most likelihood of
             * being spoken in the audio.
             */
            languageCode?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_StreamingAnnotateVideoResponse {
            /** Streaming annotation results. */
            annotationResults?: GoogleCloudVideointelligenceV1p3beta1_StreamingVideoAnnotationResults;
            /**
             * Google Cloud Storage URI that stores annotation results of one streaming session in JSON format. It is the annotation_result_storage_directory from the request followed by
             * '/cloud_project_number-session_id'.
             */
            annotationResultsUri?: string;
            /** If set, returns a google.rpc.Status message that specifies the error for the operation. */
            error?: GoogleRpc_Status;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_StreamingVideoAnnotationResults {
            /** Explicit content annotation results. */
            explicitAnnotation?: GoogleCloudVideointelligenceV1p3beta1_ExplicitContentAnnotation;
            /** Label annotation results. */
            labelAnnotations?: GoogleCloudVideointelligenceV1p3beta1_LabelAnnotation[];
            /** Object tracking results. */
            objectAnnotations?: GoogleCloudVideointelligenceV1p3beta1_ObjectTrackingAnnotation[];
            /** Shot annotation results. Each shot is represented as a video segment. */
            shotAnnotations?: GoogleCloudVideointelligenceV1p3beta1_VideoSegment[];
        }
        interface GoogleCloudVideointelligenceV1p3beta1_TextAnnotation {
            /** All video segments where OCR detected text appears. */
            segments?: GoogleCloudVideointelligenceV1p3beta1_TextSegment[];
            /** The detected text. */
            text?: string;
            /** Feature version. */
            version?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_TextFrame {
            /** Bounding polygon of the detected text for this frame. */
            rotatedBoundingBox?: GoogleCloudVideointelligenceV1p3beta1_NormalizedBoundingPoly;
            /** Timestamp of this frame. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_TextSegment {
            /** Confidence for the track of detected text. It is calculated as the highest over all frames where OCR detected text appears. */
            confidence?: number;
            /** Information related to the frames where OCR detected text appears. */
            frames?: GoogleCloudVideointelligenceV1p3beta1_TextFrame[];
            /** Video segment where a text snippet was detected. */
            segment?: GoogleCloudVideointelligenceV1p3beta1_VideoSegment;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_TimestampedObject {
            /** Optional. The attributes of the object in the bounding box. */
            attributes?: GoogleCloudVideointelligenceV1p3beta1_DetectedAttribute[];
            /** Optional. The detected landmarks. */
            landmarks?: GoogleCloudVideointelligenceV1p3beta1_DetectedLandmark[];
            /** Normalized Bounding box in a frame, where the object is located. */
            normalizedBoundingBox?: GoogleCloudVideointelligenceV1p3beta1_NormalizedBoundingBox;
            /** Time-offset, relative to the beginning of the video, corresponding to the video frame for this object. */
            timeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_Track {
            /** Optional. Attributes in the track level. */
            attributes?: GoogleCloudVideointelligenceV1p3beta1_DetectedAttribute[];
            /** Optional. The confidence score of the tracked object. */
            confidence?: number;
            /** Video segment of a track. */
            segment?: GoogleCloudVideointelligenceV1p3beta1_VideoSegment;
            /** The object with timestamp and attributes per frame in the track. */
            timestampedObjects?: GoogleCloudVideointelligenceV1p3beta1_TimestampedObject[];
        }
        interface GoogleCloudVideointelligenceV1p3beta1_VideoAnnotationProgress {
            /** Specifies which feature is being tracked if the request contains more than one feature. */
            feature?: string;
            /** Video file location in [Cloud Storage](https://cloud.google.com/storage/). */
            inputUri?: string;
            /** Approximate percentage processed thus far. Guaranteed to be 100 when fully processed. */
            progressPercent?: number;
            /** Specifies which segment is being tracked if the request contains more than one segment. */
            segment?: GoogleCloudVideointelligenceV1p3beta1_VideoSegment;
            /** Time when the request was received. */
            startTime?: string;
            /** Time of the most recent update. */
            updateTime?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_VideoAnnotationResults {
            /** Celebrity recognition annotations. */
            celebrityRecognitionAnnotations?: GoogleCloudVideointelligenceV1p3beta1_CelebrityRecognitionAnnotation;
            /** If set, indicates an error. Note that for a single `AnnotateVideoRequest` some videos may succeed and some may fail. */
            error?: GoogleRpc_Status;
            /** Explicit content annotation. */
            explicitAnnotation?: GoogleCloudVideointelligenceV1p3beta1_ExplicitContentAnnotation;
            /** Face detection annotations. */
            faceDetectionAnnotations?: GoogleCloudVideointelligenceV1p3beta1_FaceDetectionAnnotation[];
            /** Label annotations on frame level. There is exactly one element for each unique label. */
            frameLabelAnnotations?: GoogleCloudVideointelligenceV1p3beta1_LabelAnnotation[];
            /** Video file location in [Cloud Storage](https://cloud.google.com/storage/). */
            inputUri?: string;
            /** Annotations for list of logos detected, tracked and recognized in video. */
            logoRecognitionAnnotations?: GoogleCloudVideointelligenceV1p3beta1_LogoRecognitionAnnotation[];
            /** Annotations for list of objects detected and tracked in video. */
            objectAnnotations?: GoogleCloudVideointelligenceV1p3beta1_ObjectTrackingAnnotation[];
            /** Person detection annotations. */
            personDetectionAnnotations?: GoogleCloudVideointelligenceV1p3beta1_PersonDetectionAnnotation[];
            /** Video segment on which the annotation is run. */
            segment?: GoogleCloudVideointelligenceV1p3beta1_VideoSegment;
            /** Topical label annotations on video level or user-specified segment level. There is exactly one element for each unique label. */
            segmentLabelAnnotations?: GoogleCloudVideointelligenceV1p3beta1_LabelAnnotation[];
            /**
             * Presence label annotations on video level or user-specified segment level. There is exactly one element for each unique label. Compared to the existing topical
             * `segment_label_annotations`, this field presents more fine-grained, segment-level labels detected in video content and is made available only when the client sets
             * `LabelDetectionConfig.model` to "builtin/latest" in the request.
             */
            segmentPresenceLabelAnnotations?: GoogleCloudVideointelligenceV1p3beta1_LabelAnnotation[];
            /** Shot annotations. Each shot is represented as a video segment. */
            shotAnnotations?: GoogleCloudVideointelligenceV1p3beta1_VideoSegment[];
            /** Topical label annotations on shot level. There is exactly one element for each unique label. */
            shotLabelAnnotations?: GoogleCloudVideointelligenceV1p3beta1_LabelAnnotation[];
            /**
             * Presence label annotations on shot level. There is exactly one element for each unique label. Compared to the existing topical `shot_label_annotations`, this field presents more
             * fine-grained, shot-level labels detected in video content and is made available only when the client sets `LabelDetectionConfig.model` to "builtin/latest" in the request.
             */
            shotPresenceLabelAnnotations?: GoogleCloudVideointelligenceV1p3beta1_LabelAnnotation[];
            /** Speech transcription. */
            speechTranscriptions?: GoogleCloudVideointelligenceV1p3beta1_SpeechTranscription[];
            /** OCR text detection and tracking. Annotations for list of detected text snippets. Each will have list of frame information associated with it. */
            textAnnotations?: GoogleCloudVideointelligenceV1p3beta1_TextAnnotation[];
        }
        interface GoogleCloudVideointelligenceV1p3beta1_VideoSegment {
            /** Time-offset, relative to the beginning of the video, corresponding to the end of the segment (inclusive). */
            endTimeOffset?: string;
            /** Time-offset, relative to the beginning of the video, corresponding to the start of the segment (inclusive). */
            startTimeOffset?: string;
        }
        interface GoogleCloudVideointelligenceV1p3beta1_WordInfo {
            /**
             * Output only. The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for
             * the top alternative. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating
             * `confidence` was not set.
             */
            confidence?: number;
            /**
             * Time offset relative to the beginning of the audio, and corresponding to the end of the spoken word. This field is only set if `enable_word_time_offsets=true` and only in the top
             * hypothesis. This is an experimental feature and the accuracy of the time offset can vary.
             */
            endTime?: string;
            /**
             * Output only. A distinct integer value is assigned for every speaker within the audio. This field specifies which one of those speakers was detected to have spoken this word. Value
             * ranges from 1 up to diarization_speaker_count, and is only set if speaker diarization is enabled.
             */
            speakerTag?: number;
            /**
             * Time offset relative to the beginning of the audio, and corresponding to the start of the spoken word. This field is only set if `enable_word_time_offsets=true` and only in the top
             * hypothesis. This is an experimental feature and the accuracy of the time offset can vary.
             */
            startTime?: string;
            /** The word corresponding to this set of information. */
            word?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleLongrunning_CancelOperationRequest {
        }
        interface GoogleLongrunning_ListOperationsResponse {
            /** The standard List next-page token. */
            nextPageToken?: string;
            /** A list of operations that matches the specified filter in the request. */
            operations?: GoogleLongrunning_Operation[];
        }
        interface GoogleLongrunning_Operation {
            /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
            done?: boolean;
            /** The error result of the operation in case of failure or cancellation. */
            error?: GoogleRpc_Status;
            /**
             * Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such
             * metadata. Any method that returns a long-running operation should document the metadata type, if any.
             */
            metadata?: { [P in string]: any };
            /**
             * The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending
             * with `operations/{unique_id}`.
             */
            name?: string;
            /**
             * The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the
             * original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the
             * original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
             */
            response?: { [P in string]: any };
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleProtobuf_Empty {
        }
        interface GoogleRpc_Status {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?: number;
            /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
            details?: Array<{ [P in string]: any }>;
            /**
             * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the
             * client.
             */
            message?: string;
        }
        interface OperationsResource {
            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support
             * this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the
             * operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a
             * google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
             */
            cancel(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't
             * support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be deleted. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunning_Operation>;
        }
        interface LocationsResource {
            operations: OperationsResource;
        }
        interface ProjectsResource {
            locations: LocationsResource;
        }
        interface OperationsResource {
            projects: ProjectsResource;
        }
        interface OperationsResource {
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunning_Operation>;
        }
        interface CorpuraResource {
            operations: OperationsResource;
        }
        interface OperationsResource {
            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support
             * this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the
             * operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a
             * google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
             */
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleLongrunning_CancelOperationRequest;
            }): Request<{}>;
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleLongrunning_CancelOperationRequest): Request<{}>;
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't
             * support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be deleted. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunning_Operation>;
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services
             * to override the binding to use different resource name schemes, such as `users/∗/operations`. To override the binding, API services can add a binding such as
             * `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must
             * ensure the name binding is the parent resource, without the operations collection id.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** The standard list filter. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation's parent resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The standard list page size. */
                pageSize?: number;
                /** The standard list page token. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunning_ListOperationsResponse>;
        }
        interface LocationsResource {
            corpura: CorpuraResource;
            operations: OperationsResource;
        }
        interface ProjectsResource {
            locations: LocationsResource;
        }
        interface VideosResource {
            /**
             * Performs asynchronous video annotation. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains
             * `AnnotateVideoProgress` (progress). `Operation.response` contains `AnnotateVideoResponse` (results).
             */
            annotate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudVideointelligenceV1_AnnotateVideoRequest;
            }): Request<GoogleLongrunning_Operation>;
            annotate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudVideointelligenceV1_AnnotateVideoRequest): Request<GoogleLongrunning_Operation>;
        }

        const operations: OperationsResource;

        const projects: ProjectsResource;

        const videos: VideosResource;
    }
}
