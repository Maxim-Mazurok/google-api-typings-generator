/* Type definitions for non-npm package Merchant API ordertracking_v1beta 0.0 */
// Project: https://developers.google.com/merchant/api
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://merchantapi.googleapis.com/$discovery/rest?version=ordertracking_v1beta
// Revision: 20250908

/// <reference types="gapi.client" />

declare namespace gapi.client {
  /** Load Merchant API ordertracking_v1beta */
  function load(
    urlOrObject: 'https://merchantapi.googleapis.com/$discovery/rest?version=ordertracking_v1beta',
  ): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(
    name: 'merchantapi',
    version: 'ordertracking_v1beta',
  ): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(
    name: 'merchantapi',
    version: 'ordertracking_v1beta',
    callback: () => any,
  ): void;

  namespace merchantapi {
    interface DateTime {
      /** Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day. */
      day?: number;
      /** Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value "24:00:00" for scenarios like business closing time. */
      hours?: number;
      /** Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0. */
      minutes?: number;
      /** Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month. */
      month?: number;
      /** Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0. */
      nanos?: number;
      /** Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds. */
      seconds?: number;
      /** Time zone. */
      timeZone?: TimeZone;
      /** UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }. */
      utcOffset?: string;
      /** Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year. */
      year?: number;
    }
    interface LineItemDetails {
      /** Optional. Brand of the product. */
      brand?: string;
      /** Optional. The Global Trade Item Number. */
      gtin?: string;
      /** Optional. The Global Trade Item Numbers. */
      gtins?: string[];
      /** Required. The ID for this line item. */
      lineItemId?: string;
      /** Optional. The manufacturer part number. */
      mpn?: string;
      /** Required. The Content API REST ID of the product, in the form channel:contentLanguage:targetCountry:offerId. */
      productId?: string;
      /** Optional. Plain text title of this product. */
      productTitle?: string;
      /** Required. The quantity of the line item in the order. */
      quantity?: string;
    }
    interface OrderTrackingSignal {
      /** Optional. The shipping fee of the order; this value should be set to zero in the case of free shipping. */
      customerShippingFee?: Price;
      /** Optional. The delivery postal code, as a continuous string without spaces or dashes, for example "95016". This field will be anonymized in returned OrderTrackingSignal creation response. */
      deliveryPostalCode?: string;
      /** Optional. The [CLDR territory code] (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) for the shipping destination. */
      deliveryRegionCode?: string;
      /** Required. Information about line items in the order. */
      lineItems?: LineItemDetails[];
      /** Optional. The Google Merchant Center ID of this order tracking signal. This value is optional. If left unset, the caller's Merchant Center ID is used. You must request access in order to provide data on behalf of another business. For more information, see [Submitting Order Tracking Signals](/shopping-content/guides/order-tracking-signals). */
      merchantId?: string;
      /** Required. The time when the order was created on the businesses side. Include the year and timezone string, if available. */
      orderCreatedTime?: DateTime;
      /** Required. The ID of the order on the businesses side. This field will be hashed in returned OrderTrackingSignal creation response. */
      orderId?: string;
      /** Output only. The ID that uniquely identifies this order tracking signal. */
      orderTrackingSignalId?: string;
      /** Optional. The mapping of the line items to the shipment information. */
      shipmentLineItemMapping?: ShipmentLineItemMapping[];
      /** Required. The shipping information for the order. */
      shippingInfo?: ShippingInfo[];
    }
    interface Price {
      /** The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros). */
      amountMicros?: string;
      /** The currency of the price using three-letter acronyms according to [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217). */
      currencyCode?: string;
    }
    interface ProductChange {
      /** The new value of the changed resource or attribute. If empty, it means that the product was deleted. Will have one of these values : (`approved`, `pending`, `disapproved`, ``) */
      newValue?: string;
      /** The old value of the changed resource or attribute. If empty, it means that the product was created. Will have one of these values : (`approved`, `pending`, `disapproved`, ``) */
      oldValue?: string;
      /** Countries that have the change (if applicable). Represented in the ISO 3166 format. */
      regionCode?: string;
      /** Reporting contexts that have the change (if applicable). Currently this field supports only (`SHOPPING_ADS`, `LOCAL_INVENTORY_ADS`, `YOUTUBE_SHOPPING`, `YOUTUBE_CHECKOUT`, `YOUTUBE_AFFILIATE`) from the enum value [ReportingContextEnum](/merchant/api/reference/rest/Shared.Types/ReportingContextEnum) */
      reportingContext?: string;
    }
    interface ProductStatusChangeMessage {
      /** The target account that owns the entity that changed. Format : `accounts/{merchant_id}` */
      account?: string;
      /** The attribute in the resource that changed, in this case it will be always `Status`. */
      attribute?: string;
      /** A message to describe the change that happened to the product */
      changes?: ProductChange[];
      /** The time at which the event was generated. If you want to order the notification messages you receive you should rely on this field not on the order of receiving the notifications. */
      eventTime?: string;
      /** Optional. The product expiration time. This field will not be set if the notification is sent for a product deletion event. */
      expirationTime?: string;
      /** The account that manages the merchant's account. can be the same as merchant id if it is standalone account. Format : `accounts/{service_provider_id}` */
      managingAccount?: string;
      /** The product name. Format: `accounts/{account}/products/{product}` */
      resource?: string;
      /** The product id. */
      resourceId?: string;
      /** The resource that changed, in this case it will always be `Product`. */
      resourceType?: string;
    }
    interface ShipmentLineItemMapping {
      /** Required. The line item ID. */
      lineItemId?: string;
      /** Required. The line item quantity in the shipment. */
      quantity?: string;
      /** Required. The shipment ID. This field will be hashed in returned OrderTrackingSignal creation response. */
      shipmentId?: string;
    }
    interface ShippingInfo {
      /** Optional. The time when the shipment was actually delivered. Include the year and timezone string, if available. This field is required, if one of the following fields is absent: tracking_id or carrier_name. */
      actualDeliveryTime?: DateTime;
      /** Optional. The name of the shipping carrier for the delivery. This field is required if one of the following fields is absent: earliest_delivery_promise_time, latest_delivery_promise_time, and actual_delivery_time. */
      carrier?: string;
      /** Optional. The service type for fulfillment, such as GROUND, FIRST_CLASS, etc. */
      carrierService?: string;
      /** Optional. The earliest delivery promised time. Include the year and timezone string, if available. This field is required, if one of the following fields is absent: tracking_id or carrier_name. */
      earliestDeliveryPromiseTime?: DateTime;
      /** Optional. The latest delivery promised time. Include the year and timezone string, if available. This field is required, if one of the following fields is absent: tracking_id or carrier_name. */
      latestDeliveryPromiseTime?: DateTime;
      /** Required. The origin postal code, as a continuous string without spaces or dashes, for example "95016". This field will be anonymized in returned OrderTrackingSignal creation response. */
      originPostalCode?: string;
      /** Required. The [CLDR territory code] (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) for the shipping origin. */
      originRegionCode?: string;
      /** Required. The shipment ID. This field will be hashed in returned OrderTrackingSignal creation response. */
      shipmentId?: string;
      /** Optional. The time when the shipment was shipped. Include the year and timezone string, if available. */
      shippedTime?: DateTime;
      /** Required. The status of the shipment. */
      shippingStatus?: string;
      /** Optional. The tracking ID of the shipment. This field is required if one of the following fields is absent: earliest_delivery_promise_time, latest_delivery_promise_time, and actual_delivery_time. */
      trackingId?: string;
    }
    interface TimeZone {
      /** IANA Time Zone Database time zone. For example "America/New_York". */
      id?: string;
      /** Optional. IANA Time Zone Database version number. For example "2019a". */
      version?: string;
    }
    interface OrderTrackingSignalsResource {
      /** Creates new order tracking signal. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Output only. The ID that uniquely identifies this order tracking signal. */
        orderTrackingSignalId?: string;
        /** Required. The account of the business for which the order signal is created. Format: accounts/{account} */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: OrderTrackingSignal;
      }): Request<OrderTrackingSignal>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Output only. The ID that uniquely identifies this order tracking signal. */
          orderTrackingSignalId?: string;
          /** Required. The account of the business for which the order signal is created. Format: accounts/{account} */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: OrderTrackingSignal,
      ): Request<OrderTrackingSignal>;
    }
    interface AccountsResource {
      orderTrackingSignals: OrderTrackingSignalsResource;
    }

    const accounts: AccountsResource;
  }
}
