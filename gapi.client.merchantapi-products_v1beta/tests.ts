/* This is stub file for gapi.client.merchantapi-products_v1beta definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20241101

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://merchantapi.googleapis.com/$discovery/rest?version=products_v1beta'
  );
  /** now we can use gapi.client.merchantapi */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** Manage your product listings and accounts for Google Shopping */
    'https://www.googleapis.com/auth/content',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Deletes a product input from your Merchant Center account. After inserting, updating, or deleting a product input, it may take several minutes before the processed product can be retrieved. */
    await gapi.client.merchantapi.accounts.productInputs.delete({
      dataSource: 'Test string',
      name: 'Test string',
    });
    /** Uploads a product input to your Merchant Center account. If an input with the same contentLanguage, offerId, and dataSource already exists, this method replaces that entry. After inserting, updating, or deleting a product input, it may take several minutes before the processed product can be retrieved. */
    await gapi.client.merchantapi.accounts.productInputs.insert(
      {
        dataSource: 'Test string',
        parent: 'Test string',
      },
      {
        attributes: {
          additionalImageLinks: ['Test string'],
          adsGrouping: 'Test string',
          adsLabels: ['Test string'],
          adsRedirect: 'Test string',
          adult: true,
          ageGroup: 'Test string',
          autoPricingMinPrice: {
            amountMicros: 'Test string',
            currencyCode: 'Test string',
          },
          availability: 'Test string',
          availabilityDate: 'Test string',
          brand: 'Test string',
          canonicalLink: 'Test string',
          certifications: [
            {
              certificationAuthority: 'Test string',
              certificationCode: 'Test string',
              certificationName: 'Test string',
              certificationValue: 'Test string',
            },
          ],
          cloudExportAdditionalProperties: [
            {
              boolValue: true,
              floatValue: [42],
              intValue: ['Test string'],
              maxValue: 42,
              minValue: 42,
              propertyName: 'Test string',
              textValue: ['Test string'],
              unitCode: 'Test string',
            },
          ],
          color: 'Test string',
          condition: 'Test string',
          costOfGoodsSold: {
            amountMicros: 'Test string',
            currencyCode: 'Test string',
          },
          customLabel0: 'Test string',
          customLabel1: 'Test string',
          customLabel2: 'Test string',
          customLabel3: 'Test string',
          customLabel4: 'Test string',
          description: 'Test string',
          disclosureDate: 'Test string',
          displayAdsId: 'Test string',
          displayAdsLink: 'Test string',
          displayAdsSimilarIds: ['Test string'],
          displayAdsTitle: 'Test string',
          displayAdsValue: 42,
          energyEfficiencyClass: 'Test string',
          excludedDestinations: ['Test string'],
          expirationDate: 'Test string',
          externalSellerId: 'Test string',
          freeShippingThreshold: [
            {
              country: 'Test string',
              priceThreshold: {
                amountMicros: 'Test string',
                currencyCode: 'Test string',
              },
            },
          ],
          gender: 'Test string',
          googleProductCategory: 'Test string',
          gtin: ['Test string'],
          identifierExists: true,
          imageLink: 'Test string',
          includedDestinations: ['Test string'],
          installment: {
            amount: {
              amountMicros: 'Test string',
              currencyCode: 'Test string',
            },
            creditType: 'Test string',
            downpayment: {
              amountMicros: 'Test string',
              currencyCode: 'Test string',
            },
            months: 'Test string',
          },
          isBundle: true,
          itemGroupId: 'Test string',
          lifestyleImageLinks: ['Test string'],
          link: 'Test string',
          linkTemplate: 'Test string',
          loyaltyPoints: {
            name: 'Test string',
            pointsValue: 'Test string',
            ratio: 42,
          },
          loyaltyPrograms: [
            {
              cashbackForFutureUse: {
                amountMicros: 'Test string',
                currencyCode: 'Test string',
              },
              loyaltyPoints: 'Test string',
              memberPriceEffectiveDate: {
                endTime: 'Test string',
                startTime: 'Test string',
              },
              price: {
                amountMicros: 'Test string',
                currencyCode: 'Test string',
              },
              programLabel: 'Test string',
              tierLabel: 'Test string',
            },
          ],
          material: 'Test string',
          maxEnergyEfficiencyClass: 'Test string',
          maxHandlingTime: 'Test string',
          minEnergyEfficiencyClass: 'Test string',
          minHandlingTime: 'Test string',
          mobileLink: 'Test string',
          mobileLinkTemplate: 'Test string',
          mpn: 'Test string',
          multipack: 'Test string',
          pattern: 'Test string',
          pause: 'Test string',
          pickupMethod: 'Test string',
          pickupSla: 'Test string',
          price: {
            amountMicros: 'Test string',
            currencyCode: 'Test string',
          },
          productDetails: [
            {
              attributeName: 'Test string',
              attributeValue: 'Test string',
              sectionName: 'Test string',
            },
          ],
          productHeight: {
            unit: 'Test string',
            value: 42,
          },
          productHighlights: ['Test string'],
          productLength: {
            unit: 'Test string',
            value: 42,
          },
          productTypes: ['Test string'],
          productWeight: {
            unit: 'Test string',
            value: 42,
          },
          productWidth: {
            unit: 'Test string',
            value: 42,
          },
          promotionIds: ['Test string'],
          salePrice: {
            amountMicros: 'Test string',
            currencyCode: 'Test string',
          },
          salePriceEffectiveDate: {
            endTime: 'Test string',
            startTime: 'Test string',
          },
          sellOnGoogleQuantity: 'Test string',
          shipping: [
            {
              country: 'Test string',
              locationGroupName: 'Test string',
              locationId: 'Test string',
              maxHandlingTime: 'Test string',
              maxTransitTime: 'Test string',
              minHandlingTime: 'Test string',
              minTransitTime: 'Test string',
              postalCode: 'Test string',
              price: {
                amountMicros: 'Test string',
                currencyCode: 'Test string',
              },
              region: 'Test string',
              service: 'Test string',
            },
          ],
          shippingHeight: {
            unit: 'Test string',
            value: 42,
          },
          shippingLabel: 'Test string',
          shippingLength: {
            unit: 'Test string',
            value: 42,
          },
          shippingWeight: {
            unit: 'Test string',
            value: 42,
          },
          shippingWidth: {
            unit: 'Test string',
            value: 42,
          },
          shoppingAdsExcludedCountries: ['Test string'],
          size: 'Test string',
          sizeSystem: 'Test string',
          sizeTypes: ['Test string'],
          structuredDescription: {
            content: 'Test string',
            digitalSourceType: 'Test string',
          },
          structuredTitle: {
            content: 'Test string',
            digitalSourceType: 'Test string',
          },
          subscriptionCost: {
            amount: {
              amountMicros: 'Test string',
              currencyCode: 'Test string',
            },
            period: 'Test string',
            periodLength: 'Test string',
          },
          taxCategory: 'Test string',
          taxes: [
            {
              country: 'Test string',
              locationId: 'Test string',
              postalCode: 'Test string',
              rate: 42,
              region: 'Test string',
              taxShip: true,
            },
          ],
          title: 'Test string',
          transitTimeLabel: 'Test string',
          unitPricingBaseMeasure: {
            unit: 'Test string',
            value: 'Test string',
          },
          unitPricingMeasure: {
            unit: 'Test string',
            value: 42,
          },
          virtualModelLink: 'Test string',
        },
        channel: 'Test string',
        contentLanguage: 'Test string',
        customAttributes: [
          {
            groupValues: undefined,
            name: 'Test string',
            value: 'Test string',
          },
        ],
        feedLabel: 'Test string',
        name: 'Test string',
        offerId: 'Test string',
        product: 'Test string',
        versionNumber: 'Test string',
      }
    );
    /** Retrieves the processed product from your Merchant Center account. After inserting, updating, or deleting a product input, it may take several minutes before the updated final product can be retrieved. */
    await gapi.client.merchantapi.accounts.products.get({
      name: 'Test string',
    });
    /** Lists the processed products in your Merchant Center account. The response might contain fewer items than specified by pageSize. Rely on pageToken to determine if there are more items to be requested. After inserting, updating, or deleting a product input, it may take several minutes before the updated processed product can be retrieved. */
    await gapi.client.merchantapi.accounts.products.list({
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
  }
});
