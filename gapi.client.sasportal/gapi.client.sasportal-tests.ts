/* This is stub file for gapi.client.sasportal definition tests */
/* IMPORTANT.
* This file was automatically generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
* In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
**/

// Revision: 20200927

gapi.load('client', () => {
    /** now we can use gapi.client */
    gapi.client.load('sasportal', 'v1alpha1', () => {
        /** now we can use gapi.client.sasportal */

        /** don't forget to authenticate your client before sending any request to resources: */
        /** declare client_id registered in Google Developers Console */
        const client_id = '<<PUT YOUR CLIENT ID HERE>>';
        const scope = [
            /** View your email address */
            'https://www.googleapis.com/auth/userinfo.email',
        ];
        const immediate = false;
        gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
            if (authResult && !authResult.error) {
                /** handle successful authorization */
                run();
            } else {
                /** handle authorization error */
            }
        });
    });

    async function run() {
        /** Returns a requested customer. */
        await gapi.client.sasportal.customers.get({
            name: "Test string",
        });
        /** Moves a deployment under another node or customer. */
        await gapi.client.sasportal.customers.deployments.move({
            name: "Test string",
        }, {
            destination: "Test string",
        });
        /** Creates a device under a node or customer. */
        await gapi.client.sasportal.customers.deployments.devices.create({
            parent: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Creates a signed device under a node or customer. */
        await gapi.client.sasportal.customers.deployments.devices.createSigned({
            parent: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Lists devices under a node or customer. */
        await gapi.client.sasportal.customers.deployments.devices.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates a device under a node or customer. Returned devices are unordered. */
        await gapi.client.sasportal.customers.devices.bulk({
            parent: "Test string",
        }, {
            csv: "Test string",
        });
        /** Creates a device under a node or customer. */
        await gapi.client.sasportal.customers.devices.create({
            parent: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Creates a signed device under a node or customer. */
        await gapi.client.sasportal.customers.devices.createSigned({
            parent: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Deletes a device. */
        await gapi.client.sasportal.customers.devices.delete({
            name: "Test string",
        });
        /** Gets details about a device. */
        await gapi.client.sasportal.customers.devices.get({
            name: "Test string",
        });
        /** Lists devices under a node or customer. */
        await gapi.client.sasportal.customers.devices.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Moves a device under another node or customer. */
        await gapi.client.sasportal.customers.devices.move({
            name: "Test string",
        }, {
            destination: "Test string",
        });
        /** Updates a device. */
        await gapi.client.sasportal.customers.devices.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Signs a device. */
        await gapi.client.sasportal.customers.devices.signDevice({
            name: "Test string",
        }, {
            device: {
                activeConfig: {
                    airInterface: {
                        radioTechnology: "Test string",
                        supportedSpec: "Test string",
                    },
                    callSign: "Test string",
                    category: "Test string",
                    installationParams: {
                        antennaAzimuth: 42,
                        antennaBeamwidth: 42,
                        antennaDowntilt: 42,
                        antennaGain: 42,
                        antennaModel: "Test string",
                        cpeCbsdIndication: true,
                        eirpCapability: 42,
                        height: 42,
                        heightType: "Test string",
                        horizontalAccuracy: 42,
                        indoorDeployment: true,
                        latitude: 42,
                        longitude: 42,
                        verticalAccuracy: 42,
                    },
                    isSigned: true,
                    measurementCapabilities: [
                        "Test string"                    ],
                    model: {
                        firmwareVersion: "Test string",
                        hardwareVersion: "Test string",
                        name: "Test string",
                        softwareVersion: "Test string",
                        vendor: "Test string",
                    },
                    state: "Test string",
                    updateTime: "Test string",
                    userId: "Test string",
                },
                deviceMetadata: {
                },
                displayName: "Test string",
                fccId: "Test string",
                grants: [
                    {
                        channelType: "Test string",
                        expireTime: "Test string",
                        frequencyRange: {
                            highFrequencyMhz: 42,
                            lowFrequencyMhz: 42,
                        },
                        grantId: "Test string",
                        maxEirp: 42,
                        moveList: [
                            {
                                dpaId: "Test string",
                                frequencyRange: {
                                    highFrequencyMhz: 42,
                                    lowFrequencyMhz: 42,
                                },
                            }                        ],
                        state: "Test string",
                        suspensionReason: [
                            "Test string"                        ],
                    }                ],
                name: "Test string",
                preloadedConfig: {
                    airInterface: {
                        radioTechnology: "Test string",
                        supportedSpec: "Test string",
                    },
                    callSign: "Test string",
                    category: "Test string",
                    installationParams: {
                        antennaAzimuth: 42,
                        antennaBeamwidth: 42,
                        antennaDowntilt: 42,
                        antennaGain: 42,
                        antennaModel: "Test string",
                        cpeCbsdIndication: true,
                        eirpCapability: 42,
                        height: 42,
                        heightType: "Test string",
                        horizontalAccuracy: 42,
                        indoorDeployment: true,
                        latitude: 42,
                        longitude: 42,
                        verticalAccuracy: 42,
                    },
                    isSigned: true,
                    measurementCapabilities: [
                        "Test string"                    ],
                    model: {
                        firmwareVersion: "Test string",
                        hardwareVersion: "Test string",
                        name: "Test string",
                        softwareVersion: "Test string",
                        vendor: "Test string",
                    },
                    state: "Test string",
                    updateTime: "Test string",
                    userId: "Test string",
                },
                serialNumber: "Test string",
                state: "Test string",
            },
        });
        /** Updates a signed device. */
        await gapi.client.sasportal.customers.devices.updateSigned({
            name: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Deletes a node. */
        await gapi.client.sasportal.customers.nodes.delete({
            name: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Returns a requested node. */
        await gapi.client.sasportal.customers.nodes.get({
            name: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Moves a node under another node or customer. */
        await gapi.client.sasportal.customers.nodes.move({
            name: "Test string",
        }, {
            destination: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates an existing node. */
        await gapi.client.sasportal.customers.nodes.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Returns a list of requested customers. */
        await gapi.client.sasportal.customers.list({
            pageSize: 42,
            pageToken: "Test string",
        });
        /** Moves a deployment under another node or customer. */
        await gapi.client.sasportal.customers.deployments.move({
            name: "Test string",
        }, {
            destination: "Test string",
        });
        /** Creates a device under a node or customer. */
        await gapi.client.sasportal.customers.deployments.devices.create({
            parent: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Creates a signed device under a node or customer. */
        await gapi.client.sasportal.customers.deployments.devices.createSigned({
            parent: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Lists devices under a node or customer. */
        await gapi.client.sasportal.customers.deployments.devices.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates a device under a node or customer. Returned devices are unordered. */
        await gapi.client.sasportal.customers.devices.bulk({
            parent: "Test string",
        }, {
            csv: "Test string",
        });
        /** Creates a device under a node or customer. */
        await gapi.client.sasportal.customers.devices.create({
            parent: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Creates a signed device under a node or customer. */
        await gapi.client.sasportal.customers.devices.createSigned({
            parent: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Deletes a device. */
        await gapi.client.sasportal.customers.devices.delete({
            name: "Test string",
        });
        /** Gets details about a device. */
        await gapi.client.sasportal.customers.devices.get({
            name: "Test string",
        });
        /** Lists devices under a node or customer. */
        await gapi.client.sasportal.customers.devices.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Moves a device under another node or customer. */
        await gapi.client.sasportal.customers.devices.move({
            name: "Test string",
        }, {
            destination: "Test string",
        });
        /** Updates a device. */
        await gapi.client.sasportal.customers.devices.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Signs a device. */
        await gapi.client.sasportal.customers.devices.signDevice({
            name: "Test string",
        }, {
            device: {
                activeConfig: {
                    airInterface: {
                        radioTechnology: "Test string",
                        supportedSpec: "Test string",
                    },
                    callSign: "Test string",
                    category: "Test string",
                    installationParams: {
                        antennaAzimuth: 42,
                        antennaBeamwidth: 42,
                        antennaDowntilt: 42,
                        antennaGain: 42,
                        antennaModel: "Test string",
                        cpeCbsdIndication: true,
                        eirpCapability: 42,
                        height: 42,
                        heightType: "Test string",
                        horizontalAccuracy: 42,
                        indoorDeployment: true,
                        latitude: 42,
                        longitude: 42,
                        verticalAccuracy: 42,
                    },
                    isSigned: true,
                    measurementCapabilities: [
                        "Test string"                    ],
                    model: {
                        firmwareVersion: "Test string",
                        hardwareVersion: "Test string",
                        name: "Test string",
                        softwareVersion: "Test string",
                        vendor: "Test string",
                    },
                    state: "Test string",
                    updateTime: "Test string",
                    userId: "Test string",
                },
                deviceMetadata: {
                },
                displayName: "Test string",
                fccId: "Test string",
                grants: [
                    {
                        channelType: "Test string",
                        expireTime: "Test string",
                        frequencyRange: {
                            highFrequencyMhz: 42,
                            lowFrequencyMhz: 42,
                        },
                        grantId: "Test string",
                        maxEirp: 42,
                        moveList: [
                            {
                                dpaId: "Test string",
                                frequencyRange: {
                                    highFrequencyMhz: 42,
                                    lowFrequencyMhz: 42,
                                },
                            }                        ],
                        state: "Test string",
                        suspensionReason: [
                            "Test string"                        ],
                    }                ],
                name: "Test string",
                preloadedConfig: {
                    airInterface: {
                        radioTechnology: "Test string",
                        supportedSpec: "Test string",
                    },
                    callSign: "Test string",
                    category: "Test string",
                    installationParams: {
                        antennaAzimuth: 42,
                        antennaBeamwidth: 42,
                        antennaDowntilt: 42,
                        antennaGain: 42,
                        antennaModel: "Test string",
                        cpeCbsdIndication: true,
                        eirpCapability: 42,
                        height: 42,
                        heightType: "Test string",
                        horizontalAccuracy: 42,
                        indoorDeployment: true,
                        latitude: 42,
                        longitude: 42,
                        verticalAccuracy: 42,
                    },
                    isSigned: true,
                    measurementCapabilities: [
                        "Test string"                    ],
                    model: {
                        firmwareVersion: "Test string",
                        hardwareVersion: "Test string",
                        name: "Test string",
                        softwareVersion: "Test string",
                        vendor: "Test string",
                    },
                    state: "Test string",
                    updateTime: "Test string",
                    userId: "Test string",
                },
                serialNumber: "Test string",
                state: "Test string",
            },
        });
        /** Updates a signed device. */
        await gapi.client.sasportal.customers.devices.updateSigned({
            name: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Deletes a node. */
        await gapi.client.sasportal.customers.nodes.delete({
            name: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Returns a requested node. */
        await gapi.client.sasportal.customers.nodes.get({
            name: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Moves a node under another node or customer. */
        await gapi.client.sasportal.customers.nodes.move({
            name: "Test string",
        }, {
            destination: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates an existing node. */
        await gapi.client.sasportal.customers.nodes.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates an existing customer. */
        await gapi.client.sasportal.customers.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Moves a deployment under another node or customer. */
        await gapi.client.sasportal.customers.deployments.move({
            name: "Test string",
        }, {
            destination: "Test string",
        });
        /** Creates a device under a node or customer. */
        await gapi.client.sasportal.customers.deployments.devices.create({
            parent: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Creates a signed device under a node or customer. */
        await gapi.client.sasportal.customers.deployments.devices.createSigned({
            parent: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Lists devices under a node or customer. */
        await gapi.client.sasportal.customers.deployments.devices.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates a device under a node or customer. Returned devices are unordered. */
        await gapi.client.sasportal.customers.devices.bulk({
            parent: "Test string",
        }, {
            csv: "Test string",
        });
        /** Creates a device under a node or customer. */
        await gapi.client.sasportal.customers.devices.create({
            parent: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Creates a signed device under a node or customer. */
        await gapi.client.sasportal.customers.devices.createSigned({
            parent: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Deletes a device. */
        await gapi.client.sasportal.customers.devices.delete({
            name: "Test string",
        });
        /** Gets details about a device. */
        await gapi.client.sasportal.customers.devices.get({
            name: "Test string",
        });
        /** Lists devices under a node or customer. */
        await gapi.client.sasportal.customers.devices.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Moves a device under another node or customer. */
        await gapi.client.sasportal.customers.devices.move({
            name: "Test string",
        }, {
            destination: "Test string",
        });
        /** Updates a device. */
        await gapi.client.sasportal.customers.devices.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Signs a device. */
        await gapi.client.sasportal.customers.devices.signDevice({
            name: "Test string",
        }, {
            device: {
                activeConfig: {
                    airInterface: {
                        radioTechnology: "Test string",
                        supportedSpec: "Test string",
                    },
                    callSign: "Test string",
                    category: "Test string",
                    installationParams: {
                        antennaAzimuth: 42,
                        antennaBeamwidth: 42,
                        antennaDowntilt: 42,
                        antennaGain: 42,
                        antennaModel: "Test string",
                        cpeCbsdIndication: true,
                        eirpCapability: 42,
                        height: 42,
                        heightType: "Test string",
                        horizontalAccuracy: 42,
                        indoorDeployment: true,
                        latitude: 42,
                        longitude: 42,
                        verticalAccuracy: 42,
                    },
                    isSigned: true,
                    measurementCapabilities: [
                        "Test string"                    ],
                    model: {
                        firmwareVersion: "Test string",
                        hardwareVersion: "Test string",
                        name: "Test string",
                        softwareVersion: "Test string",
                        vendor: "Test string",
                    },
                    state: "Test string",
                    updateTime: "Test string",
                    userId: "Test string",
                },
                deviceMetadata: {
                },
                displayName: "Test string",
                fccId: "Test string",
                grants: [
                    {
                        channelType: "Test string",
                        expireTime: "Test string",
                        frequencyRange: {
                            highFrequencyMhz: 42,
                            lowFrequencyMhz: 42,
                        },
                        grantId: "Test string",
                        maxEirp: 42,
                        moveList: [
                            {
                                dpaId: "Test string",
                                frequencyRange: {
                                    highFrequencyMhz: 42,
                                    lowFrequencyMhz: 42,
                                },
                            }                        ],
                        state: "Test string",
                        suspensionReason: [
                            "Test string"                        ],
                    }                ],
                name: "Test string",
                preloadedConfig: {
                    airInterface: {
                        radioTechnology: "Test string",
                        supportedSpec: "Test string",
                    },
                    callSign: "Test string",
                    category: "Test string",
                    installationParams: {
                        antennaAzimuth: 42,
                        antennaBeamwidth: 42,
                        antennaDowntilt: 42,
                        antennaGain: 42,
                        antennaModel: "Test string",
                        cpeCbsdIndication: true,
                        eirpCapability: 42,
                        height: 42,
                        heightType: "Test string",
                        horizontalAccuracy: 42,
                        indoorDeployment: true,
                        latitude: 42,
                        longitude: 42,
                        verticalAccuracy: 42,
                    },
                    isSigned: true,
                    measurementCapabilities: [
                        "Test string"                    ],
                    model: {
                        firmwareVersion: "Test string",
                        hardwareVersion: "Test string",
                        name: "Test string",
                        softwareVersion: "Test string",
                        vendor: "Test string",
                    },
                    state: "Test string",
                    updateTime: "Test string",
                    userId: "Test string",
                },
                serialNumber: "Test string",
                state: "Test string",
            },
        });
        /** Updates a signed device. */
        await gapi.client.sasportal.customers.devices.updateSigned({
            name: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Deletes a node. */
        await gapi.client.sasportal.customers.nodes.delete({
            name: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Returns a requested node. */
        await gapi.client.sasportal.customers.nodes.get({
            name: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Moves a node under another node or customer. */
        await gapi.client.sasportal.customers.nodes.move({
            name: "Test string",
        }, {
            destination: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates an existing node. */
        await gapi.client.sasportal.customers.nodes.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Creates a new node. */
        await gapi.client.sasportal.customers.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.customers.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Generates a secret to be used with the ValidateInstaller method */
        await gapi.client.sasportal.installer.generateSecret({
        }, {
        });
        /** Validates the identity of a Certified Professional Installer (CPI). */
        await gapi.client.sasportal.installer.validate({
        }, {
            encodedSecret: "Test string",
            installerId: "Test string",
            secret: "Test string",
        });
        /** Returns a requested node. */
        await gapi.client.sasportal.nodes.get({
            name: "Test string",
        });
        /** Moves a deployment under another node or customer. */
        await gapi.client.sasportal.nodes.deployments.move({
            name: "Test string",
        }, {
            destination: "Test string",
        });
        /** Creates a device under a node or customer. */
        await gapi.client.sasportal.nodes.deployments.devices.create({
            parent: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Creates a signed device under a node or customer. */
        await gapi.client.sasportal.nodes.deployments.devices.createSigned({
            parent: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Lists devices under a node or customer. */
        await gapi.client.sasportal.nodes.deployments.devices.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates a device under a node or customer. Returned devices are unordered. */
        await gapi.client.sasportal.nodes.devices.bulk({
            parent: "Test string",
        }, {
            csv: "Test string",
        });
        /** Creates a device under a node or customer. */
        await gapi.client.sasportal.nodes.devices.create({
            parent: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Creates a signed device under a node or customer. */
        await gapi.client.sasportal.nodes.devices.createSigned({
            parent: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Deletes a device. */
        await gapi.client.sasportal.nodes.devices.delete({
            name: "Test string",
        });
        /** Gets details about a device. */
        await gapi.client.sasportal.nodes.devices.get({
            name: "Test string",
        });
        /** Lists devices under a node or customer. */
        await gapi.client.sasportal.nodes.devices.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Moves a device under another node or customer. */
        await gapi.client.sasportal.nodes.devices.move({
            name: "Test string",
        }, {
            destination: "Test string",
        });
        /** Updates a device. */
        await gapi.client.sasportal.nodes.devices.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Signs a device. */
        await gapi.client.sasportal.nodes.devices.signDevice({
            name: "Test string",
        }, {
            device: {
                activeConfig: {
                    airInterface: {
                        radioTechnology: "Test string",
                        supportedSpec: "Test string",
                    },
                    callSign: "Test string",
                    category: "Test string",
                    installationParams: {
                        antennaAzimuth: 42,
                        antennaBeamwidth: 42,
                        antennaDowntilt: 42,
                        antennaGain: 42,
                        antennaModel: "Test string",
                        cpeCbsdIndication: true,
                        eirpCapability: 42,
                        height: 42,
                        heightType: "Test string",
                        horizontalAccuracy: 42,
                        indoorDeployment: true,
                        latitude: 42,
                        longitude: 42,
                        verticalAccuracy: 42,
                    },
                    isSigned: true,
                    measurementCapabilities: [
                        "Test string"                    ],
                    model: {
                        firmwareVersion: "Test string",
                        hardwareVersion: "Test string",
                        name: "Test string",
                        softwareVersion: "Test string",
                        vendor: "Test string",
                    },
                    state: "Test string",
                    updateTime: "Test string",
                    userId: "Test string",
                },
                deviceMetadata: {
                },
                displayName: "Test string",
                fccId: "Test string",
                grants: [
                    {
                        channelType: "Test string",
                        expireTime: "Test string",
                        frequencyRange: {
                            highFrequencyMhz: 42,
                            lowFrequencyMhz: 42,
                        },
                        grantId: "Test string",
                        maxEirp: 42,
                        moveList: [
                            {
                                dpaId: "Test string",
                                frequencyRange: {
                                    highFrequencyMhz: 42,
                                    lowFrequencyMhz: 42,
                                },
                            }                        ],
                        state: "Test string",
                        suspensionReason: [
                            "Test string"                        ],
                    }                ],
                name: "Test string",
                preloadedConfig: {
                    airInterface: {
                        radioTechnology: "Test string",
                        supportedSpec: "Test string",
                    },
                    callSign: "Test string",
                    category: "Test string",
                    installationParams: {
                        antennaAzimuth: 42,
                        antennaBeamwidth: 42,
                        antennaDowntilt: 42,
                        antennaGain: 42,
                        antennaModel: "Test string",
                        cpeCbsdIndication: true,
                        eirpCapability: 42,
                        height: 42,
                        heightType: "Test string",
                        horizontalAccuracy: 42,
                        indoorDeployment: true,
                        latitude: 42,
                        longitude: 42,
                        verticalAccuracy: 42,
                    },
                    isSigned: true,
                    measurementCapabilities: [
                        "Test string"                    ],
                    model: {
                        firmwareVersion: "Test string",
                        hardwareVersion: "Test string",
                        name: "Test string",
                        softwareVersion: "Test string",
                        vendor: "Test string",
                    },
                    state: "Test string",
                    updateTime: "Test string",
                    userId: "Test string",
                },
                serialNumber: "Test string",
                state: "Test string",
            },
        });
        /** Updates a signed device. */
        await gapi.client.sasportal.nodes.devices.updateSigned({
            name: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Creates a device under a node or customer. Returned devices are unordered. */
        await gapi.client.sasportal.nodes.nodes.devices.bulk({
            parent: "Test string",
        }, {
            csv: "Test string",
        });
        /** Creates a device under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.create({
            parent: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Creates a signed device under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.createSigned({
            parent: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Lists devices under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.nodes.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.nodes.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Deletes a node. */
        await gapi.client.sasportal.nodes.nodes.delete({
            name: "Test string",
        });
        /** Creates a device under a node or customer. Returned devices are unordered. */
        await gapi.client.sasportal.nodes.nodes.devices.bulk({
            parent: "Test string",
        }, {
            csv: "Test string",
        });
        /** Creates a device under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.create({
            parent: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Creates a signed device under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.createSigned({
            parent: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Lists devices under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.nodes.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.nodes.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Returns a requested node. */
        await gapi.client.sasportal.nodes.nodes.get({
            name: "Test string",
        });
        /** Creates a device under a node or customer. Returned devices are unordered. */
        await gapi.client.sasportal.nodes.nodes.devices.bulk({
            parent: "Test string",
        }, {
            csv: "Test string",
        });
        /** Creates a device under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.create({
            parent: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Creates a signed device under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.createSigned({
            parent: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Lists devices under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.nodes.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.nodes.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Lists nodes. */
        await gapi.client.sasportal.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates a device under a node or customer. Returned devices are unordered. */
        await gapi.client.sasportal.nodes.nodes.devices.bulk({
            parent: "Test string",
        }, {
            csv: "Test string",
        });
        /** Creates a device under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.create({
            parent: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Creates a signed device under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.createSigned({
            parent: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Lists devices under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.nodes.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.nodes.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Moves a node under another node or customer. */
        await gapi.client.sasportal.nodes.nodes.move({
            name: "Test string",
        }, {
            destination: "Test string",
        });
        /** Creates a device under a node or customer. Returned devices are unordered. */
        await gapi.client.sasportal.nodes.nodes.devices.bulk({
            parent: "Test string",
        }, {
            csv: "Test string",
        });
        /** Creates a device under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.create({
            parent: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Creates a signed device under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.createSigned({
            parent: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Lists devices under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.nodes.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.nodes.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates an existing node. */
        await gapi.client.sasportal.nodes.nodes.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Creates a device under a node or customer. Returned devices are unordered. */
        await gapi.client.sasportal.nodes.nodes.devices.bulk({
            parent: "Test string",
        }, {
            csv: "Test string",
        });
        /** Creates a device under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.create({
            parent: "Test string",
        }, {
            activeConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            deviceMetadata: {
            },
            displayName: "Test string",
            fccId: "Test string",
            grants: [
                {
                    channelType: "Test string",
                    expireTime: "Test string",
                    frequencyRange: {
                        highFrequencyMhz: 42,
                        lowFrequencyMhz: 42,
                    },
                    grantId: "Test string",
                    maxEirp: 42,
                    moveList: [
                        {
                            dpaId: "Test string",
                            frequencyRange: {
                                highFrequencyMhz: 42,
                                lowFrequencyMhz: 42,
                            },
                        }                    ],
                    state: "Test string",
                    suspensionReason: [
                        "Test string"                    ],
                }            ],
            name: "Test string",
            preloadedConfig: {
                airInterface: {
                    radioTechnology: "Test string",
                    supportedSpec: "Test string",
                },
                callSign: "Test string",
                category: "Test string",
                installationParams: {
                    antennaAzimuth: 42,
                    antennaBeamwidth: 42,
                    antennaDowntilt: 42,
                    antennaGain: 42,
                    antennaModel: "Test string",
                    cpeCbsdIndication: true,
                    eirpCapability: 42,
                    height: 42,
                    heightType: "Test string",
                    horizontalAccuracy: 42,
                    indoorDeployment: true,
                    latitude: 42,
                    longitude: 42,
                    verticalAccuracy: 42,
                },
                isSigned: true,
                measurementCapabilities: [
                    "Test string"                ],
                model: {
                    firmwareVersion: "Test string",
                    hardwareVersion: "Test string",
                    name: "Test string",
                    softwareVersion: "Test string",
                    vendor: "Test string",
                },
                state: "Test string",
                updateTime: "Test string",
                userId: "Test string",
            },
            serialNumber: "Test string",
            state: "Test string",
        });
        /** Creates a signed device under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.createSigned({
            parent: "Test string",
        }, {
            encodedDevice: "Test string",
            installerId: "Test string",
        });
        /** Lists devices under a node or customer. */
        await gapi.client.sasportal.nodes.nodes.devices.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates a new node. */
        await gapi.client.sasportal.nodes.nodes.nodes.create({
            parent: "Test string",
        }, {
            displayName: "Test string",
            name: "Test string",
            sasUserIds: [
                "Test string"            ],
        });
        /** Lists nodes. */
        await gapi.client.sasportal.nodes.nodes.nodes.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set. */
        await gapi.client.sasportal.policies.get({
        }, {
            resource: "Test string",
        });
        /** Sets the access control policy on the specified resource. Replaces any existing policy. */
        await gapi.client.sasportal.policies.set({
        }, {
            policy: {
                assignments: [
                    {
                        members: [
                            "Test string"                        ],
                        role: "Test string",
                    }                ],
                etag: "Test string",
            },
            resource: "Test string",
        });
        /** Returns permissions that a caller has on the specified resource. */
        await gapi.client.sasportal.policies.test({
        }, {
            permissions: [
                "Test string"            ],
            resource: "Test string",
        });
    }
});
