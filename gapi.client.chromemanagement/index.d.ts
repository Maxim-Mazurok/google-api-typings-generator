/* Type definitions for non-npm package Chrome Management API v1 1.0 */
// Project: http://developers.google.com/chrome/management/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://chromemanagement.googleapis.com/$discovery/rest?version=v1
// Revision: 20220307

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Chrome Management API v1 */
    function load(name: "chromemanagement", version: "v1"): PromiseLike<void>;
    function load(name: "chromemanagement", version: "v1", callback: () => any): void;

    namespace chromemanagement {
        interface GoogleChromeManagementV1AndroidAppInfo {
            /** Output only. Permissions requested by an Android app. */
            permissions?: GoogleChromeManagementV1AndroidAppPermission[];
        }
        interface GoogleChromeManagementV1AndroidAppPermission {
            /** Output only. The type of the permission. */
            type?: string;
        }
        interface GoogleChromeManagementV1AppDetails {
            /** Output only. Android app information. */
            androidAppInfo?: GoogleChromeManagementV1AndroidAppInfo;
            /**
             * Output only. Unique store identifier for the item. Examples: "gmbmikajjgmnabiglmofipeabaddhgne" for the Save to Google Drive Chrome extension, "com.google.android.apps.docs" for the
             * Google Drive Android app.
             */
            appId?: string;
            /** Output only. Chrome Web Store app information. */
            chromeAppInfo?: GoogleChromeManagementV1ChromeAppInfo;
            /** Output only. App's description. */
            description?: string;
            /** Output only. The uri for the detail page of the item. */
            detailUri?: string;
            /** Output only. App's display name. */
            displayName?: string;
            /** Output only. First published time. */
            firstPublishTime?: string;
            /** Output only. Home page or Website uri. */
            homepageUri?: string;
            /** Output only. A link to an image that can be used as an icon for the product. */
            iconUri?: string;
            /** Output only. Indicates if the app has to be paid for OR has paid content. */
            isPaidApp?: boolean;
            /** Output only. Latest published time. */
            latestPublishTime?: string;
            /** Output only. Format: name=customers/{customer_id}/apps/{chrome|android|web}/{app_id}@{version} */
            name?: string;
            /**
             * Output only. The URI pointing to the privacy policy of the app, if it was provided by the developer. Version-specific field that will only be set when the requested app version is
             * found.
             */
            privacyPolicyUri?: string;
            /** Output only. The publisher of the item. */
            publisher?: string;
            /** Output only. Number of reviews received. Chrome Web Store review information will always be for the latest version of an app. */
            reviewNumber?: string;
            /** Output only. The rating of the app (on 5 stars). Chrome Web Store review information will always be for the latest version of an app. */
            reviewRating?: number;
            /** Output only. App version. A new revision is committed whenever a new version of the app is published. */
            revisionId?: string;
            /** Output only. Information about a partial service error if applicable. */
            serviceError?: GoogleRpcStatus;
            /** Output only. App type. */
            type?: string;
        }
        interface GoogleChromeManagementV1BatteryInfo {
            /** Output only. Design capacity (mAmpere-hours). */
            designCapacity?: string;
            /** Output only. Designed minimum output voltage (mV) */
            designMinVoltage?: number;
            /** Output only. The date the battery was manufactured. */
            manufactureDate?: GoogleTypeDate;
            /** Output only. Battery manufacturer. */
            manufacturer?: string;
            /** Output only. Battery serial number. */
            serialNumber?: string;
            /** Output only. Technology of the battery. Example: Li-ion */
            technology?: string;
        }
        interface GoogleChromeManagementV1BatterySampleReport {
            /** Output only. Battery charge percentage. */
            chargeRate?: number;
            /** Output only. Battery current (mA). */
            current?: string;
            /** Output only. The battery discharge rate measured in mW. Positive if the battery is being discharged, negative if it's being charged. */
            dischargeRate?: number;
            /** Output only. Battery remaining capacity (mAmpere-hours). */
            remainingCapacity?: string;
            /** Output only. Timestamp of when the sample was collected on device */
            reportTime?: string;
            /** Output only. Battery status read from sysfs. Example: Discharging */
            status?: string;
            /** Output only. Temperature in Celsius degrees. */
            temperature?: number;
            /** Output only. Battery voltage (millivolt). */
            voltage?: string;
        }
        interface GoogleChromeManagementV1BatteryStatusReport {
            /** Output only. Battery health. */
            batteryHealth?: string;
            /** Output only. Cycle count. */
            cycleCount?: number;
            /** Output only. Full charge capacity (mAmpere-hours). */
            fullChargeCapacity?: string;
            /** Output only. Timestamp of when the sample was collected on device */
            reportTime?: string;
            /** Output only. Sampling data for the battery. */
            sample?: GoogleChromeManagementV1BatterySampleReport[];
            /** Output only. Battery serial number. */
            serialNumber?: string;
        }
        interface GoogleChromeManagementV1BrowserVersion {
            /** Output only. The release channel of the installed browser. */
            channel?: string;
            /** Output only. Count grouped by device_system and major version */
            count?: string;
            /** Output only. Version of the system-specified operating system. */
            deviceOsVersion?: string;
            /** Output only. The device operating system. */
            system?: string;
            /** Output only. The full version of the installed browser. */
            version?: string;
        }
        interface GoogleChromeManagementV1ChromeAppInfo {
            /** Output only. Whether the app or extension is built and maintained by Google. Version-specific field that will only be set when the requested app version is found. */
            googleOwned?: boolean;
            /** Output only. Whether the app or extension is in a published state in the Chrome Web Store. */
            isCwsHosted?: boolean;
            /** Output only. Whether the app or extension is a theme. */
            isTheme?: boolean;
            /** Output only. The minimum number of users using this app. */
            minUserCount?: number;
            /** Output only. Every custom permission requested by the app. Version-specific field that will only be set when the requested app version is found. */
            permissions?: GoogleChromeManagementV1ChromeAppPermission[];
            /**
             * Output only. Every permission giving access to domains or broad host patterns. ( e.g. www.google.com). This includes the matches from content scripts as well as hosts in the
             * permissions node of the manifest. Version-specific field that will only be set when the requested app version is found.
             */
            siteAccess?: GoogleChromeManagementV1ChromeAppSiteAccess[];
            /** Output only. The app developer has enabled support for their app. Version-specific field that will only be set when the requested app version is found. */
            supportEnabled?: boolean;
        }
        interface GoogleChromeManagementV1ChromeAppPermission {
            /** Output only. If available, whether this permissions grants the app/extension access to user data. */
            accessUserData?: boolean;
            /** Output only. If available, a URI to a page that has documentation for the current permission. */
            documentationUri?: string;
            /** Output only. The type of the permission. */
            type?: string;
        }
        interface GoogleChromeManagementV1ChromeAppRequest {
            /** Output only. Format: app_details=customers/{customer_id}/apps/chrome/{app_id} */
            appDetails?: string;
            /** Output only. Unique store identifier for the app. Example: "gmbmikajjgmnabiglmofipeabaddhgne" for the Save to Google Drive Chrome extension. */
            appId?: string;
            /** Output only. The uri for the detail page of the item. */
            detailUri?: string;
            /** Output only. App's display name. */
            displayName?: string;
            /** Output only. A link to an image that can be used as an icon for the product. */
            iconUri?: string;
            /** Output only. The timestamp of the most recently made request for this app. */
            latestRequestTime?: string;
            /** Output only. Total count of requests for this app. */
            requestCount?: string;
        }
        interface GoogleChromeManagementV1ChromeAppSiteAccess {
            /** Output only. This can contain very specific hosts, or patterns like "*.com" for instance. */
            hostMatch?: string;
        }
        interface GoogleChromeManagementV1CountChromeAppRequestsResponse {
            /** Token to specify the next page in the list. */
            nextPageToken?: string;
            /** Count of requested apps matching request. */
            requestedApps?: GoogleChromeManagementV1ChromeAppRequest[];
            /** Total number of matching app requests. */
            totalSize?: number;
        }
        interface GoogleChromeManagementV1CountChromeVersionsResponse {
            /** List of all browser versions and their install counts. */
            browserVersions?: GoogleChromeManagementV1BrowserVersion[];
            /** Token to specify the next page of the request. */
            nextPageToken?: string;
            /** Total number browser versions matching request. */
            totalSize?: number;
        }
        interface GoogleChromeManagementV1CountInstalledAppsResponse {
            /** List of installed apps matching request. */
            installedApps?: GoogleChromeManagementV1InstalledApp[];
            /** Token to specify the next page of the request. */
            nextPageToken?: string;
            /** Total number of installed apps matching request. */
            totalSize?: number;
        }
        interface GoogleChromeManagementV1CpuInfo {
            /** Output only. The CPU architecture. */
            architecture?: string;
            /** Output only. The max CPU clock speed in kHz. */
            maxClockSpeed?: number;
            /** Output only. The CPU model name. Example: Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz */
            model?: string;
        }
        interface GoogleChromeManagementV1CpuStatusReport {
            /** Output only. CPU temperature sample info per CPU core in Celsius */
            cpuTemperatureInfo?: GoogleChromeManagementV1CpuTemperatureInfo[];
            /** Output only. Sample of CPU utilization (0-100 percent). */
            cpuUtilizationPct?: number;
            /** Output only. The timestamp in milliseconds representing time at which this report was sampled. */
            reportTime?: string;
            /** Output only. Frequency the report is sampled. */
            sampleFrequency?: string;
        }
        interface GoogleChromeManagementV1CpuTemperatureInfo {
            /** Output only. CPU label. Example: Core 0 */
            label?: string;
            /** Output only. CPU temperature in Celsius. */
            temperatureCelsius?: number;
        }
        interface GoogleChromeManagementV1Device {
            /** Output only. The ID of the device that reported this Chrome browser information. */
            deviceId?: string;
            /** Output only. The name of the machine within its local network. */
            machine?: string;
        }
        interface GoogleChromeManagementV1DiskInfo {
            /** Output only. Number of bytes read since last boot. */
            bytesReadThisSession?: string;
            /** Output only. Number of bytes written since last boot. */
            bytesWrittenThisSession?: string;
            /** Output only. Time spent discarding since last boot. Discarding is writing to clear blocks which are no longer in use. Supported on kernels 4.18+. */
            discardTimeThisSession?: string;
            /** Output only. Disk health. */
            health?: string;
            /** Output only. Counts the time the disk and queue were busy, so unlike the fields above, parallel requests are not counted multiple times. */
            ioTimeThisSession?: string;
            /** Output only. Disk manufacturer. */
            manufacturer?: string;
            /** Output only. Disk model. */
            model?: string;
            /** Output only. Time spent reading from disk since last boot. */
            readTimeThisSession?: string;
            /** Output only. Disk serial number. */
            serialNumber?: string;
            /** Output only. Disk size. */
            sizeBytes?: string;
            /** Output only. Disk type: eMMC / NVMe / ATA / SCSI. */
            type?: string;
            /** Output only. Disk volumes. */
            volumeIds?: string[];
            /** Output only. Time spent writing to disk since last boot. */
            writeTimeThisSession?: string;
        }
        interface GoogleChromeManagementV1DisplayInfo {
            /** Output only. Represents the graphics card device id. */
            deviceId?: string;
            /** Output only. Indicates if display is internal or not. */
            isInternal?: boolean;
            /** Output only. Refresh rate in Hz. */
            refreshRate?: number;
            /** Output only. Resolution height in pixels. */
            resolutionHeight?: number;
            /** Output only. Resolution width in pixels. */
            resolutionWidth?: number;
        }
        interface GoogleChromeManagementV1FindInstalledAppDevicesResponse {
            /** A list of devices which have the app installed. Sorted in ascending alphabetical order on the Device.machine field. */
            devices?: GoogleChromeManagementV1Device[];
            /** Token to specify the next page of the request. */
            nextPageToken?: string;
            /** Total number of devices matching request. */
            totalSize?: number;
        }
        interface GoogleChromeManagementV1GraphicsAdapterInfo {
            /** Output only. Adapter name. Example: Mesa DRI Intel(R) UHD Graphics 620 (Kabylake GT2). */
            adapter?: string;
            /** Output only. Represents the graphics card device id. */
            deviceId?: string;
            /** Output only. Version of the GPU driver. */
            driverVersion?: string;
        }
        interface GoogleChromeManagementV1GraphicsInfo {
            /** Output only. Information about the graphics adapter (GPU). */
            adapterInfo?: GoogleChromeManagementV1GraphicsAdapterInfo;
        }
        interface GoogleChromeManagementV1GraphicsStatusReport {
            /** Output only. Information about the displays for the device. */
            displays?: GoogleChromeManagementV1DisplayInfo[];
            /** Output only. Time at which the graphics data was reported. */
            reportTime?: string;
        }
        interface GoogleChromeManagementV1InstalledApp {
            /**
             * Output only. Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g.
             * com.evernote).
             */
            appId?: string;
            /** Output only. How the app was installed. */
            appInstallType?: string;
            /** Output only. Source of the installed app. */
            appSource?: string;
            /** Output only. Type of the app. */
            appType?: string;
            /** Output only. Count of browser devices with this app installed. */
            browserDeviceCount?: string;
            /** Output only. Description of the installed app. */
            description?: string;
            /** Output only. Whether the app is disabled. */
            disabled?: boolean;
            /** Output only. Name of the installed app. */
            displayName?: string;
            /** Output only. Homepage uri of the installed app. */
            homepageUri?: string;
            /** Output only. Count of ChromeOS users with this app installed. */
            osUserCount?: string;
            /** Output only. Permissions of the installed app. */
            permissions?: string[];
        }
        interface GoogleChromeManagementV1ListTelemetryDevicesResponse {
            /** Telemetry devices returned in the response. */
            devices?: GoogleChromeManagementV1TelemetryDevice[];
            /** Token to specify next page in the list. */
            nextPageToken?: string;
        }
        interface GoogleChromeManagementV1MemoryInfo {
            /** Output only. Amount of available RAM in bytes. */
            availableRamBytes?: string;
            /** Output only. Total RAM in bytes. */
            totalRamBytes?: string;
        }
        interface GoogleChromeManagementV1MemoryStatusReport {
            /** Output only. Number of page faults during this collection */
            pageFaults?: number;
            /** Output only. The timestamp in milliseconds representing time at which this report was sampled. */
            reportTime?: string;
            /** Output only. Frequency the report is sampled. */
            sampleFrequency?: string;
            /** Output only. Amount of free RAM in bytes (unreliable due to Garbage Collection). */
            systemRamFreeBytes?: string;
        }
        interface GoogleChromeManagementV1NetworkStatusReport {
            /** Output only. Gateway IP address. */
            gatewayIpAddress?: string;
            /** Output only. LAN IP address. */
            lanIpAddress?: string;
            /** Output only. Time at which the network state was reported. */
            reportTime?: string;
            /** Output only. Frequency the report is sampled. */
            sampleFrequency?: string;
            /** Output only. Signal strength for wireless networks measured in decibels. */
            signalStrengthDbm?: number;
        }
        interface GoogleChromeManagementV1OsUpdateStatus {
            /** Output only. Timestamp of the last reboot. */
            lastRebootTime?: string;
            /** Output only. Timestamp of the last update check. */
            lastUpdateCheckTime?: string;
            /** Output only. Timestamp of the last successful update. */
            lastUpdateTime?: string;
            /**
             * Output only. New platform version of the os image being downloaded and applied. It is only set when update status is OS_IMAGE_DOWNLOAD_IN_PROGRESS or OS_UPDATE_NEED_REBOOT. Note
             * this could be a dummy "0.0.0.0" for OS_UPDATE_NEED_REBOOT status for some edge cases, e.g. update engine is restarted without a reboot.
             */
            newPlatformVersion?: string;
            /** Output only. New requested platform version from the pending updated kiosk app. */
            newRequestedPlatformVersion?: string;
            /** Output only. Current state of the os update. */
            updateState?: string;
        }
        interface GoogleChromeManagementV1StorageInfo {
            /** The available space for user data storage in the device in bytes. */
            availableDiskBytes?: string;
            /** The total space for user data storage in the device in bytes. */
            totalDiskBytes?: string;
            /** Information for disk volumes */
            volume?: GoogleChromeManagementV1StorageInfoDiskVolume[];
        }
        interface GoogleChromeManagementV1StorageInfoDiskVolume {
            /** Free storage space in bytes. */
            storageFreeBytes?: string;
            /** Total storage space in bytes. */
            storageTotalBytes?: string;
            /** Disk volume id. */
            volumeId?: string;
        }
        interface GoogleChromeManagementV1StorageStatusReport {
            /** Output only. Reports on disk */
            disk?: GoogleChromeManagementV1DiskInfo[];
            /** Output only. Timestamp of when the sample was collected on device */
            reportTime?: string;
        }
        interface GoogleChromeManagementV1TelemetryDevice {
            /** Output only. Information on battery specs for the device. */
            batteryInfo?: GoogleChromeManagementV1BatteryInfo[];
            /** Output only. Battery reports collected periodically. */
            batteryStatusReport?: GoogleChromeManagementV1BatteryStatusReport[];
            /** Output only. Information regarding CPU specs for the device. */
            cpuInfo?: GoogleChromeManagementV1CpuInfo[];
            /** Output only. CPU status reports collected periodically. */
            cpuStatusReport?: GoogleChromeManagementV1CpuStatusReport[];
            /** Output only. Google Workspace Customer whose enterprise enrolled the device. */
            customer?: string;
            /** Output only. The unique Directory API ID of the device. This value is the same as the Admin Console's Directory API ID in the Chrome OS Devices tab */
            deviceId?: string;
            /** Output only. Contains information regarding Graphic peripherals for the device. */
            graphicsInfo?: GoogleChromeManagementV1GraphicsInfo;
            /** Output only. Graphics reports collected periodically. */
            graphicsStatusReport?: GoogleChromeManagementV1GraphicsStatusReport[];
            /** Output only. Information regarding memory specs for the device. */
            memoryInfo?: GoogleChromeManagementV1MemoryInfo;
            /** Output only. Memory status reports collected periodically. */
            memoryStatusReport?: GoogleChromeManagementV1MemoryStatusReport[];
            /** Output only. Resource name of the device. */
            name?: string;
            /** Output only. Network specs collected periodically. */
            networkStatusReport?: GoogleChromeManagementV1NetworkStatusReport[];
            /** Output only. Organization unit ID of the device. */
            orgUnitId?: string;
            /** Output only. Contains relevant information regarding ChromeOS update status. */
            osUpdateStatus?: GoogleChromeManagementV1OsUpdateStatus[];
            /** Output only. Device serial number. This value is the same as the Admin Console's Serial Number in the Chrome OS Devices tab. */
            serialNumber?: string;
            /** Output only. Information of storage specs for the device. */
            storageInfo?: GoogleChromeManagementV1StorageInfo;
            /** Output only. Storage reports collected periodically. */
            storageStatusReport?: GoogleChromeManagementV1StorageStatusReport[];
        }
        interface GoogleRpcStatus {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?: number;
            /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
            details?: Array<{ [P in string]: any }>;
            /**
             * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the
             * client.
             */
            message?: string;
        }
        interface GoogleTypeDate {
            /** Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. */
            day?: number;
            /** Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. */
            month?: number;
            /** Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. */
            year?: number;
        }
        interface AndroidResource {
            /** Get a specific app for a customer by its resource name. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The app for which details are being queried. Examples: "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save to Google Drive Chrome
                 * extension version 2.1.2, "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive Android app's latest version.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleChromeManagementV1AppDetails>;
        }
        interface ChromeResource {
            /** Get a specific app for a customer by its resource name. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The app for which details are being queried. Examples: "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save to Google Drive Chrome
                 * extension version 2.1.2, "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive Android app's latest version.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleChromeManagementV1AppDetails>;
        }
        interface WebResource {
            /** Get a specific app for a customer by its resource name. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The app for which details are being queried. Examples: "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save to Google Drive Chrome
                 * extension version 2.1.2, "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive Android app's latest version.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleChromeManagementV1AppDetails>;
        }
        interface AppsResource {
            /** Generate summary of app installation requests. */
            countChromeAppRequests(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. Customer id or "my_customer" to use the customer associated to the account making the request. */
                customer: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Field used to order results. Supported fields: * request_count * latest_request_time */
                orderBy?: string;
                /** The ID of the organizational unit. */
                orgUnitId?: string;
                /** Maximum number of results to return. Maximum and default are 50, anything above will be coerced to 50. */
                pageSize?: number;
                /** Token to specify the page of the request to be returned. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleChromeManagementV1CountChromeAppRequestsResponse>;
            android: AndroidResource;
            chrome: ChromeResource;
            web: WebResource;
        }
        interface ReportsResource {
            /** Generate report of installed Chrome versions. */
            countChromeVersions(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. Customer id or "my_customer" to use the customer associated to the account making the request. */
                customer: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Supported filter fields: * last_active_date */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the organizational unit. */
                orgUnitId?: string;
                /** Maximum number of results to return. Maximum and default are 100. */
                pageSize?: number;
                /** Token to specify the page of the request to be returned. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleChromeManagementV1CountChromeVersionsResponse>;
            /** Generate report of app installations. */
            countInstalledApps(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. Customer id or "my_customer" to use the customer associated to the account making the request. */
                customer: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Supported filter fields: * app_name * app_type *
                 * install_type * number_of_permissions * total_install_count * latest_profile_active_date * permission_name
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Field used to order results. Supported order by fields: * app_name * app_type * install_type * number_of_permissions * total_install_count */
                orderBy?: string;
                /** The ID of the organizational unit. */
                orgUnitId?: string;
                /** Maximum number of results to return. Maximum and default are 100. */
                pageSize?: number;
                /** Token to specify the page of the request to be returned. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleChromeManagementV1CountInstalledAppsResponse>;
            /** Generate report of devices that have a specified app installed. */
            findInstalledAppDevices(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /**
                 * Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g.
                 * com.evernote).
                 */
                appId?: string;
                /** Type of the app. */
                appType?: string;
                /** JSONP */
                callback?: string;
                /** Required. Customer id or "my_customer" to use the customer associated to the account making the request. */
                customer: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Supported filter fields: * last_active_date */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Field used to order results. Supported order by fields: * machine * device_id */
                orderBy?: string;
                /** The ID of the organizational unit. */
                orgUnitId?: string;
                /** Maximum number of results to return. Maximum and default are 100. */
                pageSize?: number;
                /** Token to specify the page of the request to be returned. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleChromeManagementV1FindInstalledAppDevicesResponse>;
        }
        interface DevicesResource {
            /** List all telemetry devices. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. Only include resources that match the filter. Supported filter fields: - org_unit_id - serial_number */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Maximum number of results to return. Default value is 100. Maximum value is 200. */
                pageSize?: number;
                /** Token to specify next page in the list. */
                pageToken?: string;
                /** Required. Customer id or "my_customer" to use the customer associated to the account making the request. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. Read mask to specify which fields to return. */
                readMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleChromeManagementV1ListTelemetryDevicesResponse>;
        }
        interface TelemetryResource {
            devices: DevicesResource;
        }
        interface CustomersResource {
            apps: AppsResource;
            reports: ReportsResource;
            telemetry: TelemetryResource;
        }

        const customers: CustomersResource;
    }
}
