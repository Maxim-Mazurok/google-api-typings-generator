/* Type definitions for non-npm package Discovery Engine API v1beta 0.0 */
// Project: https://cloud.google.com/generative-ai-app-builder/docs/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://discoveryengine.googleapis.com/$discovery/rest?version=v1beta
// Revision: 20250125

/// <reference types="gapi.client" />

declare namespace gapi.client {
  /** Load Discovery Engine API v1beta */
  function load(
    urlOrObject: 'https://discoveryengine.googleapis.com/$discovery/rest?version=v1beta',
  ): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(name: 'discoveryengine', version: 'v1beta'): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(
    name: 'discoveryengine',
    version: 'v1beta',
    callback: () => any,
  ): void;

  namespace discoveryengine {
    interface GoogleApiDistribution {
      /** The number of values in each bucket of the histogram, as described in `bucket_options`. If the distribution does not have a histogram, then omit this field. If there is a histogram, then the sum of the values in `bucket_counts` must equal the value in the `count` field of the distribution. If present, `bucket_counts` should contain N values, where N is the number of buckets specified in `bucket_options`. If you supply fewer than N values, the remaining values are assumed to be 0. The order of the values in `bucket_counts` follows the bucket numbering schemes described for the three bucket types. The first value must be the count for the underflow bucket (number 0). The next N-2 values are the counts for the finite buckets (number 1 through N-2). The N'th value in `bucket_counts` is the count for the overflow bucket (number N-1). */
      bucketCounts?: string[];
      /** Defines the histogram bucket boundaries. If the distribution does not contain a histogram, then omit this field. */
      bucketOptions?: GoogleApiDistributionBucketOptions;
      /** The number of values in the population. Must be non-negative. This value must equal the sum of the values in `bucket_counts` if a histogram is provided. */
      count?: string;
      /** Must be in increasing order of `value` field. */
      exemplars?: GoogleApiDistributionExemplar[];
      /** The arithmetic mean of the values in the population. If `count` is zero then this field must be zero. */
      mean?: number;
      /** If specified, contains the range of the population values. The field must not be present if the `count` is zero. */
      range?: GoogleApiDistributionRange;
      /** The sum of squared deviations from the mean of the values in the population. For values x_i this is: Sum[i=1..n]((x_i - mean)^2) Knuth, "The Art of Computer Programming", Vol. 2, page 232, 3rd edition describes Welford's method for accumulating this sum in one pass. If `count` is zero then this field must be zero. */
      sumOfSquaredDeviation?: number;
    }
    interface GoogleApiDistributionBucketOptions {
      /** The explicit buckets. */
      explicitBuckets?: GoogleApiDistributionBucketOptionsExplicit;
      /** The exponential buckets. */
      exponentialBuckets?: GoogleApiDistributionBucketOptionsExponential;
      /** The linear bucket. */
      linearBuckets?: GoogleApiDistributionBucketOptionsLinear;
    }
    interface GoogleApiDistributionBucketOptionsExplicit {
      /** The values must be monotonically increasing. */
      bounds?: number[];
    }
    interface GoogleApiDistributionBucketOptionsExponential {
      /** Must be greater than 1. */
      growthFactor?: number;
      /** Must be greater than 0. */
      numFiniteBuckets?: number;
      /** Must be greater than 0. */
      scale?: number;
    }
    interface GoogleApiDistributionBucketOptionsLinear {
      /** Must be greater than 0. */
      numFiniteBuckets?: number;
      /** Lower bound of the first bucket. */
      offset?: number;
      /** Must be greater than 0. */
      width?: number;
    }
    interface GoogleApiDistributionExemplar {
      /** Contextual information about the example value. Examples are: Trace: type.googleapis.com/google.monitoring.v3.SpanContext Literal string: type.googleapis.com/google.protobuf.StringValue Labels dropped during aggregation: type.googleapis.com/google.monitoring.v3.DroppedLabels There may be only a single attachment of any given message type in a single exemplar, and this is enforced by the system. */
      attachments?: Array<{[P in string]: any}>;
      /** The observation (sampling) time of the above value. */
      timestamp?: string;
      /** Value of the exemplar point. This value determines to which bucket the exemplar belongs. */
      value?: number;
    }
    interface GoogleApiDistributionRange {
      /** The maximum of the population values. */
      max?: number;
      /** The minimum of the population values. */
      min?: number;
    }
    interface GoogleApiHttpBody {
      /** The HTTP Content-Type header value specifying the content type of the body. */
      contentType?: string;
      /** The HTTP request/response body as raw binary. */
      data?: string;
      /** Application specific response metadata. Must be set in the first response for streaming APIs. */
      extensions?: Array<{[P in string]: any}>;
    }
    interface GoogleApiMetric {
      /** The set of label values that uniquely identify this metric. All labels listed in the `MetricDescriptor` must be assigned values. */
      labels?: {[P in string]: string};
      /** An existing metric type, see google.api.MetricDescriptor. For example, `custom.googleapis.com/invoice/paid/amount`. */
      type?: string;
    }
    interface GoogleApiMonitoredResource {
      /** Required. Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels `"project_id"`, `"instance_id"`, and `"zone"`. */
      labels?: {[P in string]: string};
      /** Required. The monitored resource type. This field must match the `type` field of a MonitoredResourceDescriptor object. For example, the type of a Compute Engine VM instance is `gce_instance`. Some descriptors include the service name in the type; for example, the type of a Datastream stream is `datastream.googleapis.com/Stream`. */
      type?: string;
    }
    interface GoogleApiMonitoredResourceMetadata {
      /** Output only. Values for predefined system metadata labels. System labels are a kind of metadata extracted by Google, including "machine_image", "vpc", "subnet_id", "security_group", "name", etc. System label values can be only strings, Boolean values, or a list of strings. For example: { "name": "my-test-instance", "security_group": ["a", "b", "c"], "spot_instance": false } */
      systemLabels?: {[P in string]: any};
      /** Output only. A map of user-defined metadata labels. */
      userLabels?: {[P in string]: string};
    }
    interface GoogleCloudDiscoveryengineLoggingErrorContext {
      /** The HTTP request which was processed when the error was triggered. */
      httpRequest?: GoogleCloudDiscoveryengineLoggingHttpRequestContext;
      /** The location in the source code where the decision was made to report the error, usually the place where it was logged. */
      reportLocation?: GoogleCloudDiscoveryengineLoggingSourceLocation;
    }
    interface GoogleCloudDiscoveryengineLoggingErrorLog {
      /** A description of the context in which the error occurred. */
      context?: GoogleCloudDiscoveryengineLoggingErrorContext;
      /** The error payload that is populated on LRO import APIs. */
      importPayload?: GoogleCloudDiscoveryengineLoggingImportErrorContext;
      /** A message describing the error. */
      message?: string;
      /** The API request payload, represented as a protocol buffer. Most API request types are supported—for example: * `type.googleapis.com/google.cloud.discoveryengine.v1alpha.DocumentService.CreateDocumentRequest` * `type.googleapis.com/google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEventRequest` */
      requestPayload?: {[P in string]: any};
      /** The API response payload, represented as a protocol buffer. This is used to log some "soft errors", where the response is valid but we consider there are some quality issues like unjoined events. The following API responses are supported, and no PII is included: * `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend` * `google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEvent` * `google.cloud.discoveryengine.v1alpha.UserEventService.CollectUserEvent` */
      responsePayload?: {[P in string]: any};
      /** The service context in which this error has occurred. */
      serviceContext?: GoogleCloudDiscoveryengineLoggingServiceContext;
      /** The RPC status associated with the error log. */
      status?: GoogleRpcStatus;
    }
    interface GoogleCloudDiscoveryengineLoggingHttpRequestContext {
      /** The HTTP response status code for the request. */
      responseStatusCode?: number;
    }
    interface GoogleCloudDiscoveryengineLoggingImportErrorContext {
      /** The detailed content which caused the error on importing a document. */
      document?: string;
      /** Google Cloud Storage file path of the import source. Can be set for batch operation error. */
      gcsPath?: string;
      /** Line number of the content in file. Should be empty for permission or batch operation error. */
      lineNumber?: string;
      /** The operation resource name of the LRO. */
      operation?: string;
      /** The detailed content which caused the error on importing a user event. */
      userEvent?: string;
    }
    interface GoogleCloudDiscoveryengineLoggingServiceContext {
      /** An identifier of the service—for example, `discoveryengine.googleapis.com`. */
      service?: string;
    }
    interface GoogleCloudDiscoveryengineLoggingSourceLocation {
      /** Human-readable name of a function or method—for example, `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend`. */
      functionName?: string;
    }
    interface GoogleCloudDiscoveryengineV1AdvancedSiteSearchConfig {
      /** If set true, automatic refresh is disabled for the DataStore. */
      disableAutomaticRefresh?: boolean;
      /** If set true, initial indexing is disabled for the DataStore. */
      disableInitialIndex?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1alphaAclConfig {
      /** Identity provider config. */
      idpConfig?: GoogleCloudDiscoveryengineV1alphaIdpConfig;
      /** Immutable. The full resource name of the acl configuration. Format: `projects/{project}/locations/{location}/aclConfig`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
      name?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaActionConfig {
      /** Required. Params needed to support actions in the format of (Key, Value) pairs. Required parameters for sources that support OAUTH, i.e. `gmail`, `google_calendar`, `jira`, `workday`, `salesforce`, `confluence`: * Key: `client_id` * Value: type STRING. The client ID for the service provider to identify your application. * Key: `client_secret` * Value:type STRING. The client secret generated by the application's authorization server. */
      actionParams?: {[P in string]: any};
      /** Output only. The connector contains the necessary parameters and is configured to support actions. */
      isActionConfigured?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1alphaAdvancedSiteSearchConfig {
      /** If set true, automatic refresh is disabled for the DataStore. */
      disableAutomaticRefresh?: boolean;
      /** If set true, initial indexing is disabled for the DataStore. */
      disableInitialIndex?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswer {
      /** Additional answer-skipped reasons. This provides the reason for ignored cases. If nothing is skipped, this field is not set. */
      answerSkippedReasons?: string[];
      /** The textual answer. */
      answerText?: string;
      /** Citations. */
      citations?: GoogleCloudDiscoveryengineV1alphaAnswerCitation[];
      /** Output only. Answer completed timestamp. */
      completeTime?: string;
      /** Output only. Answer creation timestamp. */
      createTime?: string;
      /** A score in the range of [0, 1] describing how grounded the answer is by the reference chunks. */
      groundingScore?: number;
      /** Optional. Grounding supports. */
      groundingSupports?: GoogleCloudDiscoveryengineV1alphaAnswerGroundingSupport[];
      /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*‍/answers/*` */
      name?: string;
      /** Query understanding information. */
      queryUnderstandingInfo?: GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfo;
      /** References. */
      references?: GoogleCloudDiscoveryengineV1alphaAnswerReference[];
      /** Suggested related questions. */
      relatedQuestions?: string[];
      /** Optional. Safety ratings. */
      safetyRatings?: GoogleCloudDiscoveryengineV1alphaSafetyRating[];
      /** The state of the answer generation. */
      state?: string;
      /** Answer generation steps. */
      steps?: GoogleCloudDiscoveryengineV1alphaAnswerStep[];
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerCitation {
      /** End of the attributed segment, exclusive. */
      endIndex?: string;
      /** Citation sources for the attributed segment. */
      sources?: GoogleCloudDiscoveryengineV1alphaAnswerCitationSource[];
      /** Index indicates the start of the segment, measured in bytes (UTF-8 unicode). */
      startIndex?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerCitationSource {
      /** ID of the citation source. */
      referenceId?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerGroundingSupport {
      /** Required. End of the claim, exclusive. */
      endIndex?: string;
      /** Indicates that this claim required grounding check. When the system decided this claim didn't require attribution/grounding check, this field is set to false. In that case, no grounding check was done for the claim and therefore `grounding_score`, `sources` is not returned. */
      groundingCheckRequired?: boolean;
      /** A score in the range of [0, 1] describing how grounded is a specific claim by the references. Higher value means that the claim is better supported by the reference chunks. */
      groundingScore?: number;
      /** Optional. Citation sources for the claim. */
      sources?: GoogleCloudDiscoveryengineV1alphaAnswerCitationSource[];
      /** Required. Index indicates the start of the claim, measured in bytes (UTF-8 unicode). */
      startIndex?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfo {
      /** Query classification information. */
      queryClassificationInfo?: GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo[];
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo {
      /** Classification output. */
      positive?: boolean;
      /** Query classification type. */
      type?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerReference {
      /** Chunk information. */
      chunkInfo?: GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfo;
      /** Structured document information. */
      structuredDocumentInfo?: GoogleCloudDiscoveryengineV1alphaAnswerReferenceStructuredDocumentInfo;
      /** Unstructured document information. */
      unstructuredDocumentInfo?: GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfo;
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfo {
      /** Chunk resource name. */
      chunk?: string;
      /** Chunk textual content. */
      content?: string;
      /** Document metadata. */
      documentMetadata?: GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfoDocumentMetadata;
      /** The relevance of the chunk for a given query. Values range from 0.0 (completely irrelevant) to 1.0 (completely relevant). This value is for informational purpose only. It may change for the same query and chunk at any time due to a model retraining or change in implementation. */
      relevanceScore?: number;
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfoDocumentMetadata {
      /** Document resource name. */
      document?: string;
      /** Page identifier. */
      pageIdentifier?: string;
      /** The structured JSON metadata for the document. It is populated from the struct data from the Chunk in search result. */
      structData?: {[P in string]: any};
      /** Title. */
      title?: string;
      /** URI for the document. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerReferenceStructuredDocumentInfo {
      /** Document resource name. */
      document?: string;
      /** Structured search data. */
      structData?: {[P in string]: any};
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfo {
      /** List of cited chunk contents derived from document content. */
      chunkContents?: GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfoChunkContent[];
      /** Document resource name. */
      document?: string;
      /** The structured JSON metadata for the document. It is populated from the struct data from the Chunk in search result. */
      structData?: {[P in string]: any};
      /** Title. */
      title?: string;
      /** URI for the document. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfoChunkContent {
      /** Chunk textual content. */
      content?: string;
      /** Page identifier. */
      pageIdentifier?: string;
      /** The relevance of the chunk for a given query. Values range from 0.0 (completely irrelevant) to 1.0 (completely relevant). This value is for informational purpose only. It may change for the same query and chunk at any time due to a model retraining or change in implementation. */
      relevanceScore?: number;
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerStep {
      /** Actions. */
      actions?: GoogleCloudDiscoveryengineV1alphaAnswerStepAction[];
      /** The description of the step. */
      description?: string;
      /** The state of the step. */
      state?: string;
      /** The thought of the step. */
      thought?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerStepAction {
      /** Observation. */
      observation?: GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservation;
      /** Search action. */
      searchAction?: GoogleCloudDiscoveryengineV1alphaAnswerStepActionSearchAction;
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservation {
      /** Search results observed by the search action, it can be snippets info or chunk info, depending on the citation type set by the user. */
      searchResults?: GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResult[];
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResult {
      /** If citation_type is CHUNK_LEVEL_CITATION and chunk mode is on, populate chunk info. */
      chunkInfo?: GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultChunkInfo[];
      /** Document resource name. */
      document?: string;
      /** If citation_type is DOCUMENT_LEVEL_CITATION, populate document level snippets. */
      snippetInfo?: GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultSnippetInfo[];
      /** Data representation. The structured JSON data for the document. It's populated from the struct data from the Document, or the Chunk in search result. */
      structData?: {[P in string]: any};
      /** Title. */
      title?: string;
      /** URI for the document. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultChunkInfo {
      /** Chunk resource name. */
      chunk?: string;
      /** Chunk textual content. */
      content?: string;
      /** The relevance of the chunk for a given query. Values range from 0.0 (completely irrelevant) to 1.0 (completely relevant). This value is for informational purpose only. It may change for the same query and chunk at any time due to a model retraining or change in implementation. */
      relevanceScore?: number;
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultSnippetInfo {
      /** Snippet content. */
      snippet?: string;
      /** Status of the snippet defined by the search team. */
      snippetStatus?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaAnswerStepActionSearchAction {
      /** The query to search. */
      query?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSiteMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesResponse {
      /** TargetSites created. */
      targetSites?: GoogleCloudDiscoveryengineV1alphaTargetSite[];
    }
    interface GoogleCloudDiscoveryengineV1alphaCmekConfig {
      /** Output only. The default CmekConfig for the Customer. */
      isDefault?: boolean;
      /** Kms key resource name which will be used to encrypt resources `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`. */
      kmsKey?: string;
      /** Kms key version resource name which will be used to encrypt resources `/cryptoKeyVersions/{keyVersion}`. */
      kmsKeyVersion?: string;
      /** Output only. The timestamp of the last key rotation. */
      lastRotationTimestampMicros?: string;
      /** Required. Name of the CmekConfig, of the form `projects/{project}/locations/{location}/cmekConfig` or `projects/{project}/locations/{location}/cmekConfigs/{cmekConfig}`. */
      name?: string;
      /** Optional. Single-regional CMEKs that are required for some VAIS features. */
      singleRegionKeys?: GoogleCloudDiscoveryengineV1alphaSingleRegionKey[];
      /** Output only. State of the CmekConfig. */
      state?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaCollection {
      /** Output only. Timestamp the Collection was created at. */
      createTime?: string;
      /** Output only. The data connector, if present, manages the connection for data stores in the Collection. To set up the connector, use DataConnectorService.SetUpDataConnector method, which creates a new Collection while setting up the DataConnector singleton resource. Setting up connector on an existing Collection is not supported. This output only field contains a subset of the DataConnector fields, including `name`, `data_source`, `entities.entity_name` and `entities.data_store`. To get more details about a data connector, use the DataConnectorService.GetDataConnector method. */
      dataConnector?: GoogleCloudDiscoveryengineV1alphaDataConnector;
      /** Required. The Collection display name. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. */
      displayName?: string;
      /** Immutable. The full resource name of the Collection. Format: `projects/{project}/locations/{location}/collections/{collection_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
      name?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaCondition {
      /** Range of time(s) specifying when condition is active. Maximum of 10 time ranges. */
      activeTimeRange?: GoogleCloudDiscoveryengineV1alphaConditionTimeRange[];
      /** Optional. Query regex to match the whole search query. Cannot be set when Condition.query_terms is set. This is currently supporting promotion use case. */
      queryRegex?: string;
      /** Search only A list of terms to match the query on. Cannot be set when Condition.query_regex is set. Maximum of 10 query terms. */
      queryTerms?: GoogleCloudDiscoveryengineV1alphaConditionQueryTerm[];
    }
    interface GoogleCloudDiscoveryengineV1alphaConditionQueryTerm {
      /** Whether the search query needs to exactly match the query term. */
      fullMatch?: boolean;
      /** The specific query value to match against Must be lowercase, must be UTF-8. Can have at most 3 space separated terms if full_match is true. Cannot be an empty string. Maximum length of 5000 characters. */
      value?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaConditionTimeRange {
      /** End of time range. Range is inclusive. Must be in the future. */
      endTime?: string;
      /** Start of time range. Range is inclusive. */
      startTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaConnectorRun {
      /** Output only. The time when the connector run ended. */
      endTime?: string;
      /** Output only. The details of the entities synced at the ConnectorRun. Each ConnectorRun consists of syncing one or more entities. */
      entityRuns?: GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun[];
      /** Contains info about errors incurred during the sync. Only exist if running into an error state. Contains error code and error message. Use with the `state` field. */
      errors?: GoogleRpcStatus[];
      /** Output only. The time when the connector run was most recently paused. */
      latestPauseTime?: string;
      /** Output only. The full resource name of the Connector Run. Format: `projects/*‍/locations/*‍/collections/*‍/dataConnector/connectorRuns/*`. The `connector_run_id` is system-generated. */
      name?: string;
      /** Output only. The time when the connector run started. */
      startTime?: string;
      /** Output only. The state of the sync run. */
      state?: string;
      /** Timestamp at which the connector run sync state was last updated. */
      stateUpdateTime?: string;
      /** Output only. The trigger for this ConnectorRun. */
      trigger?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun {
      /** The name of the source entity. */
      entityName?: string;
      /** The total number of documents failed at sync at any stage (extraction, indexing, etc). */
      errorRecordCount?: string;
      /** The errors from the entity's sync run. Only exist if running into an error state. Contains error code and error message. */
      errors?: GoogleRpcStatus[];
      /** The number of documents extracted from connector source, ready to be ingested to UCS. */
      extractedRecordCount?: string;
      /** The number of documents indexed. */
      indexedRecordCount?: string;
      /** The number of requests sent to 3p API. */
      sourceApiRequestCount?: string;
      /** The state of the entity's sync run. */
      state?: string;
      /** Timestamp at which the entity sync state was last updated. */
      stateUpdateTime?: string;
      /** The timestamp for either extracted_documents_count, indexed_documents_count and error_documents_count was last updated. */
      statsUpdateTime?: string;
      /** Sync type of this run. */
      syncType?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaControl {
      /** Output only. List of all ServingConfig IDs this control is attached to. May take up to 10 minutes to update after changes. */
      associatedServingConfigIds?: string[];
      /** Defines a boost-type control */
      boostAction?: GoogleCloudDiscoveryengineV1alphaControlBoostAction;
      /** Determines when the associated action will trigger. Omit to always apply the action. Currently only a single condition may be specified. Otherwise an INVALID ARGUMENT error is thrown. */
      conditions?: GoogleCloudDiscoveryengineV1alphaCondition[];
      /** Required. Human readable name. The identifier used in UI views. Must be UTF-8 encoded string. Length limit is 128 characters. Otherwise an INVALID ARGUMENT error is thrown. */
      displayName?: string;
      /** Defines a filter-type control Currently not supported by Recommendation */
      filterAction?: GoogleCloudDiscoveryengineV1alphaControlFilterAction;
      /** Immutable. Fully qualified name `projects/*‍/locations/global/dataStore/*‍/controls/*` */
      name?: string;
      /** Promote certain links based on predefined trigger queries. This now only supports basic site search. */
      promoteAction?: GoogleCloudDiscoveryengineV1alphaControlPromoteAction;
      /** Defines a redirect-type control. */
      redirectAction?: GoogleCloudDiscoveryengineV1alphaControlRedirectAction;
      /** Required. Immutable. What solution the control belongs to. Must be compatible with vertical of resource. Otherwise an INVALID ARGUMENT error is thrown. */
      solutionType?: string;
      /** Treats a group of terms as synonyms of one another. */
      synonymsAction?: GoogleCloudDiscoveryengineV1alphaControlSynonymsAction;
      /** Specifies the use case for the control. Affects what condition fields can be set. Only applies to SOLUTION_TYPE_SEARCH. Currently only allow one use case per control. Must be set when solution_type is SolutionType.SOLUTION_TYPE_SEARCH. */
      useCases?: string[];
    }
    interface GoogleCloudDiscoveryengineV1alphaControlBoostAction {
      /** Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0 (No-op). */
      boost?: number;
      /** Required. Specifies which data store's documents can be boosted by this control. Full data store name e.g. projects/123/locations/global/collections/default_collection/dataStores/default_data_store */
      dataStore?: string;
      /** Required. Specifies which products to apply the boost to. If no filter is provided all products will be boosted (No-op). Syntax documentation: https://cloud.google.com/retail/docs/filter-and-order Maximum length is 5000 characters. Otherwise an INVALID ARGUMENT error is thrown. */
      filter?: string;
      /** Optional. Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0 (No-op). */
      fixedBoost?: number;
    }
    interface GoogleCloudDiscoveryengineV1alphaControlFilterAction {
      /** Required. Specifies which data store's documents can be filtered by this control. Full data store name e.g. projects/123/locations/global/collections/default_collection/dataStores/default_data_store */
      dataStore?: string;
      /** Required. A filter to apply on the matching condition results. Required Syntax documentation: https://cloud.google.com/retail/docs/filter-and-order Maximum length is 5000 characters. Otherwise an INVALID ARGUMENT error is thrown. */
      filter?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaControlPromoteAction {
      /** Required. Data store with which this promotion is attached to. */
      dataStore?: string;
      /** Required. Promotion attached to this action. */
      searchLinkPromotion?: GoogleCloudDiscoveryengineV1alphaSearchLinkPromotion;
    }
    interface GoogleCloudDiscoveryengineV1alphaControlRedirectAction {
      /** Required. The URI to which the shopper will be redirected. Required. URI must have length equal or less than 2000 characters. Otherwise an INVALID ARGUMENT error is thrown. */
      redirectUri?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaControlSynonymsAction {
      /** Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms. Otherwise an INVALID ARGUMENT error is thrown. */
      synonyms?: string[];
    }
    interface GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries {
      /** The QPS of the crawl rate. */
      qpsTimeSeries?: GoogleMonitoringV3TimeSeries;
    }
    interface GoogleCloudDiscoveryengineV1alphaCreateDataStoreMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaCreateEngineMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaCreateEvaluationMetadata {}
    interface GoogleCloudDiscoveryengineV1alphaCreateSchemaMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaCreateSitemapMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaCreateTargetSiteMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaCustomFineTuningSpec {
      /** Whether or not to enable and include custom fine tuned search adaptor model. */
      enableSearchAdaptor?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1alphaDataConnector {
      /** Optional. Action configurations to make the connector support actions. */
      actionConfig?: GoogleCloudDiscoveryengineV1alphaActionConfig;
      /** Indicates whether the connector is disabled for auto run. It can be used to pause periodical and real time sync. */
      autoRunDisabled?: boolean;
      /** Output only. User actions that must be completed before the connector can start syncing data. */
      blockingReasons?: string[];
      /** Output only. Timestamp the DataConnector was created at. */
      createTime?: string;
      /** Required. The name of the data source. Supported values: `salesforce`, `jira`, `confluence`, `bigquery`. */
      dataSource?: string;
      /** Optional. Any target destinations used to connect to third-party services. */
      destinationConfigs?: GoogleCloudDiscoveryengineV1alphaDestinationConfig[];
      /** List of entities from the connected data source to ingest. */
      entities?: GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity[];
      /** Output only. The errors from initialization or from the latest connector run. */
      errors?: GoogleRpcStatus[];
      /** The refresh interval to sync the Access Control List information for the documents ingested by this connector. If not set, the access control list will be refreshed at the default interval of 30 minutes. The identity refresh interval can be at least 30 minutes and at most 7 days. */
      identityRefreshInterval?: string;
      /** The configuration for the identity data synchronization runs. This contains the refresh interval to sync the Access Control List information for the documents ingested by this connector. */
      identityScheduleConfig?: GoogleCloudDiscoveryengineV1alphaIdentityScheduleConfig;
      /** Input only. The KMS key to be used to protect the DataStores managed by this connector. Must be set for requests that need to comply with CMEK Org Policy protections. If this field is set and processed successfully, the DataStores created by this connector will be protected by the KMS key. */
      kmsKeyName?: string;
      /** Output only. For periodic connectors only, the last time a data sync was completed. */
      lastSyncTime?: string;
      /** Output only. The most recent timestamp when this DataConnector was paused, affecting all functionalities such as data synchronization. Pausing a connector has the following effects: - All functionalities, including data synchronization, are halted. - Any ongoing data synchronization job will be canceled. - No future data synchronization runs will be scheduled nor can be triggered. */
      latestPauseTime?: string;
      /** Output only. The full resource name of the Data Connector. Format: `projects/*‍/locations/*‍/collections/*‍/dataConnector`. */
      name?: string;
      /** Defines the scheduled time for the next data synchronization. This field requires hour , minute, and time_zone from the [IANA Time Zone Database](https://www.iana.org/time-zones). This is utilized when the data connector has a refresh interval greater than 1 day. When the hours or minutes are not specified, we will assume a sync time of 0:00. The user must provide a time zone to avoid ambiguity. */
      nextSyncTime?: GoogleTypeDateTime;
      /** Required. Params needed to access the source in the format of (Key, Value) pairs. Required parameters for all data sources: * Key: `instance_uri` * Value: type STRING. The uri to access the data source. Required parameters for sources that support OAUTH, i.e. `salesforce`: * Key: `client_id` * Value: type STRING. The client ID for the third party service provider to identify your application. * Key: `client_secret` * Value:type STRING. The client secret generated by the third party authorization server. * Key: `access_token` * Value: type STRING. OAuth token for UCS to access to the protected resource. * Key: `refresh_token` * Value: type STRING. OAuth refresh token for UCS to obtain a new access token without user interaction. Required parameters for sources that support basic API token auth, i.e. `jira`, `confluence`: * Key: `user_account` * Value: type STRING. The username or email with the source. * Key: `api_token` * Value: type STRING. The API token generated for the source account, that is used for authenticating anywhere where you would have used a password. Example: ```json { "instance_uri": "https://xxx.atlassian.net", "user_account": "xxxx.xxx@xxx.com", "api_token": "test-token" } ``` Optional parameter to specify the authorization type to use for multiple authorization types support: * Key: `auth_type` * Value: type STRING. The authorization type for the data source. Supported values: `BASIC_AUTH`, `OAUTH`, `OAUTH_ACCESS_TOKEN`, `OAUTH_TWO_LEGGED`, `OAUTH_JWT_BEARER`, `OAUTH_PASSWORD_GRANT`, `JWT`, `API_TOKEN`, `FEDERATED_CREDENTIAL`. */
      params?: {[P in string]: any};
      /** Output only. The tenant project ID associated with private connectivity connectors. This project must be allowlisted by in order for the connector to function. */
      privateConnectivityProjectId?: string;
      /** Required. The refresh interval for data sync. If duration is set to 0, the data will be synced in real time. The streaming feature is not supported yet. The minimum is 30 minutes and maximum is 7 days. */
      refreshInterval?: string;
      /** Output only. State of the connector. */
      state?: string;
      /** Output only. The static IP addresses used by this connector. */
      staticIpAddresses?: string[];
      /** Optional. Whether customer has enabled static IP addresses for this connector. */
      staticIpEnabled?: boolean;
      /** The data synchronization mode supported by the data connector. */
      syncMode?: string;
      /** Output only. Timestamp the DataConnector was last updated. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity {
      /** Output only. The full resource name of the associated data store for the source entity. Format: `projects/*‍/locations/*‍/collections/*‍/dataStores/*`. When the connector is initialized by the DataConnectorService.SetUpDataConnector method, a DataStore is automatically created for each source entity. */
      dataStore?: string;
      /** The name of the entity. Supported values by data source: * Salesforce: `Lead`, `Opportunity`, `Contact`, `Account`, `Case`, `Contract`, `Campaign` * Jira: `Issue` * Confluence: `Content`, `Space` */
      entityName?: string;
      /** Attributes for indexing. Key: Field name. Value: The key property to map a field to, such as `title`, and `description`. Supported key properties: * `title`: The title for data record. This would be displayed on search results. * `description`: The description for data record. This would be displayed on search results. */
      keyPropertyMappings?: {[P in string]: string};
      /** The parameters for the entity to facilitate data ingestion. E.g. for BigQuery connectors: * Key: `document_id_column` * Value: type STRING. The value of the column ID. */
      params?: {[P in string]: any};
    }
    interface GoogleCloudDiscoveryengineV1alphaDataStore {
      /** Immutable. Whether data in the DataStore has ACL information. If set to `true`, the source data must have ACL. ACL will be ingested when data is ingested by DocumentService.ImportDocuments methods. When ACL is enabled for the DataStore, Document can't be accessed by calling DocumentService.GetDocument or DocumentService.ListDocuments. Currently ACL is only supported in `GENERIC` industry vertical with non-`PUBLIC_WEBSITE` content config. */
      aclEnabled?: boolean;
      /** Optional. Configuration for advanced site search. */
      advancedSiteSearchConfig?: GoogleCloudDiscoveryengineV1alphaAdvancedSiteSearchConfig;
      /** Output only. Data size estimation for billing. */
      billingEstimation?: GoogleCloudDiscoveryengineV1alphaDataStoreBillingEstimation;
      /** Output only. CMEK-related information for the DataStore. */
      cmekConfig?: GoogleCloudDiscoveryengineV1alphaCmekConfig;
      /** Immutable. The content config of the data store. If this field is unset, the server behavior defaults to ContentConfig.NO_CONTENT. */
      contentConfig?: string;
      /** Output only. Timestamp the DataStore was created at. */
      createTime?: string;
      /** Output only. The id of the default Schema asscociated to this data store. */
      defaultSchemaId?: string;
      /** Required. The data store display name. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. */
      displayName?: string;
      /** Configuration for Document understanding and enrichment. */
      documentProcessingConfig?: GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig;
      /** Optional. Configuration for `HEALTHCARE_FHIR` vertical. */
      healthcareFhirConfig?: GoogleCloudDiscoveryengineV1alphaHealthcareFhirConfig;
      /** Output only. Data store level identity provider config. */
      idpConfig?: GoogleCloudDiscoveryengineV1alphaIdpConfig;
      /** Immutable. The industry vertical that the data store registers. */
      industryVertical?: string;
      /** Optional. If set, this DataStore is an Infobot FAQ DataStore. */
      isInfobotFaqDataStore?: boolean;
      /** Input only. The KMS key to be used to protect this DataStore at creation time. Must be set for requests that need to comply with CMEK Org Policy protections. If this field is set and processed successfully, the DataStore will be protected by the KMS key, as indicated in the cmek_config field. */
      kmsKeyName?: string;
      /** Language info for DataStore. */
      languageInfo?: GoogleCloudDiscoveryengineV1alphaLanguageInfo;
      /** Immutable. The full resource name of the data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
      name?: string;
      /** Optional. Configuration for Natural Language Query Understanding. */
      naturalLanguageQueryUnderstandingConfig?: GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig;
      /** Optional. Stores serving config at DataStore level. */
      servingConfigDataStore?: GoogleCloudDiscoveryengineV1alphaDataStoreServingConfigDataStore;
      /** The solutions that the data store enrolls. Available solutions for each industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION` and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is automatically enrolled. Other solutions cannot be enrolled. */
      solutionTypes?: string[];
      /** The start schema to use for this DataStore when provisioning it. If unset, a default vertical specialized schema will be used. This field is only used by CreateDataStore API, and will be ignored if used in other APIs. This field will be omitted from all API responses including CreateDataStore API. To retrieve a schema of a DataStore, use SchemaService.GetSchema API instead. The provided schema will be validated against certain rules on schema. Learn more from [this doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema). */
      startingSchema?: GoogleCloudDiscoveryengineV1alphaSchema;
      /** Config to store data store type configuration for workspace data. This must be set when DataStore.content_config is set as DataStore.ContentConfig.GOOGLE_WORKSPACE. */
      workspaceConfig?: GoogleCloudDiscoveryengineV1alphaWorkspaceConfig;
    }
    interface GoogleCloudDiscoveryengineV1alphaDataStoreBillingEstimation {
      /** Data size for structured data in terms of bytes. */
      structuredDataSize?: string;
      /** Last updated timestamp for structured data. */
      structuredDataUpdateTime?: string;
      /** Data size for unstructured data in terms of bytes. */
      unstructuredDataSize?: string;
      /** Last updated timestamp for unstructured data. */
      unstructuredDataUpdateTime?: string;
      /** Data size for websites in terms of bytes. */
      websiteDataSize?: string;
      /** Last updated timestamp for websites. */
      websiteDataUpdateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaDataStoreServingConfigDataStore {
      /** If set true, the DataStore will not be available for serving search requests. */
      disabledForServing?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1alphaDedicatedCrawlRateTimeSeries {
      /** Vertex AI's dedicated crawl rate time series of auto-refresh, which is the crawl rate of Google-CloudVertexBot when dedicate crawl is set, and the crawl rate is for best effort use cases like refreshing urls periodically. */
      autoRefreshCrawlRate?: GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries;
      /** Vertex AI's dedicated crawl rate time series of user triggered crawl, which is the crawl rate of Google-CloudVertexBot when dedicate crawl is set, and user triggered crawl rate is for deterministic use cases like crawling urls or sitemaps specified by users. */
      userTriggeredCrawlRate?: GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries;
    }
    interface GoogleCloudDiscoveryengineV1alphaDeleteCollectionMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaDeleteDataStoreMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaDeleteEngineMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaDeleteIdentityMappingStoreMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaDeleteSchemaMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaDeleteSessionRequest {
      /** Required. The resource name of the Session to delete. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}` */
      name?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaDeleteSitemapMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaDeleteTargetSiteMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaDestinationConfig {
      /** Optional. The destinations for the corresponding key. */
      destinations?: GoogleCloudDiscoveryengineV1alphaDestinationConfigDestination[];
      /** Optional. Unique destination identifier that is supported by the connector. */
      key?: string;
      /** Optional. Additional parameters for this destination config. */
      params?: {[P in string]: any};
    }
    interface GoogleCloudDiscoveryengineV1alphaDestinationConfigDestination {
      /** Publicly routable host. */
      host?: string;
      /** Optional. Target port number accepted by the destination. */
      port?: number;
    }
    interface GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchResponse {}
    interface GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig {
      /** Whether chunking mode is enabled. */
      chunkingConfig?: GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfig;
      /** Configurations for default Document parser. If not specified, we will configure it as default DigitalParsingConfig, and the default parsing config will be applied to all file types for Document parsing. */
      defaultParsingConfig?: GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig;
      /** The full resource name of the Document Processing Config. Format: `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/documentProcessingConfig`. */
      name?: string;
      /** Map from file type to override the default parsing configuration based on the file type. Supported keys: * `pdf`: Override parsing config for PDF files, either digital parsing, ocr parsing or layout parsing is supported. * `html`: Override parsing config for HTML files, only digital parsing and layout parsing are supported. * `docx`: Override parsing config for DOCX files, only digital parsing and layout parsing are supported. * `pptx`: Override parsing config for PPTX files, only digital parsing and layout parsing are supported. * `xlsm`: Override parsing config for XLSM files, only digital parsing and layout parsing are supported. * `xlsx`: Override parsing config for XLSX files, only digital parsing and layout parsing are supported. */
      parsingConfigOverrides?: {
        [P in string]: GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig;
      };
    }
    interface GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfig {
      /** Configuration for the layout based chunking. */
      layoutBasedChunkingConfig?: GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig;
    }
    interface GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig {
      /** The token size limit for each chunk. Supported values: 100-500 (inclusive). Default value: 500. */
      chunkSize?: number;
      /** Whether to include appending different levels of headings to chunks from the middle of the document to prevent context loss. Default value: False. */
      includeAncestorHeadings?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig {
      /** Configurations applied to digital parser. */
      digitalParsingConfig?: any;
      /** Configurations applied to layout parser. */
      layoutParsingConfig?: any;
      /** Configurations applied to OCR parser. Currently it only applies to PDFs. */
      ocrParsingConfig?: GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigOcrParsingConfig;
    }
    interface GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigDigitalParsingConfig {}
    interface GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigLayoutParsingConfig {}
    interface GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigOcrParsingConfig {
      /** [DEPRECATED] This field is deprecated. To use the additional enhanced document elements processing, please switch to `layout_parsing_config`. */
      enhancedDocumentElements?: string[];
      /** If true, will use native text instead of OCR text on pages containing native text. */
      useNativeText?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchResponse {}
    interface GoogleCloudDiscoveryengineV1alphaEngine {
      /** Configurations for the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT. */
      chatEngineConfig?: GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig;
      /** Output only. Additional information of the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT. */
      chatEngineMetadata?: GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata;
      /** Common config spec that specifies the metadata of the engine. */
      commonConfig?: GoogleCloudDiscoveryengineV1alphaEngineCommonConfig;
      /** Output only. Timestamp the Recommendation Engine was created at. */
      createTime?: string;
      /** The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with at most one data store. If solution_type is SOLUTION_TYPE_CHAT, multiple DataStores in the same Collection can be associated here. Note that when used in CreateEngineRequest, one DataStore id must be provided as the system will use it for necessary initializations. */
      dataStoreIds?: string[];
      /** Optional. Whether to disable analytics for searches performed on this engine. */
      disableAnalytics?: boolean;
      /** Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters. */
      displayName?: string;
      /** The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: Vertical on Engine has to match vertical of the DataStore linked to the engine. */
      industryVertical?: string;
      /** Configurations for the Media Engine. Only applicable on the data stores with solution_type SOLUTION_TYPE_RECOMMENDATION and IndustryVertical.MEDIA vertical. */
      mediaRecommendationEngineConfig?: GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig;
      /** Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded string with a length limit of 1024 characters. Format: `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}` engine should be 1-63 characters, and valid characters are /a-z0-9*‍/. Otherwise, an INVALID_ARGUMENT error is returned. */
      name?: string;
      /** Output only. Additional information of a recommendation engine. Only applicable if solution_type is SOLUTION_TYPE_RECOMMENDATION. */
      recommendationMetadata?: GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata;
      /** Configurations for the Search Engine. Only applicable if solution_type is SOLUTION_TYPE_SEARCH. */
      searchEngineConfig?: GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig;
      /** Additional config specs for a `similar-items` engine. */
      similarDocumentsConfig?: any;
      /** Required. The solutions of the engine. */
      solutionType?: string;
      /** Output only. Timestamp the Recommendation Engine was last updated. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig {
      /** The configurationt generate the Dialogflow agent that is associated to this Engine. Note that these configurations are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation. */
      agentCreationConfig?: GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig;
      /** The resource name of an exist Dialogflow agent to link to this Chat Engine. Customers can either provide `agent_creation_config` to create agent or provide an agent name that links the agent with the Chat engine. Format: `projects//locations//agents/`. Note that the `dialogflow_agent_to_link` are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation. Use ChatEngineMetadata.dialogflow_agent for actual agent association after Engine is created. */
      dialogflowAgentToLink?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig {
      /** Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search. */
      business?: string;
      /** Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. */
      defaultLanguageCode?: string;
      /** Agent location for Agent creation, supported values: global/us/eu. If not provided, us Engine will create Agent using us-central-1 by default; eu Engine will create Agent using eu-west-1 by default. */
      location?: string;
      /** Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. */
      timeZone?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata {
      /** The resource name of a Dialogflow agent, that this Chat Engine refers to. Format: `projects//locations//agents/`. */
      dialogflowAgent?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaEngineCommonConfig {
      /** The name of the company, business or entity that is associated with the engine. Setting this may help improve LLM related features. */
      companyName?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig {
      /** The optimization objective. e.g., `cvr`. This field together with optimization_objective describe engine metadata to use to control engine training and serving. Currently supported values: `ctr`, `cvr`. If not specified, we choose default based on engine type. Default depends on type of recommendation: `recommended-for-you` => `ctr` `others-you-may-like` => `ctr` */
      optimizationObjective?: string;
      /** Name and value of the custom threshold for cvr optimization_objective. For target_field `watch-time`, target_field_value must be an integer value indicating the media progress time in seconds between (0, 86400] (excludes 0, includes 86400) (e.g., 90). For target_field `watch-percentage`, the target_field_value must be a valid float value between (0, 1.0] (excludes 0, includes 1.0) (e.g., 0.5). */
      optimizationObjectiveConfig?: GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig;
      /** The training state that the engine is in (e.g. `TRAINING` or `PAUSED`). Since part of the cost of running the service is frequency of training - this can be used to determine when to train engine in order to control cost. If not specified: the default value for `CreateEngine` method is `TRAINING`. The default value for `UpdateEngine` method is to keep the state the same as before. */
      trainingState?: string;
      /** Required. The type of engine. e.g., `recommended-for-you`. This field together with optimization_objective describe engine metadata to use to control engine training and serving. Currently supported values: `recommended-for-you`, `others-you-may-like`, `more-like-this`, `most-popular-items`. */
      type?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig {
      /** Required. The name of the field to target. Currently supported values: `watch-percentage`, `watch-time`. */
      targetField?: string;
      /** Required. The threshold to be applied to the target (e.g., 0.5). */
      targetFieldValueFloat?: number;
    }
    interface GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata {
      /** Output only. The state of data requirements for this engine: `DATA_OK` and `DATA_ERROR`. Engine cannot be trained if the data is in `DATA_ERROR` state. Engine can have `DATA_ERROR` state even if serving state is `ACTIVE`: engines were trained successfully before, but cannot be refreshed because the underlying engine no longer has sufficient data for training. */
      dataState?: string;
      /** Output only. The timestamp when the latest successful tune finished. Only applicable on Media Recommendation engines. */
      lastTuneTime?: string;
      /** Output only. The serving state of the engine: `ACTIVE`, `NOT_ACTIVE`. */
      servingState?: string;
      /** Output only. The latest tune operation id associated with the engine. Only applicable on Media Recommendation engines. If present, this operation id can be used to determine if there is an ongoing tune for this engine. To check the operation status, send the GetOperation request with this operation id in the engine resource format. If no tuning has happened for this engine, the string is empty. */
      tuningOperation?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig {
      /** The add-on that this search engine enables. */
      searchAddOns?: string[];
      /** The search feature tier of this engine. Different tiers might have different pricing. To learn more, check the pricing documentation. Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified. */
      searchTier?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaEngineSimilarDocumentsEngineConfig {}
    interface GoogleCloudDiscoveryengineV1alphaEstimateDataSizeMetadata {
      /** Operation create time. */
      createTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaEstimateDataSizeResponse {
      /** Data size in terms of bytes. */
      dataSizeBytes?: string;
      /** Total number of documents. */
      documentCount?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaEvaluation {
      /** Output only. Timestamp the Evaluation was created at. */
      createTime?: string;
      /** Output only. Timestamp the Evaluation was completed at. */
      endTime?: string;
      /** Output only. The error that occurred during evaluation. Only populated when the evaluation's state is FAILED. */
      error?: GoogleRpcStatus;
      /** Output only. A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
      /** Required. The specification of the evaluation. */
      evaluationSpec?: GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpec;
      /** Identifier. The full resource name of the Evaluation, in the format of `projects/{project}/locations/{location}/evaluations/{evaluation}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
      name?: string;
      /** Output only. The metrics produced by the evaluation, averaged across all SampleQuerys in the SampleQuerySet. Only populated when the evaluation's state is SUCCEEDED. */
      qualityMetrics?: GoogleCloudDiscoveryengineV1alphaQualityMetrics;
      /** Output only. The state of the evaluation. */
      state?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpec {
      /** Required. The specification of the query set. */
      querySetSpec?: GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpecQuerySetSpec;
      /** Required. The search request that is used to perform the evaluation. Only the following fields within SearchRequest are supported; if any other fields are provided, an UNSUPPORTED error will be returned: * SearchRequest.serving_config * SearchRequest.branch * SearchRequest.canonical_filter * SearchRequest.query_expansion_spec * SearchRequest.spell_correction_spec * SearchRequest.content_search_spec * SearchRequest.user_pseudo_id */
      searchRequest?: GoogleCloudDiscoveryengineV1alphaSearchRequest;
    }
    interface GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpecQuerySetSpec {
      /** Required. The full resource name of the SampleQuerySet used for the evaluation, in the format of `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`. */
      sampleQuerySet?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaFetchSitemapsResponse {
      /** List of Sitemaps fetched. */
      sitemapsMetadata?: GoogleCloudDiscoveryengineV1alphaFetchSitemapsResponseSitemapMetadata[];
    }
    interface GoogleCloudDiscoveryengineV1alphaFetchSitemapsResponseSitemapMetadata {
      /** The Sitemap. */
      sitemap?: GoogleCloudDiscoveryengineV1alphaSitemap;
    }
    interface GoogleCloudDiscoveryengineV1alphaFieldConfig {
      /** If this field is set, only the corresponding source will be indexed for this field. Otherwise, the values from different sources are merged. Assuming a page with `` in meta tag, and `` in page map: if this enum is set to METATAGS, we will only index ``; if this enum is not set, we will merge them and index ``. */
      advancedSiteSearchDataSources?: string[];
      /** If completable_option is COMPLETABLE_ENABLED, field values are directly used and returned as suggestions for Autocomplete in CompletionService.CompleteQuery. If completable_option is unset, the server behavior defaults to COMPLETABLE_DISABLED for fields that support setting completable options, which are just `string` fields. For those fields that do not support setting completable options, the server will skip completable option setting, and setting completable_option for those fields will throw `INVALID_ARGUMENT` error. */
      completableOption?: string;
      /** If dynamic_facetable_option is DYNAMIC_FACETABLE_ENABLED, field values are available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if FieldConfig.indexable_option is INDEXABLE_DISABLED. Otherwise, an `INVALID_ARGUMENT` error will be returned. If dynamic_facetable_option is unset, the server behavior defaults to DYNAMIC_FACETABLE_DISABLED for fields that support setting dynamic facetable options. For those fields that do not support setting dynamic facetable options, such as `object` and `boolean`, the server will skip dynamic facetable option setting, and setting dynamic_facetable_option for those fields will throw `INVALID_ARGUMENT` error. */
      dynamicFacetableOption?: string;
      /** Required. Field path of the schema field. For example: `title`, `description`, `release_info.release_year`. */
      fieldPath?: string;
      /** Output only. Raw type of the field. */
      fieldType?: string;
      /** If indexable_option is INDEXABLE_ENABLED, field values are indexed so that it can be filtered or faceted in SearchService.Search. If indexable_option is unset, the server behavior defaults to INDEXABLE_DISABLED for fields that support setting indexable options. For those fields that do not support setting indexable options, such as `object` and `boolean` and key properties, the server will skip indexable_option setting, and setting indexable_option for those fields will throw `INVALID_ARGUMENT` error. */
      indexableOption?: string;
      /** Output only. Type of the key property that this field is mapped to. Empty string if this is not annotated as mapped to a key property. Example types are `title`, `description`. Full list is defined by `keyPropertyMapping` in the schema field annotation. If the schema field has a `KeyPropertyMapping` annotation, `indexable_option` and `searchable_option` of this field cannot be modified. */
      keyPropertyType?: string;
      /** Optional. The metatag name found in the HTML page. If user defines this field, the value of this metatag name will be used to extract metatag. If the user does not define this field, the FieldConfig.field_path will be used to extract metatag. */
      metatagName?: string;
      /** If recs_filterable_option is FILTERABLE_ENABLED, field values are filterable by filter expression in RecommendationService.Recommend. If FILTERABLE_ENABLED but the field type is numerical, field values are not filterable by text queries in RecommendationService.Recommend. Only textual fields are supported. If recs_filterable_option is unset, the default setting is FILTERABLE_DISABLED for fields that support setting filterable options. When a field set to [FILTERABLE_DISABLED] is filtered, a warning is generated and an empty result is returned. */
      recsFilterableOption?: string;
      /** If retrievable_option is RETRIEVABLE_ENABLED, field values are included in the search results. If retrievable_option is unset, the server behavior defaults to RETRIEVABLE_DISABLED for fields that support setting retrievable options. For those fields that do not support setting retrievable options, such as `object` and `boolean`, the server will skip retrievable option setting, and setting retrievable_option for those fields will throw `INVALID_ARGUMENT` error. */
      retrievableOption?: string;
      /** Field paths for indexing custom attribute from schema.org data. More details of schema.org and its defined types can be found at [schema.org](https://schema.org). It is only used on advanced site search schema. Currently only support full path from root. The full path to a field is constructed by concatenating field names, starting from `_root`, with a period `.` as the delimiter. Examples: * Publish date of the root: _root.datePublished * Publish date of the reviews: _root.review.datePublished */
      schemaOrgPaths?: string[];
      /** If searchable_option is SEARCHABLE_ENABLED, field values are searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED but field type is numerical, field values will not be searchable by text queries in SearchService.Search, as there are no text values associated to numerical fields. If searchable_option is unset, the server behavior defaults to SEARCHABLE_DISABLED for fields that support setting searchable options. Only `string` fields that have no key property mapping support setting searchable_option. For those fields that do not support setting searchable options, the server will skip searchable option setting, and setting searchable_option for those fields will throw `INVALID_ARGUMENT` error. */
      searchableOption?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaGetSessionRequest {
      /** Optional. If set to true, the full session including all answer details will be returned. */
      includeAnswerDetails?: boolean;
      /** Required. The resource name of the Session to get. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}` */
      name?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaGetUriPatternDocumentDataResponse {
      /** Document data keyed by URI pattern. For example: document_data_map = { "www.url1.com/*": { "Categories": ["category1", "category2"] }, "www.url2.com/*": { "Categories": ["category3"] } } */
      documentDataMap?: {[P in string]: {[P in string]: any}};
    }
    interface GoogleCloudDiscoveryengineV1alphaHealthcareFhirConfig {
      /** Whether to enable configurable schema for `HEALTHCARE_FHIR` vertical. If set to `true`, the predefined healthcare fhir schema can be extended for more customized searching and filtering. */
      enableConfigurableSchema?: boolean;
      /** Whether to enable static indexing for `HEALTHCARE_FHIR` batch ingestion. If set to `true`, the batch ingestion will be processed in a static indexing mode which is slower but more capable of handling larger volume. */
      enableStaticIndexingForBatchIngestion?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1alphaIdentityMappingEntryOperationMetadata {
      /** The number of IdentityMappingEntries that failed to be processed. */
      failureCount?: string;
      /** The number of IdentityMappingEntries that were successfully processed. */
      successCount?: string;
      /** The total number of IdentityMappingEntries that were processed. */
      totalCount?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaIdentityScheduleConfig {
      /** Optional. The UTC time when the next data sync is expected to start for the Data Connector. Customers are only able to specify the hour and minute to schedule the data sync. This is utilized when the data connector has a refresh interval greater than 1 day. */
      nextSyncTime?: GoogleTypeDateTime;
      /** Optional. The refresh interval to sync the Access Control List information for the documents ingested by this connector. If not set, the access control list will be refreshed at the default interval of 30 minutes. The identity refresh interval can be at least 30 minutes and at most 7 days. */
      refreshInterval?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaIdpConfig {
      /** External Identity provider config. */
      externalIdpConfig?: GoogleCloudDiscoveryengineV1alphaIdpConfigExternalIdpConfig;
      /** Identity provider type configured. */
      idpType?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaIdpConfigExternalIdpConfig {
      /** Workforce pool name. Example: "locations/global/workforcePools/pool_id" */
      workforcePoolName?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaImportCompletionSuggestionsMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Count of CompletionSuggestions that failed to be imported. */
      failureCount?: string;
      /** Count of CompletionSuggestions successfully imported. */
      successCount?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaImportCompletionSuggestionsResponse {
      /** The desired location of errors incurred during the Import. */
      errorConfig?: GoogleCloudDiscoveryengineV1alphaImportErrorConfig;
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
    }
    interface GoogleCloudDiscoveryengineV1alphaImportDocumentsMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Count of entries that encountered errors while processing. */
      failureCount?: string;
      /** Count of entries that were processed successfully. */
      successCount?: string;
      /** Total count of entries that were processed. */
      totalCount?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaImportDocumentsResponse {
      /** Echoes the destination for the complete errors in the request if set. */
      errorConfig?: GoogleCloudDiscoveryengineV1alphaImportErrorConfig;
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
    }
    interface GoogleCloudDiscoveryengineV1alphaImportErrorConfig {
      /** Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message. */
      gcsPrefix?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaImportIdentityMappingsResponse {
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
    }
    interface GoogleCloudDiscoveryengineV1alphaImportSampleQueriesMetadata {
      /** ImportSampleQueries operation create time. */
      createTime?: string;
      /** Count of SampleQuerys that failed to be imported. */
      failureCount?: string;
      /** Count of SampleQuerys successfully imported. */
      successCount?: string;
      /** Total count of SampleQuerys that were processed. */
      totalCount?: string;
      /** ImportSampleQueries operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaImportSampleQueriesResponse {
      /** The desired location of errors incurred during the Import. */
      errorConfig?: GoogleCloudDiscoveryengineV1alphaImportErrorConfig;
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
    }
    interface GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse {
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
      /** Count of deny list entries that failed to be imported. */
      failedEntriesCount?: string;
      /** Count of deny list entries successfully imported. */
      importedEntriesCount?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaImportUserEventsMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Count of entries that encountered errors while processing. */
      failureCount?: string;
      /** Count of entries that were processed successfully. */
      successCount?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse {
      /** Echoes the destination for the complete errors if this field was set in the request. */
      errorConfig?: GoogleCloudDiscoveryengineV1alphaImportErrorConfig;
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
      /** Count of user events imported with complete existing Documents. */
      joinedEventsCount?: string;
      /** Count of user events imported, but with Document information not found in the existing Branch. */
      unjoinedEventsCount?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaInterval {
      /** Exclusive upper bound. */
      exclusiveMaximum?: number;
      /** Exclusive lower bound. */
      exclusiveMinimum?: number;
      /** Inclusive upper bound. */
      maximum?: number;
      /** Inclusive lower bound. */
      minimum?: number;
    }
    interface GoogleCloudDiscoveryengineV1alphaLanguageInfo {
      /** Output only. Language part of normalized_language_code. E.g.: `en-US` -> `en`, `zh-Hans-HK` -> `zh`, `en` -> `en`. */
      language?: string;
      /** The language code for the DataStore. */
      languageCode?: string;
      /** Output only. This is the normalized form of language_code. E.g.: language_code of `en-GB`, `en_GB`, `en-UK` or `en-gb` will have normalized_language_code of `en-GB`. */
      normalizedLanguageCode?: string;
      /** Output only. Region part of normalized_language_code, if present. E.g.: `en-US` -> `US`, `zh-Hans-HK` -> `HK`, `en` -> ``. */
      region?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaListSessionsRequest {
      /** A filter to apply on the list results. The supported features are: user_pseudo_id, state. Example: "user_pseudo_id = some_id" */
      filter?: string;
      /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `update_time` * `create_time` * `session_name` * `is_pinned` Example: * "update_time desc" * "create_time" * "is_pinned desc,update_time desc": list sessions by is_pinned first, then by update_time. */
      orderBy?: string;
      /** Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000. */
      pageSize?: number;
      /** A page token, received from a previous `ListSessions` call. Provide this to retrieve the subsequent page. */
      pageToken?: string;
      /** Required. The data store resource name. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
      parent?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaListSessionsResponse {
      /** Pagination token, if not returned indicates the last page. */
      nextPageToken?: string;
      /** All the Sessions for a given data store. */
      sessions?: GoogleCloudDiscoveryengineV1alphaSession[];
    }
    interface GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig {
      /** Mode of Natural Language Query Understanding. If this field is unset, the behavior defaults to NaturalLanguageQueryUnderstandingConfig.Mode.DISABLED. */
      mode?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaObtainCrawlRateResponse {
      /** The historical dedicated crawl rate timeseries data, used for monitoring. */
      dedicatedCrawlRateTimeSeries?: GoogleCloudDiscoveryengineV1alphaDedicatedCrawlRateTimeSeries;
      /** Errors from service when handling the request. */
      error?: GoogleRpcStatus;
      /** The historical organic crawl rate timeseries data, used for monitoring. */
      organicCrawlRateTimeSeries?: GoogleCloudDiscoveryengineV1alphaOrganicCrawlRateTimeSeries;
      /** Output only. The state of the response. */
      state?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaOrganicCrawlRateTimeSeries {
      /** Google's organic crawl rate time series, which is the sum of all googlebots' crawl rate. Please refer to https://developers.google.com/search/docs/crawling-indexing/overview-google-crawlers for more details about googlebots. */
      googleOrganicCrawlRate?: GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries;
      /** Vertex AI's organic crawl rate time series, which is the crawl rate of Google-CloudVertexBot when dedicate crawl is not set. Please refer to https://developers.google.com/search/docs/crawling-indexing/google-common-crawlers#google-cloudvertexbot for more details about Google-CloudVertexBot. */
      vertexAiOrganicCrawlRate?: GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries;
    }
    interface GoogleCloudDiscoveryengineV1alphaProject {
      /** Output only. The timestamp when this project is created. */
      createTime?: string;
      /** Output only. Full resource name of the project, for example `projects/{project}`. Note that when making requests, project number and project id are both acceptable, but the server will always respond in project number. */
      name?: string;
      /** Output only. The timestamp when this project is successfully provisioned. Empty value means this project is still provisioning and is not ready for use. */
      provisionCompletionTime?: string;
      /** Output only. A map of terms of services. The key is the `id` of ServiceTerms. */
      serviceTermsMap?: {
        [P in string]: GoogleCloudDiscoveryengineV1alphaProjectServiceTerms;
      };
    }
    interface GoogleCloudDiscoveryengineV1alphaProjectServiceTerms {
      /** The last time when the project agreed to the terms of service. */
      acceptTime?: string;
      /** The last time when the project declined or revoked the agreement to terms of service. */
      declineTime?: string;
      /** The unique identifier of this terms of service. Available terms: * `GA_DATA_USE_TERMS`: [Terms for data use](https://cloud.google.com/retail/data-use-terms). When using this as `id`, the acceptable version to provide is `2022-11-23`. */
      id?: string;
      /** Whether the project has accepted/rejected the service terms or it is still pending. */
      state?: string;
      /** The version string of the terms of service. For acceptable values, see the comments for id above. */
      version?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaProvisionProjectMetadata {}
    interface GoogleCloudDiscoveryengineV1alphaPurgeCompletionSuggestionsMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaPurgeCompletionSuggestionsResponse {
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
      /** Whether the completion suggestions were successfully purged. */
      purgeSucceeded?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1alphaPurgeDocumentsMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Count of entries that encountered errors while processing. */
      failureCount?: string;
      /** Count of entries that were ignored as entries were not found. */
      ignoredCount?: string;
      /** Count of entries that were deleted successfully. */
      successCount?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaPurgeDocumentsResponse {
      /** The total count of documents purged as a result of the operation. */
      purgeCount?: string;
      /** A sample of document names that will be deleted. Only populated if `force` is set to false. A max of 100 names will be returned and the names are chosen at random. */
      purgeSample?: string[];
    }
    interface GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesResponse {
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
      /** Number of suggestion deny list entries purged. */
      purgeCount?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaPurgeUserEventsMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Count of entries that encountered errors while processing. */
      failureCount?: string;
      /** Count of entries that were deleted successfully. */
      successCount?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse {
      /** The total count of events purged as a result of the operation. */
      purgeCount?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaQualityMetrics {
      /** Normalized discounted cumulative gain (NDCG) per document, at various top-k cutoff levels. NDCG measures the ranking quality, giving higher relevance to top results. Example (top-3): Suppose SampleQuery with three retrieved documents (D1, D2, D3) and binary relevance judgements (1 for relevant, 0 for not relevant): Retrieved: [D3 (0), D1 (1), D2 (1)] Ideal: [D1 (1), D2 (1), D3 (0)] Calculate NDCG@3 for each SampleQuery: * DCG@3: 0/log2(1+1) + 1/log2(2+1) + 1/log2(3+1) = 1.13 * Ideal DCG@3: 1/log2(1+1) + 1/log2(2+1) + 0/log2(3+1) = 1.63 * NDCG@3: 1.13/1.63 = 0.693 */
      docNdcg?: GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics;
      /** Precision per document, at various top-k cutoff levels. Precision is the fraction of retrieved documents that are relevant. Example (top-5): * For a single SampleQuery, If 4 out of 5 retrieved documents in the top-5 are relevant, precision@5 = 4/5 = 0.8 */
      docPrecision?: GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics;
      /** Recall per document, at various top-k cutoff levels. Recall is the fraction of relevant documents retrieved out of all relevant documents. Example (top-5): * For a single SampleQuery, If 3 out of 5 relevant documents are retrieved in the top-5, recall@5 = 3/5 = 0.6 */
      docRecall?: GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics;
      /** Normalized discounted cumulative gain (NDCG) per page, at various top-k cutoff levels. NDCG measures the ranking quality, giving higher relevance to top results. Example (top-3): Suppose SampleQuery with three retrieved pages (P1, P2, P3) and binary relevance judgements (1 for relevant, 0 for not relevant): Retrieved: [P3 (0), P1 (1), P2 (1)] Ideal: [P1 (1), P2 (1), P3 (0)] Calculate NDCG@3 for SampleQuery: * DCG@3: 0/log2(1+1) + 1/log2(2+1) + 1/log2(3+1) = 1.13 * Ideal DCG@3: 1/log2(1+1) + 1/log2(2+1) + 0/log2(3+1) = 1.63 * NDCG@3: 1.13/1.63 = 0.693 */
      pageNdcg?: GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics;
      /** Recall per page, at various top-k cutoff levels. Recall is the fraction of relevant pages retrieved out of all relevant pages. Example (top-5): * For a single SampleQuery, if 3 out of 5 relevant pages are retrieved in the top-5, recall@5 = 3/5 = 0.6 */
      pageRecall?: GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics;
    }
    interface GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics {
      /** The top-1 value. */
      top1?: number;
      /** The top-10 value. */
      top10?: number;
      /** The top-3 value. */
      top3?: number;
      /** The top-5 value. */
      top5?: number;
    }
    interface GoogleCloudDiscoveryengineV1alphaQuery {
      /** Unique Id for the query. */
      queryId?: string;
      /** Plain text. */
      text?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Unique URIs in the request that have invalid format. Sample limited to 1000. */
      invalidUris?: string[];
      /** Total number of unique URIs in the request that have invalid format. */
      invalidUrisCount?: number;
      /** URIs that have no index meta tag. Sample limited to 1000. */
      noindexUris?: string[];
      /** Total number of URIs that have no index meta tag. */
      noindexUrisCount?: number;
      /** Total number of URIs that have yet to be crawled. */
      pendingCount?: number;
      /** Total number of URIs that were rejected due to insufficient indexing resources. */
      quotaExceededCount?: number;
      /** Total number of URIs that have been crawled so far. */
      successCount?: number;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
      /** Unique URIs in the request that don't match any TargetSite in the DataStore, only match TargetSites that haven't been fully indexed, or match a TargetSite with type EXCLUDE. Sample limited to 1000. */
      urisNotMatchingTargetSites?: string[];
      /** Total number of URIs that don't match any TargetSites. */
      urisNotMatchingTargetSitesCount?: number;
      /** Total number of unique URIs in the request that are not in invalid_uris. */
      validUrisCount?: number;
    }
    interface GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponse {
      /** URIs that were not crawled before the LRO terminated. */
      failedUris?: string[];
      /** Details for a sample of up to 10 `failed_uris`. */
      failureSamples?: GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfo[];
    }
    interface GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfo {
      /** List of failure reasons by corpus type (e.g. desktop, mobile). */
      failureReasons?: GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason[];
      /** URI that failed to be crawled. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason {
      /** DESKTOP, MOBILE, or CORPUS_TYPE_UNSPECIFIED. */
      corpusType?: string;
      /** Reason why the URI was not crawled. */
      errorMessage?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaRemoveDedicatedCrawlRateMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaRemoveDedicatedCrawlRateResponse {
      /** Errors from service when handling the request. */
      error?: GoogleRpcStatus;
      /** Output only. The state of the response. */
      state?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSafetyRating {
      /** Output only. Indicates whether the content was filtered out because of this rating. */
      blocked?: boolean;
      /** Output only. Harm category. */
      category?: string;
      /** Output only. Harm probability levels in the content. */
      probability?: string;
      /** Output only. Harm probability score. */
      probabilityScore?: number;
      /** Output only. Harm severity levels in the content. */
      severity?: string;
      /** Output only. Harm severity score. */
      severityScore?: number;
    }
    interface GoogleCloudDiscoveryengineV1alphaSchema {
      /** Output only. Configurations for fields of the schema. */
      fieldConfigs?: GoogleCloudDiscoveryengineV1alphaFieldConfig[];
      /** The JSON representation of the schema. */
      jsonSchema?: string;
      /** Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
      name?: string;
      /** The structured representation of the schema. */
      structSchema?: {[P in string]: any};
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchLinkPromotion {
      /** Optional. The Promotion description. Maximum length: 200 characters. */
      description?: string;
      /** Optional. The enabled promotion will be returned for any serving configs associated with the parent of the control this promotion is attached to. This flag is used for basic site search only. */
      enabled?: boolean;
      /** Optional. The promotion thumbnail image url. */
      imageUri?: string;
      /** Required. The title of the promotion. Maximum length: 160 characters. */
      title?: string;
      /** Required. The URL for the page the user wants to promote. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequest {
      /** Boost specification to boost certain documents. For more information on boosting, see [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results) */
      boostSpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec;
      /** The branch resource name, such as `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store/branches/0`. Use `default_branch` as the branch ID or leave this field empty, to search documents under the default branch. */
      branch?: string;
      /** The default filter that is applied when a user performs a search without checking any filters on the search page. The filter applied to every search request when quality improvement such as query expansion is needed. In the case a query does not have a sufficient amount of results this filter will be used to determine whether or not to enable the query expansion flow. The original filter will still be used for the query expanded search. This field is strongly recommended to achieve high search quality. For more information about filter syntax, see SearchRequest.filter. */
      canonicalFilter?: string;
      /** A specification for configuring the behavior of content search. */
      contentSearchSpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec;
      /** Custom fine tuning configs. If set, it has higher priority than the configs set in ServingConfig.custom_fine_tuning_spec. */
      customFineTuningSpec?: GoogleCloudDiscoveryengineV1alphaCustomFineTuningSpec;
      /** Specs defining DataStores to filter on in a search call and configurations for those data stores. This is only considered for Engines with multiple data stores. For engines with a single data store, the specs directly under SearchRequest should be used. */
      dataStoreSpecs?: GoogleCloudDiscoveryengineV1alphaSearchRequestDataStoreSpec[];
      /** Uses the provided embedding to do additional semantic document retrieval. The retrieval is based on the dot product of SearchRequest.EmbeddingSpec.EmbeddingVector.vector and the document embedding that is provided in SearchRequest.EmbeddingSpec.EmbeddingVector.field_path. If SearchRequest.EmbeddingSpec.EmbeddingVector.field_path is not provided, it will use ServingConfig.EmbeddingConfig.field_path. */
      embeddingSpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpec;
      /** Facet specifications for faceted search. If empty, no facets are returned. A maximum of 100 values are allowed. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      facetSpecs?: GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec[];
      /** The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. Filter expression is case-sensitive. If this field is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this mapping is defined by the customer in their schema. For example a media customer might have a field 'name' in their schema. In this case the filter would look like this: filter --> name:'ANY("king kong")' For more information about filtering including syntax and filter operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata) */
      filter?: string;
      /** Raw image query. */
      imageQuery?: GoogleCloudDiscoveryengineV1alphaSearchRequestImageQuery;
      /** The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see [Standard fields](https://cloud.google.com/apis/design/standard_fields). This field helps to better interpret the query. If a value isn't specified, the query language code is automatically detected, which may not be accurate. */
      languageCode?: string;
      /** If `naturalLanguageQueryUnderstandingSpec` is not specified, no additional natural language query understanding will be done. */
      naturalLanguageQueryUnderstandingSpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec;
      /** A 0-indexed integer that specifies the current offset (that is, starting result location, amongst the Documents deemed by the API as relevant) in search results. This field is only considered if page_token is unset. If this field is negative, an `INVALID_ARGUMENT` is returned. */
      offset?: number;
      /** The maximum number of results to return for OneBox. This applies to each OneBox type individually. Default number is 10. */
      oneBoxPageSize?: number;
      /** The order in which documents are returned. Documents can be ordered by a field in an Document object. Leave it unset if ordered by relevance. `order_by` expression is case-sensitive. For more information on ordering the website search results, see [Order web search results](https://cloud.google.com/generative-ai-app-builder/docs/order-web-search-results). For more information on ordering the healthcare search results, see [Order healthcare search results](https://cloud.google.com/generative-ai-app-builder/docs/order-hc-results). If this field is unrecognizable, an `INVALID_ARGUMENT` is returned. */
      orderBy?: string;
      /** Maximum number of Documents to return. The maximum allowed value depends on the data type. Values above the maximum value are coerced to the maximum value. * Websites with basic indexing: Default `10`, Maximum `25`. * Websites with advanced indexing: Default `25`, Maximum `50`. * Other: Default `50`, Maximum `100`. If this field is negative, an `INVALID_ARGUMENT` is returned. */
      pageSize?: number;
      /** A page token received from a previous SearchService.Search call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to SearchService.Search must match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      pageToken?: string;
      /** Additional search parameters. For public website search only, supported values are: * `user_country_code`: string. Default empty. If set to non-empty, results are restricted or boosted based on the location provided. For example, `user_country_code: "au"` For available codes see [Country Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes) * `search_type`: double. Default empty. Enables non-webpage searching depending on the value. The only valid non-default value is 1, which enables image searching. For example, `search_type: 1` */
      params?: {[P in string]: any};
      /** The specification for personalization. Notice that if both ServingConfig.personalization_spec and SearchRequest.personalization_spec are set, SearchRequest.personalization_spec overrides ServingConfig.personalization_spec. */
      personalizationSpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestPersonalizationSpec;
      /** Raw search query. */
      query?: string;
      /** The query expansion specification that specifies the conditions under which query expansion occurs. */
      queryExpansionSpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec;
      /** The ranking expression controls the customized ranking on retrieval documents. This overrides ServingConfig.ranking_expression. The ranking expression is a single function or multiple functions that are joined by "+". * ranking_expression = function, { " + ", function }; Supported functions: * double * relevance_score * double * dotProduct(embedding_field_path) Function variables: * `relevance_score`: pre-defined keywords, used for measure relevance between query and document. * `embedding_field_path`: the document embedding field used with query embedding vector. * `dotProduct`: embedding function between embedding_field_path and query embedding vector. Example ranking expression: If document has an embedding field doc_embedding, the ranking expression could be `0.5 * relevance_score + 0.3 * dotProduct(doc_embedding)`. */
      rankingExpression?: string;
      /** The Unicode country/region code (CLDR) of a location, such as "US" and "419". For more information, see [Standard fields](https://cloud.google.com/apis/design/standard_fields). If set, then results will be boosted based on the region_code provided. */
      regionCode?: string;
      /** The relevance threshold of the search results. Default to Google defined threshold, leveraging a balance of precision and recall to deliver both highly accurate results and comprehensive coverage of relevant information. */
      relevanceThreshold?: string;
      /** Whether to turn on safe search. This is only supported for website search. */
      safeSearch?: boolean;
      /** Search as you type configuration. Only supported for the IndustryVertical.MEDIA vertical. */
      searchAsYouTypeSpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec;
      /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
      servingConfig?: string;
      /** The session resource name. Optional. Session allows users to do multi-turn /search API calls or coordination between /search API calls and /answer API calls. Example #1 (multi-turn /search API calls): 1. Call /search API with the auto-session mode (see below). 2. Call /search API with the session ID generated in the first call. Here, the previous search query gets considered in query standing. I.e., if the first query is "How did Alphabet do in 2022?" and the current query is "How about 2023?", the current query will be interpreted as "How did Alphabet do in 2023?". Example #2 (coordination between /search API calls and /answer API calls): 1. Call /search API with the auto-session mode (see below). 2. Call /answer API with the session ID generated in the first call. Here, the answer generation happens in the context of the search results from the first search call. Auto-session mode: when `projects/.../sessions/-` is used, a new session gets automatically created. Otherwise, users can use the create-session API to create a session manually. Multi-turn Search feature is currently at private GA stage. Please use v1alpha or v1beta version instead before we launch this feature to public GA. Or ask for allowlisting through Google Support team. */
      session?: string;
      /** Session specification. Can be used only when `session` is set. */
      sessionSpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestSessionSpec;
      /** The spell correction specification that specifies the mode under which spell correction takes effect. */
      spellCorrectionSpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec;
      /** Information about the end user. Highly recommended for analytics and personalization. UserInfo.user_agent is used to deduce `device_type` for analytics. */
      userInfo?: GoogleCloudDiscoveryengineV1alphaUserInfo;
      /** The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details. */
      userLabels?: {[P in string]: string};
      /** A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This field should NOT have a fixed value such as `unknown_visitor`. This should be the same identifier as UserEvent.user_pseudo_id and CompleteQueryRequest.user_pseudo_id The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      userPseudoId?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec {
      /** Condition boost specifications. If a document matches multiple conditions in the specifictions, boost scores from these specifications are all applied and combined in a non-linear way. Maximum number of specifications is 20. */
      conditionBoostSpecs?: GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpec[];
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpec {
      /** Strength of the condition boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the document a big promotion. However, it does not necessarily mean that the boosted document will be the top result at all times, nor that other documents will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant documents. Setting to -1.0 gives the document a big demotion. However, results that are deeply relevant might still be shown. The document will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored. Only one of the (condition, boost) combination or the boost_control_spec below are set. If both are set then the global boost is ignored and the more fine-grained boost_control_spec is applied. */
      boost?: number;
      /** Complex specification for custom ranking based on customer defined attribute value. */
      boostControlSpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec;
      /** An expression which specifies a boost condition. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost documents with document ID "doc_1" or "doc_2", and color "Red" or "Blue": `(document_id: ANY("doc_1", "doc_2")) AND (color: ANY("Red", "Blue"))` */
      condition?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec {
      /** The attribute type to be used to determine the boost amount. The attribute value can be derived from the field value of the specified field_name. In the case of numerical it is straightforward i.e. attribute_value = numerical_field_value. In the case of freshness however, attribute_value = (time.now() - datetime_field_value). */
      attributeType?: string;
      /** The control points used to define the curve. The monotonic function (defined through the interpolation_type above) passes through the control points listed here. */
      controlPoints?: GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint[];
      /** The name of the field whose value will be used to determine the boost amount. */
      fieldName?: string;
      /** The interpolation type to be applied to connect the control points listed below. */
      interpolationType?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint {
      /** Can be one of: 1. The numerical field value. 2. The duration spec for freshness: The value must be formatted as an XSD `dayTimeDuration` value (a restricted subset of an ISO 8601 duration value). The pattern for this is: `nDnM]`. */
      attributeValue?: string;
      /** The value between -1 to 1 by which to boost the score if the attribute_value evaluates to the value specified above. */
      boostAmount?: number;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec {
      /** Specifies the chunk spec to be returned from the search response. Only available if the SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS */
      chunkSpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecChunkSpec;
      /** If there is no extractive_content_spec provided, there will be no extractive answer in the search response. */
      extractiveContentSpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec;
      /** Specifies the search result mode. If unspecified, the search result mode defaults to `DOCUMENTS`. */
      searchResultMode?: string;
      /** If `snippetSpec` is not specified, snippets are not included in the search response. */
      snippetSpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSnippetSpec;
      /** If `summarySpec` is not specified, summaries are not included in the search response. */
      summarySpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpec;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecChunkSpec {
      /** The number of next chunks to be returned of the current chunk. The maximum allowed value is 3. If not specified, no next chunks will be returned. */
      numNextChunks?: number;
      /** The number of previous chunks to be returned of the current chunk. The maximum allowed value is 3. If not specified, no previous chunks will be returned. */
      numPreviousChunks?: number;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec {
      /** The maximum number of extractive answers returned in each search result. An extractive answer is a verbatim answer extracted from the original document, which provides a precise and contextually relevant answer to the search query. If the number of matching answers is less than the `max_extractive_answer_count`, return all of the answers. Otherwise, return the `max_extractive_answer_count`. At most five answers are returned for each SearchResult. */
      maxExtractiveAnswerCount?: number;
      /** The max number of extractive segments returned in each search result. Only applied if the DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types is SOLUTION_TYPE_CHAT. An extractive segment is a text segment extracted from the original document that is relevant to the search query, and, in general, more verbose than an extractive answer. The segment could then be used as input for LLMs to generate summaries and answers. If the number of matching segments is less than `max_extractive_segment_count`, return all of the segments. Otherwise, return the `max_extractive_segment_count`. */
      maxExtractiveSegmentCount?: number;
      /** Return at most `num_next_segments` segments after each selected segments. */
      numNextSegments?: number;
      /** Specifies whether to also include the adjacent from each selected segments. Return at most `num_previous_segments` segments before each selected segments. */
      numPreviousSegments?: number;
      /** Specifies whether to return the confidence score from the extractive segments in each search result. This feature is available only for new or allowlisted data stores. To allowlist your data store, contact your Customer Engineer. The default value is `false`. */
      returnExtractiveSegmentScore?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSnippetSpec {
      /** [DEPRECATED] This field is deprecated. To control snippet return, use `return_snippet` field. For backwards compatibility, we will return snippet if max_snippet_count > 0. */
      maxSnippetCount?: number;
      /** [DEPRECATED] This field is deprecated and will have no affect on the snippet. */
      referenceOnly?: boolean;
      /** If `true`, then return snippet. If no snippet can be generated, we return "No snippet is available for this page." A `snippet_status` with `SUCCESS` or `NO_SNIPPET_AVAILABLE` will also be returned. */
      returnSnippet?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpec {
      /** Specifies whether to filter out adversarial queries. The default value is `false`. Google employs search-query classification to detect adversarial queries. No summary is returned if the search query is classified as an adversarial query. For example, a user might ask a question regarding negative comments about the company or submit a query designed to generate unsafe, policy-violating output. If this field is set to `true`, we skip generating summaries for adversarial queries and return fallback messages instead. */
      ignoreAdversarialQuery?: boolean;
      /** Optional. Specifies whether to filter out jail-breaking queries. The default value is `false`. Google employs search-query classification to detect jail-breaking queries. No summary is returned if the search query is classified as a jail-breaking query. A user might add instructions to the query to change the tone, style, language, content of the answer, or ask the model to act as a different entity, e.g. "Reply in the tone of a competing company's CEO". If this field is set to `true`, we skip generating summaries for jail-breaking queries and return fallback messages instead. */
      ignoreJailBreakingQuery?: boolean;
      /** Specifies whether to filter out queries that have low relevance. The default value is `false`. If this field is set to `false`, all search results are used regardless of relevance to generate answers. If set to `true`, only queries with high relevance search results will generate answers. */
      ignoreLowRelevantContent?: boolean;
      /** Specifies whether to filter out queries that are not summary-seeking. The default value is `false`. Google employs search-query classification to detect summary-seeking queries. No summary is returned if the search query is classified as a non-summary seeking query. For example, `why is the sky blue` and `Who is the best soccer player in the world?` are summary-seeking queries, but `SFO airport` and `world cup 2026` are not. They are most likely navigational queries. If this field is set to `true`, we skip generating summaries for non-summary seeking queries and return fallback messages instead. */
      ignoreNonSummarySeekingQuery?: boolean;
      /** Specifies whether to include citations in the summary. The default value is `false`. When this field is set to `true`, summaries include in-line citation numbers. Example summary including citations: BigQuery is Google Cloud's fully managed and completely serverless enterprise data warehouse [1]. BigQuery supports all data types, works across clouds, and has built-in machine learning and business intelligence, all within a unified platform [2, 3]. The citation numbers refer to the returned search results and are 1-indexed. For example, [1] means that the sentence is attributed to the first search result. [2, 3] means that the sentence is attributed to both the second and third search results. */
      includeCitations?: boolean;
      /** Language code for Summary. Use language tags defined by [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an experimental feature. */
      languageCode?: string;
      /** If specified, the spec will be used to modify the prompt provided to the LLM. */
      modelPromptSpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelPromptSpec;
      /** If specified, the spec will be used to modify the model specification provided to the LLM. */
      modelSpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelSpec;
      /** The number of top results to generate the summary from. If the number of results returned is less than `summaryResultCount`, the summary is generated from all of the results. At most 10 results for documents mode, or 50 for chunks mode, can be used to generate a summary. The chunks mode is used when SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS. */
      summaryResultCount?: number;
      /** If true, answer will be generated from most relevant chunks from top search results. This feature will improve summary quality. Note that with this feature enabled, not all top search results will be referenced and included in the reference list, so the citation source index only points to the search results listed in the reference list. */
      useSemanticChunks?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelPromptSpec {
      /** Text at the beginning of the prompt that instructs the assistant. Examples are available in the user guide. */
      preamble?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelSpec {
      /** The model version used to generate the summary. Supported values are: * `stable`: string. Default value when no value is specified. Uses a generally available, fine-tuned model. For more information, see [Answer generation model versions and lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models). * `preview`: string. (Public preview) Uses a preview model. For more information, see [Answer generation model versions and lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models). */
      version?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestDataStoreSpec {
      /** Optional. Boost specification to boost certain documents. For more information on boosting, see [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results) */
      boostSpec?: GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec;
      /** Required. Full resource name of DataStore, such as `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. */
      dataStore?: string;
      /** Optional. Filter specification to filter documents in the data store specified by data_store field. For more information on filtering, see [Filtering](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata) */
      filter?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpec {
      /** The embedding vector used for retrieval. Limit to 1. */
      embeddingVectors?: GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpecEmbeddingVector[];
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpecEmbeddingVector {
      /** Embedding field path in schema. */
      fieldPath?: string;
      /** Query embedding vector. */
      vector?: number[];
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec {
      /** Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined automatically. If dynamic facets are enabled, it is ordered together. If set to false, the position of this facet in the response is the same as in the request, and it is ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it's not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response is determined automatically. Another example, assuming you have the following facets in the request: * "rating", enable_dynamic_position = true * "price", enable_dynamic_position = false * "brands", enable_dynamic_position = false And also you have a dynamic facets enabled, which generates a facet `gender`. Then the final order of the facets in the response can be ("price", "brands", "rating", "gender") or ("price", "brands", "gender", "rating") depends on how API orders "gender" and "rating" facets. However, notice that "price" and "brands" are always ranked at first and second position because their enable_dynamic_position is false. */
      enableDynamicPosition?: boolean;
      /** List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. Listing a facet key in this field allows its values to appear as facet results, even when they are filtered out of search results. Using this field does not affect what search results are returned. For example, suppose there are 100 documents with the color facet "Red" and 200 documents with the color facet "Blue". A query containing the filter "color:ANY("Red")" and having "color" as FacetKey.key would by default return only "Red" documents in the search results, and also return "Red" with count 100 as the only color facet. Although there are also blue documents available, "Blue" would not be shown as an available facet value. If "color" is listed in "excludedFilterKeys", then the query returns the facet values "Red" with count 100 and "Blue" with count 200, because the "color" key is now excluded from the filter. Because this field doesn't affect search results, the search results are still correctly filtered to return only "Red" documents. A maximum of 100 values are allowed. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      excludedFilterKeys?: string[];
      /** Required. The facet key specification. */
      facetKey?: GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey;
      /** Maximum facet values that are returned for this facet. If unspecified, defaults to 20. The maximum allowed value is 300. Values above 300 are coerced to 300. For aggregation in healthcare search, when the [FacetKey.key] is "healthcare_aggregation_key", the limit will be overridden to 10,000 internally, regardless of the value set here. If this field is negative, an `INVALID_ARGUMENT` is returned. */
      limit?: number;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey {
      /** True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise. */
      caseInsensitive?: boolean;
      /** Only get facet values that contain the given strings. For example, suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "contains" to "2022", the "category" facet only contains "Action > 2022" and "Sci-Fi > 2022". Only supported on textual fields. Maximum is 10. */
      contains?: string[];
      /** Set only if values should be bucketed into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 30. */
      intervals?: GoogleCloudDiscoveryengineV1alphaInterval[];
      /** Required. Supported textual and numerical facet keys in Document object, over which the facet values are computed. Facet key is case-sensitive. */
      key?: string;
      /** The order in which documents are returned. Allowed values are: * "count desc", which means order by SearchResponse.Facet.values.count descending. * "value desc", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals. */
      orderBy?: string;
      /** Only get facet values that start with the given string prefix. For example, suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "prefixes" to "Action", the "category" facet only contains "Action > 2022" and "Action > 2021". Only supported on textual fields. Maximum is 10. */
      prefixes?: string[];
      /** Only get facet for the given restricted values. Only supported on textual fields. For example, suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "restricted_values" to "Action > 2022", the "category" facet only contains "Action > 2022". Only supported on textual fields. Maximum is 10. */
      restrictedValues?: string[];
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestImageQuery {
      /** Base64 encoded image bytes. Supported image formats: JPEG, PNG, and BMP. */
      imageBytes?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec {
      /** The condition under which filter extraction should occur. Server behavior defaults to `DISABLED`. */
      filterExtractionCondition?: string;
      /** Field names used for location-based filtering, where geolocation filters are detected in natural language search queries. Only valid when the FilterExtractionCondition is set to `ENABLED`. If this field is set, it overrides the field names set in ServingConfig.geo_search_query_detection_field_names. */
      geoSearchQueryDetectionFieldNames?: string[];
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestPersonalizationSpec {
      /** The personalization mode of the search request. Defaults to Mode.AUTO. */
      mode?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec {
      /** The condition under which query expansion should occur. Default to Condition.DISABLED. */
      condition?: string;
      /** Whether to pin unexpanded results. If this field is set to true, unexpanded products are always at the top of the search results, followed by the expanded results. */
      pinUnexpandedResults?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec {
      /** The condition under which search as you type should occur. Default to Condition.DISABLED. */
      condition?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestSessionSpec {
      /** If set, the search result gets stored to the "turn" specified by this query ID. Example: Let's say the session looks like this: session { name: ".../sessions/xxx" turns { query { text: "What is foo?" query_id: ".../questions/yyy" } answer: "Foo is ..." } turns { query { text: "How about bar then?" query_id: ".../questions/zzz" } } } The user can call /search API with a request like this: session: ".../sessions/xxx" session_spec { query_id: ".../questions/zzz" } Then, the API stores the search result, associated with the last turn. The stored search result can be used by a subsequent /answer API call (with the session ID and the query ID specified). Also, it is possible to call /search and /answer in parallel with the same session ID & query ID. */
      queryId?: string;
      /** The number of top search results to persist. The persisted search results can be used for the subsequent /answer api call. This field is simliar to the `summary_result_count` field in SearchRequest.ContentSearchSpec.SummarySpec.summary_result_count. At most 10 results for documents mode, or 50 for chunks mode. */
      searchResultPersistenceCount?: number;
    }
    interface GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec {
      /** The mode under which spell correction replaces the original search query. Defaults to Mode.AUTO. */
      mode?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSession {
      /** Optional. The display name of the session. This field is used to identify the session in the UI. By default, the display name is the first turn query text in the session. */
      displayName?: string;
      /** Output only. The time the session finished. */
      endTime?: string;
      /** Optional. Whether the session is pinned, pinned session will be displayed on the top of the session list. */
      isPinned?: boolean;
      /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*` */
      name?: string;
      /** Output only. The time the session started. */
      startTime?: string;
      /** The state of the session. */
      state?: string;
      /** Turns. */
      turns?: GoogleCloudDiscoveryengineV1alphaSessionTurn[];
      /** A unique identifier for tracking users. */
      userPseudoId?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSessionTurn {
      /** The resource name of the answer to the user query. Only set if the answer generation (/answer API call) happened in this turn. */
      answer?: string;
      /** Output only. In ConversationalSearchService.GetSession API, if GetSessionRequest.include_answer_details is set to true, this field will be populated when getting answer query session. */
      detailedAnswer?: GoogleCloudDiscoveryengineV1alphaAnswer;
      /** The user query. */
      query?: GoogleCloudDiscoveryengineV1alphaQuery;
    }
    interface GoogleCloudDiscoveryengineV1alphaSetDedicatedCrawlRateMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSetDedicatedCrawlRateResponse {
      /** Errors from service when handling the request. */
      error?: GoogleRpcStatus;
      /** Output only. The state of the response. */
      state?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSetUpDataConnectorMetadata {}
    interface GoogleCloudDiscoveryengineV1alphaSetUriPatternDocumentDataMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSetUriPatternDocumentDataResponse {}
    interface GoogleCloudDiscoveryengineV1alphaSingleRegionKey {
      /** Required. Single-regional kms key resource name which will be used to encrypt resources `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`. */
      kmsKey?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSitemap {
      /** Output only. The sitemap's creation time. */
      createTime?: string;
      /** Output only. The fully qualified resource name of the sitemap. `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/siteSearchEngine/sitemaps/*` The `sitemap_id` suffix is system-generated. */
      name?: string;
      /** Public URI for the sitemap, e.g. `www.example.com/sitemap.xml`. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo {
      /** Site verification state indicating the ownership and validity. */
      siteVerificationState?: string;
      /** Latest site verification time. */
      verifyTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaTargetSite {
      /** Immutable. If set to false, a uri_pattern is generated to include all pages whose address contains the provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one. provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine. */
      exactMatch?: boolean;
      /** Output only. Failure reason. */
      failureReason?: GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason;
      /** Output only. This is system-generated based on the provided_uri_pattern. */
      generatedUriPattern?: string;
      /** Output only. Indexing status. */
      indexingStatus?: string;
      /** Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}` The `target_site_id` is system-generated. */
      name?: string;
      /** Required. Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated. */
      providedUriPattern?: string;
      /** Output only. Root domain of the provided_uri_pattern. */
      rootDomainUri?: string;
      /** Output only. Site ownership and validity verification status. */
      siteVerificationInfo?: GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo;
      /** The type of the target site, e.g., whether the site is to be included or excluded. */
      type?: string;
      /** Output only. The target site's last updated time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason {
      /** Failed due to insufficient quota. */
      quotaFailure?: GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure;
    }
    interface GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure {
      /** This number is an estimation on how much total quota this project needs to successfully complete indexing. */
      totalRequiredQuota?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaTrainCustomModelMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaTrainCustomModelResponse {
      /** Echoes the destination for the complete errors in the request if set. */
      errorConfig?: GoogleCloudDiscoveryengineV1alphaImportErrorConfig;
      /** A sample of errors encountered while processing the data. */
      errorSamples?: GoogleRpcStatus[];
      /** The metrics of the trained model. */
      metrics?: {[P in string]: number};
      /** Fully qualified name of the CustomTuningModel. */
      modelName?: string;
      /** The trained model status. Possible values are: * **bad-data**: The training data quality is bad. * **no-improvement**: Tuning didn't improve performance. Won't deploy. * **in-progress**: Model training job creation is in progress. * **training**: Model is actively training. * **evaluating**: The model is evaluating trained metrics. * **indexing**: The model trained metrics are indexing. * **ready**: The model is ready for serving. */
      modelStatus?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaTuneEngineMetadata {
      /** Required. The resource name of the engine that this tune applies to. Format: `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}` */
      engine?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaTuneEngineResponse {}
    interface GoogleCloudDiscoveryengineV1alphaUpdateCmekConfigMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaUpdateCollectionMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaUpdateSchemaMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaUpdateSessionRequest {
      /** Required. The Session to update. */
      session?: GoogleCloudDiscoveryengineV1alphaSession;
      /** Indicates which fields in the provided Session to update. The following are NOT supported: * Session.name If not set or empty, all supported fields are updated. */
      updateMask?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaUpdateTargetSiteMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaUserInfo {
      /** User agent as included in the HTTP header. The field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. This should not be set when using the client side event reporting with GTM or JavaScript tag in UserEventService.CollectUserEvent or if UserEvent.direct_user_request is set. */
      userAgent?: string;
      /** Highly recommended for logged-in users. Unique identifier for logged-in user, such as a user name. Don't set for anonymous users. Always use a hashed value for this ID. Don't set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      userId?: string;
    }
    interface GoogleCloudDiscoveryengineV1alphaWorkspaceConfig {
      /** Obfuscated Dasher customer ID. */
      dasherCustomerId?: string;
      /** Optional. The super admin email address for the workspace that will be used for access token generation. For now we only use it for Native Google Drive connector data ingestion. */
      superAdminEmailAddress?: string;
      /** Optional. The super admin service account for the workspace that will be used for access token generation. For now we only use it for Native Google Drive connector data ingestion. */
      superAdminServiceAccount?: string;
      /** The Google Workspace data source. */
      type?: string;
    }
    interface GoogleCloudDiscoveryengineV1BatchCreateTargetSiteMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1BatchCreateTargetSitesResponse {
      /** TargetSites created. */
      targetSites?: GoogleCloudDiscoveryengineV1TargetSite[];
    }
    interface GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest {
      /** Optional. Specification to boost suggestions matching the condition. */
      boostSpec?: GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequestBoostSpec;
      /** Indicates if tail suggestions should be returned if there are no suggestions that match the full query. Even if set to true, if there are suggestions that match the full query, those are returned and no tail suggestions are returned. */
      includeTailSuggestions?: boolean;
      /** Required. The typeahead input used to fetch suggestions. Maximum length is 128 characters. The query can not be empty for most of the suggestion types. If it is empty, an `INVALID_ARGUMENT` error is returned. The exception is when the suggestion_types contains only the type `RECENT_SEARCH`, the query can be an empty string. The is called "zero prefix" feature, which returns user's recently searched queries given the empty query. */
      query?: string;
      /** Specifies the autocomplete data model. This overrides any model specified in the Configuration > Autocomplete section of the Cloud console. Currently supported values: * `document` - Using suggestions generated from user-imported documents. * `search-history` - Using suggestions generated from the past history of SearchService.Search API calls. Do not use it when there is no traffic for Search API. * `user-event` - Using suggestions generated from user-imported search events. * `document-completable` - Using suggestions taken directly from user-imported document fields marked as completable. Default values: * `document` is the default model for regular dataStores. * `search-history` is the default model for site search dataStores. */
      queryModel?: string;
      /** Optional. Suggestion types to return. If empty or unspecified, query suggestions are returned. Only one suggestion type is supported at the moment. */
      suggestionTypes?: string[];
      /** Optional. Specification of each suggestion type. */
      suggestionTypeSpecs?: GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequestSuggestionTypeSpec[];
      /** Optional. Information about the end user. This should be the same identifier information as UserEvent.user_info and SearchRequest.user_info. */
      userInfo?: GoogleCloudDiscoveryengineV1betaUserInfo;
      /** A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This field should NOT have a fixed value such as `unknown_visitor`. This should be the same identifier as UserEvent.user_pseudo_id and SearchRequest.user_pseudo_id. The field must be a UTF-8 encoded string with a length limit of 128 */
      userPseudoId?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequestBoostSpec {
      /** Condition boost specifications. If a suggestion matches multiple conditions in the specifictions, boost values from these specifications are all applied and combined in a non-linear way. Maximum number of specifications is 20. Note: Currently only support language condition boost. */
      conditionBoostSpecs?: GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequestBoostSpecConditionBoostSpec[];
    }
    interface GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequestBoostSpecConditionBoostSpec {
      /** Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the suggestions a big promotion. However, it does not necessarily mean that the top result will be a boosted suggestion. Setting to -1.0 gives the suggestions a big demotion. However, other suggestions that are relevant might still be shown. Setting to 0.0 means no boost applied. The boosting condition is ignored. */
      boost?: number;
      /** An expression which specifies a boost condition. The syntax is the same as [filter expression syntax](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata#filter-expression-syntax). Currently, the only supported condition is a list of BCP-47 lang codes. Example: * To boost suggestions in languages `en` or `fr`: `(lang_code: ANY("en", "fr"))` */
      condition?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequestSuggestionTypeSpec {
      /** Optional. Maximum number of suggestions to return for each suggestion type. */
      maxSuggestions?: number;
      /** Optional. Suggestion type. */
      suggestionType?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponse {
      /** Results of the matched content suggestions. The result list is ordered and the first result is the top suggestion. */
      contentSuggestions?: GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponseContentSuggestion[];
      /** Results of the matched people suggestions. The result list is ordered and the first result is the top suggestion. */
      peopleSuggestions?: GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponsePersonSuggestion[];
      /** Results of the matched query suggestions. The result list is ordered and the first result is a top suggestion. */
      querySuggestions?: GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponseQuerySuggestion[];
      /** Results of the matched "recent search" suggestions. The result list is ordered and the first result is the top suggestion. */
      recentSearchSuggestions?: GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponseRecentSearchSuggestion[];
      /** True if the returned suggestions are all tail suggestions. For tail matching to be triggered, include_tail_suggestions in the request must be true and there must be no suggestions that match the full query. */
      tailMatchTriggered?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponseContentSuggestion {
      /** The type of the content suggestion. */
      contentType?: string;
      /** The name of the dataStore that this suggestion belongs to. */
      dataStore?: string;
      /** The document data snippet in the suggestion. Only a subset of fields will be populated. */
      document?: GoogleCloudDiscoveryengineV1betaDocument;
      /** The suggestion for the query. */
      suggestion?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponsePersonSuggestion {
      /** The name of the dataStore that this suggestion belongs to. */
      dataStore?: string;
      /** The document data snippet in the suggestion. Only a subset of fields is populated. */
      document?: GoogleCloudDiscoveryengineV1betaDocument;
      /** The type of the person. */
      personType?: string;
      /** The suggestion for the query. */
      suggestion?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponseQuerySuggestion {
      /** The unique document field paths that serve as the source of this suggestion if it was generated from completable fields. This field is only populated for the document-completable model. */
      completableFieldPaths?: string[];
      /** The name of the dataStore that this suggestion belongs to. */
      dataStore?: string[];
      /** The suggestion for the query. */
      suggestion?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponseRecentSearchSuggestion {
      /** The time when this recent rearch happened. */
      recentSearchTime?: string;
      /** The suggestion for the query. */
      suggestion?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAdvancedSiteSearchConfig {
      /** If set true, automatic refresh is disabled for the DataStore. */
      disableAutomaticRefresh?: boolean;
      /** If set true, initial indexing is disabled for the DataStore. */
      disableInitialIndex?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaAlloyDbSource {
      /** Required. The AlloyDB cluster to copy the data from with a length limit of 256 characters. */
      clusterId?: string;
      /** Required. The AlloyDB database to copy the data from with a length limit of 256 characters. */
      databaseId?: string;
      /** Intermediate Cloud Storage directory used for the import with a length limit of 2,000 characters. Can be specified if one wants to have the AlloyDB export to a specific Cloud Storage directory. Ensure that the AlloyDB service account has the necessary Cloud Storage Admin permissions to access the specified Cloud Storage directory. */
      gcsStagingDir?: string;
      /** Required. The AlloyDB location to copy the data from with a length limit of 256 characters. */
      locationId?: string;
      /** The project ID that contains the AlloyDB source. Has a length limit of 128 characters. If not specified, inherits the project ID from the parent request. */
      projectId?: string;
      /** Required. The AlloyDB table to copy the data from with a length limit of 256 characters. */
      tableId?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswer {
      /** Additional answer-skipped reasons. This provides the reason for ignored cases. If nothing is skipped, this field is not set. */
      answerSkippedReasons?: string[];
      /** The textual answer. */
      answerText?: string;
      /** Citations. */
      citations?: GoogleCloudDiscoveryengineV1betaAnswerCitation[];
      /** Output only. Answer completed timestamp. */
      completeTime?: string;
      /** Output only. Answer creation timestamp. */
      createTime?: string;
      /** A score in the range of [0, 1] describing how grounded the answer is by the reference chunks. */
      groundingScore?: number;
      /** Optional. Grounding supports. */
      groundingSupports?: GoogleCloudDiscoveryengineV1betaAnswerGroundingSupport[];
      /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*‍/answers/*` */
      name?: string;
      /** Query understanding information. */
      queryUnderstandingInfo?: GoogleCloudDiscoveryengineV1betaAnswerQueryUnderstandingInfo;
      /** References. */
      references?: GoogleCloudDiscoveryengineV1betaAnswerReference[];
      /** Suggested related questions. */
      relatedQuestions?: string[];
      /** Optional. Safety ratings. */
      safetyRatings?: GoogleCloudDiscoveryengineV1betaSafetyRating[];
      /** The state of the answer generation. */
      state?: string;
      /** Answer generation steps. */
      steps?: GoogleCloudDiscoveryengineV1betaAnswerStep[];
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerCitation {
      /** End of the attributed segment, exclusive. */
      endIndex?: string;
      /** Citation sources for the attributed segment. */
      sources?: GoogleCloudDiscoveryengineV1betaAnswerCitationSource[];
      /** Index indicates the start of the segment, measured in bytes (UTF-8 unicode). */
      startIndex?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerCitationSource {
      /** ID of the citation source. */
      referenceId?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerGroundingSupport {
      /** Required. End of the claim, exclusive. */
      endIndex?: string;
      /** Indicates that this claim required grounding check. When the system decided this claim didn't require attribution/grounding check, this field is set to false. In that case, no grounding check was done for the claim and therefore `grounding_score`, `sources` is not returned. */
      groundingCheckRequired?: boolean;
      /** A score in the range of [0, 1] describing how grounded is a specific claim by the references. Higher value means that the claim is better supported by the reference chunks. */
      groundingScore?: number;
      /** Optional. Citation sources for the claim. */
      sources?: GoogleCloudDiscoveryengineV1betaAnswerCitationSource[];
      /** Required. Index indicates the start of the claim, measured in bytes (UTF-8 unicode). */
      startIndex?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequest {
      /** Answer generation specification. */
      answerGenerationSpec?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestAnswerGenerationSpec;
      /** Deprecated: This field is deprecated. Streaming Answer API will be supported. Asynchronous mode control. If enabled, the response will be returned with answer/session resource name without final answer. The API users need to do the polling to get the latest status of answer/session by calling ConversationalSearchService.GetAnswer or ConversationalSearchService.GetSession method. */
      asynchronousMode?: boolean;
      /** Optional. End user specification. */
      endUserSpec?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestEndUserSpec;
      /** Optional. Grounding specification. */
      groundingSpec?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestGroundingSpec;
      /** Required. Current user query. */
      query?: GoogleCloudDiscoveryengineV1betaQuery;
      /** Query understanding specification. */
      queryUnderstandingSpec?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestQueryUnderstandingSpec;
      /** Related questions specification. */
      relatedQuestionsSpec?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestRelatedQuestionsSpec;
      /** Model specification. */
      safetySpec?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSafetySpec;
      /** Search specification. */
      searchSpec?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpec;
      /** The session resource name. Not required. When session field is not set, the API is in sessionless mode. We support auto session mode: users can use the wildcard symbol `-` as session ID. A new ID will be automatically generated and assigned. */
      session?: string;
      /** The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details. */
      userLabels?: {[P in string]: string};
      /** A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This field should NOT have a fixed value such as `unknown_visitor`. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      userPseudoId?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestAnswerGenerationSpec {
      /** Language code for Answer. Use language tags defined by [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an experimental feature. */
      answerLanguageCode?: string;
      /** Specifies whether to filter out adversarial queries. The default value is `false`. Google employs search-query classification to detect adversarial queries. No answer is returned if the search query is classified as an adversarial query. For example, a user might ask a question regarding negative comments about the company or submit a query designed to generate unsafe, policy-violating output. If this field is set to `true`, we skip generating answers for adversarial queries and return fallback messages instead. */
      ignoreAdversarialQuery?: boolean;
      /** Optional. Specifies whether to filter out jail-breaking queries. The default value is `false`. Google employs search-query classification to detect jail-breaking queries. No summary is returned if the search query is classified as a jail-breaking query. A user might add instructions to the query to change the tone, style, language, content of the answer, or ask the model to act as a different entity, e.g. "Reply in the tone of a competing company's CEO". If this field is set to `true`, we skip generating summaries for jail-breaking queries and return fallback messages instead. */
      ignoreJailBreakingQuery?: boolean;
      /** Specifies whether to filter out queries that have low relevance. If this field is set to `false`, all search results are used regardless of relevance to generate answers. If set to `true` or unset, the behavior will be determined automatically by the service. */
      ignoreLowRelevantContent?: boolean;
      /** Specifies whether to filter out queries that are not answer-seeking. The default value is `false`. Google employs search-query classification to detect answer-seeking queries. No answer is returned if the search query is classified as a non-answer seeking query. If this field is set to `true`, we skip generating answers for non-answer seeking queries and return fallback messages instead. */
      ignoreNonAnswerSeekingQuery?: boolean;
      /** Specifies whether to include citation metadata in the answer. The default value is `false`. */
      includeCitations?: boolean;
      /** Answer generation model specification. */
      modelSpec?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestAnswerGenerationSpecModelSpec;
      /** Answer generation prompt specification. */
      promptSpec?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestAnswerGenerationSpecPromptSpec;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestAnswerGenerationSpecModelSpec {
      /** Model version. If not set, it will use the default stable model. Allowed values are: stable, preview. */
      modelVersion?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestAnswerGenerationSpecPromptSpec {
      /** Customized preamble. */
      preamble?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestEndUserSpec {
      /** Optional. End user metadata. */
      endUserMetadata?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestEndUserSpecEndUserMetaData[];
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestEndUserSpecEndUserMetaData {
      /** Chunk information. */
      chunkInfo?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestEndUserSpecEndUserMetaDataChunkInfo;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestEndUserSpecEndUserMetaDataChunkInfo {
      /** Chunk textual content. It is limited to 8000 characters. */
      content?: string;
      /** Metadata of the document from the current chunk. */
      documentMetadata?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestEndUserSpecEndUserMetaDataChunkInfoDocumentMetadata;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestEndUserSpecEndUserMetaDataChunkInfoDocumentMetadata {
      /** Title of the document. */
      title?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestGroundingSpec {
      /** Optional. Specifies whether to enable the filtering based on grounding score and at what level. */
      filteringLevel?: string;
      /** Optional. Specifies whether to include grounding_supports in the answer. The default value is `false`. When this field is set to `true`, returned answer will have `grounding_score` and will contain GroundingSupports for each claim. */
      includeGroundingSupports?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestQueryUnderstandingSpec {
      /** Query classification specification. */
      queryClassificationSpec?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestQueryUnderstandingSpecQueryClassificationSpec;
      /** Query rephraser specification. */
      queryRephraserSpec?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpec;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestQueryUnderstandingSpecQueryClassificationSpec {
      /** Enabled query classification types. */
      types?: string[];
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpec {
      /** Disable query rephraser. */
      disable?: boolean;
      /** Max rephrase steps. The max number is 5 steps. If not set or set to < 1, it will be set to 1 by default. */
      maxRephraseSteps?: number;
      /** Optional. Query Rephraser Model specification. */
      modelSpec?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpecModelSpec;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpecModelSpec {
      /** Optional. Enabled query rephraser model type. If not set, it will use LARGE by default. */
      modelType?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestRelatedQuestionsSpec {
      /** Enable related questions feature if true. */
      enable?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSafetySpec {
      /** Enable the safety filtering on the answer response. It is false by default. */
      enable?: boolean;
      /** Optional. Safety settings. This settings are effective only when the safety_spec.enable is true. */
      safetySettings?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSafetySpecSafetySetting[];
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSafetySpecSafetySetting {
      /** Required. Harm category. */
      category?: string;
      /** Required. The harm block threshold. */
      threshold?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpec {
      /** Search parameters. */
      searchParams?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchParams;
      /** Search result list. */
      searchResultList?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultList;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchParams {
      /** Boost specification to boost certain documents in search results which may affect the answer query response. For more information on boosting, see [Boosting](https://cloud.google.com/retail/docs/boosting#boost) */
      boostSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec;
      /** Specs defining dataStores to filter on in a search call and configurations for those dataStores. This is only considered for engines with multiple dataStores use case. For single dataStore within an engine, they should use the specs at the top level. */
      dataStoreSpecs?: GoogleCloudDiscoveryengineV1betaSearchRequestDataStoreSpec[];
      /** The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. Filter expression is case-sensitive. This will be used to filter search results which may affect the Answer response. If this field is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this mapping is defined by the customer in their schema. For example a media customers might have a field 'name' in their schema. In this case the filter would look like this: filter --> name:'ANY("king kong")' For more information about filtering including syntax and filter operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata) */
      filter?: string;
      /** Number of search results to return. The default value is 10. */
      maxReturnResults?: number;
      /** Optional. Specification to enable natural language understanding capabilities for search requests. */
      naturalLanguageQueryUnderstandingSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec;
      /** The order in which documents are returned. Documents can be ordered by a field in an Document object. Leave it unset if ordered by relevance. `order_by` expression is case-sensitive. For more information on ordering, see [Ordering](https://cloud.google.com/retail/docs/filter-and-order#order) If this field is unrecognizable, an `INVALID_ARGUMENT` is returned. */
      orderBy?: string;
      /** Specifies the search result mode. If unspecified, the search result mode defaults to `DOCUMENTS`. See [parse and chunk documents](https://cloud.google.com/generative-ai-app-builder/docs/parse-chunk-documents) */
      searchResultMode?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultList {
      /** Search results. */
      searchResults?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResult[];
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResult {
      /** Chunk information. */
      chunkInfo?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfo;
      /** Unstructured document information. */
      unstructuredDocumentInfo?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfo;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfo {
      /** Chunk resource name. */
      chunk?: string;
      /** Chunk textual content. */
      content?: string;
      /** Metadata of the document from the current chunk. */
      documentMetadata?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfoDocumentMetadata;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfoDocumentMetadata {
      /** Title of the document. */
      title?: string;
      /** Uri of the document. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfo {
      /** Document resource name. */
      document?: string;
      /** List of document contexts. The content will be used for Answer Generation. This is supposed to be the main content of the document that can be long and comprehensive. */
      documentContexts?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoDocumentContext[];
      /** Deprecated: This field is deprecated and will have no effect on the Answer generation. Please use document_contexts and extractive_segments fields. List of extractive answers. */
      extractiveAnswers?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveAnswer[];
      /** List of extractive segments. */
      extractiveSegments?: GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveSegment[];
      /** Title. */
      title?: string;
      /** URI for the document. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoDocumentContext {
      /** Document content to be used for answer generation. */
      content?: string;
      /** Page identifier. */
      pageIdentifier?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveAnswer {
      /** Extractive answer content. */
      content?: string;
      /** Page identifier. */
      pageIdentifier?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveSegment {
      /** Extractive segment content. */
      content?: string;
      /** Page identifier. */
      pageIdentifier?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryResponse {
      /** Answer resource object. If AnswerQueryRequest.QueryUnderstandingSpec.QueryRephraserSpec.max_rephrase_steps is greater than 1, use Answer.name to fetch answer information using ConversationalSearchService.GetAnswer API. */
      answer?: GoogleCloudDiscoveryengineV1betaAnswer;
      /** A global unique ID used for logging. */
      answerQueryToken?: string;
      /** Session resource object. It will be only available when session field is set and valid in the AnswerQueryRequest request. */
      session?: GoogleCloudDiscoveryengineV1betaSession;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryUnderstandingInfo {
      /** Query classification information. */
      queryClassificationInfo?: GoogleCloudDiscoveryengineV1betaAnswerQueryUnderstandingInfoQueryClassificationInfo[];
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerQueryUnderstandingInfoQueryClassificationInfo {
      /** Classification output. */
      positive?: boolean;
      /** Query classification type. */
      type?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerReference {
      /** Chunk information. */
      chunkInfo?: GoogleCloudDiscoveryengineV1betaAnswerReferenceChunkInfo;
      /** Structured document information. */
      structuredDocumentInfo?: GoogleCloudDiscoveryengineV1betaAnswerReferenceStructuredDocumentInfo;
      /** Unstructured document information. */
      unstructuredDocumentInfo?: GoogleCloudDiscoveryengineV1betaAnswerReferenceUnstructuredDocumentInfo;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerReferenceChunkInfo {
      /** Chunk resource name. */
      chunk?: string;
      /** Chunk textual content. */
      content?: string;
      /** Document metadata. */
      documentMetadata?: GoogleCloudDiscoveryengineV1betaAnswerReferenceChunkInfoDocumentMetadata;
      /** The relevance of the chunk for a given query. Values range from 0.0 (completely irrelevant) to 1.0 (completely relevant). This value is for informational purpose only. It may change for the same query and chunk at any time due to a model retraining or change in implementation. */
      relevanceScore?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerReferenceChunkInfoDocumentMetadata {
      /** Document resource name. */
      document?: string;
      /** Page identifier. */
      pageIdentifier?: string;
      /** The structured JSON metadata for the document. It is populated from the struct data from the Chunk in search result. */
      structData?: {[P in string]: any};
      /** Title. */
      title?: string;
      /** URI for the document. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerReferenceStructuredDocumentInfo {
      /** Document resource name. */
      document?: string;
      /** Structured search data. */
      structData?: {[P in string]: any};
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerReferenceUnstructuredDocumentInfo {
      /** List of cited chunk contents derived from document content. */
      chunkContents?: GoogleCloudDiscoveryengineV1betaAnswerReferenceUnstructuredDocumentInfoChunkContent[];
      /** Document resource name. */
      document?: string;
      /** The structured JSON metadata for the document. It is populated from the struct data from the Chunk in search result. */
      structData?: {[P in string]: any};
      /** Title. */
      title?: string;
      /** URI for the document. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerReferenceUnstructuredDocumentInfoChunkContent {
      /** Chunk textual content. */
      content?: string;
      /** Page identifier. */
      pageIdentifier?: string;
      /** The relevance of the chunk for a given query. Values range from 0.0 (completely irrelevant) to 1.0 (completely relevant). This value is for informational purpose only. It may change for the same query and chunk at any time due to a model retraining or change in implementation. */
      relevanceScore?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerStep {
      /** Actions. */
      actions?: GoogleCloudDiscoveryengineV1betaAnswerStepAction[];
      /** The description of the step. */
      description?: string;
      /** The state of the step. */
      state?: string;
      /** The thought of the step. */
      thought?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerStepAction {
      /** Observation. */
      observation?: GoogleCloudDiscoveryengineV1betaAnswerStepActionObservation;
      /** Search action. */
      searchAction?: GoogleCloudDiscoveryengineV1betaAnswerStepActionSearchAction;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerStepActionObservation {
      /** Search results observed by the search action, it can be snippets info or chunk info, depending on the citation type set by the user. */
      searchResults?: GoogleCloudDiscoveryengineV1betaAnswerStepActionObservationSearchResult[];
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerStepActionObservationSearchResult {
      /** If citation_type is CHUNK_LEVEL_CITATION and chunk mode is on, populate chunk info. */
      chunkInfo?: GoogleCloudDiscoveryengineV1betaAnswerStepActionObservationSearchResultChunkInfo[];
      /** Document resource name. */
      document?: string;
      /** If citation_type is DOCUMENT_LEVEL_CITATION, populate document level snippets. */
      snippetInfo?: GoogleCloudDiscoveryengineV1betaAnswerStepActionObservationSearchResultSnippetInfo[];
      /** Data representation. The structured JSON data for the document. It's populated from the struct data from the Document, or the Chunk in search result. */
      structData?: {[P in string]: any};
      /** Title. */
      title?: string;
      /** URI for the document. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerStepActionObservationSearchResultChunkInfo {
      /** Chunk resource name. */
      chunk?: string;
      /** Chunk textual content. */
      content?: string;
      /** The relevance of the chunk for a given query. Values range from 0.0 (completely irrelevant) to 1.0 (completely relevant). This value is for informational purpose only. It may change for the same query and chunk at any time due to a model retraining or change in implementation. */
      relevanceScore?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerStepActionObservationSearchResultSnippetInfo {
      /** Snippet content. */
      snippet?: string;
      /** Status of the snippet defined by the search team. */
      snippetStatus?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaAnswerStepActionSearchAction {
      /** The query to search. */
      query?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaBatchCreateTargetSiteMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesRequest {
      /** Required. The request message specifying the resources to create. A maximum of 20 TargetSites can be created in a batch. */
      requests?: GoogleCloudDiscoveryengineV1betaCreateTargetSiteRequest[];
    }
    interface GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesResponse {
      /** TargetSites created. */
      targetSites?: GoogleCloudDiscoveryengineV1betaTargetSite[];
    }
    interface GoogleCloudDiscoveryengineV1betaBatchGetDocumentsMetadataResponse {
      /** The metadata of the Documents. */
      documentsMetadata?: GoogleCloudDiscoveryengineV1betaBatchGetDocumentsMetadataResponseDocumentMetadata[];
    }
    interface GoogleCloudDiscoveryengineV1betaBatchGetDocumentsMetadataResponseDocumentMetadata {
      /** The data ingestion source of the Document. Allowed values are: * `batch`: Data ingested via Batch API, e.g., ImportDocuments. * `streaming` Data ingested via Streaming API, e.g., FHIR streaming. */
      dataIngestionSource?: string;
      /** The timestamp of the last time the Document was last indexed. */
      lastRefreshedTime?: string;
      /** The value of the matcher that was used to match the Document. */
      matcherValue?: GoogleCloudDiscoveryengineV1betaBatchGetDocumentsMetadataResponseDocumentMetadataMatcherValue;
      /** The state of the document. */
      state?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaBatchGetDocumentsMetadataResponseDocumentMetadataMatcherValue {
      /** Format: projects/{project}/locations/{location}/datasets/{dataset}/fhirStores/{fhir_store}/fhir/{resource_type}/{fhir_resource_id} */
      fhirResource?: string;
      /** If match by URI, the URI of the Document. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaBatchVerifyTargetSitesRequest {}
    interface GoogleCloudDiscoveryengineV1betaBigQuerySource {
      /** The schema to use when parsing the data from the source. Supported values for user event imports: * `user_event` (default): One UserEvent per row. Supported values for document imports: * `document` (default): One Document format per row. Each document must have a valid Document.id and one of Document.json_data or Document.struct_data. * `custom`: One custom data per row in arbitrary format that conforms to the defined Schema of the data store. This can only be used by the GENERIC Data Store vertical. */
      dataSchema?: string;
      /** Required. The BigQuery data set to copy the data from with a length limit of 1,024 characters. */
      datasetId?: string;
      /** Intermediate Cloud Storage directory used for the import with a length limit of 2,000 characters. Can be specified if one wants to have the BigQuery export to a specific Cloud Storage directory. */
      gcsStagingDir?: string;
      /** BigQuery time partitioned table's _PARTITIONDATE in YYYY-MM-DD format. */
      partitionDate?: GoogleTypeDate;
      /** The project ID or the project number that contains the BigQuery source. Has a length limit of 128 characters. If not specified, inherits the project ID from the parent request. */
      projectId?: string;
      /** Required. The BigQuery table to copy the data from with a length limit of 1,024 characters. */
      tableId?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaBigtableOptions {
      /** The mapping from family names to an object that contains column families level information for the given column family. If a family is not present in this map it will be ignored. */
      families?: {
        [P in string]: GoogleCloudDiscoveryengineV1betaBigtableOptionsBigtableColumnFamily;
      };
      /** The field name used for saving row key value in the document. The name has to match the pattern `a-zA-Z0-9*`. */
      keyFieldName?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaBigtableOptionsBigtableColumn {
      /** The encoding mode of the values when the type is not `STRING`. Acceptable encoding values are: * `TEXT`: indicates values are alphanumeric text strings. * `BINARY`: indicates values are encoded using `HBase Bytes.toBytes` family of functions. This can be overridden for a specific column by listing that column in `columns` and specifying an encoding for it. */
      encoding?: string;
      /** The field name to use for this column in the document. The name has to match the pattern `a-zA-Z0-9*`. If not set, it is parsed from the qualifier bytes with best effort. However, due to different naming patterns, field name collisions could happen, where parsing behavior is undefined. */
      fieldName?: string;
      /** Required. Qualifier of the column. If it cannot be decoded with utf-8, use a base-64 encoded string instead. */
      qualifier?: string;
      /** The type of values in this column family. The values are expected to be encoded using `HBase Bytes.toBytes` function when the encoding value is set to `BINARY`. */
      type?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaBigtableOptionsBigtableColumnFamily {
      /** The list of objects that contains column level information for each column. If a column is not present in this list it will be ignored. */
      columns?: GoogleCloudDiscoveryengineV1betaBigtableOptionsBigtableColumn[];
      /** The encoding mode of the values when the type is not STRING. Acceptable encoding values are: * `TEXT`: indicates values are alphanumeric text strings. * `BINARY`: indicates values are encoded using `HBase Bytes.toBytes` family of functions. This can be overridden for a specific column by listing that column in `columns` and specifying an encoding for it. */
      encoding?: string;
      /** The field name to use for this column family in the document. The name has to match the pattern `a-zA-Z0-9*`. If not set, it is parsed from the family name with best effort. However, due to different naming patterns, field name collisions could happen, where parsing behavior is undefined. */
      fieldName?: string;
      /** The type of values in this column family. The values are expected to be encoded using `HBase Bytes.toBytes` function when the encoding value is set to `BINARY`. */
      type?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaBigtableSource {
      /** Required. Bigtable options that contains information needed when parsing data into typed structures. For example, column type annotations. */
      bigtableOptions?: GoogleCloudDiscoveryengineV1betaBigtableOptions;
      /** Required. The instance ID of the Cloud Bigtable that needs to be imported. */
      instanceId?: string;
      /** The project ID that contains the Bigtable source. Has a length limit of 128 characters. If not specified, inherits the project ID from the parent request. */
      projectId?: string;
      /** Required. The table ID of the Cloud Bigtable that needs to be imported. */
      tableId?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaCheckGroundingRequest {
      /** Answer candidate to check. It can have a maximum length of 4096 tokens. */
      answerCandidate?: string;
      /** List of facts for the grounding check. We support up to 200 facts. */
      facts?: GoogleCloudDiscoveryengineV1betaGroundingFact[];
      /** Configuration of the grounding check. */
      groundingSpec?: GoogleCloudDiscoveryengineV1betaCheckGroundingSpec;
      /** The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details. */
      userLabels?: {[P in string]: string};
    }
    interface GoogleCloudDiscoveryengineV1betaCheckGroundingResponse {
      /** List of facts cited across all claims in the answer candidate. These are derived from the facts supplied in the request. */
      citedChunks?: GoogleCloudDiscoveryengineV1betaFactChunk[];
      /** List of facts cited across all claims in the answer candidate. These are derived from the facts supplied in the request. */
      citedFacts?: GoogleCloudDiscoveryengineV1betaCheckGroundingResponseCheckGroundingFactChunk[];
      /** Claim texts and citation info across all claims in the answer candidate. */
      claims?: GoogleCloudDiscoveryengineV1betaCheckGroundingResponseClaim[];
      /** The support score for the input answer candidate. Higher the score, higher is the fraction of claims that are supported by the provided facts. This is always set when a response is returned. */
      supportScore?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaCheckGroundingResponseCheckGroundingFactChunk {
      /** Text content of the fact chunk. Can be at most 10K characters long. */
      chunkText?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaCheckGroundingResponseClaim {
      /** A list of indices (into 'cited_chunks') specifying the citations associated with the claim. For instance [1,3,4] means that cited_chunks[1], cited_chunks[3], cited_chunks[4] are the facts cited supporting for the claim. A citation to a fact indicates that the claim is supported by the fact. */
      citationIndices?: number[];
      /** Text for the claim in the answer candidate. Always provided regardless of whether citations or anti-citations are found. */
      claimText?: string;
      /** Position indicating the end of the claim in the answer candidate, exclusive. */
      endPos?: number;
      /** Indicates that this claim required grounding check. When the system decided this claim doesn't require attribution/grounding check, this field will be set to false. In that case, no grounding check was done for the claim and therefore citation_indices should not be returned. */
      groundingCheckRequired?: boolean;
      /** Position indicating the start of the claim in the answer candidate, measured in bytes. */
      startPos?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaCheckGroundingSpec {
      /** The threshold (in [0,1]) used for determining whether a fact must be cited for a claim in the answer candidate. Choosing a higher threshold will lead to fewer but very strong citations, while choosing a lower threshold may lead to more but somewhat weaker citations. If unset, the threshold will default to 0.6. */
      citationThreshold?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaChunk {
      /** Output only. Metadata of the current chunk. */
      chunkMetadata?: GoogleCloudDiscoveryengineV1betaChunkChunkMetadata;
      /** Content is a string from a document (parsed content). */
      content?: string;
      /** Output only. This field is OUTPUT_ONLY. It contains derived data that are not in the original input document. */
      derivedStructData?: {[P in string]: any};
      /** Metadata of the document from the current chunk. */
      documentMetadata?: GoogleCloudDiscoveryengineV1betaChunkDocumentMetadata;
      /** Unique chunk ID of the current chunk. */
      id?: string;
      /** The full resource name of the chunk. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}/chunks/{chunk_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
      name?: string;
      /** Page span of the chunk. */
      pageSpan?: GoogleCloudDiscoveryengineV1betaChunkPageSpan;
      /** Output only. Represents the relevance score based on similarity. Higher score indicates higher chunk relevance. The score is in range [-1.0, 1.0]. Only populated on SearchResponse. */
      relevanceScore?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaChunkChunkMetadata {
      /** The next chunks of the current chunk. The number is controlled by SearchRequest.ContentSearchSpec.ChunkSpec.num_next_chunks. This field is only populated on SearchService.Search API. */
      nextChunks?: GoogleCloudDiscoveryengineV1betaChunk[];
      /** The previous chunks of the current chunk. The number is controlled by SearchRequest.ContentSearchSpec.ChunkSpec.num_previous_chunks. This field is only populated on SearchService.Search API. */
      previousChunks?: GoogleCloudDiscoveryengineV1betaChunk[];
    }
    interface GoogleCloudDiscoveryengineV1betaChunkDocumentMetadata {
      /** Data representation. The structured JSON data for the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown. */
      structData?: {[P in string]: any};
      /** Title of the document. */
      title?: string;
      /** Uri of the document. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaChunkPageSpan {
      /** The end page of the chunk. */
      pageEnd?: number;
      /** The start page of the chunk. */
      pageStart?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaCloudSqlSource {
      /** Required. The Cloud SQL database to copy the data from with a length limit of 256 characters. */
      databaseId?: string;
      /** Intermediate Cloud Storage directory used for the import with a length limit of 2,000 characters. Can be specified if one wants to have the Cloud SQL export to a specific Cloud Storage directory. Ensure that the Cloud SQL service account has the necessary Cloud Storage Admin permissions to access the specified Cloud Storage directory. */
      gcsStagingDir?: string;
      /** Required. The Cloud SQL instance to copy the data from with a length limit of 256 characters. */
      instanceId?: string;
      /** Option for serverless export. Enabling this option will incur additional cost. More info can be found [here](https://cloud.google.com/sql/pricing#serverless). */
      offload?: boolean;
      /** The project ID that contains the Cloud SQL source. Has a length limit of 128 characters. If not specified, inherits the project ID from the parent request. */
      projectId?: string;
      /** Required. The Cloud SQL table to copy the data from with a length limit of 256 characters. */
      tableId?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaCmekConfig {
      /** Output only. The default CmekConfig for the Customer. */
      isDefault?: boolean;
      /** Kms key resource name which will be used to encrypt resources `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`. */
      kmsKey?: string;
      /** Kms key version resource name which will be used to encrypt resources `/cryptoKeyVersions/{keyVersion}`. */
      kmsKeyVersion?: string;
      /** Output only. The timestamp of the last key rotation. */
      lastRotationTimestampMicros?: string;
      /** Required. Name of the CmekConfig, of the form `projects/{project}/locations/{location}/cmekConfig` or `projects/{project}/locations/{location}/cmekConfigs/{cmekConfig}`. */
      name?: string;
      /** Optional. Single-regional CMEKs that are required for some VAIS features. */
      singleRegionKeys?: GoogleCloudDiscoveryengineV1betaSingleRegionKey[];
      /** Output only. State of the CmekConfig. */
      state?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaCompleteQueryResponse {
      /** Results of the matched query suggestions. The result list is ordered and the first result is a top suggestion. */
      querySuggestions?: GoogleCloudDiscoveryengineV1betaCompleteQueryResponseQuerySuggestion[];
      /** True if the returned suggestions are all tail suggestions. For tail matching to be triggered, include_tail_suggestions in the request must be true and there must be no suggestions that match the full query. */
      tailMatchTriggered?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaCompleteQueryResponseQuerySuggestion {
      /** The unique document field paths that serve as the source of this suggestion if it was generated from completable fields. This field is only populated for the document-completable model. */
      completableFieldPaths?: string[];
      /** The suggestion for the query. */
      suggestion?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaCompletionInfo {
      /** End user selected CompleteQueryResponse.QuerySuggestion.suggestion position, starting from 0. */
      selectedPosition?: number;
      /** End user selected CompleteQueryResponse.QuerySuggestion.suggestion. */
      selectedSuggestion?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaCompletionSuggestion {
      /** Alternative matching phrases for this suggestion. */
      alternativePhrases?: string[];
      /** Frequency of this suggestion. Will be used to rank suggestions when score is not available. */
      frequency?: string;
      /** Global score of this suggestion. Control how this suggestion would be scored / ranked. */
      globalScore?: number;
      /** If two suggestions have the same groupId, they will not be returned together. Instead the one ranked higher will be returned. This can be used to deduplicate semantically identical suggestions. */
      groupId?: string;
      /** The score of this suggestion within its group. */
      groupScore?: number;
      /** BCP-47 language code of this suggestion. */
      languageCode?: string;
      /** Required. The suggestion text. */
      suggestion?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaCondition {
      /** Range of time(s) specifying when condition is active. Maximum of 10 time ranges. */
      activeTimeRange?: GoogleCloudDiscoveryengineV1betaConditionTimeRange[];
      /** Optional. Query regex to match the whole search query. Cannot be set when Condition.query_terms is set. This is currently supporting promotion use case. */
      queryRegex?: string;
      /** Search only A list of terms to match the query on. Cannot be set when Condition.query_regex is set. Maximum of 10 query terms. */
      queryTerms?: GoogleCloudDiscoveryengineV1betaConditionQueryTerm[];
    }
    interface GoogleCloudDiscoveryengineV1betaConditionQueryTerm {
      /** Whether the search query needs to exactly match the query term. */
      fullMatch?: boolean;
      /** The specific query value to match against Must be lowercase, must be UTF-8. Can have at most 3 space separated terms if full_match is true. Cannot be an empty string. Maximum length of 5000 characters. */
      value?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaConditionTimeRange {
      /** End of time range. Range is inclusive. Must be in the future. */
      endTime?: string;
      /** Start of time range. Range is inclusive. */
      startTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaControl {
      /** Output only. List of all ServingConfig IDs this control is attached to. May take up to 10 minutes to update after changes. */
      associatedServingConfigIds?: string[];
      /** Defines a boost-type control */
      boostAction?: GoogleCloudDiscoveryengineV1betaControlBoostAction;
      /** Determines when the associated action will trigger. Omit to always apply the action. Currently only a single condition may be specified. Otherwise an INVALID ARGUMENT error is thrown. */
      conditions?: GoogleCloudDiscoveryengineV1betaCondition[];
      /** Required. Human readable name. The identifier used in UI views. Must be UTF-8 encoded string. Length limit is 128 characters. Otherwise an INVALID ARGUMENT error is thrown. */
      displayName?: string;
      /** Defines a filter-type control Currently not supported by Recommendation */
      filterAction?: GoogleCloudDiscoveryengineV1betaControlFilterAction;
      /** Immutable. Fully qualified name `projects/*‍/locations/global/dataStore/*‍/controls/*` */
      name?: string;
      /** Promote certain links based on predefined trigger queries. This now only supports basic site search. */
      promoteAction?: GoogleCloudDiscoveryengineV1betaControlPromoteAction;
      /** Defines a redirect-type control. */
      redirectAction?: GoogleCloudDiscoveryengineV1betaControlRedirectAction;
      /** Required. Immutable. What solution the control belongs to. Must be compatible with vertical of resource. Otherwise an INVALID ARGUMENT error is thrown. */
      solutionType?: string;
      /** Treats a group of terms as synonyms of one another. */
      synonymsAction?: GoogleCloudDiscoveryengineV1betaControlSynonymsAction;
      /** Specifies the use case for the control. Affects what condition fields can be set. Only applies to SOLUTION_TYPE_SEARCH. Currently only allow one use case per control. Must be set when solution_type is SolutionType.SOLUTION_TYPE_SEARCH. */
      useCases?: string[];
    }
    interface GoogleCloudDiscoveryengineV1betaControlBoostAction {
      /** Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0 (No-op). */
      boost?: number;
      /** Required. Specifies which data store's documents can be boosted by this control. Full data store name e.g. projects/123/locations/global/collections/default_collection/dataStores/default_data_store */
      dataStore?: string;
      /** Required. Specifies which products to apply the boost to. If no filter is provided all products will be boosted (No-op). Syntax documentation: https://cloud.google.com/retail/docs/filter-and-order Maximum length is 5000 characters. Otherwise an INVALID ARGUMENT error is thrown. */
      filter?: string;
      /** Optional. Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0 (No-op). */
      fixedBoost?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaControlFilterAction {
      /** Required. Specifies which data store's documents can be filtered by this control. Full data store name e.g. projects/123/locations/global/collections/default_collection/dataStores/default_data_store */
      dataStore?: string;
      /** Required. A filter to apply on the matching condition results. Required Syntax documentation: https://cloud.google.com/retail/docs/filter-and-order Maximum length is 5000 characters. Otherwise an INVALID ARGUMENT error is thrown. */
      filter?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaControlPromoteAction {
      /** Required. Data store with which this promotion is attached to. */
      dataStore?: string;
      /** Required. Promotion attached to this action. */
      searchLinkPromotion?: GoogleCloudDiscoveryengineV1betaSearchLinkPromotion;
    }
    interface GoogleCloudDiscoveryengineV1betaControlRedirectAction {
      /** Required. The URI to which the shopper will be redirected. Required. URI must have length equal or less than 2000 characters. Otherwise an INVALID ARGUMENT error is thrown. */
      redirectUri?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaControlSynonymsAction {
      /** Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms. Otherwise an INVALID ARGUMENT error is thrown. */
      synonyms?: string[];
    }
    interface GoogleCloudDiscoveryengineV1betaConversation {
      /** Output only. The time the conversation finished. */
      endTime?: string;
      /** Conversation messages. */
      messages?: GoogleCloudDiscoveryengineV1betaConversationMessage[];
      /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/dataStore/*‍/conversations/*` or `projects/{project}/locations/global/collections/{collection}/engines/*‍/conversations/*`. */
      name?: string;
      /** Output only. The time the conversation started. */
      startTime?: string;
      /** The state of the Conversation. */
      state?: string;
      /** A unique identifier for tracking users. */
      userPseudoId?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaConversationContext {
      /** The current active document the user opened. It contains the document resource reference. */
      activeDocument?: string;
      /** The current list of documents the user is seeing. It contains the document resource references. */
      contextDocuments?: string[];
    }
    interface GoogleCloudDiscoveryengineV1betaConversationMessage {
      /** Output only. Message creation timestamp. */
      createTime?: string;
      /** Search reply. */
      reply?: GoogleCloudDiscoveryengineV1betaReply;
      /** User text input. */
      userInput?: GoogleCloudDiscoveryengineV1betaTextInput;
    }
    interface GoogleCloudDiscoveryengineV1betaConverseConversationRequest {
      /** Boost specification to boost certain documents in search results which may affect the converse response. For more information on boosting, see [Boosting](https://cloud.google.com/retail/docs/boosting#boost) */
      boostSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec;
      /** The conversation to be used by auto session only. The name field will be ignored as we automatically assign new name for the conversation in auto session. */
      conversation?: GoogleCloudDiscoveryengineV1betaConversation;
      /** The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. Filter expression is case-sensitive. This will be used to filter search results which may affect the summary response. If this field is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this mapping is defined by the customer in their schema. For example a media customer might have a field 'name' in their schema. In this case the filter would look like this: filter --> name:'ANY("king kong")' For more information about filtering including syntax and filter operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata) */
      filter?: string;
      /** Required. Current user input. */
      query?: GoogleCloudDiscoveryengineV1betaTextInput;
      /** Whether to turn on safe search. */
      safeSearch?: boolean;
      /** The resource name of the Serving Config to use. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/servingConfigs/{serving_config_id}` If this is not set, the default serving config will be used. */
      servingConfig?: string;
      /** A specification for configuring the summary returned in the response. */
      summarySpec?: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec;
      /** The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details. */
      userLabels?: {[P in string]: string};
    }
    interface GoogleCloudDiscoveryengineV1betaConverseConversationResponse {
      /** Updated conversation including the answer. */
      conversation?: GoogleCloudDiscoveryengineV1betaConversation;
      /** Suggested related questions. */
      relatedQuestions?: string[];
      /** Answer to the current query. */
      reply?: GoogleCloudDiscoveryengineV1betaReply;
      /** Search Results. */
      searchResults?: GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult[];
    }
    interface GoogleCloudDiscoveryengineV1betaCreateDataStoreMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaCreateEngineMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaCreateEvaluationMetadata {}
    interface GoogleCloudDiscoveryengineV1betaCreateSchemaMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaCreateSitemapMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaCreateTargetSiteMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaCreateTargetSiteRequest {
      /** Required. Parent resource name of TargetSite, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. */
      parent?: string;
      /** Required. The TargetSite to create. */
      targetSite?: GoogleCloudDiscoveryengineV1betaTargetSite;
    }
    interface GoogleCloudDiscoveryengineV1betaCustomAttribute {
      /** The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is "lengths_cm". Exactly one of CustomAttribute.text or CustomAttribute.numbers should be set. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      numbers?: number[];
      /** The textual values of this custom attribute. For example, `["yellow", "green"]` when the key is "color". Empty string is not allowed. Otherwise, an `INVALID_ARGUMENT` error is returned. Exactly one of CustomAttribute.text or CustomAttribute.numbers should be set. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      text?: string[];
    }
    interface GoogleCloudDiscoveryengineV1betaCustomTuningModel {
      /** Deprecated: Timestamp the Model was created at. */
      createTime?: string;
      /** The display name of the model. */
      displayName?: string;
      /** Currently this is only populated if the model state is `INPUT_VALIDATION_FAILED`. */
      errorMessage?: string;
      /** The metrics of the trained model. */
      metrics?: {[P in string]: number};
      /** The state that the model is in (e.g.`TRAINING` or `TRAINING_FAILED`). */
      modelState?: string;
      /** The version of the model. */
      modelVersion?: string;
      /** Required. The fully qualified resource name of the model. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/customTuningModels/{custom_tuning_model}`. Model must be an alpha-numerical string with limit of 40 characters. */
      name?: string;
      /** Timestamp the model training was initiated. */
      trainingStartTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaDataStore {
      /** Optional. Configuration for advanced site search. */
      advancedSiteSearchConfig?: GoogleCloudDiscoveryengineV1betaAdvancedSiteSearchConfig;
      /** Output only. Data size estimation for billing. */
      billingEstimation?: GoogleCloudDiscoveryengineV1betaDataStoreBillingEstimation;
      /** Output only. CMEK-related information for the DataStore. */
      cmekConfig?: GoogleCloudDiscoveryengineV1betaCmekConfig;
      /** Immutable. The content config of the data store. If this field is unset, the server behavior defaults to ContentConfig.NO_CONTENT. */
      contentConfig?: string;
      /** Output only. Timestamp the DataStore was created at. */
      createTime?: string;
      /** Output only. The id of the default Schema asscociated to this data store. */
      defaultSchemaId?: string;
      /** Required. The data store display name. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. */
      displayName?: string;
      /** Configuration for Document understanding and enrichment. */
      documentProcessingConfig?: GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig;
      /** Optional. Configuration for `HEALTHCARE_FHIR` vertical. */
      healthcareFhirConfig?: GoogleCloudDiscoveryengineV1betaHealthcareFhirConfig;
      /** Immutable. The industry vertical that the data store registers. */
      industryVertical?: string;
      /** Optional. If set, this DataStore is an Infobot FAQ DataStore. */
      isInfobotFaqDataStore?: boolean;
      /** Input only. The KMS key to be used to protect this DataStore at creation time. Must be set for requests that need to comply with CMEK Org Policy protections. If this field is set and processed successfully, the DataStore will be protected by the KMS key, as indicated in the cmek_config field. */
      kmsKeyName?: string;
      /** Language info for DataStore. */
      languageInfo?: GoogleCloudDiscoveryengineV1betaLanguageInfo;
      /** Immutable. The full resource name of the data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
      name?: string;
      /** Optional. Configuration for Natural Language Query Understanding. */
      naturalLanguageQueryUnderstandingConfig?: GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig;
      /** Optional. Stores serving config at DataStore level. */
      servingConfigDataStore?: GoogleCloudDiscoveryengineV1betaDataStoreServingConfigDataStore;
      /** The solutions that the data store enrolls. Available solutions for each industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION` and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is automatically enrolled. Other solutions cannot be enrolled. */
      solutionTypes?: string[];
      /** The start schema to use for this DataStore when provisioning it. If unset, a default vertical specialized schema will be used. This field is only used by CreateDataStore API, and will be ignored if used in other APIs. This field will be omitted from all API responses including CreateDataStore API. To retrieve a schema of a DataStore, use SchemaService.GetSchema API instead. The provided schema will be validated against certain rules on schema. Learn more from [this doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema). */
      startingSchema?: GoogleCloudDiscoveryengineV1betaSchema;
      /** Config to store data store type configuration for workspace data. This must be set when DataStore.content_config is set as DataStore.ContentConfig.GOOGLE_WORKSPACE. */
      workspaceConfig?: GoogleCloudDiscoveryengineV1betaWorkspaceConfig;
    }
    interface GoogleCloudDiscoveryengineV1betaDataStoreBillingEstimation {
      /** Data size for structured data in terms of bytes. */
      structuredDataSize?: string;
      /** Last updated timestamp for structured data. */
      structuredDataUpdateTime?: string;
      /** Data size for unstructured data in terms of bytes. */
      unstructuredDataSize?: string;
      /** Last updated timestamp for unstructured data. */
      unstructuredDataUpdateTime?: string;
      /** Data size for websites in terms of bytes. */
      websiteDataSize?: string;
      /** Last updated timestamp for websites. */
      websiteDataUpdateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaDataStoreServingConfigDataStore {
      /** If set true, the DataStore will not be available for serving search requests. */
      disabledForServing?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaDeleteDataStoreMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaDeleteEngineMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaDeleteIdentityMappingStoreMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaDeleteSchemaMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaDeleteSitemapMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaDeleteTargetSiteMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchRequest {}
    interface GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchResponse {}
    interface GoogleCloudDiscoveryengineV1betaDocument {
      /** The unstructured data linked to this document. Content must be set if this document is under a `CONTENT_REQUIRED` data store. */
      content?: GoogleCloudDiscoveryengineV1betaDocumentContent;
      /** Output only. This field is OUTPUT_ONLY. It contains derived data that are not in the original input document. */
      derivedStructData?: {[P in string]: any};
      /** Immutable. The identifier of the document. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 128 characters. */
      id?: string;
      /** Output only. The index status of the document. * If document is indexed successfully, the index_time field is populated. * Otherwise, if document is not indexed due to errors, the error_samples field is populated. * Otherwise, if document's index is in progress, the pending_message field is populated. */
      indexStatus?: GoogleCloudDiscoveryengineV1betaDocumentIndexStatus;
      /** Output only. The last time the document was indexed. If this field is set, the document could be returned in search results. This field is OUTPUT_ONLY. If this field is not populated, it means the document has never been indexed. */
      indexTime?: string;
      /** The JSON string representation of the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown. */
      jsonData?: string;
      /** Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
      name?: string;
      /** The identifier of the parent document. Currently supports at most two level document hierarchy. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. */
      parentDocumentId?: string;
      /** The identifier of the schema located in the same data store. */
      schemaId?: string;
      /** The structured JSON data for the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown. */
      structData?: {[P in string]: any};
    }
    interface GoogleCloudDiscoveryengineV1betaDocumentContent {
      /** The MIME type of the content. Supported types: * `application/pdf` (PDF, only native PDFs are supported for now) * `text/html` (HTML) * `application/vnd.openxmlformats-officedocument.wordprocessingml.document` (DOCX) * `application/vnd.openxmlformats-officedocument.presentationml.presentation` (PPTX) * `text/plain` (TXT) See https://www.iana.org/assignments/media-types/media-types.xhtml. */
      mimeType?: string;
      /** The content represented as a stream of bytes. The maximum length is 1,000,000 bytes (1 MB / ~0.95 MiB). Note: As with all `bytes` fields, this field is represented as pure binary in Protocol Buffers and base64-encoded string in JSON. For example, `abc123!?$*&()'-=@~` should be represented as `YWJjMTIzIT8kKiYoKSctPUB+` in JSON. See https://developers.google.com/protocol-buffers/docs/proto3#json. */
      rawBytes?: string;
      /** The URI of the content. Only Cloud Storage URIs (e.g. `gs://bucket-name/path/to/file`) are supported. The maximum file size is 2.5 MB for text-based formats, 200 MB for other formats. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaDocumentIndexStatus {
      /** A sample of errors encountered while indexing the document. If this field is populated, the document is not indexed due to errors. */
      errorSamples?: GoogleRpcStatus[];
      /** The time when the document was indexed. If this field is populated, it means the document has been indexed. */
      indexTime?: string;
      /** Immutable. The message indicates the document index is in progress. If this field is populated, the document index is pending. */
      pendingMessage?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaDocumentInfo {
      /** Optional. The conversion value associated with this Document. Must be set if UserEvent.event_type is "conversion". For example, a value of 1000 signifies that 1000 seconds were spent viewing a Document for the `watch` conversion type. */
      conversionValue?: number;
      /** The Document resource ID. */
      id?: string;
      /** Output only. Whether the referenced Document can be found in the data store. */
      joined?: boolean;
      /** The Document resource full name, of the form: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/branches/{branch_id}/documents/{document_id}` */
      name?: string;
      /** The promotion IDs associated with this Document. Currently, this field is restricted to at most one ID. */
      promotionIds?: string[];
      /** Quantity of the Document associated with the user event. Defaults to 1. For example, this field is 2 if two quantities of the same Document are involved in a `add-to-cart` event. Required for events of the following event types: * `add-to-cart` * `purchase` */
      quantity?: number;
      /** The Document URI - only allowed for website data stores. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig {
      /** Whether chunking mode is enabled. */
      chunkingConfig?: GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfig;
      /** Configurations for default Document parser. If not specified, we will configure it as default DigitalParsingConfig, and the default parsing config will be applied to all file types for Document parsing. */
      defaultParsingConfig?: GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig;
      /** The full resource name of the Document Processing Config. Format: `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/documentProcessingConfig`. */
      name?: string;
      /** Map from file type to override the default parsing configuration based on the file type. Supported keys: * `pdf`: Override parsing config for PDF files, either digital parsing, ocr parsing or layout parsing is supported. * `html`: Override parsing config for HTML files, only digital parsing and layout parsing are supported. * `docx`: Override parsing config for DOCX files, only digital parsing and layout parsing are supported. * `pptx`: Override parsing config for PPTX files, only digital parsing and layout parsing are supported. * `xlsm`: Override parsing config for XLSM files, only digital parsing and layout parsing are supported. * `xlsx`: Override parsing config for XLSX files, only digital parsing and layout parsing are supported. */
      parsingConfigOverrides?: {
        [P in string]: GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig;
      };
    }
    interface GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfig {
      /** Configuration for the layout based chunking. */
      layoutBasedChunkingConfig?: GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig;
    }
    interface GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig {
      /** The token size limit for each chunk. Supported values: 100-500 (inclusive). Default value: 500. */
      chunkSize?: number;
      /** Whether to include appending different levels of headings to chunks from the middle of the document to prevent context loss. Default value: False. */
      includeAncestorHeadings?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig {
      /** Configurations applied to digital parser. */
      digitalParsingConfig?: any;
      /** Configurations applied to layout parser. */
      layoutParsingConfig?: any;
      /** Configurations applied to OCR parser. Currently it only applies to PDFs. */
      ocrParsingConfig?: GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigOcrParsingConfig;
    }
    interface GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigDigitalParsingConfig {}
    interface GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigLayoutParsingConfig {}
    interface GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigOcrParsingConfig {
      /** [DEPRECATED] This field is deprecated. To use the additional enhanced document elements processing, please switch to `layout_parsing_config`. */
      enhancedDocumentElements?: string[];
      /** If true, will use native text instead of OCR text on pages containing native text. */
      useNativeText?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaDoubleList {
      /** Double values. */
      values?: number[];
    }
    interface GoogleCloudDiscoveryengineV1betaEmbeddingConfig {
      /** Full field path in the schema mapped as embedding field. */
      fieldPath?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchRequest {}
    interface GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchResponse {}
    interface GoogleCloudDiscoveryengineV1betaEngine {
      /** Configurations for the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT. */
      chatEngineConfig?: GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig;
      /** Output only. Additional information of the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT. */
      chatEngineMetadata?: GoogleCloudDiscoveryengineV1betaEngineChatEngineMetadata;
      /** Common config spec that specifies the metadata of the engine. */
      commonConfig?: GoogleCloudDiscoveryengineV1betaEngineCommonConfig;
      /** Output only. Timestamp the Recommendation Engine was created at. */
      createTime?: string;
      /** The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with at most one data store. If solution_type is SOLUTION_TYPE_CHAT, multiple DataStores in the same Collection can be associated here. Note that when used in CreateEngineRequest, one DataStore id must be provided as the system will use it for necessary initializations. */
      dataStoreIds?: string[];
      /** Optional. Whether to disable analytics for searches performed on this engine. */
      disableAnalytics?: boolean;
      /** Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters. */
      displayName?: string;
      /** The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: Vertical on Engine has to match vertical of the DataStore linked to the engine. */
      industryVertical?: string;
      /** Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded string with a length limit of 1024 characters. Format: `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}` engine should be 1-63 characters, and valid characters are /a-z0-9*‍/. Otherwise, an INVALID_ARGUMENT error is returned. */
      name?: string;
      /** Configurations for the Search Engine. Only applicable if solution_type is SOLUTION_TYPE_SEARCH. */
      searchEngineConfig?: GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig;
      /** Required. The solutions of the engine. */
      solutionType?: string;
      /** Output only. Timestamp the Recommendation Engine was last updated. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig {
      /** The configurationt generate the Dialogflow agent that is associated to this Engine. Note that these configurations are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation. */
      agentCreationConfig?: GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig;
      /** The resource name of an exist Dialogflow agent to link to this Chat Engine. Customers can either provide `agent_creation_config` to create agent or provide an agent name that links the agent with the Chat engine. Format: `projects//locations//agents/`. Note that the `dialogflow_agent_to_link` are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation. Use ChatEngineMetadata.dialogflow_agent for actual agent association after Engine is created. */
      dialogflowAgentToLink?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig {
      /** Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search. */
      business?: string;
      /** Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. */
      defaultLanguageCode?: string;
      /** Agent location for Agent creation, supported values: global/us/eu. If not provided, us Engine will create Agent using us-central-1 by default; eu Engine will create Agent using eu-west-1 by default. */
      location?: string;
      /** Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. */
      timeZone?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaEngineChatEngineMetadata {
      /** The resource name of a Dialogflow agent, that this Chat Engine refers to. Format: `projects//locations//agents/`. */
      dialogflowAgent?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaEngineCommonConfig {
      /** The name of the company, business or entity that is associated with the engine. Setting this may help improve LLM related features. */
      companyName?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig {
      /** The add-on that this search engine enables. */
      searchAddOns?: string[];
      /** The search feature tier of this engine. Different tiers might have different pricing. To learn more, check the pricing documentation. Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified. */
      searchTier?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaEvaluation {
      /** Output only. Timestamp the Evaluation was created at. */
      createTime?: string;
      /** Output only. Timestamp the Evaluation was completed at. */
      endTime?: string;
      /** Output only. The error that occurred during evaluation. Only populated when the evaluation's state is FAILED. */
      error?: GoogleRpcStatus;
      /** Output only. A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
      /** Required. The specification of the evaluation. */
      evaluationSpec?: GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpec;
      /** Identifier. The full resource name of the Evaluation, in the format of `projects/{project}/locations/{location}/evaluations/{evaluation}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
      name?: string;
      /** Output only. The metrics produced by the evaluation, averaged across all SampleQuerys in the SampleQuerySet. Only populated when the evaluation's state is SUCCEEDED. */
      qualityMetrics?: GoogleCloudDiscoveryengineV1betaQualityMetrics;
      /** Output only. The state of the evaluation. */
      state?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpec {
      /** Required. The specification of the query set. */
      querySetSpec?: GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpecQuerySetSpec;
      /** Required. The search request that is used to perform the evaluation. Only the following fields within SearchRequest are supported; if any other fields are provided, an UNSUPPORTED error will be returned: * SearchRequest.serving_config * SearchRequest.branch * SearchRequest.canonical_filter * SearchRequest.query_expansion_spec * SearchRequest.spell_correction_spec * SearchRequest.content_search_spec * SearchRequest.user_pseudo_id */
      searchRequest?: GoogleCloudDiscoveryengineV1betaSearchRequest;
    }
    interface GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpecQuerySetSpec {
      /** Required. The full resource name of the SampleQuerySet used for the evaluation, in the format of `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`. */
      sampleQuerySet?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaFactChunk {
      /** Text content of the fact chunk. Can be at most 10K characters long. */
      chunkText?: string;
      /** The index of this chunk. Currently, only used for the streaming mode. */
      index?: number;
      /** Source from which this fact chunk was retrieved. If it was retrieved from the GroundingFacts provided in the request then this field will contain the index of the specific fact from which this chunk was retrieved. */
      source?: string;
      /** More fine-grained information for the source reference. */
      sourceMetadata?: {[P in string]: string};
    }
    interface GoogleCloudDiscoveryengineV1betaFetchDomainVerificationStatusResponse {
      /** A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** List of TargetSites containing the site verification status. */
      targetSites?: GoogleCloudDiscoveryengineV1betaTargetSite[];
      /** The total number of items matching the request. This will always be populated in the response. */
      totalSize?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaFetchSitemapsResponse {
      /** List of Sitemaps fetched. */
      sitemapsMetadata?: GoogleCloudDiscoveryengineV1betaFetchSitemapsResponseSitemapMetadata[];
    }
    interface GoogleCloudDiscoveryengineV1betaFetchSitemapsResponseSitemapMetadata {
      /** The Sitemap. */
      sitemap?: GoogleCloudDiscoveryengineV1betaSitemap;
    }
    interface GoogleCloudDiscoveryengineV1betaFhirStoreSource {
      /** Required. The full resource name of the FHIR store to import data from, in the format of `projects/{project}/locations/{location}/datasets/{dataset}/fhirStores/{fhir_store}`. */
      fhirStore?: string;
      /** Intermediate Cloud Storage directory used for the import with a length limit of 2,000 characters. Can be specified if one wants to have the FhirStore export to a specific Cloud Storage directory. */
      gcsStagingDir?: string;
      /** The FHIR resource types to import. The resource types should be a subset of all [supported FHIR resource types](https://cloud.google.com/generative-ai-app-builder/docs/fhir-schema-reference#resource-level-specification). Default to all supported FHIR resource types if empty. */
      resourceTypes?: string[];
      /** Optional. Whether to update the DataStore schema to the latest predefined schema. If true, the DataStore schema will be updated to include any FHIR fields or resource types that have been added since the last import and corresponding FHIR resources will be imported from the FHIR store. Note this field cannot be used in conjunction with `resource_types`. It should be used after initial import. */
      updateFromLatestPredefinedSchema?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaFirestoreSource {
      /** Required. The Firestore collection (or entity) to copy the data from with a length limit of 1,500 characters. */
      collectionId?: string;
      /** Required. The Firestore database to copy the data from with a length limit of 256 characters. */
      databaseId?: string;
      /** Intermediate Cloud Storage directory used for the import with a length limit of 2,000 characters. Can be specified if one wants to have the Firestore export to a specific Cloud Storage directory. Ensure that the Firestore service account has the necessary Cloud Storage Admin permissions to access the specified Cloud Storage directory. */
      gcsStagingDir?: string;
      /** The project ID that the Cloud SQL source is in with a length limit of 128 characters. If not specified, inherits the project ID from the parent request. */
      projectId?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaGcsSource {
      /** The schema to use when parsing the data from the source. Supported values for document imports: * `document` (default): One JSON Document per line. Each document must have a valid Document.id. * `content`: Unstructured data (e.g. PDF, HTML). Each file matched by `input_uris` becomes a document, with the ID set to the first 128 bits of SHA256(URI) encoded as a hex string. * `custom`: One custom data JSON per row in arbitrary format that conforms to the defined Schema of the data store. This can only be used by the GENERIC Data Store vertical. * `csv`: A CSV file with header conforming to the defined Schema of the data store. Each entry after the header is imported as a Document. This can only be used by the GENERIC Data Store vertical. Supported values for user event imports: * `user_event` (default): One JSON UserEvent per line. */
      dataSchema?: string;
      /** Required. Cloud Storage URIs to input files. Each URI can be up to 2000 characters long. URIs can match the full object path (for example, `gs://bucket/directory/object.json`) or a pattern matching one or more files, such as `gs://bucket/directory/*.json`. A request can contain at most 100 files (or 100,000 files if `data_schema` is `content`). Each file can be up to 2 GB (or 100 MB if `data_schema` is `content`). */
      inputUris?: string[];
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequest {
      /** Content of the current conversation with the model. For single-turn queries, this is a single instance. For multi-turn queries, this is a repeated field that contains conversation history + latest request. */
      contents?: GoogleCloudDiscoveryengineV1betaGroundedGenerationContent[];
      /** Content generation specification. */
      generationSpec?: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGenerationSpec;
      /** Grounding specification. */
      groundingSpec?: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSpec;
      /** Content of the system instruction for the current API. These instructions will take priority over any other prompt instructions if the selected model is supporting them. */
      systemInstruction?: GoogleCloudDiscoveryengineV1betaGroundedGenerationContent;
      /** The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details. */
      userLabels?: {[P in string]: string};
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestDynamicRetrievalConfiguration {
      /** Specification for the predictor for dynamic retrieval. */
      predictor?: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestDynamicRetrievalConfigurationDynamicRetrievalPredictor;
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestDynamicRetrievalConfigurationDynamicRetrievalPredictor {
      /** The value of the threshold. If the predictor will predict a value smaller than this, it would suppress grounding in the source. */
      threshold?: number;
      /** The version of the predictor to be used in dynamic retrieval. */
      version?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGenerationSpec {
      /** If specified, custom value for frequency penalty will be used. */
      frequencyPenalty?: number;
      /** Language code for content. Use language tags defined by [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). */
      languageCode?: string;
      /** If specified, custom value for max output tokens will be used. */
      maxOutputTokens?: number;
      /** Specifies which Vertex model id to use for generation. */
      modelId?: string;
      /** If specified, custom value for presence penalty will be used. */
      presencePenalty?: number;
      /** If specified, custom value for the seed will be used. */
      seed?: number;
      /** If specified, custom value for the temperature will be used. */
      temperature?: number;
      /** If specified, custom value for top-k sampling will be used. */
      topK?: number;
      /** If specified, custom value for nucleus sampling will be used. */
      topP?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSource {
      /** If set, grounding is performed with Google Search. */
      googleSearchSource?: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSourceGoogleSearchSource;
      /** If set, grounding is performed with inline content. */
      inlineSource?: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSourceInlineSource;
      /** If set, grounding is performed with Vertex AI Search. */
      searchSource?: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSourceSearchSource;
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSourceGoogleSearchSource {
      /** Optional. Specifies the dynamic retrieval configuration for the given source. */
      dynamicRetrievalConfig?: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestDynamicRetrievalConfiguration;
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSourceInlineSource {
      /** Attributes associated with the content. Common attributes include `source` (indicating where the content was sourced from) and `author` (indicating the author of the content). */
      attributes?: {[P in string]: string};
      /** List of facts to be used for grounding. */
      groundingFacts?: GoogleCloudDiscoveryengineV1betaGroundingFact[];
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSourceSearchSource {
      /** Filter expression to be applied to the search. The syntax is the same as SearchRequest.filter. */
      filter?: string;
      /** Number of search results to return. The default value is 10. The maximumm allowed value is 10. */
      maxResultCount?: number;
      /** If set, safe search is enabled in Vertex AI Search requests. */
      safeSearch?: boolean;
      /** The resource name of the Engine to use. Format: `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}` */
      servingConfig?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSpec {
      /** Grounding sources. */
      groundingSources?: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSource[];
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponse {
      /** Generated candidates. */
      candidates?: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidate[];
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidate {
      /** Content of the candidate. */
      content?: GoogleCloudDiscoveryengineV1betaGroundedGenerationContent;
      /** Grounding metadata for the generated content. */
      groundingMetadata?: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadata;
      /** The overall grounding score for the candidate, in the range of [0, 1]. */
      groundingScore?: number;
      /** Index of the candidate. */
      index?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadata {
      /** GroundingSupport across all claims in the answer candidate. An support to a fact indicates that the claim is supported by the fact. */
      groundingSupport?: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataGroundingSupport[];
      /** Retrieval metadata to provide an understanding in the retrieval steps performed by the model. There can be multiple such messages which can correspond to different parts of the retrieval. This is a mechanism used to ensure transparency to our users. */
      retrievalMetadata?: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataRetrievalMetadata[];
      /** Google search entry for the following-up web searches. */
      searchEntryPoint?: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataSearchEntryPoint;
      /** List of chunks to be attributed across all claims in the candidate. These are derived from the grounding sources supplied in the request. */
      supportChunks?: GoogleCloudDiscoveryengineV1betaFactChunk[];
      /** Web search queries for the following-up web search. */
      webSearchQueries?: string[];
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataDynamicRetrievalMetadata {
      /** Metadata for the dynamic retrieval predictor. */
      predictorMetadata?: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataDynamicRetrievalPredictorMetadata;
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataDynamicRetrievalPredictorMetadata {
      /** The value of the predictor. This should be between [0, 1] where a value of 0 means that the query would not benefit from grounding, while a value of 1.0 means that the query would benefit the most. In between values allow to differentiate between different usefulness scores for grounding. */
      prediction?: number;
      /** The version of the predictor which was used in dynamic retrieval. */
      version?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataGroundingSupport {
      /** Text for the claim in the candidate. Always provided when a support is found. */
      claimText?: string;
      /** A list of indices (into 'support_chunks') specifying the citations associated with the claim. For instance [1,3,4] means that support_chunks[1], support_chunks[3], support_chunks[4] are the chunks attributed to the claim. */
      supportChunkIndices?: number[];
      /** A score in the range of [0, 1] describing how grounded is a specific claim in the support chunks indicated. Higher value means that the claim is better supported by the chunks. */
      supportScore?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataRetrievalMetadata {
      /** Metadata for dynamic retrieval. */
      dynamicRetrievalMetadata?: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataDynamicRetrievalMetadata;
      /** Describes the source to which the metadata is referring to. */
      source?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataSearchEntryPoint {
      /** Web content snippet that can be embedded in a web page or an app webview. */
      renderedContent?: string;
      /** Base64 encoded JSON representing array of tuple. */
      sdkBlob?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaGroundedGenerationContent {
      /** Ordered `Parts` that constitute a single message. */
      parts?: GoogleCloudDiscoveryengineV1betaGroundedGenerationContentPart[];
      /** Producer of the content. Must be either `user` or `model`. Intended to be used for multi-turn conversations. Otherwise, it can be left unset. */
      role?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaGroundedGenerationContentPart {
      /** Inline text. */
      text?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaGroundingFact {
      /** Attributes associated with the fact. Common attributes include `source` (indicating where the fact was sourced from), `author` (indicating the author of the fact), and so on. */
      attributes?: {[P in string]: string};
      /** Text content of the fact. Can be at most 10K characters long. */
      factText?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaHealthcareFhirConfig {
      /** Whether to enable configurable schema for `HEALTHCARE_FHIR` vertical. If set to `true`, the predefined healthcare fhir schema can be extended for more customized searching and filtering. */
      enableConfigurableSchema?: boolean;
      /** Whether to enable static indexing for `HEALTHCARE_FHIR` batch ingestion. If set to `true`, the batch ingestion will be processed in a static indexing mode which is slower but more capable of handling larger volume. */
      enableStaticIndexingForBatchIngestion?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaIdentityMappingEntry {
      /** Required. Identity outside the customer identity provider. The length limit of external identity will be of 100 characters. */
      externalIdentity?: string;
      /** Group identifier. For Google Workspace user account, group_id should be the google workspace group email. For non-google identity provider, group_id is the mapped group identifier configured during the workforcepool config. */
      groupId?: string;
      /** User identifier. For Google Workspace user account, user_id should be the google workspace user email. For non-google identity provider, user_id is the mapped user identifier configured during the workforcepool config. */
      userId?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaIdentityMappingEntryOperationMetadata {
      /** The number of IdentityMappingEntries that failed to be processed. */
      failureCount?: string;
      /** The number of IdentityMappingEntries that were successfully processed. */
      successCount?: string;
      /** The total number of IdentityMappingEntries that were processed. */
      totalCount?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaIdentityMappingStore {
      /** Output only. CMEK-related information for the Identity Mapping Store. */
      cmekConfig?: GoogleCloudDiscoveryengineV1betaCmekConfig;
      /** Input only. The KMS key to be used to protect this Identity Mapping Store at creation time. Must be set for requests that need to comply with CMEK Org Policy protections. If this field is set and processed successfully, the Identity Mapping Store will be protected by the KMS key, as indicated in the cmek_config field. */
      kmsKeyName?: string;
      /** Immutable. The full resource name of the identity mapping store. Format: `projects/{project}/locations/{location}/identityMappingStores/{identity_mapping_store}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
      name?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Count of CompletionSuggestions that failed to be imported. */
      failureCount?: string;
      /** Count of CompletionSuggestions successfully imported. */
      successCount?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsRequest {
      /** BigQuery input source. */
      bigquerySource?: GoogleCloudDiscoveryengineV1betaBigQuerySource;
      /** The desired location of errors incurred during the Import. */
      errorConfig?: GoogleCloudDiscoveryengineV1betaImportErrorConfig;
      /** Cloud Storage location for the input content. */
      gcsSource?: GoogleCloudDiscoveryengineV1betaGcsSource;
      /** The Inline source for suggestion entries. */
      inlineSource?: GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsRequestInlineSource;
    }
    interface GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsRequestInlineSource {
      /** Required. A list of all denylist entries to import. Max of 1000 items. */
      suggestions?: GoogleCloudDiscoveryengineV1betaCompletionSuggestion[];
    }
    interface GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsResponse {
      /** The desired location of errors incurred during the Import. */
      errorConfig?: GoogleCloudDiscoveryengineV1betaImportErrorConfig;
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
    }
    interface GoogleCloudDiscoveryengineV1betaImportDocumentsMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Count of entries that encountered errors while processing. */
      failureCount?: string;
      /** Count of entries that were processed successfully. */
      successCount?: string;
      /** Total count of entries that were processed. */
      totalCount?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaImportDocumentsRequest {
      /** AlloyDB input source. */
      alloyDbSource?: GoogleCloudDiscoveryengineV1betaAlloyDbSource;
      /** Whether to automatically generate IDs for the documents if absent. If set to `true`, Document.ids are automatically generated based on the hash of the payload, where IDs may not be consistent during multiple imports. In which case ReconciliationMode.FULL is highly recommended to avoid duplicate contents. If unset or set to `false`, Document.ids have to be specified using id_field, otherwise, documents without IDs fail to be imported. Supported data sources: * GcsSource. GcsSource.data_schema must be `custom` or `csv`. Otherwise, an INVALID_ARGUMENT error is thrown. * BigQuerySource. BigQuerySource.data_schema must be `custom` or `csv`. Otherwise, an INVALID_ARGUMENT error is thrown. * SpannerSource. * CloudSqlSource. * FirestoreSource. * BigtableSource. */
      autoGenerateIds?: boolean;
      /** BigQuery input source. */
      bigquerySource?: GoogleCloudDiscoveryengineV1betaBigQuerySource;
      /** Cloud Bigtable input source. */
      bigtableSource?: GoogleCloudDiscoveryengineV1betaBigtableSource;
      /** Cloud SQL input source. */
      cloudSqlSource?: GoogleCloudDiscoveryengineV1betaCloudSqlSource;
      /** The desired location of errors incurred during the Import. */
      errorConfig?: GoogleCloudDiscoveryengineV1betaImportErrorConfig;
      /** FhirStore input source. */
      fhirStoreSource?: GoogleCloudDiscoveryengineV1betaFhirStoreSource;
      /** Firestore input source. */
      firestoreSource?: GoogleCloudDiscoveryengineV1betaFirestoreSource;
      /** Optional. Whether to force refresh the unstructured content of the documents. If set to `true`, the content part of the documents will be refreshed regardless of the update status of the referencing content. */
      forceRefreshContent?: boolean;
      /** Cloud Storage location for the input content. */
      gcsSource?: GoogleCloudDiscoveryengineV1betaGcsSource;
      /** The field indicates the ID field or column to be used as unique IDs of the documents. For GcsSource it is the key of the JSON field. For instance, `my_id` for JSON `{"my_id": "some_uuid"}`. For others, it may be the column name of the table where the unique ids are stored. The values of the JSON field or the table column are used as the Document.ids. The JSON field or the table column must be of string type, and the values must be set as valid strings conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) with 1-63 characters. Otherwise, documents without valid IDs fail to be imported. Only set this field when auto_generate_ids is unset or set as `false`. Otherwise, an INVALID_ARGUMENT error is thrown. If it is unset, a default value `_id` is used when importing from the allowed data sources. Supported data sources: * GcsSource. GcsSource.data_schema must be `custom` or `csv`. Otherwise, an INVALID_ARGUMENT error is thrown. * BigQuerySource. BigQuerySource.data_schema must be `custom` or `csv`. Otherwise, an INVALID_ARGUMENT error is thrown. * SpannerSource. * CloudSqlSource. * FirestoreSource. * BigtableSource. */
      idField?: string;
      /** The Inline source for the input content for documents. */
      inlineSource?: GoogleCloudDiscoveryengineV1betaImportDocumentsRequestInlineSource;
      /** The mode of reconciliation between existing documents and the documents to be imported. Defaults to ReconciliationMode.INCREMENTAL. */
      reconciliationMode?: string;
      /** Spanner input source. */
      spannerSource?: GoogleCloudDiscoveryengineV1betaSpannerSource;
      /** Indicates which fields in the provided imported documents to update. If not set, the default is to update all fields. */
      updateMask?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaImportDocumentsRequestInlineSource {
      /** Required. A list of documents to update/create. Each document must have a valid Document.id. Recommended max of 100 items. */
      documents?: GoogleCloudDiscoveryengineV1betaDocument[];
    }
    interface GoogleCloudDiscoveryengineV1betaImportDocumentsResponse {
      /** Echoes the destination for the complete errors in the request if set. */
      errorConfig?: GoogleCloudDiscoveryengineV1betaImportErrorConfig;
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
    }
    interface GoogleCloudDiscoveryengineV1betaImportErrorConfig {
      /** Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message. */
      gcsPrefix?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaImportIdentityMappingsRequest {
      /** The inline source to import identity mapping entries from. */
      inlineSource?: GoogleCloudDiscoveryengineV1betaImportIdentityMappingsRequestInlineSource;
    }
    interface GoogleCloudDiscoveryengineV1betaImportIdentityMappingsRequestInlineSource {
      /** A maximum of 10000 entries can be imported at one time */
      identityMappingEntries?: GoogleCloudDiscoveryengineV1betaIdentityMappingEntry[];
    }
    interface GoogleCloudDiscoveryengineV1betaImportIdentityMappingsResponse {
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
    }
    interface GoogleCloudDiscoveryengineV1betaImportSampleQueriesMetadata {
      /** ImportSampleQueries operation create time. */
      createTime?: string;
      /** Count of SampleQuerys that failed to be imported. */
      failureCount?: string;
      /** Count of SampleQuerys successfully imported. */
      successCount?: string;
      /** Total count of SampleQuerys that were processed. */
      totalCount?: string;
      /** ImportSampleQueries operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaImportSampleQueriesRequest {
      /** BigQuery input source. */
      bigquerySource?: GoogleCloudDiscoveryengineV1betaBigQuerySource;
      /** The desired location of errors incurred during the Import. */
      errorConfig?: GoogleCloudDiscoveryengineV1betaImportErrorConfig;
      /** Cloud Storage location for the input content. */
      gcsSource?: GoogleCloudDiscoveryengineV1betaGcsSource;
      /** The Inline source for sample query entries. */
      inlineSource?: GoogleCloudDiscoveryengineV1betaImportSampleQueriesRequestInlineSource;
    }
    interface GoogleCloudDiscoveryengineV1betaImportSampleQueriesRequestInlineSource {
      /** Required. A list of SampleQuerys to import. Max of 1000 items. */
      sampleQueries?: GoogleCloudDiscoveryengineV1betaSampleQuery[];
    }
    interface GoogleCloudDiscoveryengineV1betaImportSampleQueriesResponse {
      /** The desired location of errors incurred during the Import. */
      errorConfig?: GoogleCloudDiscoveryengineV1betaImportErrorConfig;
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
    }
    interface GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest {
      /** Cloud Storage location for the input content. Only 1 file can be specified that contains all entries to import. Supported values `gcs_source.schema` for autocomplete suggestion deny list entry imports: * `suggestion_deny_list` (default): One JSON [SuggestionDenyListEntry] per line. */
      gcsSource?: GoogleCloudDiscoveryengineV1betaGcsSource;
      /** The Inline source for the input content for suggestion deny list entries. */
      inlineSource?: GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequestInlineSource;
    }
    interface GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequestInlineSource {
      /** Required. A list of all denylist entries to import. Max of 1000 items. */
      entries?: GoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry[];
    }
    interface GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesResponse {
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
      /** Count of deny list entries that failed to be imported. */
      failedEntriesCount?: string;
      /** Count of deny list entries successfully imported. */
      importedEntriesCount?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaImportUserEventsMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Count of entries that encountered errors while processing. */
      failureCount?: string;
      /** Count of entries that were processed successfully. */
      successCount?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaImportUserEventsRequest {
      /** BigQuery input source. */
      bigquerySource?: GoogleCloudDiscoveryengineV1betaBigQuerySource;
      /** The desired location of errors incurred during the Import. Cannot be set for inline user event imports. */
      errorConfig?: GoogleCloudDiscoveryengineV1betaImportErrorConfig;
      /** Cloud Storage location for the input content. */
      gcsSource?: GoogleCloudDiscoveryengineV1betaGcsSource;
      /** The Inline source for the input content for UserEvents. */
      inlineSource?: GoogleCloudDiscoveryengineV1betaImportUserEventsRequestInlineSource;
    }
    interface GoogleCloudDiscoveryengineV1betaImportUserEventsRequestInlineSource {
      /** Required. A list of user events to import. Recommended max of 10k items. */
      userEvents?: GoogleCloudDiscoveryengineV1betaUserEvent[];
    }
    interface GoogleCloudDiscoveryengineV1betaImportUserEventsResponse {
      /** Echoes the destination for the complete errors if this field was set in the request. */
      errorConfig?: GoogleCloudDiscoveryengineV1betaImportErrorConfig;
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
      /** Count of user events imported with complete existing Documents. */
      joinedEventsCount?: string;
      /** Count of user events imported, but with Document information not found in the existing Branch. */
      unjoinedEventsCount?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaInterval {
      /** Exclusive upper bound. */
      exclusiveMaximum?: number;
      /** Exclusive lower bound. */
      exclusiveMinimum?: number;
      /** Inclusive upper bound. */
      maximum?: number;
      /** Inclusive lower bound. */
      minimum?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaLanguageInfo {
      /** Output only. Language part of normalized_language_code. E.g.: `en-US` -> `en`, `zh-Hans-HK` -> `zh`, `en` -> `en`. */
      language?: string;
      /** The language code for the DataStore. */
      languageCode?: string;
      /** Output only. This is the normalized form of language_code. E.g.: language_code of `en-GB`, `en_GB`, `en-UK` or `en-gb` will have normalized_language_code of `en-GB`. */
      normalizedLanguageCode?: string;
      /** Output only. Region part of normalized_language_code, if present. E.g.: `en-US` -> `US`, `zh-Hans-HK` -> `HK`, `en` -> ``. */
      region?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaListControlsResponse {
      /** All the Controls for a given data store. */
      controls?: GoogleCloudDiscoveryengineV1betaControl[];
      /** Pagination token, if not returned indicates the last page. */
      nextPageToken?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaListConversationsResponse {
      /** All the Conversations for a given data store. */
      conversations?: GoogleCloudDiscoveryengineV1betaConversation[];
      /** Pagination token, if not returned indicates the last page. */
      nextPageToken?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaListCustomModelsResponse {
      /** List of custom tuning models. */
      models?: GoogleCloudDiscoveryengineV1betaCustomTuningModel[];
    }
    interface GoogleCloudDiscoveryengineV1betaListDataStoresResponse {
      /** All the customer's DataStores. */
      dataStores?: GoogleCloudDiscoveryengineV1betaDataStore[];
      /** A token that can be sent as ListDataStoresRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaListDocumentsResponse {
      /** The Documents. */
      documents?: GoogleCloudDiscoveryengineV1betaDocument[];
      /** A token that can be sent as ListDocumentsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaListEnginesResponse {
      /** All the customer's Engines. */
      engines?: GoogleCloudDiscoveryengineV1betaEngine[];
      /** Not supported. */
      nextPageToken?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaListEvaluationResultsResponse {
      /** The evaluation results for the SampleQuerys. */
      evaluationResults?: GoogleCloudDiscoveryengineV1betaListEvaluationResultsResponseEvaluationResult[];
      /** A token that can be sent as ListEvaluationResultsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaListEvaluationResultsResponseEvaluationResult {
      /** Output only. The metrics produced by the evaluation, for a given SampleQuery. */
      qualityMetrics?: GoogleCloudDiscoveryengineV1betaQualityMetrics;
      /** Output only. The SampleQuery that was evaluated. */
      sampleQuery?: GoogleCloudDiscoveryengineV1betaSampleQuery;
    }
    interface GoogleCloudDiscoveryengineV1betaListEvaluationsResponse {
      /** The Evaluations. */
      evaluations?: GoogleCloudDiscoveryengineV1betaEvaluation[];
      /** A token that can be sent as ListEvaluationsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaListIdentityMappingsResponse {
      /** The Identity Mapping Entries. */
      identityMappingEntries?: GoogleCloudDiscoveryengineV1betaIdentityMappingEntry[];
      /** A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaListIdentityMappingStoresResponse {
      /** The Identity Mapping Stores. */
      identityMappingStores?: GoogleCloudDiscoveryengineV1betaIdentityMappingStore[];
      /** A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaListSampleQueriesResponse {
      /** A token that can be sent as ListSampleQueriesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** The SampleQuerys. */
      sampleQueries?: GoogleCloudDiscoveryengineV1betaSampleQuery[];
    }
    interface GoogleCloudDiscoveryengineV1betaListSampleQuerySetsResponse {
      /** A token that can be sent as ListSampleQuerySetsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** The SampleQuerySets. */
      sampleQuerySets?: GoogleCloudDiscoveryengineV1betaSampleQuerySet[];
    }
    interface GoogleCloudDiscoveryengineV1betaListSchemasResponse {
      /** A token that can be sent as ListSchemasRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** The Schemas. */
      schemas?: GoogleCloudDiscoveryengineV1betaSchema[];
    }
    interface GoogleCloudDiscoveryengineV1betaListServingConfigsResponse {
      /** Pagination token, if not returned indicates the last page. */
      nextPageToken?: string;
      /** All the ServingConfigs for a given dataStore. */
      servingConfigs?: GoogleCloudDiscoveryengineV1betaServingConfig[];
    }
    interface GoogleCloudDiscoveryengineV1betaListSessionsResponse {
      /** Pagination token, if not returned indicates the last page. */
      nextPageToken?: string;
      /** All the Sessions for a given data store. */
      sessions?: GoogleCloudDiscoveryengineV1betaSession[];
    }
    interface GoogleCloudDiscoveryengineV1betaListTargetSitesResponse {
      /** A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** List of TargetSites. */
      targetSites?: GoogleCloudDiscoveryengineV1betaTargetSite[];
      /** The total number of items matching the request. This will always be populated in the response. */
      totalSize?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaMediaInfo {
      /** The media progress time in seconds, if applicable. For example, if the end user has finished 90 seconds of a playback video, then MediaInfo.media_progress_duration.seconds should be set to 90. */
      mediaProgressDuration?: string;
      /** Media progress should be computed using only the media_progress_duration relative to the media total length. This value must be between `[0, 1.0]` inclusive. If this is not a playback or the progress cannot be computed (e.g. ongoing livestream), this field should be unset. */
      mediaProgressPercentage?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig {
      /** Mode of Natural Language Query Understanding. If this field is unset, the behavior defaults to NaturalLanguageQueryUnderstandingConfig.Mode.DISABLED. */
      mode?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaPageInfo {
      /** The most specific category associated with a category page. To represent full path of category, use '>' sign to separate different hierarchies. If '>' is part of the category name, replace it with other character(s). Category pages include special pages such as sales or promotions. For instance, a special sale page may have the category hierarchy: `"pageCategory" : "Sales > 2017 Black Friday Deals"`. Required for `view-category-page` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      pageCategory?: string;
      /** A unique ID of a web page view. This should be kept the same for all user events triggered from the same pageview. For example, an item detail page view could trigger multiple events as the user is browsing the page. The `pageview_id` property should be kept the same for all these events so that they can be grouped together properly. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically. */
      pageviewId?: string;
      /** The referrer URL of the current page. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically. However, some browser privacy restrictions may cause this field to be empty. */
      referrerUri?: string;
      /** Complete URL (window.location.href) of the user's current page. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically. Maximum length 5,000 characters. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaPanelInfo {
      /** The display name of the panel. */
      displayName?: string;
      /** Optional. The document IDs associated with this panel. */
      documents?: GoogleCloudDiscoveryengineV1betaDocumentInfo[];
      /** Required. The panel ID. */
      panelId?: string;
      /** The ordered position of the panel, if shown to the user with other panels. If set, then total_panels must also be set. */
      panelPosition?: number;
      /** The total number of panels, including this one, shown to the user. Must be set if panel_position is set. */
      totalPanels?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaPauseEngineRequest {}
    interface GoogleCloudDiscoveryengineV1betaProject {
      /** Output only. The timestamp when this project is created. */
      createTime?: string;
      /** Output only. Full resource name of the project, for example `projects/{project}`. Note that when making requests, project number and project id are both acceptable, but the server will always respond in project number. */
      name?: string;
      /** Output only. The timestamp when this project is successfully provisioned. Empty value means this project is still provisioning and is not ready for use. */
      provisionCompletionTime?: string;
      /** Output only. A map of terms of services. The key is the `id` of ServiceTerms. */
      serviceTermsMap?: {
        [P in string]: GoogleCloudDiscoveryengineV1betaProjectServiceTerms;
      };
    }
    interface GoogleCloudDiscoveryengineV1betaProjectServiceTerms {
      /** The last time when the project agreed to the terms of service. */
      acceptTime?: string;
      /** The last time when the project declined or revoked the agreement to terms of service. */
      declineTime?: string;
      /** The unique identifier of this terms of service. Available terms: * `GA_DATA_USE_TERMS`: [Terms for data use](https://cloud.google.com/retail/data-use-terms). When using this as `id`, the acceptable version to provide is `2022-11-23`. */
      id?: string;
      /** Whether the project has accepted/rejected the service terms or it is still pending. */
      state?: string;
      /** The version string of the terms of service. For acceptable values, see the comments for id above. */
      version?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaProvisionProjectMetadata {}
    interface GoogleCloudDiscoveryengineV1betaProvisionProjectRequest {
      /** Required. Set to `true` to specify that caller has read and would like to give consent to the [Terms for data use](https://cloud.google.com/retail/data-use-terms). */
      acceptDataUseTerms?: boolean;
      /** Required. The version of the [Terms for data use](https://cloud.google.com/retail/data-use-terms) that caller has read and would like to give consent to. Acceptable version is `2022-11-23`, and this may change over time. */
      dataUseTermsVersion?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaPurgeCompletionSuggestionsRequest {}
    interface GoogleCloudDiscoveryengineV1betaPurgeDocumentsMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Count of entries that encountered errors while processing. */
      failureCount?: string;
      /** Count of entries that were ignored as entries were not found. */
      ignoredCount?: string;
      /** Count of entries that were deleted successfully. */
      successCount?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest {
      /** The desired location of errors incurred during the purge. */
      errorConfig?: GoogleCloudDiscoveryengineV1betaPurgeErrorConfig;
      /** Required. Filter matching documents to purge. Only currently supported value is `*` (all items). */
      filter?: string;
      /** Actually performs the purge. If `force` is set to false, return the expected purge count without deleting any documents. */
      force?: boolean;
      /** Cloud Storage location for the input content. Supported `data_schema`: * `document_id`: One valid Document.id per line. */
      gcsSource?: GoogleCloudDiscoveryengineV1betaGcsSource;
      /** Inline source for the input content for purge. */
      inlineSource?: GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequestInlineSource;
    }
    interface GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequestInlineSource {
      /** Required. A list of full resource name of documents to purge. In the format `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/branches/*‍/documents/*`. Recommended max of 100 items. */
      documents?: string[];
    }
    interface GoogleCloudDiscoveryengineV1betaPurgeDocumentsResponse {
      /** The total count of documents purged as a result of the operation. */
      purgeCount?: string;
      /** A sample of document names that will be deleted. Only populated if `force` is set to false. A max of 100 names will be returned and the names are chosen at random. */
      purgeSample?: string[];
    }
    interface GoogleCloudDiscoveryengineV1betaPurgeErrorConfig {
      /** Cloud Storage prefix for purge errors. This must be an empty, existing Cloud Storage directory. Purge errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message. */
      gcsPrefix?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaPurgeIdentityMappingsRequest {
      /** Filter matching identity mappings to purge. The eligible field for filtering is: * `update_time`: in ISO 8601 "zulu" format. * `external_id` Examples: * Deleting all identity mappings updated in a time range: `update_time > "2012-04-23T18:25:43.511Z" AND update_time < "2012-04-23T18:30:43.511Z"` * Deleting all identity mappings for a given external_id: `external_id = "id1"` * Deleting all identity mappings inside an identity mapping store: `*` The filtering fields are assumed to have an implicit AND. Should not be used with source. An error will be thrown, if both are provided. */
      filter?: string;
      /** Actually performs the purge. If `force` is set to false, return the expected purge count without deleting any identity mappings. This field is only supported for purge with filter. For input source this field is ignored and data will be purged regardless of the value of this field. */
      force?: boolean;
      /** The inline source to purge identity mapping entries from. */
      inlineSource?: GoogleCloudDiscoveryengineV1betaPurgeIdentityMappingsRequestInlineSource;
    }
    interface GoogleCloudDiscoveryengineV1betaPurgeIdentityMappingsRequestInlineSource {
      /** A maximum of 10000 entries can be purged at one time */
      identityMappingEntries?: GoogleCloudDiscoveryengineV1betaIdentityMappingEntry[];
    }
    interface GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest {}
    interface GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesResponse {
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
      /** Number of suggestion deny list entries purged. */
      purgeCount?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaPurgeUserEventsRequest {
      /** Required. The filter string to specify the events to be deleted with a length limit of 5,000 characters. The eligible fields for filtering are: * `eventType`: Double quoted UserEvent.event_type string. * `eventTime`: in ISO 8601 "zulu" format. * `userPseudoId`: Double quoted string. Specifying this will delete all events associated with a visitor. * `userId`: Double quoted string. Specifying this will delete all events associated with a user. Note: This API only supports purging a max range of 30 days. Examples: * Deleting all events in a time range: `eventTime > "2012-04-23T18:25:43.511Z" eventTime < "2012-04-23T18:30:43.511Z"` * Deleting specific eventType in a time range: `eventTime > "2012-04-23T18:25:43.511Z" eventTime < "2012-04-23T18:30:43.511Z" eventType = "search"` * Deleting all events for a specific visitor in a time range: `eventTime > "2012-04-23T18:25:43.511Z" eventTime < "2012-04-23T18:30:43.511Z" userPseudoId = "visitor1024"` * Deleting the past 30 days of events inside a DataStore: `*` The filtering fields are assumed to have an implicit AND. */
      filter?: string;
      /** The `force` field is currently not supported. Purge user event requests will permanently delete all purgeable events. Once the development is complete: If `force` is set to false, the method will return the expected purge count without deleting any user events. This field will default to false if not included in the request. */
      force?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaQualityMetrics {
      /** Normalized discounted cumulative gain (NDCG) per document, at various top-k cutoff levels. NDCG measures the ranking quality, giving higher relevance to top results. Example (top-3): Suppose SampleQuery with three retrieved documents (D1, D2, D3) and binary relevance judgements (1 for relevant, 0 for not relevant): Retrieved: [D3 (0), D1 (1), D2 (1)] Ideal: [D1 (1), D2 (1), D3 (0)] Calculate NDCG@3 for each SampleQuery: * DCG@3: 0/log2(1+1) + 1/log2(2+1) + 1/log2(3+1) = 1.13 * Ideal DCG@3: 1/log2(1+1) + 1/log2(2+1) + 0/log2(3+1) = 1.63 * NDCG@3: 1.13/1.63 = 0.693 */
      docNdcg?: GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics;
      /** Precision per document, at various top-k cutoff levels. Precision is the fraction of retrieved documents that are relevant. Example (top-5): * For a single SampleQuery, If 4 out of 5 retrieved documents in the top-5 are relevant, precision@5 = 4/5 = 0.8 */
      docPrecision?: GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics;
      /** Recall per document, at various top-k cutoff levels. Recall is the fraction of relevant documents retrieved out of all relevant documents. Example (top-5): * For a single SampleQuery, If 3 out of 5 relevant documents are retrieved in the top-5, recall@5 = 3/5 = 0.6 */
      docRecall?: GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics;
      /** Normalized discounted cumulative gain (NDCG) per page, at various top-k cutoff levels. NDCG measures the ranking quality, giving higher relevance to top results. Example (top-3): Suppose SampleQuery with three retrieved pages (P1, P2, P3) and binary relevance judgements (1 for relevant, 0 for not relevant): Retrieved: [P3 (0), P1 (1), P2 (1)] Ideal: [P1 (1), P2 (1), P3 (0)] Calculate NDCG@3 for SampleQuery: * DCG@3: 0/log2(1+1) + 1/log2(2+1) + 1/log2(3+1) = 1.13 * Ideal DCG@3: 1/log2(1+1) + 1/log2(2+1) + 0/log2(3+1) = 1.63 * NDCG@3: 1.13/1.63 = 0.693 */
      pageNdcg?: GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics;
      /** Recall per page, at various top-k cutoff levels. Recall is the fraction of relevant pages retrieved out of all relevant pages. Example (top-5): * For a single SampleQuery, if 3 out of 5 relevant pages are retrieved in the top-5, recall@5 = 3/5 = 0.6 */
      pageRecall?: GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics;
    }
    interface GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics {
      /** The top-1 value. */
      top1?: number;
      /** The top-10 value. */
      top10?: number;
      /** The top-3 value. */
      top3?: number;
      /** The top-5 value. */
      top5?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaQuery {
      /** Unique Id for the query. */
      queryId?: string;
      /** Plain text. */
      text?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaRankingRecord {
      /** The content of the record. Empty by default. At least one of title or content should be set otherwise an INVALID_ARGUMENT error is thrown. */
      content?: string;
      /** The unique ID to represent the record. */
      id?: string;
      /** The score of this record based on the given query and selected model. The score will be rounded to 2 decimal places. If the score is close to 0, it will be rounded to 0.0001 to avoid returning unset. */
      score?: number;
      /** The title of the record. Empty by default. At least one of title or content should be set otherwise an INVALID_ARGUMENT error is thrown. */
      title?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaRankRequest {
      /** If true, the response will contain only record ID and score. By default, it is false, the response will contain record details. */
      ignoreRecordDetailsInResponse?: boolean;
      /** The identifier of the model to use. It is one of: * `semantic-ranker-512@latest`: Semantic ranking model with maxiumn input token size 512. It is set to `semantic-ranker-512@latest` by default if unspecified. */
      model?: string;
      /** The query to use. */
      query?: string;
      /** Required. A list of records to rank. At most 200 records to rank. */
      records?: GoogleCloudDiscoveryengineV1betaRankingRecord[];
      /** The number of results to return. If this is unset or no bigger than zero, returns all results. */
      topN?: number;
      /** The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details. */
      userLabels?: {[P in string]: string};
    }
    interface GoogleCloudDiscoveryengineV1betaRankResponse {
      /** A list of records sorted by descending score. */
      records?: GoogleCloudDiscoveryengineV1betaRankingRecord[];
    }
    interface GoogleCloudDiscoveryengineV1betaRecommendRequest {
      /** Filter for restricting recommendation results with a length limit of 5,000 characters. Currently, only filter expressions on the `filter_tags` attribute is supported. Examples: * `(filter_tags: ANY("Red", "Blue") OR filter_tags: ANY("Hot", "Cold"))` * `(filter_tags: ANY("Red", "Blue")) AND NOT (filter_tags: ANY("Green"))` If `attributeFilteringSyntax` is set to true under the `params` field, then attribute-based expressions are expected instead of the above described tag-based syntax. Examples: * (language: ANY("en", "es")) AND NOT (categories: ANY("Movie")) * (available: true) AND (language: ANY("en", "es")) OR (categories: ANY("Movie")) If your filter blocks all results, the API returns generic (unfiltered) popular Documents. If you only want results strictly matching the filters, set `strictFiltering` to `true` in RecommendRequest.params to receive empty results instead. Note that the API never returns Documents with `storageStatus` as `EXPIRED` or `DELETED` regardless of filter choices. */
      filter?: string;
      /** Maximum number of results to return. Set this property to the number of recommendation results needed. If zero, the service chooses a reasonable default. The maximum allowed value is 100. Values above 100 are set to 100. */
      pageSize?: number;
      /** Additional domain specific parameters for the recommendations. Allowed values: * `returnDocument`: Boolean. If set to `true`, the associated Document object is returned in RecommendResponse.RecommendationResult.document. * `returnScore`: Boolean. If set to true, the recommendation score corresponding to each returned Document is set in RecommendResponse.RecommendationResult.metadata. The given score indicates the probability of a Document conversion given the user's context and history. * `strictFiltering`: Boolean. True by default. If set to `false`, the service returns generic (unfiltered) popular Documents instead of empty if your filter blocks all recommendation results. * `diversityLevel`: String. Default empty. If set to be non-empty, then it needs to be one of: * `no-diversity` * `low-diversity` * `medium-diversity` * `high-diversity` * `auto-diversity` This gives request-level control and adjusts recommendation results based on Document category. * `attributeFilteringSyntax`: Boolean. False by default. If set to true, the `filter` field is interpreted according to the new, attribute-based syntax. */
      params?: {[P in string]: any};
      /** Required. Context about the user, what they are looking at and what action they took to trigger the Recommend request. Note that this user event detail won't be ingested to userEvent logs. Thus, a separate userEvent write request is required for event logging. Don't set UserEvent.user_pseudo_id or UserEvent.user_info.user_id to the same fixed ID for different users. If you are trying to receive non-personalized recommendations (not recommended; this can negatively impact model performance), instead set UserEvent.user_pseudo_id to a random unique ID and leave UserEvent.user_info.user_id unset. */
      userEvent?: GoogleCloudDiscoveryengineV1betaUserEvent;
      /** The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details. */
      userLabels?: {[P in string]: string};
      /** Use validate only mode for this recommendation query. If set to `true`, a fake model is used that returns arbitrary Document IDs. Note that the validate only mode should only be used for testing the API, or if the model is not ready. */
      validateOnly?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaRecommendResponse {
      /** A unique attribution token. This should be included in the UserEvent logs resulting from this recommendation, which enables accurate attribution of recommendation model performance. */
      attributionToken?: string;
      /** IDs of documents in the request that were missing from the default Branch associated with the requested ServingConfig. */
      missingIds?: string[];
      /** A list of recommended Documents. The order represents the ranking (from the most relevant Document to the least). */
      results?: GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult[];
      /** True if RecommendRequest.validate_only was set. */
      validateOnly?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult {
      /** Set if `returnDocument` is set to true in RecommendRequest.params. */
      document?: GoogleCloudDiscoveryengineV1betaDocument;
      /** Resource ID of the recommended Document. */
      id?: string;
      /** Additional Document metadata or annotations. Possible values: * `score`: Recommendation score in double value. Is set if `returnScore` is set to true in RecommendRequest.params. */
      metadata?: {[P in string]: any};
    }
    interface GoogleCloudDiscoveryengineV1betaRecrawlUrisRequest {
      /** Optional. Full resource name of the `SiteCredential`, such as `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/siteSearchEngine/siteCredentials/*`. Only set to crawl private URIs. */
      siteCredential?: string;
      /** Required. List of URIs to crawl. At most 10K URIs are supported, otherwise an INVALID_ARGUMENT error is thrown. Each URI should match at least one TargetSite in `site_search_engine`. */
      uris?: string[];
    }
    interface GoogleCloudDiscoveryengineV1betaReply {
      /** References in the reply. */
      references?: GoogleCloudDiscoveryengineV1betaReplyReference[];
      /** DEPRECATED: use `summary` instead. Text reply. */
      reply?: string;
      /** Summary based on search results. */
      summary?: GoogleCloudDiscoveryengineV1betaSearchResponseSummary;
    }
    interface GoogleCloudDiscoveryengineV1betaReplyReference {
      /** Anchor text. */
      anchorText?: string;
      /** Anchor text end index. */
      end?: number;
      /** Anchor text start index. */
      start?: number;
      /** URI link reference. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaResumeEngineRequest {}
    interface GoogleCloudDiscoveryengineV1betaSafetyRating {
      /** Output only. Indicates whether the content was filtered out because of this rating. */
      blocked?: boolean;
      /** Output only. Harm category. */
      category?: string;
      /** Output only. Harm probability levels in the content. */
      probability?: string;
      /** Output only. Harm probability score. */
      probabilityScore?: number;
      /** Output only. Harm severity levels in the content. */
      severity?: string;
      /** Output only. Harm severity score. */
      severityScore?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaSampleQuery {
      /** Output only. Timestamp the SampleQuery was created at. */
      createTime?: string;
      /** Identifier. The full resource name of the sample query, in the format of `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}/sampleQueries/{sample_query}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
      name?: string;
      /** The query entry. */
      queryEntry?: GoogleCloudDiscoveryengineV1betaSampleQueryQueryEntry;
    }
    interface GoogleCloudDiscoveryengineV1betaSampleQueryQueryEntry {
      /** Required. The query. */
      query?: string;
      /** List of targets for the query. */
      targets?: GoogleCloudDiscoveryengineV1betaSampleQueryQueryEntryTarget[];
    }
    interface GoogleCloudDiscoveryengineV1betaSampleQueryQueryEntryTarget {
      /** Expected page numbers of the target. Each page number must be non negative. */
      pageNumbers?: number[];
      /** Relevance score of the target. */
      score?: number;
      /** Expected uri of the target. This field must be a UTF-8 encoded string with a length limit of 2048 characters. Example of valid uris: `https://example.com/abc`, `gcs://example/example.pdf`. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSampleQuerySet {
      /** Output only. Timestamp the SampleQuerySet was created at. */
      createTime?: string;
      /** The description of the SampleQuerySet. */
      description?: string;
      /** Required. The sample query set display name. This field must be a UTF-8 encoded string with a length limit of 128 characters. */
      displayName?: string;
      /** Identifier. The full resource name of the SampleQuerySet, in the format of `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
      name?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSchema {
      /** The JSON representation of the schema. */
      jsonSchema?: string;
      /** Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
      name?: string;
      /** The structured representation of the schema. */
      structSchema?: {[P in string]: any};
    }
    interface GoogleCloudDiscoveryengineV1betaSearchInfo {
      /** An integer that specifies the current offset for pagination (the 0-indexed starting location, amongst the products deemed by the API as relevant). See SearchRequest.offset for definition. If this field is negative, an `INVALID_ARGUMENT` is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      offset?: number;
      /** The order in which products are returned, if applicable. See SearchRequest.order_by for definition and syntax. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      orderBy?: string;
      /** The user's search query. See SearchRequest.query for definition. The value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. At least one of search_query or PageInfo.page_category is required for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      searchQuery?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchLinkPromotion {
      /** Optional. The Promotion description. Maximum length: 200 characters. */
      description?: string;
      /** Optional. The enabled promotion will be returned for any serving configs associated with the parent of the control this promotion is attached to. This flag is used for basic site search only. */
      enabled?: boolean;
      /** Optional. The promotion thumbnail image url. */
      imageUri?: string;
      /** Required. The title of the promotion. Maximum length: 160 characters. */
      title?: string;
      /** Required. The URL for the page the user wants to promote. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequest {
      /** Boost specification to boost certain documents. For more information on boosting, see [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results) */
      boostSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec;
      /** The branch resource name, such as `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store/branches/0`. Use `default_branch` as the branch ID or leave this field empty, to search documents under the default branch. */
      branch?: string;
      /** The default filter that is applied when a user performs a search without checking any filters on the search page. The filter applied to every search request when quality improvement such as query expansion is needed. In the case a query does not have a sufficient amount of results this filter will be used to determine whether or not to enable the query expansion flow. The original filter will still be used for the query expanded search. This field is strongly recommended to achieve high search quality. For more information about filter syntax, see SearchRequest.filter. */
      canonicalFilter?: string;
      /** A specification for configuring the behavior of content search. */
      contentSearchSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec;
      /** Specs defining DataStores to filter on in a search call and configurations for those data stores. This is only considered for Engines with multiple data stores. For engines with a single data store, the specs directly under SearchRequest should be used. */
      dataStoreSpecs?: GoogleCloudDiscoveryengineV1betaSearchRequestDataStoreSpec[];
      /** Uses the provided embedding to do additional semantic document retrieval. The retrieval is based on the dot product of SearchRequest.EmbeddingSpec.EmbeddingVector.vector and the document embedding that is provided in SearchRequest.EmbeddingSpec.EmbeddingVector.field_path. If SearchRequest.EmbeddingSpec.EmbeddingVector.field_path is not provided, it will use ServingConfig.EmbeddingConfig.field_path. */
      embeddingSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec;
      /** Facet specifications for faceted search. If empty, no facets are returned. A maximum of 100 values are allowed. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      facetSpecs?: GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec[];
      /** The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. Filter expression is case-sensitive. If this field is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this mapping is defined by the customer in their schema. For example a media customer might have a field 'name' in their schema. In this case the filter would look like this: filter --> name:'ANY("king kong")' For more information about filtering including syntax and filter operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata) */
      filter?: string;
      /** Raw image query. */
      imageQuery?: GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery;
      /** The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see [Standard fields](https://cloud.google.com/apis/design/standard_fields). This field helps to better interpret the query. If a value isn't specified, the query language code is automatically detected, which may not be accurate. */
      languageCode?: string;
      /** If `naturalLanguageQueryUnderstandingSpec` is not specified, no additional natural language query understanding will be done. */
      naturalLanguageQueryUnderstandingSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec;
      /** A 0-indexed integer that specifies the current offset (that is, starting result location, amongst the Documents deemed by the API as relevant) in search results. This field is only considered if page_token is unset. If this field is negative, an `INVALID_ARGUMENT` is returned. */
      offset?: number;
      /** The maximum number of results to return for OneBox. This applies to each OneBox type individually. Default number is 10. */
      oneBoxPageSize?: number;
      /** The order in which documents are returned. Documents can be ordered by a field in an Document object. Leave it unset if ordered by relevance. `order_by` expression is case-sensitive. For more information on ordering the website search results, see [Order web search results](https://cloud.google.com/generative-ai-app-builder/docs/order-web-search-results). For more information on ordering the healthcare search results, see [Order healthcare search results](https://cloud.google.com/generative-ai-app-builder/docs/order-hc-results). If this field is unrecognizable, an `INVALID_ARGUMENT` is returned. */
      orderBy?: string;
      /** Maximum number of Documents to return. The maximum allowed value depends on the data type. Values above the maximum value are coerced to the maximum value. * Websites with basic indexing: Default `10`, Maximum `25`. * Websites with advanced indexing: Default `25`, Maximum `50`. * Other: Default `50`, Maximum `100`. If this field is negative, an `INVALID_ARGUMENT` is returned. */
      pageSize?: number;
      /** A page token received from a previous SearchService.Search call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to SearchService.Search must match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      pageToken?: string;
      /** Additional search parameters. For public website search only, supported values are: * `user_country_code`: string. Default empty. If set to non-empty, results are restricted or boosted based on the location provided. For example, `user_country_code: "au"` For available codes see [Country Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes) * `search_type`: double. Default empty. Enables non-webpage searching depending on the value. The only valid non-default value is 1, which enables image searching. For example, `search_type: 1` */
      params?: {[P in string]: any};
      /** The specification for personalization. Notice that if both ServingConfig.personalization_spec and SearchRequest.personalization_spec are set, SearchRequest.personalization_spec overrides ServingConfig.personalization_spec. */
      personalizationSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestPersonalizationSpec;
      /** Raw search query. */
      query?: string;
      /** The query expansion specification that specifies the conditions under which query expansion occurs. */
      queryExpansionSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec;
      /** The ranking expression controls the customized ranking on retrieval documents. This overrides ServingConfig.ranking_expression. The ranking expression is a single function or multiple functions that are joined by "+". * ranking_expression = function, { " + ", function }; Supported functions: * double * relevance_score * double * dotProduct(embedding_field_path) Function variables: * `relevance_score`: pre-defined keywords, used for measure relevance between query and document. * `embedding_field_path`: the document embedding field used with query embedding vector. * `dotProduct`: embedding function between embedding_field_path and query embedding vector. Example ranking expression: If document has an embedding field doc_embedding, the ranking expression could be `0.5 * relevance_score + 0.3 * dotProduct(doc_embedding)`. */
      rankingExpression?: string;
      /** The Unicode country/region code (CLDR) of a location, such as "US" and "419". For more information, see [Standard fields](https://cloud.google.com/apis/design/standard_fields). If set, then results will be boosted based on the region_code provided. */
      regionCode?: string;
      /** The relevance threshold of the search results. Default to Google defined threshold, leveraging a balance of precision and recall to deliver both highly accurate results and comprehensive coverage of relevant information. */
      relevanceThreshold?: string;
      /** Whether to turn on safe search. This is only supported for website search. */
      safeSearch?: boolean;
      /** Search as you type configuration. Only supported for the IndustryVertical.MEDIA vertical. */
      searchAsYouTypeSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec;
      /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
      servingConfig?: string;
      /** The session resource name. Optional. Session allows users to do multi-turn /search API calls or coordination between /search API calls and /answer API calls. Example #1 (multi-turn /search API calls): 1. Call /search API with the auto-session mode (see below). 2. Call /search API with the session ID generated in the first call. Here, the previous search query gets considered in query standing. I.e., if the first query is "How did Alphabet do in 2022?" and the current query is "How about 2023?", the current query will be interpreted as "How did Alphabet do in 2023?". Example #2 (coordination between /search API calls and /answer API calls): 1. Call /search API with the auto-session mode (see below). 2. Call /answer API with the session ID generated in the first call. Here, the answer generation happens in the context of the search results from the first search call. Auto-session mode: when `projects/.../sessions/-` is used, a new session gets automatically created. Otherwise, users can use the create-session API to create a session manually. Multi-turn Search feature is currently at private GA stage. Please use v1alpha or v1beta version instead before we launch this feature to public GA. Or ask for allowlisting through Google Support team. */
      session?: string;
      /** Session specification. Can be used only when `session` is set. */
      sessionSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestSessionSpec;
      /** The spell correction specification that specifies the mode under which spell correction takes effect. */
      spellCorrectionSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec;
      /** Information about the end user. Highly recommended for analytics and personalization. UserInfo.user_agent is used to deduce `device_type` for analytics. */
      userInfo?: GoogleCloudDiscoveryengineV1betaUserInfo;
      /** The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details. */
      userLabels?: {[P in string]: string};
      /** A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This field should NOT have a fixed value such as `unknown_visitor`. This should be the same identifier as UserEvent.user_pseudo_id and CompleteQueryRequest.user_pseudo_id The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      userPseudoId?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec {
      /** Condition boost specifications. If a document matches multiple conditions in the specifictions, boost scores from these specifications are all applied and combined in a non-linear way. Maximum number of specifications is 20. */
      conditionBoostSpecs?: GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec[];
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec {
      /** Strength of the condition boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the document a big promotion. However, it does not necessarily mean that the boosted document will be the top result at all times, nor that other documents will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant documents. Setting to -1.0 gives the document a big demotion. However, results that are deeply relevant might still be shown. The document will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored. Only one of the (condition, boost) combination or the boost_control_spec below are set. If both are set then the global boost is ignored and the more fine-grained boost_control_spec is applied. */
      boost?: number;
      /** Complex specification for custom ranking based on customer defined attribute value. */
      boostControlSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec;
      /** An expression which specifies a boost condition. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost documents with document ID "doc_1" or "doc_2", and color "Red" or "Blue": `(document_id: ANY("doc_1", "doc_2")) AND (color: ANY("Red", "Blue"))` */
      condition?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec {
      /** The attribute type to be used to determine the boost amount. The attribute value can be derived from the field value of the specified field_name. In the case of numerical it is straightforward i.e. attribute_value = numerical_field_value. In the case of freshness however, attribute_value = (time.now() - datetime_field_value). */
      attributeType?: string;
      /** The control points used to define the curve. The monotonic function (defined through the interpolation_type above) passes through the control points listed here. */
      controlPoints?: GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint[];
      /** The name of the field whose value will be used to determine the boost amount. */
      fieldName?: string;
      /** The interpolation type to be applied to connect the control points listed below. */
      interpolationType?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint {
      /** Can be one of: 1. The numerical field value. 2. The duration spec for freshness: The value must be formatted as an XSD `dayTimeDuration` value (a restricted subset of an ISO 8601 duration value). The pattern for this is: `nDnM]`. */
      attributeValue?: string;
      /** The value between -1 to 1 by which to boost the score if the attribute_value evaluates to the value specified above. */
      boostAmount?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec {
      /** Specifies the chunk spec to be returned from the search response. Only available if the SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS */
      chunkSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecChunkSpec;
      /** If there is no extractive_content_spec provided, there will be no extractive answer in the search response. */
      extractiveContentSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec;
      /** Specifies the search result mode. If unspecified, the search result mode defaults to `DOCUMENTS`. */
      searchResultMode?: string;
      /** If `snippetSpec` is not specified, snippets are not included in the search response. */
      snippetSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec;
      /** If `summarySpec` is not specified, summaries are not included in the search response. */
      summarySpec?: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecChunkSpec {
      /** The number of next chunks to be returned of the current chunk. The maximum allowed value is 3. If not specified, no next chunks will be returned. */
      numNextChunks?: number;
      /** The number of previous chunks to be returned of the current chunk. The maximum allowed value is 3. If not specified, no previous chunks will be returned. */
      numPreviousChunks?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec {
      /** The maximum number of extractive answers returned in each search result. An extractive answer is a verbatim answer extracted from the original document, which provides a precise and contextually relevant answer to the search query. If the number of matching answers is less than the `max_extractive_answer_count`, return all of the answers. Otherwise, return the `max_extractive_answer_count`. At most five answers are returned for each SearchResult. */
      maxExtractiveAnswerCount?: number;
      /** The max number of extractive segments returned in each search result. Only applied if the DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types is SOLUTION_TYPE_CHAT. An extractive segment is a text segment extracted from the original document that is relevant to the search query, and, in general, more verbose than an extractive answer. The segment could then be used as input for LLMs to generate summaries and answers. If the number of matching segments is less than `max_extractive_segment_count`, return all of the segments. Otherwise, return the `max_extractive_segment_count`. */
      maxExtractiveSegmentCount?: number;
      /** Return at most `num_next_segments` segments after each selected segments. */
      numNextSegments?: number;
      /** Specifies whether to also include the adjacent from each selected segments. Return at most `num_previous_segments` segments before each selected segments. */
      numPreviousSegments?: number;
      /** Specifies whether to return the confidence score from the extractive segments in each search result. This feature is available only for new or allowlisted data stores. To allowlist your data store, contact your Customer Engineer. The default value is `false`. */
      returnExtractiveSegmentScore?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec {
      /** [DEPRECATED] This field is deprecated. To control snippet return, use `return_snippet` field. For backwards compatibility, we will return snippet if max_snippet_count > 0. */
      maxSnippetCount?: number;
      /** [DEPRECATED] This field is deprecated and will have no affect on the snippet. */
      referenceOnly?: boolean;
      /** If `true`, then return snippet. If no snippet can be generated, we return "No snippet is available for this page." A `snippet_status` with `SUCCESS` or `NO_SNIPPET_AVAILABLE` will also be returned. */
      returnSnippet?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec {
      /** Specifies whether to filter out adversarial queries. The default value is `false`. Google employs search-query classification to detect adversarial queries. No summary is returned if the search query is classified as an adversarial query. For example, a user might ask a question regarding negative comments about the company or submit a query designed to generate unsafe, policy-violating output. If this field is set to `true`, we skip generating summaries for adversarial queries and return fallback messages instead. */
      ignoreAdversarialQuery?: boolean;
      /** Optional. Specifies whether to filter out jail-breaking queries. The default value is `false`. Google employs search-query classification to detect jail-breaking queries. No summary is returned if the search query is classified as a jail-breaking query. A user might add instructions to the query to change the tone, style, language, content of the answer, or ask the model to act as a different entity, e.g. "Reply in the tone of a competing company's CEO". If this field is set to `true`, we skip generating summaries for jail-breaking queries and return fallback messages instead. */
      ignoreJailBreakingQuery?: boolean;
      /** Specifies whether to filter out queries that have low relevance. The default value is `false`. If this field is set to `false`, all search results are used regardless of relevance to generate answers. If set to `true`, only queries with high relevance search results will generate answers. */
      ignoreLowRelevantContent?: boolean;
      /** Specifies whether to filter out queries that are not summary-seeking. The default value is `false`. Google employs search-query classification to detect summary-seeking queries. No summary is returned if the search query is classified as a non-summary seeking query. For example, `why is the sky blue` and `Who is the best soccer player in the world?` are summary-seeking queries, but `SFO airport` and `world cup 2026` are not. They are most likely navigational queries. If this field is set to `true`, we skip generating summaries for non-summary seeking queries and return fallback messages instead. */
      ignoreNonSummarySeekingQuery?: boolean;
      /** Specifies whether to include citations in the summary. The default value is `false`. When this field is set to `true`, summaries include in-line citation numbers. Example summary including citations: BigQuery is Google Cloud's fully managed and completely serverless enterprise data warehouse [1]. BigQuery supports all data types, works across clouds, and has built-in machine learning and business intelligence, all within a unified platform [2, 3]. The citation numbers refer to the returned search results and are 1-indexed. For example, [1] means that the sentence is attributed to the first search result. [2, 3] means that the sentence is attributed to both the second and third search results. */
      includeCitations?: boolean;
      /** Language code for Summary. Use language tags defined by [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an experimental feature. */
      languageCode?: string;
      /** If specified, the spec will be used to modify the prompt provided to the LLM. */
      modelPromptSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec;
      /** If specified, the spec will be used to modify the model specification provided to the LLM. */
      modelSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec;
      /** The number of top results to generate the summary from. If the number of results returned is less than `summaryResultCount`, the summary is generated from all of the results. At most 10 results for documents mode, or 50 for chunks mode, can be used to generate a summary. The chunks mode is used when SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS. */
      summaryResultCount?: number;
      /** If true, answer will be generated from most relevant chunks from top search results. This feature will improve summary quality. Note that with this feature enabled, not all top search results will be referenced and included in the reference list, so the citation source index only points to the search results listed in the reference list. */
      useSemanticChunks?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec {
      /** Text at the beginning of the prompt that instructs the assistant. Examples are available in the user guide. */
      preamble?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec {
      /** The model version used to generate the summary. Supported values are: * `stable`: string. Default value when no value is specified. Uses a generally available, fine-tuned model. For more information, see [Answer generation model versions and lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models). * `preview`: string. (Public preview) Uses a preview model. For more information, see [Answer generation model versions and lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models). */
      version?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestDataStoreSpec {
      /** Optional. Boost specification to boost certain documents. For more information on boosting, see [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results) */
      boostSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec;
      /** Required. Full resource name of DataStore, such as `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. */
      dataStore?: string;
      /** Optional. Filter specification to filter documents in the data store specified by data_store field. For more information on filtering, see [Filtering](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata) */
      filter?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec {
      /** The embedding vector used for retrieval. Limit to 1. */
      embeddingVectors?: GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector[];
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector {
      /** Embedding field path in schema. */
      fieldPath?: string;
      /** Query embedding vector. */
      vector?: number[];
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec {
      /** Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined automatically. If dynamic facets are enabled, it is ordered together. If set to false, the position of this facet in the response is the same as in the request, and it is ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it's not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response is determined automatically. Another example, assuming you have the following facets in the request: * "rating", enable_dynamic_position = true * "price", enable_dynamic_position = false * "brands", enable_dynamic_position = false And also you have a dynamic facets enabled, which generates a facet `gender`. Then the final order of the facets in the response can be ("price", "brands", "rating", "gender") or ("price", "brands", "gender", "rating") depends on how API orders "gender" and "rating" facets. However, notice that "price" and "brands" are always ranked at first and second position because their enable_dynamic_position is false. */
      enableDynamicPosition?: boolean;
      /** List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. Listing a facet key in this field allows its values to appear as facet results, even when they are filtered out of search results. Using this field does not affect what search results are returned. For example, suppose there are 100 documents with the color facet "Red" and 200 documents with the color facet "Blue". A query containing the filter "color:ANY("Red")" and having "color" as FacetKey.key would by default return only "Red" documents in the search results, and also return "Red" with count 100 as the only color facet. Although there are also blue documents available, "Blue" would not be shown as an available facet value. If "color" is listed in "excludedFilterKeys", then the query returns the facet values "Red" with count 100 and "Blue" with count 200, because the "color" key is now excluded from the filter. Because this field doesn't affect search results, the search results are still correctly filtered to return only "Red" documents. A maximum of 100 values are allowed. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      excludedFilterKeys?: string[];
      /** Required. The facet key specification. */
      facetKey?: GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey;
      /** Maximum facet values that are returned for this facet. If unspecified, defaults to 20. The maximum allowed value is 300. Values above 300 are coerced to 300. For aggregation in healthcare search, when the [FacetKey.key] is "healthcare_aggregation_key", the limit will be overridden to 10,000 internally, regardless of the value set here. If this field is negative, an `INVALID_ARGUMENT` is returned. */
      limit?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey {
      /** True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise. */
      caseInsensitive?: boolean;
      /** Only get facet values that contain the given strings. For example, suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "contains" to "2022", the "category" facet only contains "Action > 2022" and "Sci-Fi > 2022". Only supported on textual fields. Maximum is 10. */
      contains?: string[];
      /** Set only if values should be bucketed into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 30. */
      intervals?: GoogleCloudDiscoveryengineV1betaInterval[];
      /** Required. Supported textual and numerical facet keys in Document object, over which the facet values are computed. Facet key is case-sensitive. */
      key?: string;
      /** The order in which documents are returned. Allowed values are: * "count desc", which means order by SearchResponse.Facet.values.count descending. * "value desc", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals. */
      orderBy?: string;
      /** Only get facet values that start with the given string prefix. For example, suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "prefixes" to "Action", the "category" facet only contains "Action > 2022" and "Action > 2021". Only supported on textual fields. Maximum is 10. */
      prefixes?: string[];
      /** Only get facet for the given restricted values. Only supported on textual fields. For example, suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "restricted_values" to "Action > 2022", the "category" facet only contains "Action > 2022". Only supported on textual fields. Maximum is 10. */
      restrictedValues?: string[];
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery {
      /** Base64 encoded image bytes. Supported image formats: JPEG, PNG, and BMP. */
      imageBytes?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec {
      /** The condition under which filter extraction should occur. Server behavior defaults to `DISABLED`. */
      filterExtractionCondition?: string;
      /** Field names used for location-based filtering, where geolocation filters are detected in natural language search queries. Only valid when the FilterExtractionCondition is set to `ENABLED`. If this field is set, it overrides the field names set in ServingConfig.geo_search_query_detection_field_names. */
      geoSearchQueryDetectionFieldNames?: string[];
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestPersonalizationSpec {
      /** The personalization mode of the search request. Defaults to Mode.AUTO. */
      mode?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec {
      /** The condition under which query expansion should occur. Default to Condition.DISABLED. */
      condition?: string;
      /** Whether to pin unexpanded results. If this field is set to true, unexpanded products are always at the top of the search results, followed by the expanded results. */
      pinUnexpandedResults?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec {
      /** The condition under which search as you type should occur. Default to Condition.DISABLED. */
      condition?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestSessionSpec {
      /** If set, the search result gets stored to the "turn" specified by this query ID. Example: Let's say the session looks like this: session { name: ".../sessions/xxx" turns { query { text: "What is foo?" query_id: ".../questions/yyy" } answer: "Foo is ..." } turns { query { text: "How about bar then?" query_id: ".../questions/zzz" } } } The user can call /search API with a request like this: session: ".../sessions/xxx" session_spec { query_id: ".../questions/zzz" } Then, the API stores the search result, associated with the last turn. The stored search result can be used by a subsequent /answer API call (with the session ID and the query ID specified). Also, it is possible to call /search and /answer in parallel with the same session ID & query ID. */
      queryId?: string;
      /** The number of top search results to persist. The persisted search results can be used for the subsequent /answer api call. This field is simliar to the `summary_result_count` field in SearchRequest.ContentSearchSpec.SummarySpec.summary_result_count. At most 10 results for documents mode, or 50 for chunks mode. */
      searchResultPersistenceCount?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec {
      /** The mode under which spell correction replaces the original search query. Defaults to Mode.AUTO. */
      mode?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponse {
      /** Controls applied as part of the Control service. */
      appliedControls?: string[];
      /** A unique search token. This should be included in the UserEvent logs resulting from this search, which enables accurate attribution of search model performance. This also helps to identify a request during the customer support scenarios. */
      attributionToken?: string;
      /** Contains the spell corrected query, if found. If the spell correction type is AUTOMATIC, then the search results are based on corrected_query. Otherwise the original query is used for search. */
      correctedQuery?: string;
      /** Results of facets requested by user. */
      facets?: GoogleCloudDiscoveryengineV1betaSearchResponseFacet[];
      geoSearchDebugInfo?: GoogleCloudDiscoveryengineV1betaSearchResponseGeoSearchDebugInfo[];
      /** Guided search result. */
      guidedSearchResult?: GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResult;
      /** Natural language query understanding information for the returned results. */
      naturalLanguageQueryUnderstandingInfo?: GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfo;
      /** A token that can be sent as SearchRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** A list of One Box results. There can be multiple One Box results of different types. */
      oneBoxResults?: GoogleCloudDiscoveryengineV1betaSearchResponseOneBoxResult[];
      /** Query expansion information for the returned results. */
      queryExpansionInfo?: GoogleCloudDiscoveryengineV1betaSearchResponseQueryExpansionInfo;
      /** The URI of a customer-defined redirect page. If redirect action is triggered, no search is performed, and only redirect_uri and attribution_token are set in the response. */
      redirectUri?: string;
      /** A list of matched documents. The order represents the ranking. */
      results?: GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult[];
      /** Promotions for site search. */
      searchLinkPromotions?: GoogleCloudDiscoveryengineV1betaSearchLinkPromotion[];
      /** Session information. Only set if SearchRequest.session is provided. See its description for more details. */
      sessionInfo?: GoogleCloudDiscoveryengineV1betaSearchResponseSessionInfo;
      /** Corrected query with low confidence, AKA did you mean query. Compared with corrected_query, this field is set when SpellCorrector returned a response, but FPR(full page replacement) is not triggered because the corrction is of low confidence(eg, reversed because there are matches of the original query in document corpus). */
      suggestedQuery?: string;
      /** A summary as part of the search results. This field is only returned if SearchRequest.ContentSearchSpec.summary_spec is set. */
      summary?: GoogleCloudDiscoveryengineV1betaSearchResponseSummary;
      /** The estimated total count of matched items irrespective of pagination. The count of results returned by pagination may be less than the total_size that matches. */
      totalSize?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseFacet {
      /** Whether the facet is dynamically generated. */
      dynamicFacet?: boolean;
      /** The key for this facet. For example, `"colors"` or `"price"`. It matches SearchRequest.FacetSpec.FacetKey.key. */
      key?: string;
      /** The facet values for this field. */
      values?: GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue[];
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue {
      /** Number of items that have this facet value. */
      count?: string;
      /** Interval value for a facet, such as 10, 20) for facet "price". It matches [SearchRequest.FacetSpec.FacetKey.intervals. */
      interval?: GoogleCloudDiscoveryengineV1betaInterval;
      /** Text value of a facet, such as "Black" for facet "colors". */
      value?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseGeoSearchDebugInfo {
      /** The error produced. */
      errorMessage?: string;
      /** The address from which forward geocoding ingestion produced issues. */
      originalAddressQuery?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResult {
      /** Suggested follow-up questions. */
      followUpQuestions?: string[];
      /** A list of ranked refinement attributes. */
      refinementAttributes?: GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResultRefinementAttribute[];
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResultRefinementAttribute {
      /** Attribute key used to refine the results. For example, `"movie_type"`. */
      attributeKey?: string;
      /** Attribute value used to refine the results. For example, `"drama"`. */
      attributeValue?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfo {
      /** The filters that were extracted from the input query. */
      extractedFilters?: string;
      /** Rewritten input query minus the extracted filters. */
      rewrittenQuery?: string;
      /** Optional. The SQL request that was generated from the natural language query understanding phase. */
      sqlRequest?: GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoSqlRequest;
      /** The filters that were extracted from the input query represented in a structured form. */
      structuredExtractedFilter?: GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilter;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoSqlRequest {
      /** Optional. The SQL query in text format. */
      sqlQuery?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilter {
      /** The expression denoting the filter that was extracted from the input query in a structured form. It can be a simple expression denoting a single string, numerical or geolocation constraint or a compound expression which is a combination of multiple expressions connected using logical (OR and AND) operators. */
      expression?: GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterExpression;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterAndExpression {
      /** The expressions that were ANDed together. */
      expressions?: GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterExpression[];
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterExpression {
      /** Logical "And" compound operator connecting multiple expressions. */
      andExpr?: GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterAndExpression;
      /** Geolocation constraint expression. */
      geolocationConstraint?: GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterGeolocationConstraint;
      /** Numerical constraint expression. */
      numberConstraint?: GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterNumberConstraint;
      /** Logical "Or" compound operator connecting multiple expressions. */
      orExpr?: GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterOrExpression;
      /** String constraint expression. */
      stringConstraint?: GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterStringConstraint;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterGeolocationConstraint {
      /** The reference address that was inferred from the input query. The proximity of the reference address to the geolocation field will be used to filter the results. */
      address?: string;
      /** The name of the geolocation field as defined in the schema. */
      fieldName?: string;
      /** The latitude of the geolocation inferred from the input query. */
      latitude?: number;
      /** The longitude of the geolocation inferred from the input query. */
      longitude?: number;
      /** The radius in meters around the address. The record is returned if the location of the geolocation field is within the radius. */
      radiusInMeters?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterNumberConstraint {
      /** The comparison operation performed between the field value and the value specified in the constraint. */
      comparison?: string;
      /** Name of the numerical field as defined in the schema. */
      fieldName?: string;
      /** Identifies the keywords within the search query that match a filter. */
      querySegment?: string;
      /** The value specified in the numerical constraint. */
      value?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterOrExpression {
      /** The expressions that were ORed together. */
      expressions?: GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterExpression[];
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterStringConstraint {
      /** Name of the string field as defined in the schema. */
      fieldName?: string;
      /** Identifies the keywords within the search query that match a filter. */
      querySegment?: string;
      /** Values of the string field. The record will only be returned if the field value matches one of the values specified here. */
      values?: string[];
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseOneBoxResult {
      /** The type of One Box result. */
      oneBoxType?: string;
      /** The search results for this One Box. */
      searchResults?: GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult[];
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseQueryExpansionInfo {
      /** Bool describing whether query expansion has occurred. */
      expandedQuery?: boolean;
      /** Number of pinned results. This field will only be set when expansion happens and SearchRequest.QueryExpansionSpec.pin_unexpanded_results is set to true. */
      pinnedResultCount?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult {
      /** The chunk data in the search response if the SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS. */
      chunk?: GoogleCloudDiscoveryengineV1betaChunk;
      /** The document data snippet in the search response. Only fields that are marked as `retrievable` are populated. */
      document?: GoogleCloudDiscoveryengineV1betaDocument;
      /** Document.id of the searched Document. */
      id?: string;
      /** Google provided available scores. */
      modelScores?: {[P in string]: GoogleCloudDiscoveryengineV1betaDoubleList};
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseSessionInfo {
      /** Name of the session. If the auto-session mode is used (when SearchRequest.session ends with "-"), this field holds the newly generated session name. */
      name?: string;
      /** Query ID that corresponds to this search API call. One session can have multiple turns, each with a unique query ID. By specifying the session name and this query ID in the Answer API call, the answer generation happens in the context of the search results from this search call. */
      queryId?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseSummary {
      /** A collection of Safety Attribute categories and their associated confidence scores. */
      safetyAttributes?: GoogleCloudDiscoveryengineV1betaSearchResponseSummarySafetyAttributes;
      /** Additional summary-skipped reasons. This provides the reason for ignored cases. If nothing is skipped, this field is not set. */
      summarySkippedReasons?: string[];
      /** The summary content. */
      summaryText?: string;
      /** Summary with metadata information. */
      summaryWithMetadata?: GoogleCloudDiscoveryengineV1betaSearchResponseSummarySummaryWithMetadata;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitation {
      /** End of the attributed segment, exclusive. */
      endIndex?: string;
      /** Citation sources for the attributed segment. */
      sources?: GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationSource[];
      /** Index indicates the start of the segment, measured in bytes/unicode. */
      startIndex?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationMetadata {
      /** Citations for segments. */
      citations?: GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitation[];
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationSource {
      /** Document reference index from SummaryWithMetadata.references. It is 0-indexed and the value will be zero if the reference_index is not set explicitly. */
      referenceIndex?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseSummaryReference {
      /** List of cited chunk contents derived from document content. */
      chunkContents?: GoogleCloudDiscoveryengineV1betaSearchResponseSummaryReferenceChunkContent[];
      /** Required. Document.name of the document. Full resource name of the referenced document, in the format `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/branches/*‍/documents/*`. */
      document?: string;
      /** Title of the document. */
      title?: string;
      /** Cloud Storage or HTTP uri for the document. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseSummaryReferenceChunkContent {
      /** Chunk textual content. */
      content?: string;
      /** Page identifier. */
      pageIdentifier?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseSummarySafetyAttributes {
      /** The display names of Safety Attribute categories associated with the generated content. Order matches the Scores. */
      categories?: string[];
      /** The confidence scores of the each category, higher value means higher confidence. Order matches the Categories. */
      scores?: number[];
    }
    interface GoogleCloudDiscoveryengineV1betaSearchResponseSummarySummaryWithMetadata {
      /** Citation metadata for given summary. */
      citationMetadata?: GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationMetadata;
      /** Document References. */
      references?: GoogleCloudDiscoveryengineV1betaSearchResponseSummaryReference[];
      /** Summary text with no citation information. */
      summary?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaServingConfig {
      /** Boost controls to use in serving path. All triggered boost controls will be applied. Boost controls must be in the same data store as the serving config. Maximum of 20 boost controls. */
      boostControlIds?: string[];
      /** Output only. ServingConfig created timestamp. */
      createTime?: string;
      /** Required. The human readable serving config display name. Used in Discovery UI. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. */
      displayName?: string;
      /** Condition do not associate specifications. If multiple do not associate conditions match, all matching do not associate controls in the list will execute. Order does not matter. Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH. */
      dissociateControlIds?: string[];
      /** How much diversity to use in recommendation model results e.g. `medium-diversity` or `high-diversity`. Currently supported values: * `no-diversity` * `low-diversity` * `medium-diversity` * `high-diversity` * `auto-diversity` If not specified, we choose default based on recommendation model type. Default value: `no-diversity`. Can only be set if SolutionType is SOLUTION_TYPE_RECOMMENDATION. */
      diversityLevel?: string;
      /** Bring your own embedding config. The config is used for search semantic retrieval. The retrieval is based on the dot product of SearchRequest.EmbeddingSpec.EmbeddingVector.vector and the document embeddings that are provided by this EmbeddingConfig. If SearchRequest.EmbeddingSpec.EmbeddingVector.vector is provided, it overrides this ServingConfig.embedding_config. */
      embeddingConfig?: GoogleCloudDiscoveryengineV1betaEmbeddingConfig;
      /** Filter controls to use in serving path. All triggered filter controls will be applied. Filter controls must be in the same data store as the serving config. Maximum of 20 filter controls. */
      filterControlIds?: string[];
      /** The GenericConfig of the serving configuration. */
      genericConfig?: GoogleCloudDiscoveryengineV1betaServingConfigGenericConfig;
      /** Condition ignore specifications. If multiple ignore conditions match, all matching ignore controls in the list will execute. Order does not matter. Maximum number of specifications is 100. */
      ignoreControlIds?: string[];
      /** The MediaConfig of the serving configuration. */
      mediaConfig?: GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig;
      /** The id of the model to use at serving time. Currently only RecommendationModels are supported. Can be changed but only to a compatible model (e.g. others-you-may-like CTR to others-you-may-like CVR). Required when SolutionType is SOLUTION_TYPE_RECOMMENDATION. */
      modelId?: string;
      /** Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}` */
      name?: string;
      /** Condition oneway synonyms specifications. If multiple oneway synonyms conditions match, all matching oneway synonyms controls in the list will execute. Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH. */
      onewaySynonymsControlIds?: string[];
      /** The specification for personalization spec. Notice that if both ServingConfig.personalization_spec and SearchRequest.personalization_spec are set, SearchRequest.personalization_spec overrides ServingConfig.personalization_spec. */
      personalizationSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestPersonalizationSpec;
      /** Condition promote specifications. Maximum number of specifications is 100. */
      promoteControlIds?: string[];
      /** The ranking expression controls the customized ranking on retrieval documents. To leverage this, document embedding is required. The ranking expression setting in ServingConfig applies to all search requests served by the serving config. However, if `SearchRequest.ranking_expression` is specified, it overrides the ServingConfig ranking expression. The ranking expression is a single function or multiple functions that are joined by "+". * ranking_expression = function, { " + ", function }; Supported functions: * double * relevance_score * double * dotProduct(embedding_field_path) Function variables: * `relevance_score`: pre-defined keywords, used for measure relevance between query and document. * `embedding_field_path`: the document embedding field used with query embedding vector. * `dotProduct`: embedding function between embedding_field_path and query embedding vector. Example ranking expression: If document has an embedding field doc_embedding, the ranking expression could be `0.5 * relevance_score + 0.3 * dotProduct(doc_embedding)`. */
      rankingExpression?: string;
      /** IDs of the redirect controls. Only the first triggered redirect action is applied, even if multiple apply. Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH. */
      redirectControlIds?: string[];
      /** Condition replacement specifications. Applied according to the order in the list. A previously replaced term can not be re-replaced. Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH. */
      replacementControlIds?: string[];
      /** Required. Immutable. Specifies the solution type that a serving config can be associated with. */
      solutionType?: string;
      /** Condition synonyms specifications. If multiple synonyms conditions match, all matching synonyms controls in the list will execute. Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH. */
      synonymsControlIds?: string[];
      /** Output only. ServingConfig updated timestamp. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaServingConfigGenericConfig {
      /** Specifies the expected behavior of content search. Only valid for content-search enabled data store. */
      contentSearchSpec?: GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec;
    }
    interface GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig {
      /** Specifies the content freshness used for recommendation result. Contents will be demoted if contents were published for more than content freshness cutoff days. */
      contentFreshnessCutoffDays?: number;
      /** Specifies the content watched percentage threshold for demotion. Threshold value must be between [0, 1.0] inclusive. */
      contentWatchedPercentageThreshold?: number;
      /** Specifies the content watched minutes threshold for demotion. */
      contentWatchedSecondsThreshold?: number;
      /** Optional. Specifies the number of days to look back for demoting watched content. If set to zero or unset, defaults to the maximum of 365 days. */
      demoteContentWatchedPastDays?: number;
      /** Specifies the event type used for demoting recommendation result. Currently supported values: * `view-item`: Item viewed. * `media-play`: Start/resume watching a video, playing a song, etc. * `media-complete`: Finished or stopped midway through a video, song, etc. If unset, watch history demotion will not be applied. Content freshness demotion will still be applied. */
      demotionEventType?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSession {
      /** Optional. The display name of the session. This field is used to identify the session in the UI. By default, the display name is the first turn query text in the session. */
      displayName?: string;
      /** Output only. The time the session finished. */
      endTime?: string;
      /** Optional. Whether the session is pinned, pinned session will be displayed on the top of the session list. */
      isPinned?: boolean;
      /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*` */
      name?: string;
      /** Output only. The time the session started. */
      startTime?: string;
      /** The state of the session. */
      state?: string;
      /** Turns. */
      turns?: GoogleCloudDiscoveryengineV1betaSessionTurn[];
      /** A unique identifier for tracking users. */
      userPseudoId?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSessionTurn {
      /** The resource name of the answer to the user query. Only set if the answer generation (/answer API call) happened in this turn. */
      answer?: string;
      /** Output only. In ConversationalSearchService.GetSession API, if GetSessionRequest.include_answer_details is set to true, this field will be populated when getting answer query session. */
      detailedAnswer?: GoogleCloudDiscoveryengineV1betaAnswer;
      /** The user query. */
      query?: GoogleCloudDiscoveryengineV1betaQuery;
    }
    interface GoogleCloudDiscoveryengineV1betaSingleRegionKey {
      /** Required. Single-regional kms key resource name which will be used to encrypt resources `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`. */
      kmsKey?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSitemap {
      /** Output only. The sitemap's creation time. */
      createTime?: string;
      /** Output only. The fully qualified resource name of the sitemap. `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/siteSearchEngine/sitemaps/*` The `sitemap_id` suffix is system-generated. */
      name?: string;
      /** Public URI for the sitemap, e.g. `www.example.com/sitemap.xml`. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSiteSearchEngine {
      /** The fully qualified resource name of the site search engine. Format: `projects/*‍/locations/*‍/dataStores/*‍/siteSearchEngine` */
      name?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSiteVerificationInfo {
      /** Site verification state indicating the ownership and validity. */
      siteVerificationState?: string;
      /** Latest site verification time. */
      verifyTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSpannerSource {
      /** Required. The database ID of the source Spanner table. */
      databaseId?: string;
      /** Whether to apply data boost on Spanner export. Enabling this option will incur additional cost. More info can be found [here](https://cloud.google.com/spanner/docs/databoost/databoost-overview#billing_and_quotas). */
      enableDataBoost?: boolean;
      /** Required. The instance ID of the source Spanner table. */
      instanceId?: string;
      /** The project ID that contains the Spanner source. Has a length limit of 128 characters. If not specified, inherits the project ID from the parent request. */
      projectId?: string;
      /** Required. The table name of the Spanner database that needs to be imported. */
      tableId?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry {
      /** Required. Phrase to block from suggestions served. Can be maximum 125 characters. */
      blockPhrase?: string;
      /** Required. The match operator to apply for this phrase. Whether to block the exact phrase, or block any suggestions containing this phrase. */
      matchOperator?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaTargetSite {
      /** Immutable. If set to false, a uri_pattern is generated to include all pages whose address contains the provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one. provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine. */
      exactMatch?: boolean;
      /** Output only. Failure reason. */
      failureReason?: GoogleCloudDiscoveryengineV1betaTargetSiteFailureReason;
      /** Output only. This is system-generated based on the provided_uri_pattern. */
      generatedUriPattern?: string;
      /** Output only. Indexing status. */
      indexingStatus?: string;
      /** Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}` The `target_site_id` is system-generated. */
      name?: string;
      /** Required. Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated. */
      providedUriPattern?: string;
      /** Output only. Root domain of the provided_uri_pattern. */
      rootDomainUri?: string;
      /** Output only. Site ownership and validity verification status. */
      siteVerificationInfo?: GoogleCloudDiscoveryengineV1betaSiteVerificationInfo;
      /** The type of the target site, e.g., whether the site is to be included or excluded. */
      type?: string;
      /** Output only. The target site's last updated time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaTargetSiteFailureReason {
      /** Failed due to insufficient quota. */
      quotaFailure?: GoogleCloudDiscoveryengineV1betaTargetSiteFailureReasonQuotaFailure;
    }
    interface GoogleCloudDiscoveryengineV1betaTargetSiteFailureReasonQuotaFailure {
      /** This number is an estimation on how much total quota this project needs to successfully complete indexing. */
      totalRequiredQuota?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaTextInput {
      /** Conversation context of the input. */
      context?: GoogleCloudDiscoveryengineV1betaConversationContext;
      /** Text input. */
      input?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaTrainCustomModelMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaTrainCustomModelRequest {
      /** The desired location of errors incurred during the data ingestion and training. */
      errorConfig?: GoogleCloudDiscoveryengineV1betaImportErrorConfig;
      /** Cloud Storage training input. */
      gcsTrainingInput?: GoogleCloudDiscoveryengineV1betaTrainCustomModelRequestGcsTrainingInput;
      /** If not provided, a UUID will be generated. */
      modelId?: string;
      /** Model to be trained. Supported values are: * **search-tuning**: Fine tuning the search system based on data provided. */
      modelType?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaTrainCustomModelRequestGcsTrainingInput {
      /** The Cloud Storage corpus data which could be associated in train data. The data path format is `gs:///`. A newline delimited jsonl/ndjson file. For search-tuning model, each line should have the _id, title and text. Example: `{"_id": "doc1", title: "relevant doc", "text": "relevant text"}` */
      corpusDataPath?: string;
      /** The gcs query data which could be associated in train data. The data path format is `gs:///`. A newline delimited jsonl/ndjson file. For search-tuning model, each line should have the _id and text. Example: {"_id": "query1", "text": "example query"} */
      queryDataPath?: string;
      /** Cloud Storage test data. Same format as train_data_path. If not provided, a random 80/20 train/test split will be performed on train_data_path. */
      testDataPath?: string;
      /** Cloud Storage training data path whose format should be `gs:///`. The file should be in tsv format. Each line should have the doc_id and query_id and score (number). For search-tuning model, it should have the query-id corpus-id score as tsv file header. The score should be a number in `[0, inf+)`. The larger the number is, the more relevant the pair is. Example: * `query-id\tcorpus-id\tscore` * `query1\tdoc1\t1` */
      trainDataPath?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaTrainCustomModelResponse {
      /** Echoes the destination for the complete errors in the request if set. */
      errorConfig?: GoogleCloudDiscoveryengineV1betaImportErrorConfig;
      /** A sample of errors encountered while processing the data. */
      errorSamples?: GoogleRpcStatus[];
      /** The metrics of the trained model. */
      metrics?: {[P in string]: number};
      /** Fully qualified name of the CustomTuningModel. */
      modelName?: string;
      /** The trained model status. Possible values are: * **bad-data**: The training data quality is bad. * **no-improvement**: Tuning didn't improve performance. Won't deploy. * **in-progress**: Model training job creation is in progress. * **training**: Model is actively training. * **evaluating**: The model is evaluating trained metrics. * **indexing**: The model trained metrics are indexing. * **ready**: The model is ready for serving. */
      modelStatus?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaTransactionInfo {
      /** All the costs associated with the products. These can be manufacturing costs, shipping expenses not borne by the end user, or any other costs, such that: * Profit = value - tax - cost */
      cost?: number;
      /** Required. Currency code. Use three-character ISO-4217 code. */
      currency?: string;
      /** The total discount(s) value applied to this transaction. This figure should be excluded from TransactionInfo.value For example, if a user paid TransactionInfo.value amount, then nominal (pre-discount) value of the transaction is the sum of TransactionInfo.value and TransactionInfo.discount_value This means that profit is calculated the same way, regardless of the discount value, and that TransactionInfo.discount_value can be larger than TransactionInfo.value: * Profit = value - tax - cost */
      discountValue?: number;
      /** All the taxes associated with the transaction. */
      tax?: number;
      /** The transaction ID with a length limit of 128 characters. */
      transactionId?: string;
      /** Required. Total non-zero value associated with the transaction. This value may include shipping, tax, or other adjustments to the total value that you want to include. */
      value?: number;
    }
    interface GoogleCloudDiscoveryengineV1betaTuneEngineMetadata {
      /** Required. The resource name of the engine that this tune applies to. Format: `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}` */
      engine?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaTuneEngineRequest {}
    interface GoogleCloudDiscoveryengineV1betaTuneEngineResponse {}
    interface GoogleCloudDiscoveryengineV1betaUpdateSchemaMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaUpdateTargetSiteMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaUserEvent {
      /** Extra user event features to include in the recommendation model. These attributes must NOT contain data that needs to be parsed or processed further, e.g. JSON or other encodings. If you provide custom attributes for ingested user events, also include them in the user events that you associate with prediction requests. Custom attribute formatting must be consistent between imported events and events provided with prediction requests. This lets the Discovery Engine API use those custom attributes when training models and serving predictions, which helps improve recommendation quality. This field needs to pass all below criteria, otherwise an `INVALID_ARGUMENT` error is returned: * The key must be a UTF-8 encoded string with a length limit of 5,000 characters. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed. For product recommendations, an example of extra user information is `traffic_channel`, which is how a user arrives at the site. Users can arrive at the site by coming to the site directly, coming through Google search, or in other ways. */
      attributes?: {
        [P in string]: GoogleCloudDiscoveryengineV1betaCustomAttribute;
      };
      /** Token to attribute an API response to user action(s) to trigger the event. Highly recommended for user events that are the result of RecommendationService.Recommend. This field enables accurate attribution of recommendation model performance. The value must be one of: * RecommendResponse.attribution_token for events that are the result of RecommendationService.Recommend. * SearchResponse.attribution_token for events that are the result of SearchService.Search. This token enables us to accurately attribute page view or conversion completion back to the event and the particular predict response containing this clicked/purchased product. If user clicks on product K in the recommendation results, pass RecommendResponse.attribution_token as a URL parameter to product K's page. When recording events on product K's page, log the RecommendResponse.attribution_token to this field. */
      attributionToken?: string;
      /** CompletionService.CompleteQuery details related to the event. This field should be set for `search` event when autocomplete function is enabled and the user clicks a suggestion for search. */
      completionInfo?: GoogleCloudDiscoveryengineV1betaCompletionInfo;
      /** Optional. Conversion type. Required if UserEvent.event_type is `conversion`. This is a customer-defined conversion name in lowercase letters or numbers separated by "-", such as "watch", "good-visit" etc. Do not set the field if UserEvent.event_type is not `conversion`. This mixes the custom conversion event with predefined events like `search`, `view-item` etc. */
      conversionType?: string;
      /** The DataStore resource full name, of the form `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. Optional. Only required for user events whose data store can't by determined by UserEvent.engine or UserEvent.documents. If data store is set in the parent of write/import/collect user event requests, this field can be omitted. */
      dataStore?: string;
      /** Should set to true if the request is made directly from the end user, in which case the UserEvent.user_info.user_agent can be populated from the HTTP request. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events). This should not be set when using the JavaScript tag in UserEventService.CollectUserEvent. */
      directUserRequest?: boolean;
      /** List of Documents associated with this user event. This field is optional except for the following event types: * `view-item` * `add-to-cart` * `purchase` * `media-play` * `media-complete` In a `search` event, this field represents the documents returned to the end user on the current page (the end user may have not finished browsing the whole page yet). When a new page is returned to the end user, after pagination/filtering/ordering even for the same query, a new `search` event with different UserEvent.documents is desired. */
      documents?: GoogleCloudDiscoveryengineV1betaDocumentInfo[];
      /** The Engine resource name, in the form of `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`. Optional. Only required for Engine produced user events. For example, user events from blended search. */
      engine?: string;
      /** Only required for UserEventService.ImportUserEvents method. Timestamp of when the user event happened. */
      eventTime?: string;
      /** Required. User event type. Allowed values are: Generic values: * `search`: Search for Documents. * `view-item`: Detailed page view of a Document. * `view-item-list`: View of a panel or ordered list of Documents. * `view-home-page`: View of the home page. * `view-category-page`: View of a category page, e.g. Home > Men > Jeans * `add-feedback`: Add a user feedback. Retail-related values: * `add-to-cart`: Add an item(s) to cart, e.g. in Retail online shopping * `purchase`: Purchase an item(s) Media-related values: * `media-play`: Start/resume watching a video, playing a song, etc. * `media-complete`: Finished or stopped midway through a video, song, etc. Custom conversion value: * `conversion`: Customer defined conversion event. */
      eventType?: string;
      /** The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. One example is for `search` events, the associated SearchRequest may contain a filter expression in SearchRequest.filter conforming to https://google.aip.dev/160#filtering. Similarly, for `view-item-list` events that are generated from a RecommendRequest, this field may be populated directly from RecommendRequest.filter conforming to https://google.aip.dev/160#filtering. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      filter?: string;
      /** Media-specific info. */
      mediaInfo?: GoogleCloudDiscoveryengineV1betaMediaInfo;
      /** Page metadata such as categories and other critical information for certain event types such as `view-category-page`. */
      pageInfo?: GoogleCloudDiscoveryengineV1betaPageInfo;
      /** Panel metadata associated with this user event. */
      panel?: GoogleCloudDiscoveryengineV1betaPanelInfo;
      /** Optional. List of panels associated with this event. Used for page-level impression data. */
      panels?: GoogleCloudDiscoveryengineV1betaPanelInfo[];
      /** The promotion IDs if this is an event associated with promotions. Currently, this field is restricted to at most one ID. */
      promotionIds?: string[];
      /** SearchService.Search details related to the event. This field should be set for `search` event. */
      searchInfo?: GoogleCloudDiscoveryengineV1betaSearchInfo;
      /** A unique identifier for tracking a visitor session with a length limit of 128 bytes. A session is an aggregation of an end user behavior in a time span. A general guideline to populate the session_id: 1. If user has no activity for 30 min, a new session_id should be assigned. 2. The session_id should be unique across users, suggest use uuid or add UserEvent.user_pseudo_id as prefix. */
      sessionId?: string;
      /** A list of identifiers for the independent experiment groups this user event belongs to. This is used to distinguish between user events associated with different experiment setups. */
      tagIds?: string[];
      /** The transaction metadata (if any) associated with this user event. */
      transactionInfo?: GoogleCloudDiscoveryengineV1betaTransactionInfo;
      /** Information about the end user. */
      userInfo?: GoogleCloudDiscoveryengineV1betaUserInfo;
      /** Required. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Do not set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. The field should not contain PII or user-data. We recommend to use Google Analytics [Client ID](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#clientId) for this field. */
      userPseudoId?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaUserInfo {
      /** User agent as included in the HTTP header. The field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. This should not be set when using the client side event reporting with GTM or JavaScript tag in UserEventService.CollectUserEvent or if UserEvent.direct_user_request is set. */
      userAgent?: string;
      /** Highly recommended for logged-in users. Unique identifier for logged-in user, such as a user name. Don't set for anonymous users. Always use a hashed value for this ID. Don't set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. */
      userId?: string;
    }
    interface GoogleCloudDiscoveryengineV1betaWorkspaceConfig {
      /** Obfuscated Dasher customer ID. */
      dasherCustomerId?: string;
      /** Optional. The super admin email address for the workspace that will be used for access token generation. For now we only use it for Native Google Drive connector data ingestion. */
      superAdminEmailAddress?: string;
      /** Optional. The super admin service account for the workspace that will be used for access token generation. For now we only use it for Native Google Drive connector data ingestion. */
      superAdminServiceAccount?: string;
      /** The Google Workspace data source. */
      type?: string;
    }
    interface GoogleCloudDiscoveryengineV1CmekConfig {
      /** Output only. The default CmekConfig for the Customer. */
      isDefault?: boolean;
      /** Kms key resource name which will be used to encrypt resources `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`. */
      kmsKey?: string;
      /** Kms key version resource name which will be used to encrypt resources `/cryptoKeyVersions/{keyVersion}`. */
      kmsKeyVersion?: string;
      /** Output only. The timestamp of the last key rotation. */
      lastRotationTimestampMicros?: string;
      /** Required. Name of the CmekConfig, of the form `projects/{project}/locations/{location}/cmekConfig` or `projects/{project}/locations/{location}/cmekConfigs/{cmekConfig}`. */
      name?: string;
      /** Optional. Single-regional CMEKs that are required for some VAIS features. */
      singleRegionKeys?: GoogleCloudDiscoveryengineV1SingleRegionKey[];
      /** Output only. State of the CmekConfig. */
      state?: string;
    }
    interface GoogleCloudDiscoveryengineV1Condition {
      /** Range of time(s) specifying when condition is active. Maximum of 10 time ranges. */
      activeTimeRange?: GoogleCloudDiscoveryengineV1ConditionTimeRange[];
      /** Optional. Query regex to match the whole search query. Cannot be set when Condition.query_terms is set. This is currently supporting promotion use case. */
      queryRegex?: string;
      /** Search only A list of terms to match the query on. Cannot be set when Condition.query_regex is set. Maximum of 10 query terms. */
      queryTerms?: GoogleCloudDiscoveryengineV1ConditionQueryTerm[];
    }
    interface GoogleCloudDiscoveryengineV1ConditionQueryTerm {
      /** Whether the search query needs to exactly match the query term. */
      fullMatch?: boolean;
      /** The specific query value to match against Must be lowercase, must be UTF-8. Can have at most 3 space separated terms if full_match is true. Cannot be an empty string. Maximum length of 5000 characters. */
      value?: string;
    }
    interface GoogleCloudDiscoveryengineV1ConditionTimeRange {
      /** End of time range. Range is inclusive. Must be in the future. */
      endTime?: string;
      /** Start of time range. Range is inclusive. */
      startTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1Control {
      /** Output only. List of all ServingConfig IDs this control is attached to. May take up to 10 minutes to update after changes. */
      associatedServingConfigIds?: string[];
      /** Defines a boost-type control */
      boostAction?: GoogleCloudDiscoveryengineV1ControlBoostAction;
      /** Determines when the associated action will trigger. Omit to always apply the action. Currently only a single condition may be specified. Otherwise an INVALID ARGUMENT error is thrown. */
      conditions?: GoogleCloudDiscoveryengineV1Condition[];
      /** Required. Human readable name. The identifier used in UI views. Must be UTF-8 encoded string. Length limit is 128 characters. Otherwise an INVALID ARGUMENT error is thrown. */
      displayName?: string;
      /** Defines a filter-type control Currently not supported by Recommendation */
      filterAction?: GoogleCloudDiscoveryengineV1ControlFilterAction;
      /** Immutable. Fully qualified name `projects/*‍/locations/global/dataStore/*‍/controls/*` */
      name?: string;
      /** Promote certain links based on predefined trigger queries. This now only supports basic site search. */
      promoteAction?: GoogleCloudDiscoveryengineV1ControlPromoteAction;
      /** Defines a redirect-type control. */
      redirectAction?: GoogleCloudDiscoveryengineV1ControlRedirectAction;
      /** Required. Immutable. What solution the control belongs to. Must be compatible with vertical of resource. Otherwise an INVALID ARGUMENT error is thrown. */
      solutionType?: string;
      /** Treats a group of terms as synonyms of one another. */
      synonymsAction?: GoogleCloudDiscoveryengineV1ControlSynonymsAction;
      /** Specifies the use case for the control. Affects what condition fields can be set. Only applies to SOLUTION_TYPE_SEARCH. Currently only allow one use case per control. Must be set when solution_type is SolutionType.SOLUTION_TYPE_SEARCH. */
      useCases?: string[];
    }
    interface GoogleCloudDiscoveryengineV1ControlBoostAction {
      /** Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0 (No-op). */
      boost?: number;
      /** Required. Specifies which data store's documents can be boosted by this control. Full data store name e.g. projects/123/locations/global/collections/default_collection/dataStores/default_data_store */
      dataStore?: string;
      /** Required. Specifies which products to apply the boost to. If no filter is provided all products will be boosted (No-op). Syntax documentation: https://cloud.google.com/retail/docs/filter-and-order Maximum length is 5000 characters. Otherwise an INVALID ARGUMENT error is thrown. */
      filter?: string;
      /** Optional. Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0 (No-op). */
      fixedBoost?: number;
    }
    interface GoogleCloudDiscoveryengineV1ControlFilterAction {
      /** Required. Specifies which data store's documents can be filtered by this control. Full data store name e.g. projects/123/locations/global/collections/default_collection/dataStores/default_data_store */
      dataStore?: string;
      /** Required. A filter to apply on the matching condition results. Required Syntax documentation: https://cloud.google.com/retail/docs/filter-and-order Maximum length is 5000 characters. Otherwise an INVALID ARGUMENT error is thrown. */
      filter?: string;
    }
    interface GoogleCloudDiscoveryengineV1ControlPromoteAction {
      /** Required. Data store with which this promotion is attached to. */
      dataStore?: string;
      /** Required. Promotion attached to this action. */
      searchLinkPromotion?: GoogleCloudDiscoveryengineV1SearchLinkPromotion;
    }
    interface GoogleCloudDiscoveryengineV1ControlRedirectAction {
      /** Required. The URI to which the shopper will be redirected. Required. URI must have length equal or less than 2000 characters. Otherwise an INVALID ARGUMENT error is thrown. */
      redirectUri?: string;
    }
    interface GoogleCloudDiscoveryengineV1ControlSynonymsAction {
      /** Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms. Otherwise an INVALID ARGUMENT error is thrown. */
      synonyms?: string[];
    }
    interface GoogleCloudDiscoveryengineV1CreateDataStoreMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1CreateEngineMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1CreateSchemaMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1CreateTargetSiteMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1DataStore {
      /** Optional. Configuration for advanced site search. */
      advancedSiteSearchConfig?: GoogleCloudDiscoveryengineV1AdvancedSiteSearchConfig;
      /** Output only. Data size estimation for billing. */
      billingEstimation?: GoogleCloudDiscoveryengineV1DataStoreBillingEstimation;
      /** Output only. CMEK-related information for the DataStore. */
      cmekConfig?: GoogleCloudDiscoveryengineV1CmekConfig;
      /** Immutable. The content config of the data store. If this field is unset, the server behavior defaults to ContentConfig.NO_CONTENT. */
      contentConfig?: string;
      /** Output only. Timestamp the DataStore was created at. */
      createTime?: string;
      /** Output only. The id of the default Schema asscociated to this data store. */
      defaultSchemaId?: string;
      /** Required. The data store display name. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. */
      displayName?: string;
      /** Configuration for Document understanding and enrichment. */
      documentProcessingConfig?: GoogleCloudDiscoveryengineV1DocumentProcessingConfig;
      /** Optional. Configuration for `HEALTHCARE_FHIR` vertical. */
      healthcareFhirConfig?: GoogleCloudDiscoveryengineV1HealthcareFhirConfig;
      /** Immutable. The industry vertical that the data store registers. */
      industryVertical?: string;
      /** Optional. If set, this DataStore is an Infobot FAQ DataStore. */
      isInfobotFaqDataStore?: boolean;
      /** Input only. The KMS key to be used to protect this DataStore at creation time. Must be set for requests that need to comply with CMEK Org Policy protections. If this field is set and processed successfully, the DataStore will be protected by the KMS key, as indicated in the cmek_config field. */
      kmsKeyName?: string;
      /** Immutable. The full resource name of the data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
      name?: string;
      /** Optional. Stores serving config at DataStore level. */
      servingConfigDataStore?: GoogleCloudDiscoveryengineV1DataStoreServingConfigDataStore;
      /** The solutions that the data store enrolls. Available solutions for each industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION` and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is automatically enrolled. Other solutions cannot be enrolled. */
      solutionTypes?: string[];
      /** The start schema to use for this DataStore when provisioning it. If unset, a default vertical specialized schema will be used. This field is only used by CreateDataStore API, and will be ignored if used in other APIs. This field will be omitted from all API responses including CreateDataStore API. To retrieve a schema of a DataStore, use SchemaService.GetSchema API instead. The provided schema will be validated against certain rules on schema. Learn more from [this doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema). */
      startingSchema?: GoogleCloudDiscoveryengineV1Schema;
      /** Config to store data store type configuration for workspace data. This must be set when DataStore.content_config is set as DataStore.ContentConfig.GOOGLE_WORKSPACE. */
      workspaceConfig?: GoogleCloudDiscoveryengineV1WorkspaceConfig;
    }
    interface GoogleCloudDiscoveryengineV1DataStoreBillingEstimation {
      /** Data size for structured data in terms of bytes. */
      structuredDataSize?: string;
      /** Last updated timestamp for structured data. */
      structuredDataUpdateTime?: string;
      /** Data size for unstructured data in terms of bytes. */
      unstructuredDataSize?: string;
      /** Last updated timestamp for unstructured data. */
      unstructuredDataUpdateTime?: string;
      /** Data size for websites in terms of bytes. */
      websiteDataSize?: string;
      /** Last updated timestamp for websites. */
      websiteDataUpdateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1DataStoreServingConfigDataStore {
      /** If set true, the DataStore will not be available for serving search requests. */
      disabledForServing?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1DeleteDataStoreMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1DeleteEngineMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1DeleteIdentityMappingStoreMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1DeleteSchemaMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1DeleteTargetSiteMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchResponse {}
    interface GoogleCloudDiscoveryengineV1DocumentProcessingConfig {
      /** Whether chunking mode is enabled. */
      chunkingConfig?: GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfig;
      /** Configurations for default Document parser. If not specified, we will configure it as default DigitalParsingConfig, and the default parsing config will be applied to all file types for Document parsing. */
      defaultParsingConfig?: GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig;
      /** The full resource name of the Document Processing Config. Format: `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/documentProcessingConfig`. */
      name?: string;
      /** Map from file type to override the default parsing configuration based on the file type. Supported keys: * `pdf`: Override parsing config for PDF files, either digital parsing, ocr parsing or layout parsing is supported. * `html`: Override parsing config for HTML files, only digital parsing and layout parsing are supported. * `docx`: Override parsing config for DOCX files, only digital parsing and layout parsing are supported. * `pptx`: Override parsing config for PPTX files, only digital parsing and layout parsing are supported. * `xlsm`: Override parsing config for XLSM files, only digital parsing and layout parsing are supported. * `xlsx`: Override parsing config for XLSX files, only digital parsing and layout parsing are supported. */
      parsingConfigOverrides?: {
        [P in string]: GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig;
      };
    }
    interface GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfig {
      /** Configuration for the layout based chunking. */
      layoutBasedChunkingConfig?: GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig;
    }
    interface GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig {
      /** The token size limit for each chunk. Supported values: 100-500 (inclusive). Default value: 500. */
      chunkSize?: number;
      /** Whether to include appending different levels of headings to chunks from the middle of the document to prevent context loss. Default value: False. */
      includeAncestorHeadings?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig {
      /** Configurations applied to digital parser. */
      digitalParsingConfig?: any;
      /** Configurations applied to layout parser. */
      layoutParsingConfig?: any;
      /** Configurations applied to OCR parser. Currently it only applies to PDFs. */
      ocrParsingConfig?: GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigOcrParsingConfig;
    }
    interface GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigDigitalParsingConfig {}
    interface GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigLayoutParsingConfig {}
    interface GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigOcrParsingConfig {
      /** [DEPRECATED] This field is deprecated. To use the additional enhanced document elements processing, please switch to `layout_parsing_config`. */
      enhancedDocumentElements?: string[];
      /** If true, will use native text instead of OCR text on pages containing native text. */
      useNativeText?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchResponse {}
    interface GoogleCloudDiscoveryengineV1Engine {
      /** Configurations for the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT. */
      chatEngineConfig?: GoogleCloudDiscoveryengineV1EngineChatEngineConfig;
      /** Output only. Additional information of the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT. */
      chatEngineMetadata?: GoogleCloudDiscoveryengineV1EngineChatEngineMetadata;
      /** Common config spec that specifies the metadata of the engine. */
      commonConfig?: GoogleCloudDiscoveryengineV1EngineCommonConfig;
      /** Output only. Timestamp the Recommendation Engine was created at. */
      createTime?: string;
      /** The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with at most one data store. If solution_type is SOLUTION_TYPE_CHAT, multiple DataStores in the same Collection can be associated here. Note that when used in CreateEngineRequest, one DataStore id must be provided as the system will use it for necessary initializations. */
      dataStoreIds?: string[];
      /** Optional. Whether to disable analytics for searches performed on this engine. */
      disableAnalytics?: boolean;
      /** Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters. */
      displayName?: string;
      /** The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: Vertical on Engine has to match vertical of the DataStore linked to the engine. */
      industryVertical?: string;
      /** Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded string with a length limit of 1024 characters. Format: `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}` engine should be 1-63 characters, and valid characters are /a-z0-9*‍/. Otherwise, an INVALID_ARGUMENT error is returned. */
      name?: string;
      /** Configurations for the Search Engine. Only applicable if solution_type is SOLUTION_TYPE_SEARCH. */
      searchEngineConfig?: GoogleCloudDiscoveryengineV1EngineSearchEngineConfig;
      /** Required. The solutions of the engine. */
      solutionType?: string;
      /** Output only. Timestamp the Recommendation Engine was last updated. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1EngineChatEngineConfig {
      /** The configurationt generate the Dialogflow agent that is associated to this Engine. Note that these configurations are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation. */
      agentCreationConfig?: GoogleCloudDiscoveryengineV1EngineChatEngineConfigAgentCreationConfig;
      /** The resource name of an exist Dialogflow agent to link to this Chat Engine. Customers can either provide `agent_creation_config` to create agent or provide an agent name that links the agent with the Chat engine. Format: `projects//locations//agents/`. Note that the `dialogflow_agent_to_link` are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation. Use ChatEngineMetadata.dialogflow_agent for actual agent association after Engine is created. */
      dialogflowAgentToLink?: string;
    }
    interface GoogleCloudDiscoveryengineV1EngineChatEngineConfigAgentCreationConfig {
      /** Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search. */
      business?: string;
      /** Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. */
      defaultLanguageCode?: string;
      /** Agent location for Agent creation, supported values: global/us/eu. If not provided, us Engine will create Agent using us-central-1 by default; eu Engine will create Agent using eu-west-1 by default. */
      location?: string;
      /** Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. */
      timeZone?: string;
    }
    interface GoogleCloudDiscoveryengineV1EngineChatEngineMetadata {
      /** The resource name of a Dialogflow agent, that this Chat Engine refers to. Format: `projects//locations//agents/`. */
      dialogflowAgent?: string;
    }
    interface GoogleCloudDiscoveryengineV1EngineCommonConfig {
      /** The name of the company, business or entity that is associated with the engine. Setting this may help improve LLM related features. */
      companyName?: string;
    }
    interface GoogleCloudDiscoveryengineV1EngineSearchEngineConfig {
      /** The add-on that this search engine enables. */
      searchAddOns?: string[];
      /** The search feature tier of this engine. Different tiers might have different pricing. To learn more, check the pricing documentation. Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified. */
      searchTier?: string;
    }
    interface GoogleCloudDiscoveryengineV1HealthcareFhirConfig {
      /** Whether to enable configurable schema for `HEALTHCARE_FHIR` vertical. If set to `true`, the predefined healthcare fhir schema can be extended for more customized searching and filtering. */
      enableConfigurableSchema?: boolean;
      /** Whether to enable static indexing for `HEALTHCARE_FHIR` batch ingestion. If set to `true`, the batch ingestion will be processed in a static indexing mode which is slower but more capable of handling larger volume. */
      enableStaticIndexingForBatchIngestion?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1IdentityMappingEntryOperationMetadata {
      /** The number of IdentityMappingEntries that failed to be processed. */
      failureCount?: string;
      /** The number of IdentityMappingEntries that were successfully processed. */
      successCount?: string;
      /** The total number of IdentityMappingEntries that were processed. */
      totalCount?: string;
    }
    interface GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Count of CompletionSuggestions that failed to be imported. */
      failureCount?: string;
      /** Count of CompletionSuggestions successfully imported. */
      successCount?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsResponse {
      /** The desired location of errors incurred during the Import. */
      errorConfig?: GoogleCloudDiscoveryengineV1ImportErrorConfig;
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
    }
    interface GoogleCloudDiscoveryengineV1ImportDocumentsMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Count of entries that encountered errors while processing. */
      failureCount?: string;
      /** Count of entries that were processed successfully. */
      successCount?: string;
      /** Total count of entries that were processed. */
      totalCount?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1ImportDocumentsResponse {
      /** Echoes the destination for the complete errors in the request if set. */
      errorConfig?: GoogleCloudDiscoveryengineV1ImportErrorConfig;
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
    }
    interface GoogleCloudDiscoveryengineV1ImportErrorConfig {
      /** Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message. */
      gcsPrefix?: string;
    }
    interface GoogleCloudDiscoveryengineV1ImportIdentityMappingsResponse {
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
    }
    interface GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesResponse {
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
      /** Count of deny list entries that failed to be imported. */
      failedEntriesCount?: string;
      /** Count of deny list entries successfully imported. */
      importedEntriesCount?: string;
    }
    interface GoogleCloudDiscoveryengineV1ImportUserEventsMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Count of entries that encountered errors while processing. */
      failureCount?: string;
      /** Count of entries that were processed successfully. */
      successCount?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1ImportUserEventsResponse {
      /** Echoes the destination for the complete errors if this field was set in the request. */
      errorConfig?: GoogleCloudDiscoveryengineV1ImportErrorConfig;
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
      /** Count of user events imported with complete existing Documents. */
      joinedEventsCount?: string;
      /** Count of user events imported, but with Document information not found in the existing Branch. */
      unjoinedEventsCount?: string;
    }
    interface GoogleCloudDiscoveryengineV1Project {
      /** Output only. The timestamp when this project is created. */
      createTime?: string;
      /** Output only. Full resource name of the project, for example `projects/{project}`. Note that when making requests, project number and project id are both acceptable, but the server will always respond in project number. */
      name?: string;
      /** Output only. The timestamp when this project is successfully provisioned. Empty value means this project is still provisioning and is not ready for use. */
      provisionCompletionTime?: string;
      /** Output only. A map of terms of services. The key is the `id` of ServiceTerms. */
      serviceTermsMap?: {
        [P in string]: GoogleCloudDiscoveryengineV1ProjectServiceTerms;
      };
    }
    interface GoogleCloudDiscoveryengineV1ProjectServiceTerms {
      /** The last time when the project agreed to the terms of service. */
      acceptTime?: string;
      /** The last time when the project declined or revoked the agreement to terms of service. */
      declineTime?: string;
      /** The unique identifier of this terms of service. Available terms: * `GA_DATA_USE_TERMS`: [Terms for data use](https://cloud.google.com/retail/data-use-terms). When using this as `id`, the acceptable version to provide is `2022-11-23`. */
      id?: string;
      /** Whether the project has accepted/rejected the service terms or it is still pending. */
      state?: string;
      /** The version string of the terms of service. For acceptable values, see the comments for id above. */
      version?: string;
    }
    interface GoogleCloudDiscoveryengineV1ProvisionProjectMetadata {}
    interface GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsResponse {
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
      /** Whether the completion suggestions were successfully purged. */
      purgeSucceeded?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1PurgeDocumentsMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Count of entries that encountered errors while processing. */
      failureCount?: string;
      /** Count of entries that were ignored as entries were not found. */
      ignoredCount?: string;
      /** Count of entries that were deleted successfully. */
      successCount?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1PurgeDocumentsResponse {
      /** The total count of documents purged as a result of the operation. */
      purgeCount?: string;
      /** A sample of document names that will be deleted. Only populated if `force` is set to false. A max of 100 names will be returned and the names are chosen at random. */
      purgeSample?: string[];
    }
    interface GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse {
      /** A sample of errors encountered while processing the request. */
      errorSamples?: GoogleRpcStatus[];
      /** Number of suggestion deny list entries purged. */
      purgeCount?: string;
    }
    interface GoogleCloudDiscoveryengineV1Schema {
      /** The JSON representation of the schema. */
      jsonSchema?: string;
      /** Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
      name?: string;
      /** The structured representation of the schema. */
      structSchema?: {[P in string]: any};
    }
    interface GoogleCloudDiscoveryengineV1SearchLinkPromotion {
      /** Optional. The Promotion description. Maximum length: 200 characters. */
      description?: string;
      /** Optional. The enabled promotion will be returned for any serving configs associated with the parent of the control this promotion is attached to. This flag is used for basic site search only. */
      enabled?: boolean;
      /** Optional. The promotion thumbnail image url. */
      imageUri?: string;
      /** Required. The title of the promotion. Maximum length: 160 characters. */
      title?: string;
      /** Required. The URL for the page the user wants to promote. */
      uri?: string;
    }
    interface GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec {
      /** Specifies the chunk spec to be returned from the search response. Only available if the SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS */
      chunkSpec?: GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecChunkSpec;
      /** If there is no extractive_content_spec provided, there will be no extractive answer in the search response. */
      extractiveContentSpec?: GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecExtractiveContentSpec;
      /** Specifies the search result mode. If unspecified, the search result mode defaults to `DOCUMENTS`. */
      searchResultMode?: string;
      /** If `snippetSpec` is not specified, snippets are not included in the search response. */
      snippetSpec?: GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSnippetSpec;
      /** If `summarySpec` is not specified, summaries are not included in the search response. */
      summarySpec?: GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpec;
    }
    interface GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecChunkSpec {
      /** The number of next chunks to be returned of the current chunk. The maximum allowed value is 3. If not specified, no next chunks will be returned. */
      numNextChunks?: number;
      /** The number of previous chunks to be returned of the current chunk. The maximum allowed value is 3. If not specified, no previous chunks will be returned. */
      numPreviousChunks?: number;
    }
    interface GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecExtractiveContentSpec {
      /** The maximum number of extractive answers returned in each search result. An extractive answer is a verbatim answer extracted from the original document, which provides a precise and contextually relevant answer to the search query. If the number of matching answers is less than the `max_extractive_answer_count`, return all of the answers. Otherwise, return the `max_extractive_answer_count`. At most five answers are returned for each SearchResult. */
      maxExtractiveAnswerCount?: number;
      /** The max number of extractive segments returned in each search result. Only applied if the DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types is SOLUTION_TYPE_CHAT. An extractive segment is a text segment extracted from the original document that is relevant to the search query, and, in general, more verbose than an extractive answer. The segment could then be used as input for LLMs to generate summaries and answers. If the number of matching segments is less than `max_extractive_segment_count`, return all of the segments. Otherwise, return the `max_extractive_segment_count`. */
      maxExtractiveSegmentCount?: number;
      /** Return at most `num_next_segments` segments after each selected segments. */
      numNextSegments?: number;
      /** Specifies whether to also include the adjacent from each selected segments. Return at most `num_previous_segments` segments before each selected segments. */
      numPreviousSegments?: number;
      /** Specifies whether to return the confidence score from the extractive segments in each search result. This feature is available only for new or allowlisted data stores. To allowlist your data store, contact your Customer Engineer. The default value is `false`. */
      returnExtractiveSegmentScore?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSnippetSpec {
      /** [DEPRECATED] This field is deprecated. To control snippet return, use `return_snippet` field. For backwards compatibility, we will return snippet if max_snippet_count > 0. */
      maxSnippetCount?: number;
      /** [DEPRECATED] This field is deprecated and will have no affect on the snippet. */
      referenceOnly?: boolean;
      /** If `true`, then return snippet. If no snippet can be generated, we return "No snippet is available for this page." A `snippet_status` with `SUCCESS` or `NO_SNIPPET_AVAILABLE` will also be returned. */
      returnSnippet?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpec {
      /** Specifies whether to filter out adversarial queries. The default value is `false`. Google employs search-query classification to detect adversarial queries. No summary is returned if the search query is classified as an adversarial query. For example, a user might ask a question regarding negative comments about the company or submit a query designed to generate unsafe, policy-violating output. If this field is set to `true`, we skip generating summaries for adversarial queries and return fallback messages instead. */
      ignoreAdversarialQuery?: boolean;
      /** Optional. Specifies whether to filter out jail-breaking queries. The default value is `false`. Google employs search-query classification to detect jail-breaking queries. No summary is returned if the search query is classified as a jail-breaking query. A user might add instructions to the query to change the tone, style, language, content of the answer, or ask the model to act as a different entity, e.g. "Reply in the tone of a competing company's CEO". If this field is set to `true`, we skip generating summaries for jail-breaking queries and return fallback messages instead. */
      ignoreJailBreakingQuery?: boolean;
      /** Specifies whether to filter out queries that have low relevance. The default value is `false`. If this field is set to `false`, all search results are used regardless of relevance to generate answers. If set to `true`, only queries with high relevance search results will generate answers. */
      ignoreLowRelevantContent?: boolean;
      /** Specifies whether to filter out queries that are not summary-seeking. The default value is `false`. Google employs search-query classification to detect summary-seeking queries. No summary is returned if the search query is classified as a non-summary seeking query. For example, `why is the sky blue` and `Who is the best soccer player in the world?` are summary-seeking queries, but `SFO airport` and `world cup 2026` are not. They are most likely navigational queries. If this field is set to `true`, we skip generating summaries for non-summary seeking queries and return fallback messages instead. */
      ignoreNonSummarySeekingQuery?: boolean;
      /** Specifies whether to include citations in the summary. The default value is `false`. When this field is set to `true`, summaries include in-line citation numbers. Example summary including citations: BigQuery is Google Cloud's fully managed and completely serverless enterprise data warehouse [1]. BigQuery supports all data types, works across clouds, and has built-in machine learning and business intelligence, all within a unified platform [2, 3]. The citation numbers refer to the returned search results and are 1-indexed. For example, [1] means that the sentence is attributed to the first search result. [2, 3] means that the sentence is attributed to both the second and third search results. */
      includeCitations?: boolean;
      /** Language code for Summary. Use language tags defined by [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an experimental feature. */
      languageCode?: string;
      /** If specified, the spec will be used to modify the prompt provided to the LLM. */
      modelPromptSpec?: GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelPromptSpec;
      /** If specified, the spec will be used to modify the model specification provided to the LLM. */
      modelSpec?: GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelSpec;
      /** The number of top results to generate the summary from. If the number of results returned is less than `summaryResultCount`, the summary is generated from all of the results. At most 10 results for documents mode, or 50 for chunks mode, can be used to generate a summary. The chunks mode is used when SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS. */
      summaryResultCount?: number;
      /** If true, answer will be generated from most relevant chunks from top search results. This feature will improve summary quality. Note that with this feature enabled, not all top search results will be referenced and included in the reference list, so the citation source index only points to the search results listed in the reference list. */
      useSemanticChunks?: boolean;
    }
    interface GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelPromptSpec {
      /** Text at the beginning of the prompt that instructs the assistant. Examples are available in the user guide. */
      preamble?: string;
    }
    interface GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelSpec {
      /** The model version used to generate the summary. Supported values are: * `stable`: string. Default value when no value is specified. Uses a generally available, fine-tuned model. For more information, see [Answer generation model versions and lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models). * `preview`: string. (Public preview) Uses a preview model. For more information, see [Answer generation model versions and lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models). */
      version?: string;
    }
    interface GoogleCloudDiscoveryengineV1ServingConfig {
      /** Boost controls to use in serving path. All triggered boost controls will be applied. Boost controls must be in the same data store as the serving config. Maximum of 20 boost controls. */
      boostControlIds?: string[];
      /** Output only. ServingConfig created timestamp. */
      createTime?: string;
      /** Required. The human readable serving config display name. Used in Discovery UI. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. */
      displayName?: string;
      /** Condition do not associate specifications. If multiple do not associate conditions match, all matching do not associate controls in the list will execute. Order does not matter. Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH. */
      dissociateControlIds?: string[];
      /** How much diversity to use in recommendation model results e.g. `medium-diversity` or `high-diversity`. Currently supported values: * `no-diversity` * `low-diversity` * `medium-diversity` * `high-diversity` * `auto-diversity` If not specified, we choose default based on recommendation model type. Default value: `no-diversity`. Can only be set if SolutionType is SOLUTION_TYPE_RECOMMENDATION. */
      diversityLevel?: string;
      /** Filter controls to use in serving path. All triggered filter controls will be applied. Filter controls must be in the same data store as the serving config. Maximum of 20 filter controls. */
      filterControlIds?: string[];
      /** The GenericConfig of the serving configuration. */
      genericConfig?: GoogleCloudDiscoveryengineV1ServingConfigGenericConfig;
      /** Condition ignore specifications. If multiple ignore conditions match, all matching ignore controls in the list will execute. Order does not matter. Maximum number of specifications is 100. */
      ignoreControlIds?: string[];
      /** The MediaConfig of the serving configuration. */
      mediaConfig?: GoogleCloudDiscoveryengineV1ServingConfigMediaConfig;
      /** The id of the model to use at serving time. Currently only RecommendationModels are supported. Can be changed but only to a compatible model (e.g. others-you-may-like CTR to others-you-may-like CVR). Required when SolutionType is SOLUTION_TYPE_RECOMMENDATION. */
      modelId?: string;
      /** Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}` */
      name?: string;
      /** Condition oneway synonyms specifications. If multiple oneway synonyms conditions match, all matching oneway synonyms controls in the list will execute. Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH. */
      onewaySynonymsControlIds?: string[];
      /** Condition promote specifications. Maximum number of specifications is 100. */
      promoteControlIds?: string[];
      /** The ranking expression controls the customized ranking on retrieval documents. To leverage this, document embedding is required. The ranking expression setting in ServingConfig applies to all search requests served by the serving config. However, if `SearchRequest.ranking_expression` is specified, it overrides the ServingConfig ranking expression. The ranking expression is a single function or multiple functions that are joined by "+". * ranking_expression = function, { " + ", function }; Supported functions: * double * relevance_score * double * dotProduct(embedding_field_path) Function variables: * `relevance_score`: pre-defined keywords, used for measure relevance between query and document. * `embedding_field_path`: the document embedding field used with query embedding vector. * `dotProduct`: embedding function between embedding_field_path and query embedding vector. Example ranking expression: If document has an embedding field doc_embedding, the ranking expression could be `0.5 * relevance_score + 0.3 * dotProduct(doc_embedding)`. */
      rankingExpression?: string;
      /** IDs of the redirect controls. Only the first triggered redirect action is applied, even if multiple apply. Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH. */
      redirectControlIds?: string[];
      /** Condition replacement specifications. Applied according to the order in the list. A previously replaced term can not be re-replaced. Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH. */
      replacementControlIds?: string[];
      /** Required. Immutable. Specifies the solution type that a serving config can be associated with. */
      solutionType?: string;
      /** Condition synonyms specifications. If multiple synonyms conditions match, all matching synonyms controls in the list will execute. Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH. */
      synonymsControlIds?: string[];
      /** Output only. ServingConfig updated timestamp. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1ServingConfigGenericConfig {
      /** Specifies the expected behavior of content search. Only valid for content-search enabled data store. */
      contentSearchSpec?: GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec;
    }
    interface GoogleCloudDiscoveryengineV1ServingConfigMediaConfig {
      /** Specifies the content freshness used for recommendation result. Contents will be demoted if contents were published for more than content freshness cutoff days. */
      contentFreshnessCutoffDays?: number;
      /** Specifies the content watched percentage threshold for demotion. Threshold value must be between [0, 1.0] inclusive. */
      contentWatchedPercentageThreshold?: number;
      /** Specifies the content watched minutes threshold for demotion. */
      contentWatchedSecondsThreshold?: number;
      /** Optional. Specifies the number of days to look back for demoting watched content. If set to zero or unset, defaults to the maximum of 365 days. */
      demoteContentWatchedPastDays?: number;
      /** Specifies the event type used for demoting recommendation result. Currently supported values: * `view-item`: Item viewed. * `media-play`: Start/resume watching a video, playing a song, etc. * `media-complete`: Finished or stopped midway through a video, song, etc. If unset, watch history demotion will not be applied. Content freshness demotion will still be applied. */
      demotionEventType?: string;
    }
    interface GoogleCloudDiscoveryengineV1SingleRegionKey {
      /** Required. Single-regional kms key resource name which will be used to encrypt resources `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`. */
      kmsKey?: string;
    }
    interface GoogleCloudDiscoveryengineV1SiteVerificationInfo {
      /** Site verification state indicating the ownership and validity. */
      siteVerificationState?: string;
      /** Latest site verification time. */
      verifyTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1TargetSite {
      /** Immutable. If set to false, a uri_pattern is generated to include all pages whose address contains the provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one. provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine. */
      exactMatch?: boolean;
      /** Output only. Failure reason. */
      failureReason?: GoogleCloudDiscoveryengineV1TargetSiteFailureReason;
      /** Output only. This is system-generated based on the provided_uri_pattern. */
      generatedUriPattern?: string;
      /** Output only. Indexing status. */
      indexingStatus?: string;
      /** Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}` The `target_site_id` is system-generated. */
      name?: string;
      /** Required. Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated. */
      providedUriPattern?: string;
      /** Output only. Root domain of the provided_uri_pattern. */
      rootDomainUri?: string;
      /** Output only. Site ownership and validity verification status. */
      siteVerificationInfo?: GoogleCloudDiscoveryengineV1SiteVerificationInfo;
      /** The type of the target site, e.g., whether the site is to be included or excluded. */
      type?: string;
      /** Output only. The target site's last updated time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1TargetSiteFailureReason {
      /** Failed due to insufficient quota. */
      quotaFailure?: GoogleCloudDiscoveryengineV1TargetSiteFailureReasonQuotaFailure;
    }
    interface GoogleCloudDiscoveryengineV1TargetSiteFailureReasonQuotaFailure {
      /** This number is an estimation on how much total quota this project needs to successfully complete indexing. */
      totalRequiredQuota?: string;
    }
    interface GoogleCloudDiscoveryengineV1TrainCustomModelMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1TrainCustomModelResponse {
      /** Echoes the destination for the complete errors in the request if set. */
      errorConfig?: GoogleCloudDiscoveryengineV1ImportErrorConfig;
      /** A sample of errors encountered while processing the data. */
      errorSamples?: GoogleRpcStatus[];
      /** The metrics of the trained model. */
      metrics?: {[P in string]: number};
      /** Fully qualified name of the CustomTuningModel. */
      modelName?: string;
      /** The trained model status. Possible values are: * **bad-data**: The training data quality is bad. * **no-improvement**: Tuning didn't improve performance. Won't deploy. * **in-progress**: Model training job creation is in progress. * **training**: Model is actively training. * **evaluating**: The model is evaluating trained metrics. * **indexing**: The model trained metrics are indexing. * **ready**: The model is ready for serving. */
      modelStatus?: string;
    }
    interface GoogleCloudDiscoveryengineV1UpdateCmekConfigMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1UpdateSchemaMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1UpdateTargetSiteMetadata {
      /** Operation create time. */
      createTime?: string;
      /** Operation last update time. If the operation is done, this is also the finish time. */
      updateTime?: string;
    }
    interface GoogleCloudDiscoveryengineV1WorkspaceConfig {
      /** Obfuscated Dasher customer ID. */
      dasherCustomerId?: string;
      /** Optional. The super admin email address for the workspace that will be used for access token generation. For now we only use it for Native Google Drive connector data ingestion. */
      superAdminEmailAddress?: string;
      /** Optional. The super admin service account for the workspace that will be used for access token generation. For now we only use it for Native Google Drive connector data ingestion. */
      superAdminServiceAccount?: string;
      /** The Google Workspace data source. */
      type?: string;
    }
    interface GoogleLongrunningCancelOperationRequest {}
    interface GoogleLongrunningListOperationsResponse {
      /** The standard List next-page token. */
      nextPageToken?: string;
      /** A list of operations that matches the specified filter in the request. */
      operations?: GoogleLongrunningOperation[];
    }
    interface GoogleLongrunningOperation {
      /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
      done?: boolean;
      /** The error result of the operation in case of failure or cancellation. */
      error?: GoogleRpcStatus;
      /** Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any. */
      metadata?: {[P in string]: any};
      /** The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`. */
      name?: string;
      /** The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`. */
      response?: {[P in string]: any};
    }
    interface GoogleMonitoringV3Point {
      /** The time interval to which the data point applies. For `GAUGE` metrics, the start time is optional, but if it is supplied, it must equal the end time. For `DELTA` metrics, the start and end time should specify a non-zero interval, with subsequent points specifying contiguous and non-overlapping intervals. For `CUMULATIVE` metrics, the start and end time should specify a non-zero interval, with subsequent points specifying the same start time and increasing end times, until an event resets the cumulative value to zero and sets a new start time for the following points. */
      interval?: GoogleMonitoringV3TimeInterval;
      /** The value of the data point. */
      value?: GoogleMonitoringV3TypedValue;
    }
    interface GoogleMonitoringV3TimeInterval {
      /** Required. The end of the time interval. */
      endTime?: string;
      /** Optional. The beginning of the time interval. The default value for the start time is the end time. The start time must not be later than the end time. */
      startTime?: string;
    }
    interface GoogleMonitoringV3TimeSeries {
      /** Input only. A detailed description of the time series that will be associated with the google.api.MetricDescriptor for the metric. Once set, this field cannot be changed through CreateTimeSeries. */
      description?: string;
      /** Output only. The associated monitored resource metadata. When reading a time series, this field will include metadata labels that are explicitly named in the reduction. When creating a time series, this field is ignored. */
      metadata?: GoogleApiMonitoredResourceMetadata;
      /** The associated metric. A fully-specified metric used to identify the time series. */
      metric?: GoogleApiMetric;
      /** The metric kind of the time series. When listing time series, this metric kind might be different from the metric kind of the associated metric if this time series is an alignment or reduction of other time series. When creating a time series, this field is optional. If present, it must be the same as the metric kind of the associated metric. If the associated metric's descriptor must be auto-created, then this field specifies the metric kind of the new descriptor and must be either `GAUGE` (the default) or `CUMULATIVE`. */
      metricKind?: string;
      /** The data points of this time series. When listing time series, points are returned in reverse time order. When creating a time series, this field must contain exactly one point and the point's type must be the same as the value type of the associated metric. If the associated metric's descriptor must be auto-created, then the value type of the descriptor is determined by the point's type, which must be `BOOL`, `INT64`, `DOUBLE`, or `DISTRIBUTION`. */
      points?: GoogleMonitoringV3Point[];
      /** The associated monitored resource. Custom metrics can use only certain monitored resource types in their time series data. For more information, see [Monitored resources for custom metrics](https://cloud.google.com/monitoring/custom-metrics/creating-metrics#custom-metric-resources). */
      resource?: GoogleApiMonitoredResource;
      /** The units in which the metric value is reported. It is only applicable if the `value_type` is `INT64`, `DOUBLE`, or `DISTRIBUTION`. The `unit` defines the representation of the stored metric values. This field can only be changed through CreateTimeSeries when it is empty. */
      unit?: string;
      /** The value type of the time series. When listing time series, this value type might be different from the value type of the associated metric if this time series is an alignment or reduction of other time series. When creating a time series, this field is optional. If present, it must be the same as the type of the data in the `points` field. */
      valueType?: string;
    }
    interface GoogleMonitoringV3TypedValue {
      /** A Boolean value: `true` or `false`. */
      boolValue?: boolean;
      /** A distribution value. */
      distributionValue?: GoogleApiDistribution;
      /** A 64-bit double-precision floating-point number. Its magnitude is approximately ±10±300 and it has 16 significant digits of precision. */
      doubleValue?: number;
      /** A 64-bit integer. Its range is approximately ±9.2x1018. */
      int64Value?: string;
      /** A variable-length string value. */
      stringValue?: string;
    }
    interface GoogleProtobufEmpty {}
    interface GoogleRpcStatus {
      /** The status code, which should be an enum value of google.rpc.Code. */
      code?: number;
      /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
      details?: Array<{[P in string]: any}>;
      /** A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client. */
      message?: string;
    }
    interface GoogleTypeDate {
      /** Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. */
      day?: number;
      /** Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. */
      month?: number;
      /** Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. */
      year?: number;
    }
    interface GoogleTypeDateTime {
      /** Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day. */
      day?: number;
      /** Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value "24:00:00" for scenarios like business closing time. */
      hours?: number;
      /** Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0. */
      minutes?: number;
      /** Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month. */
      month?: number;
      /** Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0. */
      nanos?: number;
      /** Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds. */
      seconds?: number;
      /** Time zone. */
      timeZone?: GoogleTypeTimeZone;
      /** UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }. */
      utcOffset?: string;
      /** Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year. */
      year?: number;
    }
    interface GoogleTypeTimeZone {
      /** IANA Time Zone Database time zone. For example "America/New_York". */
      id?: string;
      /** Optional. IANA Time Zone Database version number. For example "2019a". */
      version?: string;
    }
    interface OperationsResource {
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface DataConnectorResource {
      operations: OperationsResource;
    }
    interface DocumentsResource {
      /** Creates a Document. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The ID to use for the Document, which becomes the final component of the Document.name. If the caller does not have permission to create the Document, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. This field must be unique among all Documents with the same parent. Otherwise, an `ALREADY_EXISTS` error is returned. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. */
        documentId?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaDocument;
      }): Request<GoogleCloudDiscoveryengineV1betaDocument>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Required. The ID to use for the Document, which becomes the final component of the Document.name. If the caller does not have permission to create the Document, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. This field must be unique among all Documents with the same parent. Otherwise, an `ALREADY_EXISTS` error is returned. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. */
          documentId?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaDocument,
      ): Request<GoogleCloudDiscoveryengineV1betaDocument>;
      /** Deletes a Document. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the caller does not have permission to delete the Document, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. If the Document to delete does not exist, a `NOT_FOUND` error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a Document. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the caller does not have permission to access the Document, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. If the requested Document does not exist, a `NOT_FOUND` error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaDocument>;
      /** Bulk import of multiple Documents. Request processing may be synchronous. Non-existing items are created. Note: It is possible for a subset of the Documents to be successfully updated. */
      import(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. Requires create/update permission. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaImportDocumentsRequest;
      }): Request<GoogleLongrunningOperation>;
      import(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. Requires create/update permission. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaImportDocumentsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Gets a list of Documents. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Maximum number of Documents to return. If unspecified, defaults to 100. The maximum allowed value is 1000. Values above 1000 are set to 1000. If this field is negative, an `INVALID_ARGUMENT` error is returned. */
        pageSize?: number;
        /** A page token ListDocumentsResponse.next_page_token, received from a previous DocumentService.ListDocuments call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to DocumentService.ListDocuments must match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned. */
        pageToken?: string;
        /** Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. Use `default_branch` as the branch ID, to list documents under the default branch. If the caller does not have permission to list Documents under this branch, regardless of whether or not this branch exists, a `PERMISSION_DENIED` error is returned. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListDocumentsResponse>;
      /** Updates a Document. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** If set to `true` and the Document is not found, a new Document is be created. */
        allowMissing?: boolean;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Indicates which fields in the provided imported 'document' to update. If not set, by default updates all fields. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaDocument;
      }): Request<GoogleCloudDiscoveryengineV1betaDocument>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** If set to `true` and the Document is not found, a new Document is be created. */
          allowMissing?: boolean;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Indicates which fields in the provided imported 'document' to update. If not set, by default updates all fields. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaDocument,
      ): Request<GoogleCloudDiscoveryengineV1betaDocument>;
      /** Permanently deletes all selected Documents in a branch. This process is asynchronous. Depending on the number of Documents to be deleted, this operation can take hours to complete. Before the delete operation completes, some Documents might still be returned by DocumentService.GetDocument or DocumentService.ListDocuments. To get a list of the Documents to be deleted, set PurgeDocumentsRequest.force to false. */
      purge(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest;
      }): Request<GoogleLongrunningOperation>;
      purge(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest,
      ): Request<GoogleLongrunningOperation>;
    }
    interface OperationsResource {
      /** Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`. */
      cancel(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource to be cancelled. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleLongrunningCancelOperationRequest;
      }): Request<{}>;
      cancel(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** The name of the operation resource to be cancelled. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleLongrunningCancelOperationRequest,
      ): Request<{}>;
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface BranchesResource {
      /** Gets index freshness metadata for Documents. Supported for website search only. */
      batchGetDocumentsMetadata(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The FHIR resources to match by. Format: projects/{project}/locations/{location}/datasets/{dataset}/fhirStores/{fhir_store}/fhir/{resource_type}/{fhir_resource_id} */
        'matcher.fhirMatcher.fhirResources'?: string | string[];
        /** The exact URIs to match by. */
        'matcher.urisMatcher.uris'?: string | string[];
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaBatchGetDocumentsMetadataResponse>;
      documents: DocumentsResource;
      operations: OperationsResource;
    }
    interface CompletionConfigResource {
      /** Completes the user input with advanced keyword suggestions. */
      completeQuery(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The completion_config of the parent dataStore or engine resource name for which the completion is performed, such as `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/completionConfig` `projects/*‍/locations/global/collections/default_collection/engines/*‍/completionConfig`. */
        completionConfig: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponse>;
      completeQuery(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Required. The completion_config of the parent dataStore or engine resource name for which the completion is performed, such as `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/completionConfig` `projects/*‍/locations/global/collections/default_collection/engines/*‍/completionConfig`. */
          completionConfig: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponse>;
    }
    interface CompletionSuggestionsResource {
      /** Imports CompletionSuggestions for a DataStore. */
      import(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent data store resource name for which to import customer autocomplete suggestions. Follows pattern `projects/*‍/locations/*‍/collections/*‍/dataStores/*` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsRequest;
      }): Request<GoogleLongrunningOperation>;
      import(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent data store resource name for which to import customer autocomplete suggestions. Follows pattern `projects/*‍/locations/*‍/collections/*‍/dataStores/*` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Permanently deletes all CompletionSuggestions for a DataStore. */
      purge(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent data store resource name for which to purge completion suggestions. Follows pattern projects/*‍/locations/*‍/collections/*‍/dataStores/*. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaPurgeCompletionSuggestionsRequest;
      }): Request<GoogleLongrunningOperation>;
      purge(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent data store resource name for which to purge completion suggestions. Follows pattern projects/*‍/locations/*‍/collections/*‍/dataStores/*. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaPurgeCompletionSuggestionsRequest,
      ): Request<GoogleLongrunningOperation>;
    }
    interface ControlsResource {
      /** Creates a Control. By default 1000 controls are allowed for a data store. A request can be submitted to adjust this limit. If the Control to create already exists, an ALREADY_EXISTS error is returned. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The ID to use for the Control, which will become the final component of the Control's resource name. This value must be within 1-63 characters. Valid characters are /a-z-_/. */
        controlId?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}` or `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaControl;
      }): Request<GoogleCloudDiscoveryengineV1betaControl>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Required. The ID to use for the Control, which will become the final component of the Control's resource name. This value must be within 1-63 characters. Valid characters are /a-z-_/. */
          controlId?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}` or `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaControl,
      ): Request<GoogleCloudDiscoveryengineV1betaControl>;
      /** Deletes a Control. If the Control to delete does not exist, a NOT_FOUND error is returned. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Control to delete. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a Control. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Control to get. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaControl>;
      /** Lists all Controls by their parent DataStore. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. A filter to apply on the list results. Supported features: * List all the products under the parent branch if filter is unset. Currently this field is unsupported. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListControls` call. Provide this to retrieve the subsequent page. */
        pageToken?: string;
        /** Required. The data store resource name. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}` or `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListControlsResponse>;
      /** Updates a Control. Control action type cannot be changed. If the Control to update does not exist, a NOT_FOUND error is returned. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. Fully qualified name `projects/*‍/locations/global/dataStore/*‍/controls/*` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. Indicates which fields in the provided Control to update. The following are NOT supported: * Control.name * Control.solution_type If not set or empty, all supported fields are updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaControl;
      }): Request<GoogleCloudDiscoveryengineV1betaControl>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. Fully qualified name `projects/*‍/locations/global/dataStore/*‍/controls/*` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. Indicates which fields in the provided Control to update. The following are NOT supported: * Control.name * Control.solution_type If not set or empty, all supported fields are updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaControl,
      ): Request<GoogleCloudDiscoveryengineV1betaControl>;
    }
    interface ConversationsResource {
      /** Converses a conversation. */
      converse(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Conversation to get. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`. Use `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/-` to activate auto session mode, which automatically creates a new conversation inside a ConverseConversation session. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaConverseConversationRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaConverseConversationResponse>;
      converse(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The resource name of the Conversation to get. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`. Use `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/-` to activate auto session mode, which automatically creates a new conversation inside a ConverseConversation session. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaConverseConversationRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaConverseConversationResponse>;
      /** Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS error is returned. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaConversation;
      }): Request<GoogleCloudDiscoveryengineV1betaConversation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaConversation,
      ): Request<GoogleCloudDiscoveryengineV1betaConversation>;
      /** Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is returned. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Conversation to delete. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a Conversation. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Conversation to get. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaConversation>;
      /** Lists all Conversations by their parent DataStore. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to apply on the list results. The supported features are: user_pseudo_id, state. Example: "user_pseudo_id = some_id" */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `update_time` * `create_time` * `conversation_name` Example: "update_time desc" "create_time" */
        orderBy?: string;
        /** Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000. */
        pageSize?: number;
        /** A page token, received from a previous `ListConversations` call. Provide this to retrieve the subsequent page. */
        pageToken?: string;
        /** Required. The data store resource name. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListConversationsResponse>;
      /** Updates a Conversation. Conversation action type cannot be changed. If the Conversation to update does not exist, a NOT_FOUND error is returned. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/dataStore/*‍/conversations/*` or `projects/{project}/locations/global/collections/{collection}/engines/*‍/conversations/*`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Indicates which fields in the provided Conversation to update. The following are NOT supported: * Conversation.name If not set or empty, all supported fields are updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaConversation;
      }): Request<GoogleCloudDiscoveryengineV1betaConversation>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/dataStore/*‍/conversations/*` or `projects/{project}/locations/global/collections/{collection}/engines/*‍/conversations/*`. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Indicates which fields in the provided Conversation to update. The following are NOT supported: * Conversation.name If not set or empty, all supported fields are updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaConversation,
      ): Request<GoogleCloudDiscoveryengineV1betaConversation>;
    }
    interface CustomModelsResource {
      /** Gets a list of all the custom models. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The resource name of the parent Data Store, such as `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store`. This field is used to identify the data store where to fetch the models from. */
        dataStore: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListCustomModelsResponse>;
    }
    interface OperationsResource {
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface ModelsResource {
      operations: OperationsResource;
    }
    interface OperationsResource {
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface OperationsResource {
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface SchemasResource {
      /** Creates a Schema. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent data store resource name, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The ID to use for the Schema, which becomes the final component of the Schema.name. This field should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. */
        schemaId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSchema;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent data store resource name, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The ID to use for the Schema, which becomes the final component of the Schema.name. This field should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. */
          schemaId?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSchema,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes a Schema. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Gets a Schema. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaSchema>;
      /** Gets a list of Schemas. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of Schemas to return. The service may return fewer than this value. If unspecified, at most 100 Schemas are returned. The maximum value is 1000; values above 1000 are set to 1000. */
        pageSize?: number;
        /** A page token, received from a previous SchemaService.ListSchemas call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to SchemaService.ListSchemas must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent data store resource name, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListSchemasResponse>;
      /** Updates a Schema. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** If set to true, and the Schema is not found, a new Schema is created. In this situation, `update_mask` is ignored. */
        allowMissing?: boolean;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSchema;
      }): Request<GoogleLongrunningOperation>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** If set to true, and the Schema is not found, a new Schema is created. In this situation, `update_mask` is ignored. */
          allowMissing?: boolean;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSchema,
      ): Request<GoogleLongrunningOperation>;
      operations: OperationsResource;
    }
    interface ServingConfigsResource {
      /** Answer query method. */
      answer(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
        servingConfig: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaAnswerQueryRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>;
      answer(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
          servingConfig: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaAnswerQueryRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>;
      /** Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the ServingConfig to get. Format: `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaServingConfig>;
      /** Lists all ServingConfigs linked to this dataStore. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. Maximum number of results to return. If unspecified, defaults to 100. If a value greater than 100 is provided, at most 100 results are returned. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListServingConfigs` call. Provide this to retrieve the subsequent page. */
        pageToken?: string;
        /** Required. Full resource name of the parent resource. Format: `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListServingConfigsResponse>;
      /** Updates a ServingConfig. Returns a NOT_FOUND error if the ServingConfig does not exist. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Indicates which fields in the provided ServingConfig to update. The following are NOT supported: * ServingConfig.name If not set, all supported fields are updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaServingConfig;
      }): Request<GoogleCloudDiscoveryengineV1betaServingConfig>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Indicates which fields in the provided ServingConfig to update. The following are NOT supported: * ServingConfig.name If not set, all supported fields are updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaServingConfig,
      ): Request<GoogleCloudDiscoveryengineV1betaServingConfig>;
      /** Makes a recommendation, which requires a contextual user event. */
      recommend(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. Full resource name of a ServingConfig: `projects/*‍/locations/global/collections/*‍/engines/*‍/servingConfigs/*`, or `projects/*‍/locations/global/collections/*‍/dataStores/*‍/servingConfigs/*` One default serving config is created along with your recommendation engine creation. The engine ID is used as the ID of the default serving config. For example, for Engine `projects/*‍/locations/global/collections/*‍/engines/my-engine`, you can use `projects/*‍/locations/global/collections/*‍/engines/my-engine/servingConfigs/my-engine` for your RecommendationService.Recommend requests. */
        servingConfig: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaRecommendRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaRecommendResponse>;
      recommend(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. Full resource name of a ServingConfig: `projects/*‍/locations/global/collections/*‍/engines/*‍/servingConfigs/*`, or `projects/*‍/locations/global/collections/*‍/dataStores/*‍/servingConfigs/*` One default serving config is created along with your recommendation engine creation. The engine ID is used as the ID of the default serving config. For example, for Engine `projects/*‍/locations/global/collections/*‍/engines/my-engine`, you can use `projects/*‍/locations/global/collections/*‍/engines/my-engine/servingConfigs/my-engine` for your RecommendationService.Recommend requests. */
          servingConfig: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaRecommendRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaRecommendResponse>;
      /** Performs a search. */
      search(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
        servingConfig: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSearchRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaSearchResponse>;
      search(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
          servingConfig: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSearchRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaSearchResponse>;
      /** Performs a search. Similar to the SearchService.Search method, but a lite version that allows API key for authentication, where OAuth and IAM checks are not required. Only public website search is supported by this method. If data stores and engines not associated with public website search are specified, a `FAILED_PRECONDITION` error is returned. This method can be used for easy onboarding without having to implement an authentication backend. However, it is strongly recommended to use SearchService.Search instead with required OAuth and IAM checks to provide better data security. */
      searchLite(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
        servingConfig: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSearchRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaSearchResponse>;
      searchLite(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
          servingConfig: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSearchRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaSearchResponse>;
      /** Answer query method (streaming). It takes one AnswerQueryRequest and returns multiple AnswerQueryResponse messages in a stream. */
      streamAnswer(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
        servingConfig: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaAnswerQueryRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>;
      streamAnswer(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
          servingConfig: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaAnswerQueryRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>;
    }
    interface AnswersResource {
      /** Gets a Answer. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Answer to get. Format: `projects/{project}/locations/{location}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answer_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaAnswer>;
    }
    interface SessionsResource {
      /** Creates a Session. If the Session to create already exists, an ALREADY_EXISTS error is returned. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSession;
      }): Request<GoogleCloudDiscoveryengineV1betaSession>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSession,
      ): Request<GoogleCloudDiscoveryengineV1betaSession>;
      /** Deletes a Session. If the Session to delete does not exist, a NOT_FOUND error is returned. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Session to delete. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a Session. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. If set to true, the full session including all answer details will be returned. */
        includeAnswerDetails?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Session to get. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaSession>;
      /** Lists all Sessions by their parent DataStore. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to apply on the list results. The supported features are: user_pseudo_id, state. Example: "user_pseudo_id = some_id" */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `update_time` * `create_time` * `session_name` * `is_pinned` Example: * "update_time desc" * "create_time" * "is_pinned desc,update_time desc": list sessions by is_pinned first, then by update_time. */
        orderBy?: string;
        /** Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000. */
        pageSize?: number;
        /** A page token, received from a previous `ListSessions` call. Provide this to retrieve the subsequent page. */
        pageToken?: string;
        /** Required. The data store resource name. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListSessionsResponse>;
      /** Updates a Session. Session action type cannot be changed. If the Session to update does not exist, a NOT_FOUND error is returned. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Indicates which fields in the provided Session to update. The following are NOT supported: * Session.name If not set or empty, all supported fields are updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSession;
      }): Request<GoogleCloudDiscoveryengineV1betaSession>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Indicates which fields in the provided Session to update. The following are NOT supported: * Session.name If not set or empty, all supported fields are updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSession,
      ): Request<GoogleCloudDiscoveryengineV1betaSession>;
      answers: AnswersResource;
    }
    interface OperationsResource {
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface SitemapsResource {
      /** Creates a Sitemap. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Parent resource name of the SiteSearchEngine, such as `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/siteSearchEngine`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSitemap;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. Parent resource name of the SiteSearchEngine, such as `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/siteSearchEngine`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSitemap,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes a Sitemap. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of Sitemap, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/sitemaps/{sitemap}`. If the caller does not have permission to access the Sitemap, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the requested Sitemap does not exist, a NOT_FOUND error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
    }
    interface OperationsResource {
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface TargetSitesResource {
      /** Creates TargetSite in a batch. */
      batchCreate(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource shared by all TargetSites being created. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. The parent field in the CreateBookRequest messages must either be empty or match this field. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesRequest;
      }): Request<GoogleLongrunningOperation>;
      batchCreate(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource shared by all TargetSites being created. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. The parent field in the CreateBookRequest messages must either be empty or match this field. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Creates a TargetSite. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Parent resource name of TargetSite, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaTargetSite;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. Parent resource name of TargetSite, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaTargetSite,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes a TargetSite. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If the caller does not have permission to access the TargetSite, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite does not exist, a NOT_FOUND error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Gets a TargetSite. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If the caller does not have permission to access the TargetSite, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite does not exist, a NOT_FOUND error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaTargetSite>;
      /** Gets a list of TargetSites. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default. The maximum value is 1000; values above 1000 will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT error is returned. */
        pageSize?: number;
        /** A page token, received from a previous `ListTargetSites` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTargetSites` must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent site search engine resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does not have permission to list TargetSites under this site search engine, regardless of whether or not this branch exists, a PERMISSION_DENIED error is returned. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListTargetSitesResponse>;
      /** Updates a TargetSite. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}` The `target_site_id` is system-generated. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaTargetSite;
      }): Request<GoogleLongrunningOperation>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}` The `target_site_id` is system-generated. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaTargetSite,
      ): Request<GoogleLongrunningOperation>;
      operations: OperationsResource;
    }
    interface SiteSearchEngineResource {
      /** Verify target sites' ownership and validity. This API sends all the target sites under site search engine for verification. */
      batchVerifyTargetSites(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource shared by all TargetSites being verified. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaBatchVerifyTargetSitesRequest;
      }): Request<GoogleLongrunningOperation>;
      batchVerifyTargetSites(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource shared by all TargetSites being verified. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaBatchVerifyTargetSitesRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Downgrade from advanced site search to basic site search. */
      disableAdvancedSiteSearch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`. */
        siteSearchEngine: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchRequest;
      }): Request<GoogleLongrunningOperation>;
      disableAdvancedSiteSearch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`. */
          siteSearchEngine: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Upgrade from basic site search to advanced site search. */
      enableAdvancedSiteSearch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`. */
        siteSearchEngine: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchRequest;
      }): Request<GoogleLongrunningOperation>;
      enableAdvancedSiteSearch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`. */
          siteSearchEngine: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Returns list of target sites with its domain verification status. This method can only be called under data store with BASIC_SITE_SEARCH state at the moment. */
      fetchDomainVerificationStatus(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default. The maximum value is 1000; values above 1000 will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT error is returned. */
        pageSize?: number;
        /** A page token, received from a previous `FetchDomainVerificationStatus` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `FetchDomainVerificationStatus` must match the call that provided the page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The site search engine resource under which we fetch all the domain verification status. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. */
        siteSearchEngine: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaFetchDomainVerificationStatusResponse>;
      /** Request on-demand recrawl for a list of URIs. */
      recrawlUris(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. Full resource name of the SiteSearchEngine, such as `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/siteSearchEngine`. */
        siteSearchEngine: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaRecrawlUrisRequest;
      }): Request<GoogleLongrunningOperation>;
      recrawlUris(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. Full resource name of the SiteSearchEngine, such as `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/siteSearchEngine`. */
          siteSearchEngine: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaRecrawlUrisRequest,
      ): Request<GoogleLongrunningOperation>;
      operations: OperationsResource;
      sitemaps: SitemapsResource;
      targetSites: TargetSitesResource;
    }
    interface SuggestionDenyListEntriesResource {
      /** Imports all SuggestionDenyListEntry for a DataStore. */
      import(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent data store resource name for which to import denylist entries. Follows pattern projects/*‍/locations/*‍/collections/*‍/dataStores/*. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest;
      }): Request<GoogleLongrunningOperation>;
      import(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent data store resource name for which to import denylist entries. Follows pattern projects/*‍/locations/*‍/collections/*‍/dataStores/*. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Permanently deletes all SuggestionDenyListEntry for a DataStore. */
      purge(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent data store resource name for which to import denylist entries. Follows pattern projects/*‍/locations/*‍/collections/*‍/dataStores/*. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest;
      }): Request<GoogleLongrunningOperation>;
      purge(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent data store resource name for which to import denylist entries. Follows pattern projects/*‍/locations/*‍/collections/*‍/dataStores/*. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest,
      ): Request<GoogleLongrunningOperation>;
    }
    interface UserEventsResource {
      /** Writes a single user event from the browser. This uses a GET request to due to browser restriction of POST-ing to a third-party domain. This method is used only by the Discovery Engine API JavaScript pixel and Google Tag Manager. Users should not call this method directly. */
      collect(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** The event timestamp in milliseconds. This prevents browser caching of otherwise identical get requests. The name is abbreviated to reduce the payload bytes. */
        ets?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource name. If the collect user event action is applied in DataStore level, the format is: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. If the collect user event action is applied in Location level, for example, the event with Document across multiple DataStore, the format is: `projects/{project}/locations/{location}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** The URL including cgi-parameters but excluding the hash fragment with a length limit of 5,000 characters. This is often more useful than the referer URL, because many browsers only send the domain for third-party requests. */
        uri?: string;
        /** Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters. */
        userEvent?: string;
      }): Request<GoogleApiHttpBody>;
      /** Bulk import of user events. Request processing might be synchronous. Events that already exist are skipped. Use this method for backfilling historical user events. Operation.response is of type ImportResponse. Note that it is possible for a subset of the items to be successfully inserted. Operation.metadata is of type ImportMetadata. */
      import(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Parent DataStore resource name, of the form `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaImportUserEventsRequest;
      }): Request<GoogleLongrunningOperation>;
      import(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. Parent DataStore resource name, of the form `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaImportUserEventsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes permanently all user events specified by the filter provided. Depending on the number of events specified by the filter, this operation could take hours or days to complete. To test a filter, use the list command first. */
      purge(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The resource name of the catalog under which the events are created. The format is `projects/{project}/locations/global/collections/{collection}/dataStores/{dataStore}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaPurgeUserEventsRequest;
      }): Request<GoogleLongrunningOperation>;
      purge(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The resource name of the catalog under which the events are created. The format is `projects/{project}/locations/global/collections/{collection}/dataStores/{dataStore}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaPurgeUserEventsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Writes a single user event. */
      write(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource name. If the write user event action is applied in DataStore level, the format is: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. If the write user event action is applied in Location level, for example, the event with Document across multiple DataStore, the format is: `projects/{project}/locations/{location}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** If set to true, the user event is written asynchronously after validation, and the API responds without waiting for the write. */
        writeAsync?: boolean;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaUserEvent;
      }): Request<GoogleCloudDiscoveryengineV1betaUserEvent>;
      write(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource name. If the write user event action is applied in DataStore level, the format is: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. If the write user event action is applied in Location level, for example, the event with Document across multiple DataStore, the format is: `projects/{project}/locations/{location}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
          /** If set to true, the user event is written asynchronously after validation, and the API responds without waiting for the write. */
          writeAsync?: boolean;
        },
        body: GoogleCloudDiscoveryengineV1betaUserEvent,
      ): Request<GoogleCloudDiscoveryengineV1betaUserEvent>;
    }
    interface DataStoresResource {
      /** Completes the specified user input with keyword suggestions. */
      completeQuery(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The parent data store resource name for which the completion is performed, such as `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store`. */
        dataStore: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Indicates if tail suggestions should be returned if there are no suggestions that match the full query. Even if set to true, if there are suggestions that match the full query, those are returned and no tail suggestions are returned. */
        includeTailSuggestions?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Required. The typeahead input used to fetch suggestions. Maximum length is 128 characters. */
        query?: string;
        /** Specifies the autocomplete data model. This overrides any model specified in the Configuration > Autocomplete section of the Cloud console. Currently supported values: * `document` - Using suggestions generated from user-imported documents. * `search-history` - Using suggestions generated from the past history of SearchService.Search API calls. Do not use it when there is no traffic for Search API. * `user-event` - Using suggestions generated from user-imported search events. * `document-completable` - Using suggestions taken directly from user-imported document fields marked as completable. Default values: * `document` is the default model for regular dataStores. * `search-history` is the default model for site search dataStores. */
        queryModel?: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This field should NOT have a fixed value such as `unknown_visitor`. This should be the same identifier as UserEvent.user_pseudo_id and SearchRequest.user_pseudo_id. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. */
        userPseudoId?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaCompleteQueryResponse>;
      /** Creates a DataStore. DataStore is for storing Documents. To serve these documents for Search, or Recommendation use case, an Engine needs to be created separately. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Resource name of the CmekConfig to use for protecting this DataStore. */
        cmekConfigName?: string;
        /** A boolean flag indicating whether user want to directly create an advanced data store for site search. If the data store is not configured as site search (GENERIC vertical and PUBLIC_WEBSITE content_config), this flag will be ignored. */
        createAdvancedSiteSearch?: boolean;
        /** Required. The ID to use for the DataStore, which will become the final component of the DataStore's resource name. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an INVALID_ARGUMENT error is returned. */
        dataStoreId?: string;
        /** DataStore without CMEK protections. If a default CmekConfig is set for the project, setting this field will override the default CmekConfig as well. */
        disableCmek?: boolean;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** A boolean flag indicating whether to skip the default schema creation for the data store. Only enable this flag if you are certain that the default schema is incompatible with your use case. If set to true, you must manually create a schema for the data store before any documents can be ingested. This flag cannot be specified if `data_store.starting_schema` is specified. */
        skipDefaultSchemaCreation?: boolean;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaDataStore;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Resource name of the CmekConfig to use for protecting this DataStore. */
          cmekConfigName?: string;
          /** A boolean flag indicating whether user want to directly create an advanced data store for site search. If the data store is not configured as site search (GENERIC vertical and PUBLIC_WEBSITE content_config), this flag will be ignored. */
          createAdvancedSiteSearch?: boolean;
          /** Required. The ID to use for the DataStore, which will become the final component of the DataStore's resource name. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an INVALID_ARGUMENT error is returned. */
          dataStoreId?: string;
          /** DataStore without CMEK protections. If a default CmekConfig is set for the project, setting this field will override the default CmekConfig as well. */
          disableCmek?: boolean;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** A boolean flag indicating whether to skip the default schema creation for the data store. Only enable this flag if you are certain that the default schema is incompatible with your use case. If set to true, you must manually create a schema for the data store before any documents can be ingested. This flag cannot be specified if `data_store.starting_schema` is specified. */
          skipDefaultSchemaCreation?: boolean;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaDataStore,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes a DataStore. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of DataStore, such as `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. If the caller does not have permission to delete the DataStore, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the DataStore to delete does not exist, a NOT_FOUND error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Gets a DataStore. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of DataStore, such as `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. If the caller does not have permission to access the DataStore, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the requested DataStore does not exist, a NOT_FOUND error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaDataStore>;
      /** Gets the SiteSearchEngine. */
      getSiteSearchEngine(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Resource name of SiteSearchEngine, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does not have permission to access the [SiteSearchEngine], regardless of whether or not it exists, a PERMISSION_DENIED error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaSiteSearchEngine>;
      /** Lists all the DataStores associated with the project. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Filter by solution type . For example: `filter = 'solution_type:SOLUTION_TYPE_SEARCH'` */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Maximum number of DataStores to return. If unspecified, defaults to 10. The maximum allowed value is 50. Values above 50 will be coerced to 50. If this field is negative, an INVALID_ARGUMENT is returned. */
        pageSize?: number;
        /** A page token ListDataStoresResponse.next_page_token, received from a previous DataStoreService.ListDataStores call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to DataStoreService.ListDataStores must match the call that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned. */
        pageToken?: string;
        /** Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller does not have permission to list DataStores under this location, regardless of whether or not this data store exists, a PERMISSION_DENIED error is returned. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListDataStoresResponse>;
      /** Updates a DataStore */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. The full resource name of the data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Indicates which fields in the provided DataStore to update. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaDataStore;
      }): Request<GoogleCloudDiscoveryengineV1betaDataStore>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. The full resource name of the data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Indicates which fields in the provided DataStore to update. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaDataStore,
      ): Request<GoogleCloudDiscoveryengineV1betaDataStore>;
      /** Trains a custom model. */
      trainCustomModel(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The resource name of the Data Store, such as `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store`. This field is used to identify the data store where to train the models. */
        dataStore: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaTrainCustomModelRequest;
      }): Request<GoogleLongrunningOperation>;
      trainCustomModel(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Required. The resource name of the Data Store, such as `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store`. This field is used to identify the data store where to train the models. */
          dataStore: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaTrainCustomModelRequest,
      ): Request<GoogleLongrunningOperation>;
      branches: BranchesResource;
      completionConfig: CompletionConfigResource;
      completionSuggestions: CompletionSuggestionsResource;
      controls: ControlsResource;
      conversations: ConversationsResource;
      customModels: CustomModelsResource;
      models: ModelsResource;
      operations: OperationsResource;
      schemas: SchemasResource;
      servingConfigs: ServingConfigsResource;
      sessions: SessionsResource;
      siteSearchEngine: SiteSearchEngineResource;
      suggestionDenyListEntries: SuggestionDenyListEntriesResource;
      userEvents: UserEventsResource;
    }
    interface CompletionConfigResource {
      /** Completes the user input with advanced keyword suggestions. */
      completeQuery(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The completion_config of the parent dataStore or engine resource name for which the completion is performed, such as `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/completionConfig` `projects/*‍/locations/global/collections/default_collection/engines/*‍/completionConfig`. */
        completionConfig: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponse>;
      completeQuery(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Required. The completion_config of the parent dataStore or engine resource name for which the completion is performed, such as `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/completionConfig` `projects/*‍/locations/global/collections/default_collection/engines/*‍/completionConfig`. */
          completionConfig: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponse>;
    }
    interface ControlsResource {
      /** Creates a Control. By default 1000 controls are allowed for a data store. A request can be submitted to adjust this limit. If the Control to create already exists, an ALREADY_EXISTS error is returned. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The ID to use for the Control, which will become the final component of the Control's resource name. This value must be within 1-63 characters. Valid characters are /a-z-_/. */
        controlId?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}` or `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaControl;
      }): Request<GoogleCloudDiscoveryengineV1betaControl>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Required. The ID to use for the Control, which will become the final component of the Control's resource name. This value must be within 1-63 characters. Valid characters are /a-z-_/. */
          controlId?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}` or `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaControl,
      ): Request<GoogleCloudDiscoveryengineV1betaControl>;
      /** Deletes a Control. If the Control to delete does not exist, a NOT_FOUND error is returned. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Control to delete. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a Control. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Control to get. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaControl>;
      /** Lists all Controls by their parent DataStore. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. A filter to apply on the list results. Supported features: * List all the products under the parent branch if filter is unset. Currently this field is unsupported. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListControls` call. Provide this to retrieve the subsequent page. */
        pageToken?: string;
        /** Required. The data store resource name. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}` or `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListControlsResponse>;
      /** Updates a Control. Control action type cannot be changed. If the Control to update does not exist, a NOT_FOUND error is returned. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. Fully qualified name `projects/*‍/locations/global/dataStore/*‍/controls/*` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. Indicates which fields in the provided Control to update. The following are NOT supported: * Control.name * Control.solution_type If not set or empty, all supported fields are updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaControl;
      }): Request<GoogleCloudDiscoveryengineV1betaControl>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. Fully qualified name `projects/*‍/locations/global/dataStore/*‍/controls/*` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. Indicates which fields in the provided Control to update. The following are NOT supported: * Control.name * Control.solution_type If not set or empty, all supported fields are updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaControl,
      ): Request<GoogleCloudDiscoveryengineV1betaControl>;
    }
    interface ConversationsResource {
      /** Converses a conversation. */
      converse(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Conversation to get. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`. Use `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/-` to activate auto session mode, which automatically creates a new conversation inside a ConverseConversation session. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaConverseConversationRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaConverseConversationResponse>;
      converse(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The resource name of the Conversation to get. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`. Use `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/-` to activate auto session mode, which automatically creates a new conversation inside a ConverseConversation session. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaConverseConversationRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaConverseConversationResponse>;
      /** Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS error is returned. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaConversation;
      }): Request<GoogleCloudDiscoveryengineV1betaConversation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaConversation,
      ): Request<GoogleCloudDiscoveryengineV1betaConversation>;
      /** Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is returned. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Conversation to delete. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a Conversation. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Conversation to get. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaConversation>;
      /** Lists all Conversations by their parent DataStore. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to apply on the list results. The supported features are: user_pseudo_id, state. Example: "user_pseudo_id = some_id" */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `update_time` * `create_time` * `conversation_name` Example: "update_time desc" "create_time" */
        orderBy?: string;
        /** Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000. */
        pageSize?: number;
        /** A page token, received from a previous `ListConversations` call. Provide this to retrieve the subsequent page. */
        pageToken?: string;
        /** Required. The data store resource name. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListConversationsResponse>;
      /** Updates a Conversation. Conversation action type cannot be changed. If the Conversation to update does not exist, a NOT_FOUND error is returned. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/dataStore/*‍/conversations/*` or `projects/{project}/locations/global/collections/{collection}/engines/*‍/conversations/*`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Indicates which fields in the provided Conversation to update. The following are NOT supported: * Conversation.name If not set or empty, all supported fields are updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaConversation;
      }): Request<GoogleCloudDiscoveryengineV1betaConversation>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/dataStore/*‍/conversations/*` or `projects/{project}/locations/global/collections/{collection}/engines/*‍/conversations/*`. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Indicates which fields in the provided Conversation to update. The following are NOT supported: * Conversation.name If not set or empty, all supported fields are updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaConversation,
      ): Request<GoogleCloudDiscoveryengineV1betaConversation>;
    }
    interface OperationsResource {
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface ServingConfigsResource {
      /** Answer query method. */
      answer(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
        servingConfig: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaAnswerQueryRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>;
      answer(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
          servingConfig: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaAnswerQueryRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>;
      /** Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the ServingConfig to get. Format: `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaServingConfig>;
      /** Lists all ServingConfigs linked to this dataStore. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. Maximum number of results to return. If unspecified, defaults to 100. If a value greater than 100 is provided, at most 100 results are returned. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListServingConfigs` call. Provide this to retrieve the subsequent page. */
        pageToken?: string;
        /** Required. Full resource name of the parent resource. Format: `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListServingConfigsResponse>;
      /** Updates a ServingConfig. Returns a NOT_FOUND error if the ServingConfig does not exist. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Indicates which fields in the provided ServingConfig to update. The following are NOT supported: * ServingConfig.name If not set, all supported fields are updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaServingConfig;
      }): Request<GoogleCloudDiscoveryengineV1betaServingConfig>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Indicates which fields in the provided ServingConfig to update. The following are NOT supported: * ServingConfig.name If not set, all supported fields are updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaServingConfig,
      ): Request<GoogleCloudDiscoveryengineV1betaServingConfig>;
      /** Makes a recommendation, which requires a contextual user event. */
      recommend(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. Full resource name of a ServingConfig: `projects/*‍/locations/global/collections/*‍/engines/*‍/servingConfigs/*`, or `projects/*‍/locations/global/collections/*‍/dataStores/*‍/servingConfigs/*` One default serving config is created along with your recommendation engine creation. The engine ID is used as the ID of the default serving config. For example, for Engine `projects/*‍/locations/global/collections/*‍/engines/my-engine`, you can use `projects/*‍/locations/global/collections/*‍/engines/my-engine/servingConfigs/my-engine` for your RecommendationService.Recommend requests. */
        servingConfig: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaRecommendRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaRecommendResponse>;
      recommend(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. Full resource name of a ServingConfig: `projects/*‍/locations/global/collections/*‍/engines/*‍/servingConfigs/*`, or `projects/*‍/locations/global/collections/*‍/dataStores/*‍/servingConfigs/*` One default serving config is created along with your recommendation engine creation. The engine ID is used as the ID of the default serving config. For example, for Engine `projects/*‍/locations/global/collections/*‍/engines/my-engine`, you can use `projects/*‍/locations/global/collections/*‍/engines/my-engine/servingConfigs/my-engine` for your RecommendationService.Recommend requests. */
          servingConfig: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaRecommendRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaRecommendResponse>;
      /** Performs a search. */
      search(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
        servingConfig: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSearchRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaSearchResponse>;
      search(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
          servingConfig: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSearchRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaSearchResponse>;
      /** Performs a search. Similar to the SearchService.Search method, but a lite version that allows API key for authentication, where OAuth and IAM checks are not required. Only public website search is supported by this method. If data stores and engines not associated with public website search are specified, a `FAILED_PRECONDITION` error is returned. This method can be used for easy onboarding without having to implement an authentication backend. However, it is strongly recommended to use SearchService.Search instead with required OAuth and IAM checks to provide better data security. */
      searchLite(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
        servingConfig: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSearchRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaSearchResponse>;
      searchLite(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
          servingConfig: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSearchRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaSearchResponse>;
      /** Answer query method (streaming). It takes one AnswerQueryRequest and returns multiple AnswerQueryResponse messages in a stream. */
      streamAnswer(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
        servingConfig: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaAnswerQueryRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>;
      streamAnswer(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
          servingConfig: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaAnswerQueryRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>;
    }
    interface AnswersResource {
      /** Gets a Answer. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Answer to get. Format: `projects/{project}/locations/{location}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answer_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaAnswer>;
    }
    interface SessionsResource {
      /** Creates a Session. If the Session to create already exists, an ALREADY_EXISTS error is returned. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSession;
      }): Request<GoogleCloudDiscoveryengineV1betaSession>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSession,
      ): Request<GoogleCloudDiscoveryengineV1betaSession>;
      /** Deletes a Session. If the Session to delete does not exist, a NOT_FOUND error is returned. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Session to delete. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a Session. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. If set to true, the full session including all answer details will be returned. */
        includeAnswerDetails?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Session to get. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaSession>;
      /** Lists all Sessions by their parent DataStore. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to apply on the list results. The supported features are: user_pseudo_id, state. Example: "user_pseudo_id = some_id" */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `update_time` * `create_time` * `session_name` * `is_pinned` Example: * "update_time desc" * "create_time" * "is_pinned desc,update_time desc": list sessions by is_pinned first, then by update_time. */
        orderBy?: string;
        /** Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000. */
        pageSize?: number;
        /** A page token, received from a previous `ListSessions` call. Provide this to retrieve the subsequent page. */
        pageToken?: string;
        /** Required. The data store resource name. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListSessionsResponse>;
      /** Updates a Session. Session action type cannot be changed. If the Session to update does not exist, a NOT_FOUND error is returned. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Indicates which fields in the provided Session to update. The following are NOT supported: * Session.name If not set or empty, all supported fields are updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSession;
      }): Request<GoogleCloudDiscoveryengineV1betaSession>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Indicates which fields in the provided Session to update. The following are NOT supported: * Session.name If not set or empty, all supported fields are updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSession,
      ): Request<GoogleCloudDiscoveryengineV1betaSession>;
      answers: AnswersResource;
    }
    interface EnginesResource {
      /** Creates a Engine. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The ID to use for the Engine, which will become the final component of the Engine's resource name. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an INVALID_ARGUMENT error is returned. */
        engineId?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaEngine;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Required. The ID to use for the Engine, which will become the final component of the Engine's resource name. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an INVALID_ARGUMENT error is returned. */
          engineId?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaEngine,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes a Engine. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of Engine, such as `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`. If the caller does not have permission to delete the Engine, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the Engine to delete does not exist, a NOT_FOUND error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Gets a Engine. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of Engine, such as `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaEngine>;
      /** Lists all the Engines associated with the project. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. Filter by solution type. For example: solution_type=SOLUTION_TYPE_SEARCH */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. Not supported. */
        pageSize?: number;
        /** Optional. Not supported. */
        pageToken?: string;
        /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection_id}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListEnginesResponse>;
      /** Updates an Engine */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded string with a length limit of 1024 characters. Format: `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}` engine should be 1-63 characters, and valid characters are /a-z0-9*‍/. Otherwise, an INVALID_ARGUMENT error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Indicates which fields in the provided Engine to update. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaEngine;
      }): Request<GoogleCloudDiscoveryengineV1betaEngine>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded string with a length limit of 1024 characters. Format: `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}` engine should be 1-63 characters, and valid characters are /a-z0-9*‍/. Otherwise, an INVALID_ARGUMENT error is returned. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Indicates which fields in the provided Engine to update. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaEngine,
      ): Request<GoogleCloudDiscoveryengineV1betaEngine>;
      /** Pauses the training of an existing engine. Only applicable if SolutionType is SOLUTION_TYPE_RECOMMENDATION. */
      pause(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the engine to pause. Format: `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaPauseEngineRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaEngine>;
      pause(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the engine to pause. Format: `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaPauseEngineRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaEngine>;
      /** Resumes the training of an existing engine. Only applicable if SolutionType is SOLUTION_TYPE_RECOMMENDATION. */
      resume(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the engine to resume. Format: `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaResumeEngineRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaEngine>;
      resume(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the engine to resume. Format: `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaResumeEngineRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaEngine>;
      /** Tunes an existing engine. Only applicable if SolutionType is SOLUTION_TYPE_RECOMMENDATION. */
      tune(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the engine to tune. Format: `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaTuneEngineRequest;
      }): Request<GoogleLongrunningOperation>;
      tune(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The resource name of the engine to tune. Format: `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaTuneEngineRequest,
      ): Request<GoogleLongrunningOperation>;
      completionConfig: CompletionConfigResource;
      controls: ControlsResource;
      conversations: ConversationsResource;
      operations: OperationsResource;
      servingConfigs: ServingConfigsResource;
      sessions: SessionsResource;
    }
    interface OperationsResource {
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface CollectionsResource {
      dataConnector: DataConnectorResource;
      dataStores: DataStoresResource;
      engines: EnginesResource;
      operations: OperationsResource;
    }
    interface DocumentsResource {
      /** Creates a Document. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The ID to use for the Document, which becomes the final component of the Document.name. If the caller does not have permission to create the Document, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. This field must be unique among all Documents with the same parent. Otherwise, an `ALREADY_EXISTS` error is returned. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. */
        documentId?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaDocument;
      }): Request<GoogleCloudDiscoveryengineV1betaDocument>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Required. The ID to use for the Document, which becomes the final component of the Document.name. If the caller does not have permission to create the Document, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. This field must be unique among all Documents with the same parent. Otherwise, an `ALREADY_EXISTS` error is returned. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. */
          documentId?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaDocument,
      ): Request<GoogleCloudDiscoveryengineV1betaDocument>;
      /** Deletes a Document. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the caller does not have permission to delete the Document, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. If the Document to delete does not exist, a `NOT_FOUND` error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a Document. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of Document, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`. If the caller does not have permission to access the Document, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. If the requested Document does not exist, a `NOT_FOUND` error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaDocument>;
      /** Bulk import of multiple Documents. Request processing may be synchronous. Non-existing items are created. Note: It is possible for a subset of the Documents to be successfully updated. */
      import(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. Requires create/update permission. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaImportDocumentsRequest;
      }): Request<GoogleLongrunningOperation>;
      import(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. Requires create/update permission. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaImportDocumentsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Gets a list of Documents. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Maximum number of Documents to return. If unspecified, defaults to 100. The maximum allowed value is 1000. Values above 1000 are set to 1000. If this field is negative, an `INVALID_ARGUMENT` error is returned. */
        pageSize?: number;
        /** A page token ListDocumentsResponse.next_page_token, received from a previous DocumentService.ListDocuments call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to DocumentService.ListDocuments must match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned. */
        pageToken?: string;
        /** Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. Use `default_branch` as the branch ID, to list documents under the default branch. If the caller does not have permission to list Documents under this branch, regardless of whether or not this branch exists, a `PERMISSION_DENIED` error is returned. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListDocumentsResponse>;
      /** Updates a Document. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** If set to `true` and the Document is not found, a new Document is be created. */
        allowMissing?: boolean;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Indicates which fields in the provided imported 'document' to update. If not set, by default updates all fields. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaDocument;
      }): Request<GoogleCloudDiscoveryengineV1betaDocument>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** If set to `true` and the Document is not found, a new Document is be created. */
          allowMissing?: boolean;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Indicates which fields in the provided imported 'document' to update. If not set, by default updates all fields. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaDocument,
      ): Request<GoogleCloudDiscoveryengineV1betaDocument>;
      /** Permanently deletes all selected Documents in a branch. This process is asynchronous. Depending on the number of Documents to be deleted, this operation can take hours to complete. Before the delete operation completes, some Documents might still be returned by DocumentService.GetDocument or DocumentService.ListDocuments. To get a list of the Documents to be deleted, set PurgeDocumentsRequest.force to false. */
      purge(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest;
      }): Request<GoogleLongrunningOperation>;
      purge(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest,
      ): Request<GoogleLongrunningOperation>;
    }
    interface OperationsResource {
      /** Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`. */
      cancel(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource to be cancelled. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleLongrunningCancelOperationRequest;
      }): Request<{}>;
      cancel(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** The name of the operation resource to be cancelled. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleLongrunningCancelOperationRequest,
      ): Request<{}>;
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface BranchesResource {
      /** Gets index freshness metadata for Documents. Supported for website search only. */
      batchGetDocumentsMetadata(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The FHIR resources to match by. Format: projects/{project}/locations/{location}/datasets/{dataset}/fhirStores/{fhir_store}/fhir/{resource_type}/{fhir_resource_id} */
        'matcher.fhirMatcher.fhirResources'?: string | string[];
        /** The exact URIs to match by. */
        'matcher.urisMatcher.uris'?: string | string[];
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaBatchGetDocumentsMetadataResponse>;
      documents: DocumentsResource;
      operations: OperationsResource;
    }
    interface CompletionConfigResource {
      /** Completes the user input with advanced keyword suggestions. */
      completeQuery(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The completion_config of the parent dataStore or engine resource name for which the completion is performed, such as `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/completionConfig` `projects/*‍/locations/global/collections/default_collection/engines/*‍/completionConfig`. */
        completionConfig: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponse>;
      completeQuery(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Required. The completion_config of the parent dataStore or engine resource name for which the completion is performed, such as `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/completionConfig` `projects/*‍/locations/global/collections/default_collection/engines/*‍/completionConfig`. */
          completionConfig: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponse>;
    }
    interface CompletionSuggestionsResource {
      /** Imports CompletionSuggestions for a DataStore. */
      import(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent data store resource name for which to import customer autocomplete suggestions. Follows pattern `projects/*‍/locations/*‍/collections/*‍/dataStores/*` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsRequest;
      }): Request<GoogleLongrunningOperation>;
      import(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent data store resource name for which to import customer autocomplete suggestions. Follows pattern `projects/*‍/locations/*‍/collections/*‍/dataStores/*` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Permanently deletes all CompletionSuggestions for a DataStore. */
      purge(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent data store resource name for which to purge completion suggestions. Follows pattern projects/*‍/locations/*‍/collections/*‍/dataStores/*. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaPurgeCompletionSuggestionsRequest;
      }): Request<GoogleLongrunningOperation>;
      purge(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent data store resource name for which to purge completion suggestions. Follows pattern projects/*‍/locations/*‍/collections/*‍/dataStores/*. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaPurgeCompletionSuggestionsRequest,
      ): Request<GoogleLongrunningOperation>;
    }
    interface ControlsResource {
      /** Creates a Control. By default 1000 controls are allowed for a data store. A request can be submitted to adjust this limit. If the Control to create already exists, an ALREADY_EXISTS error is returned. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The ID to use for the Control, which will become the final component of the Control's resource name. This value must be within 1-63 characters. Valid characters are /a-z-_/. */
        controlId?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}` or `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaControl;
      }): Request<GoogleCloudDiscoveryengineV1betaControl>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Required. The ID to use for the Control, which will become the final component of the Control's resource name. This value must be within 1-63 characters. Valid characters are /a-z-_/. */
          controlId?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}` or `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaControl,
      ): Request<GoogleCloudDiscoveryengineV1betaControl>;
      /** Deletes a Control. If the Control to delete does not exist, a NOT_FOUND error is returned. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Control to delete. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a Control. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Control to get. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaControl>;
      /** Lists all Controls by their parent DataStore. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. A filter to apply on the list results. Supported features: * List all the products under the parent branch if filter is unset. Currently this field is unsupported. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListControls` call. Provide this to retrieve the subsequent page. */
        pageToken?: string;
        /** Required. The data store resource name. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}` or `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListControlsResponse>;
      /** Updates a Control. Control action type cannot be changed. If the Control to update does not exist, a NOT_FOUND error is returned. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. Fully qualified name `projects/*‍/locations/global/dataStore/*‍/controls/*` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. Indicates which fields in the provided Control to update. The following are NOT supported: * Control.name * Control.solution_type If not set or empty, all supported fields are updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaControl;
      }): Request<GoogleCloudDiscoveryengineV1betaControl>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. Fully qualified name `projects/*‍/locations/global/dataStore/*‍/controls/*` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. Indicates which fields in the provided Control to update. The following are NOT supported: * Control.name * Control.solution_type If not set or empty, all supported fields are updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaControl,
      ): Request<GoogleCloudDiscoveryengineV1betaControl>;
    }
    interface ConversationsResource {
      /** Converses a conversation. */
      converse(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Conversation to get. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`. Use `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/-` to activate auto session mode, which automatically creates a new conversation inside a ConverseConversation session. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaConverseConversationRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaConverseConversationResponse>;
      converse(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The resource name of the Conversation to get. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`. Use `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/-` to activate auto session mode, which automatically creates a new conversation inside a ConverseConversation session. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaConverseConversationRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaConverseConversationResponse>;
      /** Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS error is returned. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaConversation;
      }): Request<GoogleCloudDiscoveryengineV1betaConversation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaConversation,
      ): Request<GoogleCloudDiscoveryengineV1betaConversation>;
      /** Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is returned. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Conversation to delete. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a Conversation. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Conversation to get. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaConversation>;
      /** Lists all Conversations by their parent DataStore. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to apply on the list results. The supported features are: user_pseudo_id, state. Example: "user_pseudo_id = some_id" */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `update_time` * `create_time` * `conversation_name` Example: "update_time desc" "create_time" */
        orderBy?: string;
        /** Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000. */
        pageSize?: number;
        /** A page token, received from a previous `ListConversations` call. Provide this to retrieve the subsequent page. */
        pageToken?: string;
        /** Required. The data store resource name. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListConversationsResponse>;
      /** Updates a Conversation. Conversation action type cannot be changed. If the Conversation to update does not exist, a NOT_FOUND error is returned. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/dataStore/*‍/conversations/*` or `projects/{project}/locations/global/collections/{collection}/engines/*‍/conversations/*`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Indicates which fields in the provided Conversation to update. The following are NOT supported: * Conversation.name If not set or empty, all supported fields are updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaConversation;
      }): Request<GoogleCloudDiscoveryengineV1betaConversation>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/dataStore/*‍/conversations/*` or `projects/{project}/locations/global/collections/{collection}/engines/*‍/conversations/*`. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Indicates which fields in the provided Conversation to update. The following are NOT supported: * Conversation.name If not set or empty, all supported fields are updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaConversation,
      ): Request<GoogleCloudDiscoveryengineV1betaConversation>;
    }
    interface OperationsResource {
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface ModelsResource {
      operations: OperationsResource;
    }
    interface OperationsResource {
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface SchemasResource {
      /** Creates a Schema. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent data store resource name, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The ID to use for the Schema, which becomes the final component of the Schema.name. This field should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. */
        schemaId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSchema;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent data store resource name, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The ID to use for the Schema, which becomes the final component of the Schema.name. This field should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. */
          schemaId?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSchema,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes a Schema. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Gets a Schema. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaSchema>;
      /** Gets a list of Schemas. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of Schemas to return. The service may return fewer than this value. If unspecified, at most 100 Schemas are returned. The maximum value is 1000; values above 1000 are set to 1000. */
        pageSize?: number;
        /** A page token, received from a previous SchemaService.ListSchemas call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to SchemaService.ListSchemas must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent data store resource name, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListSchemasResponse>;
      /** Updates a Schema. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** If set to true, and the Schema is not found, a new Schema is created. In this situation, `update_mask` is ignored. */
        allowMissing?: boolean;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSchema;
      }): Request<GoogleLongrunningOperation>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** If set to true, and the Schema is not found, a new Schema is created. In this situation, `update_mask` is ignored. */
          allowMissing?: boolean;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSchema,
      ): Request<GoogleLongrunningOperation>;
    }
    interface ServingConfigsResource {
      /** Answer query method. */
      answer(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
        servingConfig: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaAnswerQueryRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>;
      answer(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
          servingConfig: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaAnswerQueryRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>;
      /** Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the ServingConfig to get. Format: `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaServingConfig>;
      /** Lists all ServingConfigs linked to this dataStore. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. Maximum number of results to return. If unspecified, defaults to 100. If a value greater than 100 is provided, at most 100 results are returned. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListServingConfigs` call. Provide this to retrieve the subsequent page. */
        pageToken?: string;
        /** Required. Full resource name of the parent resource. Format: `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListServingConfigsResponse>;
      /** Updates a ServingConfig. Returns a NOT_FOUND error if the ServingConfig does not exist. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Indicates which fields in the provided ServingConfig to update. The following are NOT supported: * ServingConfig.name If not set, all supported fields are updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaServingConfig;
      }): Request<GoogleCloudDiscoveryengineV1betaServingConfig>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Indicates which fields in the provided ServingConfig to update. The following are NOT supported: * ServingConfig.name If not set, all supported fields are updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaServingConfig,
      ): Request<GoogleCloudDiscoveryengineV1betaServingConfig>;
      /** Makes a recommendation, which requires a contextual user event. */
      recommend(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. Full resource name of a ServingConfig: `projects/*‍/locations/global/collections/*‍/engines/*‍/servingConfigs/*`, or `projects/*‍/locations/global/collections/*‍/dataStores/*‍/servingConfigs/*` One default serving config is created along with your recommendation engine creation. The engine ID is used as the ID of the default serving config. For example, for Engine `projects/*‍/locations/global/collections/*‍/engines/my-engine`, you can use `projects/*‍/locations/global/collections/*‍/engines/my-engine/servingConfigs/my-engine` for your RecommendationService.Recommend requests. */
        servingConfig: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaRecommendRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaRecommendResponse>;
      recommend(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. Full resource name of a ServingConfig: `projects/*‍/locations/global/collections/*‍/engines/*‍/servingConfigs/*`, or `projects/*‍/locations/global/collections/*‍/dataStores/*‍/servingConfigs/*` One default serving config is created along with your recommendation engine creation. The engine ID is used as the ID of the default serving config. For example, for Engine `projects/*‍/locations/global/collections/*‍/engines/my-engine`, you can use `projects/*‍/locations/global/collections/*‍/engines/my-engine/servingConfigs/my-engine` for your RecommendationService.Recommend requests. */
          servingConfig: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaRecommendRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaRecommendResponse>;
      /** Performs a search. */
      search(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
        servingConfig: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSearchRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaSearchResponse>;
      search(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
          servingConfig: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSearchRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaSearchResponse>;
      /** Performs a search. Similar to the SearchService.Search method, but a lite version that allows API key for authentication, where OAuth and IAM checks are not required. Only public website search is supported by this method. If data stores and engines not associated with public website search are specified, a `FAILED_PRECONDITION` error is returned. This method can be used for easy onboarding without having to implement an authentication backend. However, it is strongly recommended to use SearchService.Search instead with required OAuth and IAM checks to provide better data security. */
      searchLite(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
        servingConfig: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSearchRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaSearchResponse>;
      searchLite(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
          servingConfig: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSearchRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaSearchResponse>;
      /** Answer query method (streaming). It takes one AnswerQueryRequest and returns multiple AnswerQueryResponse messages in a stream. */
      streamAnswer(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
        servingConfig: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaAnswerQueryRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>;
      streamAnswer(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The resource name of the Search serving config, such as `projects/*‍/locations/global/collections/default_collection/engines/*‍/servingConfigs/default_serving_config`, or `projects/*‍/locations/global/collections/default_collection/dataStores/*‍/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search. */
          servingConfig: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaAnswerQueryRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>;
    }
    interface AnswersResource {
      /** Gets a Answer. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Answer to get. Format: `projects/{project}/locations/{location}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answer_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaAnswer>;
    }
    interface SessionsResource {
      /** Creates a Session. If the Session to create already exists, an ALREADY_EXISTS error is returned. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSession;
      }): Request<GoogleCloudDiscoveryengineV1betaSession>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. Full resource name of parent data store. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSession,
      ): Request<GoogleCloudDiscoveryengineV1betaSession>;
      /** Deletes a Session. If the Session to delete does not exist, a NOT_FOUND error is returned. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Session to delete. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a Session. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. If set to true, the full session including all answer details will be returned. */
        includeAnswerDetails?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Session to get. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaSession>;
      /** Lists all Sessions by their parent DataStore. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to apply on the list results. The supported features are: user_pseudo_id, state. Example: "user_pseudo_id = some_id" */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `update_time` * `create_time` * `session_name` * `is_pinned` Example: * "update_time desc" * "create_time" * "is_pinned desc,update_time desc": list sessions by is_pinned first, then by update_time. */
        orderBy?: string;
        /** Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000. */
        pageSize?: number;
        /** A page token, received from a previous `ListSessions` call. Provide this to retrieve the subsequent page. */
        pageToken?: string;
        /** Required. The data store resource name. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListSessionsResponse>;
      /** Updates a Session. Session action type cannot be changed. If the Session to update does not exist, a NOT_FOUND error is returned. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Indicates which fields in the provided Session to update. The following are NOT supported: * Session.name If not set or empty, all supported fields are updated. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSession;
      }): Request<GoogleCloudDiscoveryengineV1betaSession>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. Fully qualified name `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Indicates which fields in the provided Session to update. The following are NOT supported: * Session.name If not set or empty, all supported fields are updated. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSession,
      ): Request<GoogleCloudDiscoveryengineV1betaSession>;
      answers: AnswersResource;
    }
    interface SitemapsResource {
      /** Creates a Sitemap. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Parent resource name of the SiteSearchEngine, such as `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/siteSearchEngine`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSitemap;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. Parent resource name of the SiteSearchEngine, such as `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/siteSearchEngine`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSitemap,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes a Sitemap. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of Sitemap, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/sitemaps/{sitemap}`. If the caller does not have permission to access the Sitemap, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the requested Sitemap does not exist, a NOT_FOUND error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Fetch Sitemaps in a DataStore. */
      fetch(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The Sitemap uris. */
        'matcher.urisMatcher.uris'?: string | string[];
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Parent resource name of the SiteSearchEngine, such as `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/siteSearchEngine`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaFetchSitemapsResponse>;
    }
    interface TargetSitesResource {
      /** Creates TargetSite in a batch. */
      batchCreate(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource shared by all TargetSites being created. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. The parent field in the CreateBookRequest messages must either be empty or match this field. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesRequest;
      }): Request<GoogleLongrunningOperation>;
      batchCreate(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource shared by all TargetSites being created. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. The parent field in the CreateBookRequest messages must either be empty or match this field. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Creates a TargetSite. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Parent resource name of TargetSite, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaTargetSite;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. Parent resource name of TargetSite, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaTargetSite,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes a TargetSite. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If the caller does not have permission to access the TargetSite, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite does not exist, a NOT_FOUND error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Gets a TargetSite. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If the caller does not have permission to access the TargetSite, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite does not exist, a NOT_FOUND error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaTargetSite>;
      /** Gets a list of TargetSites. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default. The maximum value is 1000; values above 1000 will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT error is returned. */
        pageSize?: number;
        /** A page token, received from a previous `ListTargetSites` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTargetSites` must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent site search engine resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does not have permission to list TargetSites under this site search engine, regardless of whether or not this branch exists, a PERMISSION_DENIED error is returned. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListTargetSitesResponse>;
      /** Updates a TargetSite. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}` The `target_site_id` is system-generated. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaTargetSite;
      }): Request<GoogleLongrunningOperation>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}` The `target_site_id` is system-generated. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaTargetSite,
      ): Request<GoogleLongrunningOperation>;
    }
    interface SiteSearchEngineResource {
      /** Downgrade from advanced site search to basic site search. */
      disableAdvancedSiteSearch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`. */
        siteSearchEngine: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchRequest;
      }): Request<GoogleLongrunningOperation>;
      disableAdvancedSiteSearch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`. */
          siteSearchEngine: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Upgrade from basic site search to advanced site search. */
      enableAdvancedSiteSearch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`. */
        siteSearchEngine: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchRequest;
      }): Request<GoogleLongrunningOperation>;
      enableAdvancedSiteSearch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`. */
          siteSearchEngine: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Request on-demand recrawl for a list of URIs. */
      recrawlUris(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. Full resource name of the SiteSearchEngine, such as `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/siteSearchEngine`. */
        siteSearchEngine: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaRecrawlUrisRequest;
      }): Request<GoogleLongrunningOperation>;
      recrawlUris(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. Full resource name of the SiteSearchEngine, such as `projects/*‍/locations/*‍/collections/*‍/dataStores/*‍/siteSearchEngine`. */
          siteSearchEngine: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaRecrawlUrisRequest,
      ): Request<GoogleLongrunningOperation>;
      sitemaps: SitemapsResource;
      targetSites: TargetSitesResource;
    }
    interface SuggestionDenyListEntriesResource {
      /** Imports all SuggestionDenyListEntry for a DataStore. */
      import(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent data store resource name for which to import denylist entries. Follows pattern projects/*‍/locations/*‍/collections/*‍/dataStores/*. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest;
      }): Request<GoogleLongrunningOperation>;
      import(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent data store resource name for which to import denylist entries. Follows pattern projects/*‍/locations/*‍/collections/*‍/dataStores/*. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Permanently deletes all SuggestionDenyListEntry for a DataStore. */
      purge(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent data store resource name for which to import denylist entries. Follows pattern projects/*‍/locations/*‍/collections/*‍/dataStores/*. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest;
      }): Request<GoogleLongrunningOperation>;
      purge(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent data store resource name for which to import denylist entries. Follows pattern projects/*‍/locations/*‍/collections/*‍/dataStores/*. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest,
      ): Request<GoogleLongrunningOperation>;
    }
    interface UserEventsResource {
      /** Writes a single user event from the browser. This uses a GET request to due to browser restriction of POST-ing to a third-party domain. This method is used only by the Discovery Engine API JavaScript pixel and Google Tag Manager. Users should not call this method directly. */
      collect(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** The event timestamp in milliseconds. This prevents browser caching of otherwise identical get requests. The name is abbreviated to reduce the payload bytes. */
        ets?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource name. If the collect user event action is applied in DataStore level, the format is: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. If the collect user event action is applied in Location level, for example, the event with Document across multiple DataStore, the format is: `projects/{project}/locations/{location}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** The URL including cgi-parameters but excluding the hash fragment with a length limit of 5,000 characters. This is often more useful than the referer URL, because many browsers only send the domain for third-party requests. */
        uri?: string;
        /** Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters. */
        userEvent?: string;
      }): Request<GoogleApiHttpBody>;
      /** Bulk import of user events. Request processing might be synchronous. Events that already exist are skipped. Use this method for backfilling historical user events. Operation.response is of type ImportResponse. Note that it is possible for a subset of the items to be successfully inserted. Operation.metadata is of type ImportMetadata. */
      import(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Parent DataStore resource name, of the form `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaImportUserEventsRequest;
      }): Request<GoogleLongrunningOperation>;
      import(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. Parent DataStore resource name, of the form `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaImportUserEventsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes permanently all user events specified by the filter provided. Depending on the number of events specified by the filter, this operation could take hours or days to complete. To test a filter, use the list command first. */
      purge(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The resource name of the catalog under which the events are created. The format is `projects/{project}/locations/global/collections/{collection}/dataStores/{dataStore}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaPurgeUserEventsRequest;
      }): Request<GoogleLongrunningOperation>;
      purge(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The resource name of the catalog under which the events are created. The format is `projects/{project}/locations/global/collections/{collection}/dataStores/{dataStore}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaPurgeUserEventsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Writes a single user event. */
      write(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource name. If the write user event action is applied in DataStore level, the format is: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. If the write user event action is applied in Location level, for example, the event with Document across multiple DataStore, the format is: `projects/{project}/locations/{location}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** If set to true, the user event is written asynchronously after validation, and the API responds without waiting for the write. */
        writeAsync?: boolean;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaUserEvent;
      }): Request<GoogleCloudDiscoveryengineV1betaUserEvent>;
      write(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource name. If the write user event action is applied in DataStore level, the format is: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. If the write user event action is applied in Location level, for example, the event with Document across multiple DataStore, the format is: `projects/{project}/locations/{location}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
          /** If set to true, the user event is written asynchronously after validation, and the API responds without waiting for the write. */
          writeAsync?: boolean;
        },
        body: GoogleCloudDiscoveryengineV1betaUserEvent,
      ): Request<GoogleCloudDiscoveryengineV1betaUserEvent>;
    }
    interface DataStoresResource {
      /** Completes the specified user input with keyword suggestions. */
      completeQuery(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The parent data store resource name for which the completion is performed, such as `projects/*‍/locations/global/collections/default_collection/dataStores/default_data_store`. */
        dataStore: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Indicates if tail suggestions should be returned if there are no suggestions that match the full query. Even if set to true, if there are suggestions that match the full query, those are returned and no tail suggestions are returned. */
        includeTailSuggestions?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Required. The typeahead input used to fetch suggestions. Maximum length is 128 characters. */
        query?: string;
        /** Specifies the autocomplete data model. This overrides any model specified in the Configuration > Autocomplete section of the Cloud console. Currently supported values: * `document` - Using suggestions generated from user-imported documents. * `search-history` - Using suggestions generated from the past history of SearchService.Search API calls. Do not use it when there is no traffic for Search API. * `user-event` - Using suggestions generated from user-imported search events. * `document-completable` - Using suggestions taken directly from user-imported document fields marked as completable. Default values: * `document` is the default model for regular dataStores. * `search-history` is the default model for site search dataStores. */
        queryModel?: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This field should NOT have a fixed value such as `unknown_visitor`. This should be the same identifier as UserEvent.user_pseudo_id and SearchRequest.user_pseudo_id. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. */
        userPseudoId?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaCompleteQueryResponse>;
      /** Creates a DataStore. DataStore is for storing Documents. To serve these documents for Search, or Recommendation use case, an Engine needs to be created separately. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Resource name of the CmekConfig to use for protecting this DataStore. */
        cmekConfigName?: string;
        /** A boolean flag indicating whether user want to directly create an advanced data store for site search. If the data store is not configured as site search (GENERIC vertical and PUBLIC_WEBSITE content_config), this flag will be ignored. */
        createAdvancedSiteSearch?: boolean;
        /** Required. The ID to use for the DataStore, which will become the final component of the DataStore's resource name. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an INVALID_ARGUMENT error is returned. */
        dataStoreId?: string;
        /** DataStore without CMEK protections. If a default CmekConfig is set for the project, setting this field will override the default CmekConfig as well. */
        disableCmek?: boolean;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** A boolean flag indicating whether to skip the default schema creation for the data store. Only enable this flag if you are certain that the default schema is incompatible with your use case. If set to true, you must manually create a schema for the data store before any documents can be ingested. This flag cannot be specified if `data_store.starting_schema` is specified. */
        skipDefaultSchemaCreation?: boolean;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaDataStore;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Resource name of the CmekConfig to use for protecting this DataStore. */
          cmekConfigName?: string;
          /** A boolean flag indicating whether user want to directly create an advanced data store for site search. If the data store is not configured as site search (GENERIC vertical and PUBLIC_WEBSITE content_config), this flag will be ignored. */
          createAdvancedSiteSearch?: boolean;
          /** Required. The ID to use for the DataStore, which will become the final component of the DataStore's resource name. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an INVALID_ARGUMENT error is returned. */
          dataStoreId?: string;
          /** DataStore without CMEK protections. If a default CmekConfig is set for the project, setting this field will override the default CmekConfig as well. */
          disableCmek?: boolean;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** A boolean flag indicating whether to skip the default schema creation for the data store. Only enable this flag if you are certain that the default schema is incompatible with your use case. If set to true, you must manually create a schema for the data store before any documents can be ingested. This flag cannot be specified if `data_store.starting_schema` is specified. */
          skipDefaultSchemaCreation?: boolean;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaDataStore,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes a DataStore. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of DataStore, such as `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. If the caller does not have permission to delete the DataStore, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the DataStore to delete does not exist, a NOT_FOUND error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Gets a DataStore. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of DataStore, such as `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. If the caller does not have permission to access the DataStore, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the requested DataStore does not exist, a NOT_FOUND error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaDataStore>;
      /** Gets the SiteSearchEngine. */
      getSiteSearchEngine(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Resource name of SiteSearchEngine, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does not have permission to access the [SiteSearchEngine], regardless of whether or not it exists, a PERMISSION_DENIED error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaSiteSearchEngine>;
      /** Lists all the DataStores associated with the project. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Filter by solution type . For example: `filter = 'solution_type:SOLUTION_TYPE_SEARCH'` */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Maximum number of DataStores to return. If unspecified, defaults to 10. The maximum allowed value is 50. Values above 50 will be coerced to 50. If this field is negative, an INVALID_ARGUMENT is returned. */
        pageSize?: number;
        /** A page token ListDataStoresResponse.next_page_token, received from a previous DataStoreService.ListDataStores call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to DataStoreService.ListDataStores must match the call that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned. */
        pageToken?: string;
        /** Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller does not have permission to list DataStores under this location, regardless of whether or not this data store exists, a PERMISSION_DENIED error is returned. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListDataStoresResponse>;
      /** Updates a DataStore */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Immutable. The full resource name of the data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Indicates which fields in the provided DataStore to update. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaDataStore;
      }): Request<GoogleCloudDiscoveryengineV1betaDataStore>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Immutable. The full resource name of the data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Indicates which fields in the provided DataStore to update. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaDataStore,
      ): Request<GoogleCloudDiscoveryengineV1betaDataStore>;
      branches: BranchesResource;
      completionConfig: CompletionConfigResource;
      completionSuggestions: CompletionSuggestionsResource;
      controls: ControlsResource;
      conversations: ConversationsResource;
      models: ModelsResource;
      operations: OperationsResource;
      schemas: SchemasResource;
      servingConfigs: ServingConfigsResource;
      sessions: SessionsResource;
      siteSearchEngine: SiteSearchEngineResource;
      suggestionDenyListEntries: SuggestionDenyListEntriesResource;
      userEvents: UserEventsResource;
    }
    interface OperationsResource {
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
    }
    interface EvaluationsResource {
      /** Creates a Evaluation. Upon creation, the evaluation will be automatically triggered and begin execution. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource name, such as `projects/{project}/locations/{location}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaEvaluation;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource name, such as `projects/{project}/locations/{location}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaEvaluation,
      ): Request<GoogleLongrunningOperation>;
      /** Gets a Evaluation. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of Evaluation, such as `projects/{project}/locations/{location}/evaluations/{evaluation}`. If the caller does not have permission to access the Evaluation, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the requested Evaluation does not exist, a NOT_FOUND error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaEvaluation>;
      /** Gets a list of Evaluations. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Maximum number of Evaluations to return. If unspecified, defaults to 100. The maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If this field is negative, an `INVALID_ARGUMENT` error is returned. */
        pageSize?: number;
        /** A page token ListEvaluationsResponse.next_page_token, received from a previous EvaluationService.ListEvaluations call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to EvaluationService.ListEvaluations must match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned. */
        pageToken?: string;
        /** Required. The parent location resource name, such as `projects/{project}/locations/{location}`. If the caller does not have permission to list Evaluations under this location, regardless of whether or not this location exists, a `PERMISSION_DENIED` error is returned. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListEvaluationsResponse>;
      /** Gets a list of results for a given a Evaluation. */
      listResults(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The evaluation resource name, such as `projects/{project}/locations/{location}/evaluations/{evaluation}`. If the caller does not have permission to list ListEvaluationResultsResponse.EvaluationResult under this evaluation, regardless of whether or not this evaluation set exists, a `PERMISSION_DENIED` error is returned. */
        evaluation: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Maximum number of ListEvaluationResultsResponse.EvaluationResult to return. If unspecified, defaults to 100. The maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If this field is negative, an `INVALID_ARGUMENT` error is returned. */
        pageSize?: number;
        /** A page token ListEvaluationResultsResponse.next_page_token, received from a previous EvaluationService.ListEvaluationResults call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to EvaluationService.ListEvaluationResults must match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListEvaluationResultsResponse>;
      operations: OperationsResource;
    }
    interface GroundingConfigsResource {
      /** Performs a grounding check. */
      check(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Required. The resource name of the grounding config, such as `projects/*‍/locations/global/groundingConfigs/default_grounding_config`. */
        groundingConfig: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaCheckGroundingRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaCheckGroundingResponse>;
      check(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Required. The resource name of the grounding config, such as `projects/*‍/locations/global/groundingConfigs/default_grounding_config`. */
          groundingConfig: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaCheckGroundingRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaCheckGroundingResponse>;
    }
    interface OperationsResource {
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface IdentityMappingStoresResource {
      /** Creates a new Identity Mapping Store. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Resource name of the CmekConfig to use for protecting this Identity Mapping Store. */
        cmekConfigName?: string;
        /** Identity Mapping Store without CMEK protections. If a default CmekConfig is set for the project, setting this field will override the default CmekConfig as well. */
        disableCmek?: boolean;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Required. The ID of the Identity Mapping Store to create. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 63 characters. */
        identityMappingStoreId?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent collection resource name, such as `projects/{project}/locations/{location}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaIdentityMappingStore;
      }): Request<GoogleCloudDiscoveryengineV1betaIdentityMappingStore>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Resource name of the CmekConfig to use for protecting this Identity Mapping Store. */
          cmekConfigName?: string;
          /** Identity Mapping Store without CMEK protections. If a default CmekConfig is set for the project, setting this field will override the default CmekConfig as well. */
          disableCmek?: boolean;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Required. The ID of the Identity Mapping Store to create. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 63 characters. */
          identityMappingStoreId?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent collection resource name, such as `projects/{project}/locations/{location}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaIdentityMappingStore,
      ): Request<GoogleCloudDiscoveryengineV1betaIdentityMappingStore>;
      /** Deletes the Identity Mapping Store. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the Identity Mapping Store to delete. Format: `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Gets the Identity Mapping Store. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the Identity Mapping Store to get. Format: `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaIdentityMappingStore>;
      /** Imports a list of Identity Mapping Entries to an Identity Mapping Store. */
      importIdentityMappings(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Required. The name of the Identity Mapping Store to import Identity Mapping Entries to. Format: `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}` */
        identityMappingStore: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaImportIdentityMappingsRequest;
      }): Request<GoogleLongrunningOperation>;
      importIdentityMappings(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Required. The name of the Identity Mapping Store to import Identity Mapping Entries to. Format: `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}` */
          identityMappingStore: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaImportIdentityMappingsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Lists all Identity Mapping Stores. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Maximum number of IdentityMappingStores to return. If unspecified, defaults to 100. The maximum allowed value is 1000. Values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** A page token, received from a previous `ListIdentityMappingStores` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListIdentityMappingStores` must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent of the Identity Mapping Stores to list. Format: `projects/{project}/locations/{location}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListIdentityMappingStoresResponse>;
      /** Lists Identity Mappings in an Identity Mapping Store. */
      listIdentityMappings(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Required. The name of the Identity Mapping Store to list Identity Mapping Entries in. Format: `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}` */
        identityMappingStore: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Maximum number of IdentityMappings to return. If unspecified, defaults to 2000. The maximum allowed value is 10000. Values above 10000 will be coerced to 10000. */
        pageSize?: number;
        /** A page token, received from a previous `ListIdentityMappings` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListIdentityMappings` must match the call that provided the page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListIdentityMappingsResponse>;
      /** Purges specified or all Identity Mapping Entries from an Identity Mapping Store. */
      purgeIdentityMappings(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Required. The name of the Identity Mapping Store to purge Identity Mapping Entries from. Format: `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}` */
        identityMappingStore: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaPurgeIdentityMappingsRequest;
      }): Request<GoogleLongrunningOperation>;
      purgeIdentityMappings(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Required. The name of the Identity Mapping Store to purge Identity Mapping Entries from. Format: `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}` */
          identityMappingStore: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaPurgeIdentityMappingsRequest,
      ): Request<GoogleLongrunningOperation>;
      operations: OperationsResource;
    }
    interface OperationsResource {
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface RankingConfigsResource {
      /** Ranks a list of text records based on the given input query. */
      rank(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The resource name of the rank service config, such as `projects/{project_num}/locations/{location}/rankingConfigs/default_ranking_config`. */
        rankingConfig: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaRankRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaRankResponse>;
      rank(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The resource name of the rank service config, such as `projects/{project_num}/locations/{location}/rankingConfigs/default_ranking_config`. */
          rankingConfig: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaRankRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaRankResponse>;
    }
    interface OperationsResource {
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
    }
    interface SampleQueriesResource {
      /** Creates a SampleQuery */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource name, such as `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The ID to use for the SampleQuery, which will become the final component of the SampleQuery.name. If the caller does not have permission to create the SampleQuery, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. This field must be unique among all SampleQuerys with the same parent. Otherwise, an `ALREADY_EXISTS` error is returned. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. */
        sampleQueryId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSampleQuery;
      }): Request<GoogleCloudDiscoveryengineV1betaSampleQuery>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource name, such as `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The ID to use for the SampleQuery, which will become the final component of the SampleQuery.name. If the caller does not have permission to create the SampleQuery, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. This field must be unique among all SampleQuerys with the same parent. Otherwise, an `ALREADY_EXISTS` error is returned. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. */
          sampleQueryId?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSampleQuery,
      ): Request<GoogleCloudDiscoveryengineV1betaSampleQuery>;
      /** Deletes a SampleQuery. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of SampleQuery, such as `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}/sampleQueries/{sample_query}`. If the caller does not have permission to delete the SampleQuery, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. If the SampleQuery to delete does not exist, a `NOT_FOUND` error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a SampleQuery. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of SampleQuery, such as `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}/sampleQueries/{sample_query}`. If the caller does not have permission to access the SampleQuery, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the requested SampleQuery does not exist, a NOT_FOUND error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaSampleQuery>;
      /** Bulk import of multiple SampleQuerys. Sample queries that already exist may be deleted. Note: It is possible for a subset of the SampleQuerys to be successfully imported. */
      import(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent sample query set resource name, such as `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`. If the caller does not have permission to list SampleQuerys under this sample query set, regardless of whether or not this sample query set exists, a `PERMISSION_DENIED` error is returned. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaImportSampleQueriesRequest;
      }): Request<GoogleLongrunningOperation>;
      import(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent sample query set resource name, such as `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`. If the caller does not have permission to list SampleQuerys under this sample query set, regardless of whether or not this sample query set exists, a `PERMISSION_DENIED` error is returned. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaImportSampleQueriesRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Gets a list of SampleQuerys. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Maximum number of SampleQuerys to return. If unspecified, defaults to 100. The maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If this field is negative, an `INVALID_ARGUMENT` error is returned. */
        pageSize?: number;
        /** A page token ListSampleQueriesResponse.next_page_token, received from a previous SampleQueryService.ListSampleQueries call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to SampleQueryService.ListSampleQueries must match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned. */
        pageToken?: string;
        /** Required. The parent sample query set resource name, such as `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`. If the caller does not have permission to list SampleQuerys under this sample query set, regardless of whether or not this sample query set exists, a `PERMISSION_DENIED` error is returned. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListSampleQueriesResponse>;
      /** Updates a SampleQuery. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The full resource name of the sample query, in the format of `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}/sampleQueries/{sample_query}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Indicates which fields in the provided imported 'simple query' to update. If not set, will by default update all fields. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSampleQuery;
      }): Request<GoogleCloudDiscoveryengineV1betaSampleQuery>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The full resource name of the sample query, in the format of `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}/sampleQueries/{sample_query}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Indicates which fields in the provided imported 'simple query' to update. If not set, will by default update all fields. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSampleQuery,
      ): Request<GoogleCloudDiscoveryengineV1betaSampleQuery>;
    }
    interface SampleQuerySetsResource {
      /** Creates a SampleQuerySet */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource name, such as `projects/{project}/locations/{location}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The ID to use for the SampleQuerySet, which will become the final component of the SampleQuerySet.name. If the caller does not have permission to create the SampleQuerySet, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. This field must be unique among all SampleQuerySets with the same parent. Otherwise, an `ALREADY_EXISTS` error is returned. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. */
        sampleQuerySetId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSampleQuerySet;
      }): Request<GoogleCloudDiscoveryengineV1betaSampleQuerySet>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource name, such as `projects/{project}/locations/{location}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The ID to use for the SampleQuerySet, which will become the final component of the SampleQuerySet.name. If the caller does not have permission to create the SampleQuerySet, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. This field must be unique among all SampleQuerySets with the same parent. Otherwise, an `ALREADY_EXISTS` error is returned. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. */
          sampleQuerySetId?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSampleQuerySet,
      ): Request<GoogleCloudDiscoveryengineV1betaSampleQuerySet>;
      /** Deletes a SampleQuerySet. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of SampleQuerySet, such as `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}`. If the caller does not have permission to delete the SampleQuerySet, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. If the SampleQuerySet to delete does not exist, a `NOT_FOUND` error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a SampleQuerySet. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of SampleQuerySet, such as `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}`. If the caller does not have permission to access the SampleQuerySet, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the requested SampleQuerySet does not exist, a NOT_FOUND error is returned. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaSampleQuerySet>;
      /** Gets a list of SampleQuerySets. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Maximum number of SampleQuerySets to return. If unspecified, defaults to 100. The maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If this field is negative, an `INVALID_ARGUMENT` error is returned. */
        pageSize?: number;
        /** A page token ListSampleQuerySetsResponse.next_page_token, received from a previous SampleQuerySetService.ListSampleQuerySets call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to SampleQuerySetService.ListSampleQuerySets must match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned. */
        pageToken?: string;
        /** Required. The parent location resource name, such as `projects/{project}/locations/{location}`. If the caller does not have permission to list SampleQuerySets under this location, regardless of whether or not this location exists, a `PERMISSION_DENIED` error is returned. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDiscoveryengineV1betaListSampleQuerySetsResponse>;
      /** Updates a SampleQuerySet. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The full resource name of the SampleQuerySet, in the format of `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Indicates which fields in the provided imported 'sample query set' to update. If not set, will by default update all fields. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaSampleQuerySet;
      }): Request<GoogleCloudDiscoveryengineV1betaSampleQuerySet>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The full resource name of the SampleQuerySet, in the format of `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Indicates which fields in the provided imported 'sample query set' to update. If not set, will by default update all fields. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaSampleQuerySet,
      ): Request<GoogleCloudDiscoveryengineV1betaSampleQuerySet>;
      operations: OperationsResource;
      sampleQueries: SampleQueriesResource;
    }
    interface UserEventsResource {
      /** Writes a single user event from the browser. This uses a GET request to due to browser restriction of POST-ing to a third-party domain. This method is used only by the Discovery Engine API JavaScript pixel and Google Tag Manager. Users should not call this method directly. */
      collect(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** The event timestamp in milliseconds. This prevents browser caching of otherwise identical get requests. The name is abbreviated to reduce the payload bytes. */
        ets?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource name. If the collect user event action is applied in DataStore level, the format is: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. If the collect user event action is applied in Location level, for example, the event with Document across multiple DataStore, the format is: `projects/{project}/locations/{location}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** The URL including cgi-parameters but excluding the hash fragment with a length limit of 5,000 characters. This is often more useful than the referer URL, because many browsers only send the domain for third-party requests. */
        uri?: string;
        /** Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters. */
        userEvent?: string;
      }): Request<GoogleApiHttpBody>;
      /** Bulk import of user events. Request processing might be synchronous. Events that already exist are skipped. Use this method for backfilling historical user events. Operation.response is of type ImportResponse. Note that it is possible for a subset of the items to be successfully inserted. Operation.metadata is of type ImportMetadata. */
      import(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. Parent DataStore resource name, of the form `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaImportUserEventsRequest;
      }): Request<GoogleLongrunningOperation>;
      import(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. Parent DataStore resource name, of the form `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaImportUserEventsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Writes a single user event. */
      write(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource name. If the write user event action is applied in DataStore level, the format is: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. If the write user event action is applied in Location level, for example, the event with Document across multiple DataStore, the format is: `projects/{project}/locations/{location}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** If set to true, the user event is written asynchronously after validation, and the API responds without waiting for the write. */
        writeAsync?: boolean;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaUserEvent;
      }): Request<GoogleCloudDiscoveryengineV1betaUserEvent>;
      write(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource name. If the write user event action is applied in DataStore level, the format is: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. If the write user event action is applied in Location level, for example, the event with Document across multiple DataStore, the format is: `projects/{project}/locations/{location}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
          /** If set to true, the user event is written asynchronously after validation, and the API responds without waiting for the write. */
          writeAsync?: boolean;
        },
        body: GoogleCloudDiscoveryengineV1betaUserEvent,
      ): Request<GoogleCloudDiscoveryengineV1betaUserEvent>;
    }
    interface LocationsResource {
      /** Generates grounded content. */
      generateGroundedContent(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Location resource. Format: `projects/{project}/locations/{location}`. */
        location: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequest;
      }): Request<GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponse>;
      generateGroundedContent(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. Location resource. Format: `projects/{project}/locations/{location}`. */
          location: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequest,
      ): Request<GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponse>;
      collections: CollectionsResource;
      dataStores: DataStoresResource;
      evaluations: EvaluationsResource;
      groundingConfigs: GroundingConfigsResource;
      identityMappingStores: IdentityMappingStoresResource;
      operations: OperationsResource;
      rankingConfigs: RankingConfigsResource;
      sampleQuerySets: SampleQuerySetsResource;
      userEvents: UserEventsResource;
    }
    interface OperationsResource {
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface ProjectsResource {
      /** Provisions the project resource. During the process, related systems will get prepared and initialized. Caller must read the [Terms for data use](https://cloud.google.com/retail/data-use-terms), and optionally specify in request to provide consent to that service terms. */
      provision(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Full resource name of a Project, such as `projects/{project_id_or_number}`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDiscoveryengineV1betaProvisionProjectRequest;
      }): Request<GoogleLongrunningOperation>;
      provision(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. Full resource name of a Project, such as `projects/{project_id_or_number}`. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDiscoveryengineV1betaProvisionProjectRequest,
      ): Request<GoogleLongrunningOperation>;
      locations: LocationsResource;
      operations: OperationsResource;
    }

    const projects: ProjectsResource;
  }
}
