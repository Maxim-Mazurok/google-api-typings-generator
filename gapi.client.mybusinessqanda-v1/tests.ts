/* This is stub file for gapi.client.mybusinessqanda-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20230720

gapi.load('client', async () => {
    /** now we can use gapi.client */

    await gapi.client.load('https://mybusinessqanda.googleapis.com/$discovery/rest?version=v1');
    /** now we can use gapi.client.mybusinessqanda */

    run();

    async function run() {
        /** Adds a question for the specified location. */
        await gapi.client.mybusinessqanda.locations.questions.create({
            parent: "Test string",
        }, {
            author: {
                displayName: "Test string",
                profilePhotoUri: "Test string",
                type: "Test string",
            },
            createTime: "Test string",
            name: "Test string",
            text: "Test string",
            topAnswers: [
                {
                    author: {
                        displayName: "Test string",
                        profilePhotoUri: "Test string",
                        type: "Test string",
                    },
                    createTime: "Test string",
                    name: "Test string",
                    text: "Test string",
                    updateTime: "Test string",
                    upvoteCount: 42,
                }
            ],
            totalAnswerCount: 42,
            updateTime: "Test string",
            upvoteCount: 42,
        });
        /** Deletes a specific question written by the current user. */
        await gapi.client.mybusinessqanda.locations.questions.delete({
            name: "Test string",
        });
        /** Returns the paginated list of questions and some of its answers for a specified location. This operation is only valid if the specified location is verified. */
        await gapi.client.mybusinessqanda.locations.questions.list({
            answersPerQuestion: 42,
            filter: "Test string",
            orderBy: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific question written by the current user. */
        await gapi.client.mybusinessqanda.locations.questions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            author: {
                displayName: "Test string",
                profilePhotoUri: "Test string",
                type: "Test string",
            },
            createTime: "Test string",
            name: "Test string",
            text: "Test string",
            topAnswers: [
                {
                    author: {
                        displayName: "Test string",
                        profilePhotoUri: "Test string",
                        type: "Test string",
                    },
                    createTime: "Test string",
                    name: "Test string",
                    text: "Test string",
                    updateTime: "Test string",
                    upvoteCount: 42,
                }
            ],
            totalAnswerCount: 42,
            updateTime: "Test string",
            upvoteCount: 42,
        });
        /** Deletes the answer written by the current user to a question. */
        await gapi.client.mybusinessqanda.locations.questions.answers.delete({
            name: "Test string",
        });
        /** Returns the paginated list of answers for a specified question. */
        await gapi.client.mybusinessqanda.locations.questions.answers.list({
            orderBy: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates an answer or updates the existing answer written by the user for the specified question. A user can only create one answer per question. */
        await gapi.client.mybusinessqanda.locations.questions.answers.upsert({
            parent: "Test string",
        }, {
            answer: {
                author: {
                    displayName: "Test string",
                    profilePhotoUri: "Test string",
                    type: "Test string",
                },
                createTime: "Test string",
                name: "Test string",
                text: "Test string",
                updateTime: "Test string",
                upvoteCount: 42,
            },
        });
    }
});
