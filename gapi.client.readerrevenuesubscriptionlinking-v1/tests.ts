/* This is stub file for gapi.client.readerrevenuesubscriptionlinking-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20240709

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://readerrevenuesubscriptionlinking.googleapis.com/$discovery/rest?version=v1'
  );
  /** now we can use gapi.client.readerrevenuesubscriptionlinking */

  void run();

  async function run() {
    /** Removes a publication reader, effectively severing the association with a Google user. If `force` is set to true, any entitlements for this reader will also be deleted. (Otherwise, the request will only work if the reader has no entitlements.) - If the reader does not exist, return NOT_FOUND. - Return FAILED_PRECONDITION if the force field is false (or unset) and entitlements are present. */
    await gapi.client.readerrevenuesubscriptionlinking.publications.readers.delete(
      {
        force: true,
        name: 'Test string',
      }
    );
    /** Gets a reader of a publication. Returns NOT_FOUND if the reader does not exist. */
    await gapi.client.readerrevenuesubscriptionlinking.publications.readers.get(
      {
        name: 'Test string',
      }
    );
    /** Gets the reader entitlements for a publication reader. - Returns PERMISSION_DENIED if the caller does not have access. - Returns NOT_FOUND if the reader does not exist. */
    await gapi.client.readerrevenuesubscriptionlinking.publications.readers.getEntitlements(
      {
        name: 'Test string',
      }
    );
    /** Updates the reader entitlements for a publication reader. The entire reader entitlements will be overwritten by the new reader entitlements in the payload, like a PUT. - Returns PERMISSION_DENIED if the caller does not have access. - Returns NOT_FOUND if the reader does not exist. */
    await gapi.client.readerrevenuesubscriptionlinking.publications.readers.updateEntitlements(
      {
        name: 'Test string',
        updateMask: 'Test string',
      },
      {
        entitlements: [
          {
            detail: 'Test string',
            expireTime: 'Test string',
            productId: 'Test string',
            subscriptionToken: 'Test string',
          },
        ],
        name: 'Test string',
      }
    );
  }
});
