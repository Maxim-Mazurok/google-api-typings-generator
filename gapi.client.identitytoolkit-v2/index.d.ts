/* Type definitions for non-npm package Identity Toolkit API v2 0.0 */
// Project: https://cloud.google.com/identity-platform
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://identitytoolkit.googleapis.com/$discovery/rest?version=v2
// Revision: 20250910

/// <reference types="gapi.client" />

declare namespace gapi.client {
  /** Load Identity Toolkit API v2 */
  function load(
    urlOrObject: 'https://identitytoolkit.googleapis.com/$discovery/rest?version=v2',
  ): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(name: 'identitytoolkit', version: 'v2'): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(
    name: 'identitytoolkit',
    version: 'v2',
    callback: () => any,
  ): void;

  namespace identitytoolkit {
    interface GoogleCloudIdentitytoolkitAdminV2AllowByDefault {
      /** Two letter unicode region codes to disallow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json */
      disallowedRegions?: string[];
    }
    interface GoogleCloudIdentitytoolkitAdminV2AllowlistOnly {
      /** Two letter unicode region codes to allow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json */
      allowedRegions?: string[];
    }
    interface GoogleCloudIdentitytoolkitAdminV2Anonymous {
      /** Whether anonymous user auth is enabled for the project or not. */
      enabled?: boolean;
    }
    interface GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig {
      /** A list of Bundle ID's usable by this project */
      bundleIds?: string[];
      /** Additional config for Apple for code flow. */
      codeFlowConfig?: GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig;
    }
    interface GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig {
      /** The user credentials to include in the JWT payload that is sent to the registered Blocking Functions. */
      forwardInboundCredentials?: GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials;
      /** Map of Trigger to event type. Key should be one of the supported event types: "beforeCreate", "beforeSignIn" */
      triggers?: {[P in string]: GoogleCloudIdentitytoolkitAdminV2Trigger};
    }
    interface GoogleCloudIdentitytoolkitAdminV2ClientConfig {
      /** Output only. API key that can be used when making requests for this project. */
      apiKey?: string;
      /** Output only. Firebase subdomain. */
      firebaseSubdomain?: string;
      /** Configuration related to restricting a user's ability to affect their account. */
      permissions?: GoogleCloudIdentitytoolkitAdminV2Permissions;
    }
    interface GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig {
      /** Configuration related to restricting a user's ability to affect their account. */
      permissions?: GoogleCloudIdentitytoolkitAdminV2ClientPermissions;
    }
    interface GoogleCloudIdentitytoolkitAdminV2ClientPermissions {
      /** When true, end users cannot delete their account on the associated project through any of our API methods */
      disabledUserDeletion?: boolean;
      /** When true, end users cannot sign up for a new account on the associated project through any of our API methods */
      disabledUserSignup?: boolean;
    }
    interface GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig {
      /** Key ID for the private key. */
      keyId?: string;
      /** Private key used for signing the client secret JWT. */
      privateKey?: string;
      /** Apple Developer Team ID. */
      teamId?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2Config {
      /** List of domains authorized for OAuth redirects */
      authorizedDomains?: string[];
      /** Whether anonymous users will be auto-deleted after a period of 30 days. */
      autodeleteAnonymousUsers?: boolean;
      /** Configuration related to blocking functions. */
      blockingFunctions?: GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig;
      /** Options related to how clients making requests on behalf of a project should be configured. */
      client?: GoogleCloudIdentitytoolkitAdminV2ClientConfig;
      /** Output only. Default Firebase hosting site name */
      defaultHostingSite?: string;
      /** Configuration for settings related to email privacy and public visibility. */
      emailPrivacyConfig?: GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig;
      /** Configuration for this project's multi-factor authentication, including whether it is active and what factors can be used for the second factor */
      mfa?: GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig;
      /** Configuration for settings related to univeral links (iOS) and app links (Android). */
      mobileLinksConfig?: GoogleCloudIdentitytoolkitAdminV2MobileLinksConfig;
      /** Configuration related to monitoring project activity. */
      monitoring?: GoogleCloudIdentitytoolkitAdminV2MonitoringConfig;
      /** Configuration related to multi-tenant functionality. */
      multiTenant?: GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig;
      /** Output only. The name of the Config resource. Example: "projects/my-awesome-project/config" */
      name?: string;
      /** Configuration related to sending notifications to users. */
      notification?: GoogleCloudIdentitytoolkitAdminV2NotificationConfig;
      /** The project level password policy configuration. */
      passwordPolicyConfig?: GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig;
      /** Configuration related to quotas. */
      quota?: GoogleCloudIdentitytoolkitAdminV2QuotaConfig;
      /** The project-level reCAPTCHA config. */
      recaptchaConfig?: GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig;
      /** Configuration related to local sign in methods. */
      signIn?: GoogleCloudIdentitytoolkitAdminV2SignInConfig;
      /** Configures which regions are enabled for SMS verification code sending. */
      smsRegionConfig?: GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig;
      /** Output only. The subtype of this config. */
      subtype?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions {
      /** The password must contain a lower case character. */
      containsLowercaseCharacter?: boolean;
      /** The password must contain a non alpha numeric character. */
      containsNonAlphanumericCharacter?: boolean;
      /** The password must contain a number. */
      containsNumericCharacter?: boolean;
      /** The password must contain an upper case character. */
      containsUppercaseCharacter?: boolean;
      /** Maximum password length. No default max length */
      maxPasswordLength?: number;
      /** Minimum password length. Range from 6 to 30 */
      minPasswordLength?: number;
    }
    interface GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp {
      /** Description of the Idp */
      description?: string;
      /** Id the of Idp */
      idpId?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig {
      /** Additional config for Apple-based projects. */
      appleSignInConfig?: GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig;
      /** OAuth client ID. */
      clientId?: string;
      /** OAuth client secret. */
      clientSecret?: string;
      /** True if allows the user to sign in with the provider. */
      enabled?: boolean;
      /** The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-project/defaultSupportedIdpConfigs/google.com" */
      name?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2DnsInfo {
      /** Output only. The applied verified custom domain. */
      customDomain?: string;
      /** Output only. The current verification state of the custom domain. The custom domain will only be used once the domain verification is successful. */
      customDomainState?: string;
      /** Output only. The timestamp of initial request for the current domain verification. */
      domainVerificationRequestTime?: string;
      /** Output only. The custom domain that's to be verified. */
      pendingCustomDomain?: string;
      /** Whether to use custom domain. */
      useCustomDomain?: boolean;
    }
    interface GoogleCloudIdentitytoolkitAdminV2Email {
      /** Whether email auth is enabled for the project or not. */
      enabled?: boolean;
      /** Whether a password is required for email auth or not. If true, both an email and password must be provided to sign in. If false, a user may sign in via either email/password or email link. */
      passwordRequired?: boolean;
    }
    interface GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig {
      /** Migrates the project to a state of improved email privacy. For example certain error codes are more generic to avoid giving away information on whether the account exists. In addition, this disables certain features that as a side-effect allow user enumeration. Enabling this toggle disables the fetchSignInMethodsForEmail functionality and changing the user's email to an unverified email. It is recommended to remove dependence on this functionality and enable this toggle to improve user privacy. */
      enableImprovedEmailPrivacy?: boolean;
    }
    interface GoogleCloudIdentitytoolkitAdminV2EmailTemplate {
      /** Email body */
      body?: string;
      /** Email body format */
      bodyFormat?: string;
      /** Output only. Whether the body or subject of the email is customized. */
      customized?: boolean;
      /** Reply-to address */
      replyTo?: string;
      /** Sender display name */
      senderDisplayName?: string;
      /** Local part of From address */
      senderLocalPart?: string;
      /** Subject of the email */
      subject?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials {
      /** Whether to pass the user's OAuth identity provider's access token. */
      accessToken?: boolean;
      /** Whether to pass the user's OIDC identity provider's ID token. */
      idToken?: boolean;
      /** Whether to pass the user's OAuth identity provider's refresh token. */
      refreshToken?: boolean;
    }
    interface GoogleCloudIdentitytoolkitAdminV2HashConfig {
      /** Output only. Different password hash algorithms used in Identity Toolkit. */
      algorithm?: string;
      /** Output only. Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field. */
      memoryCost?: number;
      /** Output only. How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms. */
      rounds?: number;
      /** Output only. Non-printable character to be inserted between the salt and plain text password in base64. */
      saltSeparator?: string;
      /** Output only. Signer key in base64. */
      signerKey?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2IdpCertificate {
      /** The x509 certificate */
      x509Certificate?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2IdpConfig {
      /** IDP's public keys for verifying signature in the assertions. */
      idpCertificates?: GoogleCloudIdentitytoolkitAdminV2IdpCertificate[];
      /** Unique identifier for all SAML entities. */
      idpEntityId?: string;
      /** Indicates if outbounding SAMLRequest should be signed. */
      signRequest?: boolean;
      /** URL to send Authentication request to. */
      ssoUrl?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig {
      /** The config's display name set by developers. */
      displayName?: string;
      /** True if allows the user to sign in with the provider. */
      enabled?: boolean;
      /** The SAML IdP (Identity Provider) configuration when the project acts as the relying party. */
      idpConfig?: GoogleCloudIdentitytoolkitAdminV2IdpConfig;
      /** The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests. */
      name?: string;
      /** The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider. */
      spConfig?: GoogleCloudIdentitytoolkitAdminV2SpConfig;
    }
    interface GoogleCloudIdentitytoolkitAdminV2Inheritance {
      /** Whether to allow the tenant to inherit custom domains, email templates, and custom SMTP settings. If true, email sent from tenant will follow the project level email sending configurations. If false (by default), emails will go with the default settings with no customizations. */
      emailSendingConfig?: boolean;
    }
    interface GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformRequest {}
    interface GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformResponse {}
    interface GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse {
      /** The set of configs. */
      defaultSupportedIdpConfigs?: GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig[];
      /** Token to retrieve the next page of results, or empty if there are no more results in the list. */
      nextPageToken?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse {
      /** The set of configs. */
      defaultSupportedIdps?: GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp[];
      /** Token to retrieve the next page of results, or empty if there are no more results in the list. */
      nextPageToken?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse {
      /** The set of configs. */
      inboundSamlConfigs?: GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig[];
      /** Token to retrieve the next page of results, or empty if there are no more results in the list. */
      nextPageToken?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse {
      /** Token to retrieve the next page of results, or empty if there are no more results in the list. */
      nextPageToken?: string;
      /** The set of configs. */
      oauthIdpConfigs?: GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig[];
    }
    interface GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse {
      /** The token to get the next page of results. */
      nextPageToken?: string;
      /** A list of tenants under the given agent project. */
      tenants?: GoogleCloudIdentitytoolkitAdminV2Tenant[];
    }
    interface GoogleCloudIdentitytoolkitAdminV2MobileLinksConfig {
      /** Open code in app domain to use for app links and universal links. */
      domain?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2MonitoringConfig {
      /** Configuration for logging requests made to this project to Stackdriver Logging */
      requestLogging?: GoogleCloudIdentitytoolkitAdminV2RequestLogging;
    }
    interface GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig {
      /** A list of usable second factors for this project. */
      enabledProviders?: string[];
      /** A list of usable second factors for this project along with their configurations. This field does not support phone based MFA, for that use the 'enabled_providers' field. */
      providerConfigs?: GoogleCloudIdentitytoolkitAdminV2ProviderConfig[];
      /** Whether MultiFactor Authentication has been enabled for this project. */
      state?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig {
      /** Whether this project can have tenants or not. */
      allowTenants?: boolean;
      /** The default cloud parent org or folder that the tenant project should be created under. The parent resource name should be in the format of "/", such as "folders/123" or "organizations/456". If the value is not set, the tenant will be created under the same organization or folder as the agent project. */
      defaultTenantLocation?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2NotificationConfig {
      /** Default locale used for email and SMS in IETF BCP 47 format. */
      defaultLocale?: string;
      /** Options for email sending. */
      sendEmail?: GoogleCloudIdentitytoolkitAdminV2SendEmail;
      /** Options for SMS sending. */
      sendSms?: GoogleCloudIdentitytoolkitAdminV2SendSms;
    }
    interface GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig {
      /** The client id of an OAuth client. */
      clientId?: string;
      /** The client secret of the OAuth client, to enable OIDC code flow. */
      clientSecret?: string;
      /** The config's display name set by developers. */
      displayName?: string;
      /** True if allows the user to sign in with the provider. */
      enabled?: boolean;
      /** For OIDC Idps, the issuer identifier. */
      issuer?: string;
      /** The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests. */
      name?: string;
      /** The response type to request for in the OAuth authorization flow. You can set either `id_token` or `code` to true, but not both. Setting both types to be simultaneously true (`{code: true, id_token: true}`) is not yet supported. */
      responseType?: GoogleCloudIdentitytoolkitAdminV2OAuthResponseType;
    }
    interface GoogleCloudIdentitytoolkitAdminV2OAuthResponseType {
      /** If true, authorization code is returned from IdP's authorization endpoint. */
      code?: boolean;
      /** If true, ID token is returned from IdP's authorization endpoint. */
      idToken?: boolean;
      /** Do not use. The `token` response type is not supported at the moment. */
      token?: boolean;
    }
    interface GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig {
      /** Users must have a password compliant with the password policy to sign-in. */
      forceUpgradeOnSignin?: boolean;
      /** Output only. The last time the password policy on the project was updated. */
      lastUpdateTime?: string;
      /** Which enforcement mode to use for the password policy. */
      passwordPolicyEnforcementState?: string;
      /** Must be of length 1. Contains the strength attributes for the password policy. */
      passwordPolicyVersions?: GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion[];
    }
    interface GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion {
      /** The custom strength options enforced by the password policy. */
      customStrengthOptions?: GoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions;
      /** Output only. schema version number for the password policy */
      schemaVersion?: number;
    }
    interface GoogleCloudIdentitytoolkitAdminV2Permissions {
      /** When true, end users cannot delete their account on the associated project through any of our API methods */
      disabledUserDeletion?: boolean;
      /** When true, end users cannot sign up for a new account on the associated project through any of our API methods */
      disabledUserSignup?: boolean;
    }
    interface GoogleCloudIdentitytoolkitAdminV2PhoneNumber {
      /** Whether phone number auth is enabled for the project or not. */
      enabled?: boolean;
      /** A map of that can be used for phone auth testing. */
      testPhoneNumbers?: {[P in string]: string};
    }
    interface GoogleCloudIdentitytoolkitAdminV2ProviderConfig {
      /** Describes the state of the MultiFactor Authentication type. */
      state?: string;
      /** TOTP MFA provider config for this project. */
      totpProviderConfig?: GoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig;
    }
    interface GoogleCloudIdentitytoolkitAdminV2QuotaConfig {
      /** Quota for the Signup endpoint, if overwritten. Signup quota is measured in sign ups per project per hour per IP. */
      signUpQuotaConfig?: GoogleCloudIdentitytoolkitAdminV2TemporaryQuota;
    }
    interface GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig {
      /** The reCAPTCHA config for email/password provider, containing the enforcement status. The email/password provider contains all email related user flows protected by reCAPTCHA. */
      emailPasswordEnforcementState?: string;
      /** The managed rules for authentication action based on reCAPTCHA scores. The rules are shared across providers for a given tenant project. */
      managedRules?: GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRule[];
      /** The reCAPTCHA config for phone provider, containing the enforcement status. The phone provider contains all SMS related user flows protected by reCAPTCHA. */
      phoneEnforcementState?: string;
      /** The reCAPTCHA keys. */
      recaptchaKeys?: GoogleCloudIdentitytoolkitAdminV2RecaptchaKey[];
      /** The managed rules for the authentication action based on reCAPTCHA toll fraud risk scores. Toll fraud managed rules will only take effect when the phone_enforcement_state is AUDIT or ENFORCE and use_sms_toll_fraud_protection is true. */
      tollFraudManagedRules?: GoogleCloudIdentitytoolkitAdminV2RecaptchaTollFraudManagedRule[];
      /** Whether to use the account defender for reCAPTCHA assessment. Defaults to `false`. */
      useAccountDefender?: boolean;
      /** Whether to use the rCE bot score for reCAPTCHA phone provider. Can only be true when the phone_enforcement_state is AUDIT or ENFORCE. */
      useSmsBotScore?: boolean;
      /** Whether to use the rCE sms toll fraud protection risk score for reCAPTCHA phone provider. Can only be true when the phone_enforcement_state is AUDIT or ENFORCE. */
      useSmsTollFraudProtection?: boolean;
    }
    interface GoogleCloudIdentitytoolkitAdminV2RecaptchaKey {
      /** The reCAPTCHA Enterprise key resource name, e.g. "projects/{project}/keys/{key}" */
      key?: string;
      /** The client's platform type. */
      type?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRule {
      /** The action taken if the reCAPTCHA score of a request is within the interval [start_score, end_score]. */
      action?: string;
      /** The end score (inclusive) of the score range for an action. Must be a value between 0.0 and 1.0, at 11 discrete values; e.g. 0, 0.1, 0.2, 0.3, ... 0.9, 1.0. A score of 0.0 indicates the riskiest request (likely a bot), whereas 1.0 indicates the safest request (likely a human). See https://cloud.google.com/recaptcha-enterprise/docs/interpret-assessment. */
      endScore?: number;
    }
    interface GoogleCloudIdentitytoolkitAdminV2RecaptchaTollFraudManagedRule {
      /** The action taken if the reCAPTCHA score of a request is within the interval [start_score, end_score]. */
      action?: string;
      /** The start score (inclusive) for an action. Must be a value between 0.0 and 1.0, at 11 discrete values; e.g. 0, 0.1, 0.2, 0.3, ... 0.9, 1.0. A score of 0.0 indicates the safest request (likely legitimate), whereas 1.0 indicates the riskiest request (likely toll fraud). See https://cloud.google.com/recaptcha-enterprise/docs/sms-fraud-detection#create-assessment-sms. */
      startScore?: number;
    }
    interface GoogleCloudIdentitytoolkitAdminV2RequestLogging {
      /** Whether logging is enabled for this project or not. */
      enabled?: boolean;
    }
    interface GoogleCloudIdentitytoolkitAdminV2SendEmail {
      /** action url in email template. */
      callbackUri?: string;
      /** Email template for change email */
      changeEmailTemplate?: GoogleCloudIdentitytoolkitAdminV2EmailTemplate;
      /** Information of custom domain DNS verification. */
      dnsInfo?: GoogleCloudIdentitytoolkitAdminV2DnsInfo;
      /** Reset password email template for legacy Firebase V1 app. */
      legacyResetPasswordTemplate?: GoogleCloudIdentitytoolkitAdminV2EmailTemplate;
      /** The method used for sending an email. */
      method?: string;
      /** Email template for reset password */
      resetPasswordTemplate?: GoogleCloudIdentitytoolkitAdminV2EmailTemplate;
      /** Email template for reverting second factor addition emails */
      revertSecondFactorAdditionTemplate?: GoogleCloudIdentitytoolkitAdminV2EmailTemplate;
      /** Use a custom SMTP relay */
      smtp?: GoogleCloudIdentitytoolkitAdminV2Smtp;
      /** Email template for verify email */
      verifyEmailTemplate?: GoogleCloudIdentitytoolkitAdminV2EmailTemplate;
    }
    interface GoogleCloudIdentitytoolkitAdminV2SendSms {
      /** Output only. The template to use when sending an SMS. */
      smsTemplate?: GoogleCloudIdentitytoolkitAdminV2SmsTemplate;
      /** Whether to use the accept_language header for SMS. */
      useDeviceLocale?: boolean;
    }
    interface GoogleCloudIdentitytoolkitAdminV2SignInConfig {
      /** Whether to allow more than one account to have the same email. */
      allowDuplicateEmails?: boolean;
      /** Configuration options related to authenticating an anonymous user. */
      anonymous?: GoogleCloudIdentitytoolkitAdminV2Anonymous;
      /** Configuration options related to authenticating a user by their email address. */
      email?: GoogleCloudIdentitytoolkitAdminV2Email;
      /** Output only. Hash config information. */
      hashConfig?: GoogleCloudIdentitytoolkitAdminV2HashConfig;
      /** Configuration options related to authenticated a user by their phone number. */
      phoneNumber?: GoogleCloudIdentitytoolkitAdminV2PhoneNumber;
    }
    interface GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig {
      /** A policy of allowing SMS to every region by default and adding disallowed regions to a disallow list. */
      allowByDefault?: GoogleCloudIdentitytoolkitAdminV2AllowByDefault;
      /** A policy of only allowing regions by explicitly adding them to an allowlist. */
      allowlistOnly?: GoogleCloudIdentitytoolkitAdminV2AllowlistOnly;
    }
    interface GoogleCloudIdentitytoolkitAdminV2SmsTemplate {
      /** Output only. The SMS's content. Can contain the following placeholders which will be replaced with the appropriate values: %APP_NAME% - For Android or iOS apps, the app's display name. For web apps, the domain hosting the application. %LOGIN_CODE% - The OOB code being sent in the SMS. */
      content?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2Smtp {
      /** SMTP relay host */
      host?: string;
      /** SMTP relay password */
      password?: string;
      /** SMTP relay port */
      port?: number;
      /** SMTP security mode. */
      securityMode?: string;
      /** Sender email for the SMTP relay */
      senderEmail?: string;
      /** SMTP relay username */
      username?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2SpCertificate {
      /** Timestamp of the cert expiration instance. */
      expiresAt?: string;
      /** Self-signed public certificate. */
      x509Certificate?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2SpConfig {
      /** Callback URI where responses from IDP are handled. */
      callbackUri?: string;
      /** Output only. Public certificates generated by the server to verify the signature in SAMLRequest in the SP-initiated flow. */
      spCertificates?: GoogleCloudIdentitytoolkitAdminV2SpCertificate[];
      /** Unique identifier for all SAML entities. */
      spEntityId?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2TemporaryQuota {
      /** Corresponds to the 'refill_token_count' field in QuotaServer config */
      quota?: string;
      /** How long this quota will be active for */
      quotaDuration?: string;
      /** When this quota will take effect */
      startTime?: string;
    }
    interface GoogleCloudIdentitytoolkitAdminV2Tenant {
      /** Whether to allow email/password user authentication. */
      allowPasswordSignup?: boolean;
      /** Whether anonymous users will be auto-deleted after a period of 30 days. */
      autodeleteAnonymousUsers?: boolean;
      /** Options related to how clients making requests on behalf of a project should be configured. */
      client?: GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig;
      /** Whether authentication is disabled for the tenant. If true, the users under the disabled tenant are not allowed to sign-in. Admins of the disabled tenant are not able to manage its users. */
      disableAuth?: boolean;
      /** Display name of the tenant. */
      displayName?: string;
      /** Configuration for settings related to email privacy and public visibility. */
      emailPrivacyConfig?: GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig;
      /** Whether to enable anonymous user authentication. */
      enableAnonymousUser?: boolean;
      /** Whether to enable email link user authentication. */
      enableEmailLinkSignin?: boolean;
      /** Output only. Hash config information of a tenant for display on Pantheon. This can only be displayed on Pantheon to avoid the sensitive information to get accidentally leaked. Only returned in GetTenant response to restrict reading of this information. Requires firebaseauth.configs.getHashConfig permission on the agent project for returning this field. */
      hashConfig?: GoogleCloudIdentitytoolkitAdminV2HashConfig;
      /** Specify the settings that the tenant could inherit. */
      inheritance?: GoogleCloudIdentitytoolkitAdminV2Inheritance;
      /** The tenant-level configuration of MFA options. */
      mfaConfig?: GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig;
      /** Optional. Deprecated. Never launched. Configuration for settings related to univeral links (iOS) and app links (Android). */
      mobileLinksConfig?: GoogleCloudIdentitytoolkitAdminV2MobileLinksConfig;
      /** Configuration related to monitoring project activity. */
      monitoring?: GoogleCloudIdentitytoolkitAdminV2MonitoringConfig;
      /** Output only. Resource name of a tenant. For example: "projects/{project-id}/tenants/{tenant-id}" */
      name?: string;
      /** The tenant-level password policy config */
      passwordPolicyConfig?: GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig;
      /** The tenant-level reCAPTCHA config. */
      recaptchaConfig?: GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig;
      /** Configures which regions are enabled for SMS verification code sending. */
      smsRegionConfig?: GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig;
      /** A map of pairs that can be used for MFA. The phone number should be in E.164 format (https://www.itu.int/rec/T-REC-E.164/) and a maximum of 10 pairs can be added (error will be thrown once exceeded). */
      testPhoneNumbers?: {[P in string]: string};
    }
    interface GoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig {
      /** The allowed number of adjacent intervals that will be used for verification to avoid clock skew. */
      adjacentIntervals?: number;
    }
    interface GoogleCloudIdentitytoolkitAdminV2Trigger {
      /** HTTP URI trigger for the Cloud Function. */
      functionUri?: string;
      /** When the trigger was changed. */
      updateTime?: string;
    }
    interface GoogleCloudIdentitytoolkitV2AutoRetrievalInfo {
      /** The Android app's signature hash for Google Play Service's SMS Retriever API. */
      appSignatureHash?: string;
    }
    interface GoogleCloudIdentitytoolkitV2CustomStrengthOptions {
      /** The password must contain a lower case character. */
      containsLowercaseCharacter?: boolean;
      /** The password must contain a non alpha numeric character. */
      containsNonAlphanumericCharacter?: boolean;
      /** The password must contain a number. */
      containsNumericCharacter?: boolean;
      /** The password must contain an upper case character. */
      containsUppercaseCharacter?: boolean;
      /** Maximum password length. No default max length */
      maxPasswordLength?: number;
      /** Minimum password length. Range from 6 to 30 */
      minPasswordLength?: number;
    }
    interface GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest {
      /** Display name which is entered by users to distinguish between different second factors with same type or different type. */
      displayName?: string;
      /** Required. ID token. */
      idToken?: string;
      /** Verification info to authorize sending an SMS for phone verification. */
      phoneVerificationInfo?: GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo;
      /** The ID of the Identity Platform tenant that the user enrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project. */
      tenantId?: string;
      /** Verification information for TOTP. */
      totpVerificationInfo?: GoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo;
    }
    interface GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse {
      /** ID token updated to reflect MFA enrollment. */
      idToken?: string;
      /** Auxiliary auth info specific to phone auth. */
      phoneAuthInfo?: GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo;
      /** Refresh token updated to reflect MFA enrollment. */
      refreshToken?: string;
      /** Auxiliary auth info specific to TOTP auth. */
      totpAuthInfo?: any;
    }
    interface GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo {
      /** Android only. Uses for "instant" phone number verification though GmsCore. */
      androidVerificationProof?: string;
      /** User-entered verification code. */
      code?: string;
      /** Required if Android verification proof is presented. */
      phoneNumber?: string;
      /** An opaque string that represents the enrollment session. */
      sessionInfo?: string;
    }
    interface GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo {
      /** Android only. Long-lived replacement for valid code tied to android device. */
      androidVerificationProof?: string;
      /** Android only. Expiration time of verification proof in seconds. */
      androidVerificationProofExpireTime?: string;
      /** For Android verification proof. */
      phoneNumber?: string;
    }
    interface GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest {
      /** The MFA enrollment ID from the user's list of current MFA enrollments. */
      mfaEnrollmentId?: string;
      /** Required. Pending credential from first factor sign-in. */
      mfaPendingCredential?: string;
      /** Proof of completion of the SMS based MFA challenge. */
      phoneVerificationInfo?: GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo;
      /** The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project. */
      tenantId?: string;
      /** Proof of completion of the TOTP based MFA challenge. */
      totpVerificationInfo?: GoogleCloudIdentitytoolkitV2MfaTotpSignInRequestInfo;
    }
    interface GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse {
      /** ID token for the authenticated user. */
      idToken?: string;
      /** Extra phone auth info, including android verification proof. */
      phoneAuthInfo?: GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo;
      /** Refresh token for the authenticated user. */
      refreshToken?: string;
    }
    interface GoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo {
      /** An opaque string that represents the enrollment session. */
      sessionInfo?: string;
      /** User-entered verification code. */
      verificationCode?: string;
    }
    interface GoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentResponseInfo {}
    interface GoogleCloudIdentitytoolkitV2MfaTotpSignInRequestInfo {
      /** User-entered verification code. */
      verificationCode?: string;
    }
    interface GoogleCloudIdentitytoolkitV2PasswordPolicy {
      /** Output only. Allowed characters which satisfy the non_alphanumeric requirement. */
      allowedNonAlphanumericCharacters?: string[];
      /** The custom strength options enforced by the password policy. */
      customStrengthOptions?: GoogleCloudIdentitytoolkitV2CustomStrengthOptions;
      /** Output only. Which enforcement mode to use for the password policy. */
      enforcementState?: string;
      /** Users must have a password compliant with the password policy to sign-in. */
      forceUpgradeOnSignin?: boolean;
      /** Output only. schema version number for the password policy */
      schemaVersion?: number;
    }
    interface GoogleCloudIdentitytoolkitV2RecaptchaConfig {
      /** The reCAPTCHA enforcement state for the providers that GCIP supports reCAPTCHA protection. */
      recaptchaEnforcementState?: GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState[];
      /** The reCAPTCHA Enterprise key resource name, e.g. "projects/{project}/keys/{key}". This will only be returned when the reCAPTCHA enforcement state is AUDIT or ENFORCE on at least one of the reCAPTCHA providers. */
      recaptchaKey?: string;
      /** Whether to use the rCE bot score for reCAPTCHA phone provider. */
      useSmsBotScore?: boolean;
      /** Whether to use the rCE sms toll fraud protection risk score for reCAPTCHA phone provider. */
      useSmsTollFraudProtection?: boolean;
    }
    interface GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState {
      /** The reCAPTCHA enforcement state for the provider. */
      enforcementState?: string;
      /** The provider that has reCAPTCHA protection. */
      provider?: string;
    }
    interface GoogleCloudIdentitytoolkitV2RevokeTokenRequest {
      /** Required. A valid Identity Platform ID token to link the account. If there was a successful token revocation request on the account and no tokens are generated after the revocation, the duplicate requests will be ignored and returned immediately. */
      idToken?: string;
      /** Required. The idp provider for the token. Currently only supports Apple Idp. The format should be "apple.com". */
      providerId?: string;
      /** The redirect URI provided in the initial authorization request made by the client to the IDP. The URI must use the HTTPS protocol, include a domain name, and can't contain an IP address or localhost. Required if token_type is CODE. */
      redirectUri?: string;
      /** The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project. */
      tenantId?: string;
      /** Required. The token to be revoked. If an authorization_code is passed in, the API will first exchange the code for access token and then revoke the token exchanged. */
      token?: string;
      /** Required. The type of the token to be revoked. */
      tokenType?: string;
    }
    interface GoogleCloudIdentitytoolkitV2RevokeTokenResponse {}
    interface GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest {
      /** Required. User's ID token. */
      idToken?: string;
      /** Verification info to authorize sending an SMS for phone verification. */
      phoneEnrollmentInfo?: GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo;
      /** The ID of the Identity Platform tenant that the user enrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project. */
      tenantId?: string;
      /** Sign-in info specific to TOTP auth. */
      totpEnrollmentInfo?: any;
    }
    interface GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse {
      /** Verification info to authorize sending an SMS for phone verification. */
      phoneSessionInfo?: GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo;
      /** Enrollment response info specific to TOTP auth. */
      totpSessionInfo?: GoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo;
    }
    interface GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo {
      /** Android only. Used by Google Play Services to identify the app for auto-retrieval. */
      autoRetrievalInfo?: GoogleCloudIdentitytoolkitV2AutoRetrievalInfo;
      /** The reCAPTCHA Enterprise token provided by the reCAPTCHA client-side integration. Required when reCAPTCHA enterprise is enabled. */
      captchaResponse?: string;
      /** The client type, web, android or ios. Required when reCAPTCHA Enterprise is enabled. */
      clientType?: string;
      /** iOS only. Receipt of successful app token validation with APNS. */
      iosReceipt?: string;
      /** iOS only. Secret delivered to iOS app via APNS. */
      iosSecret?: string;
      /** Required for enrollment. Phone number to be enrolled as MFA. */
      phoneNumber?: string;
      /** Android only. Used to assert application identity in place of a recaptcha token (or safety net token). A Play Integrity Token can be generated via the [PlayIntegrity API] (https://developer.android.com/google/play/integrity) with applying SHA256 to the `phone_number` field as the nonce. */
      playIntegrityToken?: string;
      /** Web only. Recaptcha solution. */
      recaptchaToken?: string;
      /** The reCAPTCHA version of the reCAPTCHA token in the captcha_response. Required when reCAPTCHA Enterprise is enabled. */
      recaptchaVersion?: string;
      /** Android only. Used to assert application identity in place of a recaptcha token. A SafetyNet Token can be generated via the [SafetyNet Android Attestation API](https://developer.android.com/training/safetynet/attestation.html), with the Base64 encoding of the `phone_number` field as the nonce. */
      safetyNetToken?: string;
    }
    interface GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo {
      /** An opaque string that represents the enrollment session. */
      sessionInfo?: string;
    }
    interface GoogleCloudIdentitytoolkitV2StartMfaSignInRequest {
      /** Required. MFA enrollment id from the user's list of current MFA enrollments. */
      mfaEnrollmentId?: string;
      /** Required. Pending credential from first factor sign-in. */
      mfaPendingCredential?: string;
      /** Verification info to authorize sending an SMS for phone verification. */
      phoneSignInInfo?: GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo;
      /** The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project. */
      tenantId?: string;
    }
    interface GoogleCloudIdentitytoolkitV2StartMfaSignInResponse {
      /** MultiFactor sign-in session information specific to SMS-type second factors. Along with the one-time code retrieved from the sent SMS, the contents of this session information should be passed to FinalizeMfaSignIn to complete the sign in. */
      phoneResponseInfo?: GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo;
    }
    interface GoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentRequestInfo {}
    interface GoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo {
      /** The time by which the enrollment must finish. */
      finalizeEnrollmentTime?: string;
      /** The hashing algorithm used to generate the verification code. */
      hashingAlgorithm?: string;
      /** Duration in seconds at which the verification code will change. */
      periodSec?: number;
      /** An encoded string that represents the enrollment session. */
      sessionInfo?: string;
      /** A base 32 encoded string that represents the shared TOTP secret. The base 32 encoding is the one specified by [RFC4648#section-6](https://datatracker.ietf.org/doc/html/rfc4648#section-6). (This is the same as the base 32 encoding from [RFC3548#section-5](https://datatracker.ietf.org/doc/html/rfc3548#section-5).) */
      sharedSecretKey?: string;
      /** The length of the verification code that needs to be generated. */
      verificationCodeLength?: number;
    }
    interface GoogleCloudIdentitytoolkitV2WithdrawMfaRequest {
      /** Required. User's ID token. */
      idToken?: string;
      /** Required. MFA enrollment id from a current MFA enrollment. */
      mfaEnrollmentId?: string;
      /** The ID of the Identity Platform tenant that the user unenrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project. */
      tenantId?: string;
    }
    interface GoogleCloudIdentitytoolkitV2WithdrawMfaResponse {
      /** ID token updated to reflect removal of the second factor. */
      idToken?: string;
      /** Refresh token updated to reflect removal of the second factor. */
      refreshToken?: string;
    }
    interface GoogleIamV1AuditConfig {
      /** The configuration for logging of each type of permission. */
      auditLogConfigs?: GoogleIamV1AuditLogConfig[];
      /** Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services. */
      service?: string;
    }
    interface GoogleIamV1AuditLogConfig {
      /** Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members. */
      exemptedMembers?: string[];
      /** The log type that this config enables. */
      logType?: string;
    }
    interface GoogleIamV1Binding {
      /** The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). */
      condition?: GoogleTypeExpr;
      /** Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`. */
      members?: string[];
      /** Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles). */
      role?: string;
    }
    interface GoogleIamV1GetIamPolicyRequest {
      /** OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`. */
      options?: GoogleIamV1GetPolicyOptions;
    }
    interface GoogleIamV1GetPolicyOptions {
      /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). */
      requestedPolicyVersion?: number;
    }
    interface GoogleIamV1Policy {
      /** Specifies cloud audit logging configuration for this policy. */
      auditConfigs?: GoogleIamV1AuditConfig[];
      /** Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`. */
      bindings?: GoogleIamV1Binding[];
      /** `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. */
      etag?: string;
      /** Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). */
      version?: number;
    }
    interface GoogleIamV1SetIamPolicyRequest {
      /** REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them. */
      policy?: GoogleIamV1Policy;
      /** OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"` */
      updateMask?: string;
    }
    interface GoogleIamV1TestIamPermissionsRequest {
      /** The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions). */
      permissions?: string[];
    }
    interface GoogleIamV1TestIamPermissionsResponse {
      /** A subset of `TestPermissionsRequest.permissions` that the caller is allowed. */
      permissions?: string[];
    }
    interface GoogleProtobufEmpty {}
    interface GoogleTypeExpr {
      /** Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. */
      description?: string;
      /** Textual representation of an expression in Common Expression Language syntax. */
      expression?: string;
      /** Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. */
      location?: string;
      /** Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. */
      title?: string;
    }
    interface MfaEnrollmentResource {
      /** Finishes enrolling a second factor for the user. */
      finalize(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest;
      }): Request<GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse>;
      finalize(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest,
      ): Request<GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse>;
      /** Step one of the MFA enrollment process. In SMS case, this sends an SMS verification code to the user. */
      start(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest;
      }): Request<GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse>;
      start(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest,
      ): Request<GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse>;
      /** Revokes one second factor from the enrolled second factors for an account. */
      withdraw(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitV2WithdrawMfaRequest;
      }): Request<GoogleCloudIdentitytoolkitV2WithdrawMfaResponse>;
      withdraw(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitV2WithdrawMfaRequest,
      ): Request<GoogleCloudIdentitytoolkitV2WithdrawMfaResponse>;
    }
    interface MfaSignInResource {
      /** Verifies the MFA challenge and performs sign-in */
      finalize(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest;
      }): Request<GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse>;
      finalize(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest,
      ): Request<GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse>;
      /** Sends the MFA challenge */
      start(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitV2StartMfaSignInRequest;
      }): Request<GoogleCloudIdentitytoolkitV2StartMfaSignInResponse>;
      start(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitV2StartMfaSignInRequest,
      ): Request<GoogleCloudIdentitytoolkitV2StartMfaSignInResponse>;
    }
    interface AccountsResource {
      /** Revokes a user's token from an Identity Provider (IdP). This is done by manually providing an IdP credential, and the token types for revocation. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project. */
      revokeToken(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitV2RevokeTokenRequest;
      }): Request<{}>;
      revokeToken(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitV2RevokeTokenRequest,
      ): Request<{}>;
      mfaEnrollment: MfaEnrollmentResource;
      mfaSignIn: MfaSignInResource;
    }
    interface DefaultSupportedIdpsResource {
      /** List all default supported Idps. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of items to return. */
        pageSize?: number;
        /** The next_page_token value returned from a previous List request, if any. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse>;
    }
    interface DefaultSupportedIdpConfigsResource {
      /** Create a default supported Idp configuration for an Identity Toolkit project. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default supported Idps. */
        idpId?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The parent resource name where the config to be created, for example: "projects/my-awesome-project" */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig;
      }): Request<GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default supported Idps. */
          idpId?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** The parent resource name where the config to be created, for example: "projects/my-awesome-project" */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig,
      ): Request<GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig>;
      /** Delete a default supported Idp configuration for an Identity Toolkit project. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource name of the config, for example: "projects/my-awesome-project/defaultSupportedIdpConfigs/google.com" */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Retrieve a default supported Idp configuration for an Identity Toolkit project. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource name of the config, for example: "projects/my-awesome-project/defaultSupportedIdpConfigs/google.com" */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig>;
      /** List all default supported Idp configurations for an Identity Toolkit project. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of items to return. */
        pageSize?: number;
        /** The next_page_token value returned from a previous List request, if any. */
        pageToken?: string;
        /** The parent resource name, for example, "projects/my-awesome-project". */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse>;
      /** Update a default supported Idp configuration for an Identity Toolkit project. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-project/defaultSupportedIdpConfigs/google.com" */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig;
      }): Request<GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-project/defaultSupportedIdpConfigs/google.com" */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig,
      ): Request<GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig>;
    }
    interface IdentityPlatformResource {
      /** Initialize Identity Platform for a Cloud project. Identity Platform is an end-to-end authentication system for third-party users to access your apps and services. These could include mobile/web apps, games, APIs and beyond. This is the publicly available variant of EnableIdentityPlatform that is only available to billing-enabled projects. */
      initializeAuth(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** The resource name of the target project the developer wants to enable Identity Platform for. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformRequest;
      }): Request<{}>;
      initializeAuth(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** The resource name of the target project the developer wants to enable Identity Platform for. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformRequest,
      ): Request<{}>;
    }
    interface InboundSamlConfigsResource {
      /** Create an inbound SAML configuration for an Identity Toolkit project. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The id to use for this config. */
        inboundSamlConfigId?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The parent resource name where the config to be created, for example: "projects/my-awesome-project" */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig;
      }): Request<GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** The id to use for this config. */
          inboundSamlConfigId?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** The parent resource name where the config to be created, for example: "projects/my-awesome-project" */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig,
      ): Request<GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig>;
      /** Delete an inbound SAML configuration for an Identity Toolkit project. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource name of the config to be deleted, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Retrieve an inbound SAML configuration for an Identity Toolkit project. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource name of the config, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig>;
      /** List all inbound SAML configurations for an Identity Toolkit project. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of items to return. */
        pageSize?: number;
        /** The next_page_token value returned from a previous List request, if any. */
        pageToken?: string;
        /** The parent resource name, for example, "projects/my-awesome-project". */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse>;
      /** Update an inbound SAML configuration for an Identity Toolkit project. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig;
      }): Request<GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig,
      ): Request<GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig>;
    }
    interface OauthIdpConfigsResource {
      /** Create an Oidc Idp configuration for an Identity Toolkit project. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The id to use for this config. */
        oauthIdpConfigId?: string;
        /** The parent resource name where the config to be created, for example: "projects/my-awesome-project" */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig;
      }): Request<GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** The id to use for this config. */
          oauthIdpConfigId?: string;
          /** The parent resource name where the config to be created, for example: "projects/my-awesome-project" */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig,
      ): Request<GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig>;
      /** Delete an Oidc Idp configuration for an Identity Toolkit project. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource name of the config to be deleted, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Retrieve an Oidc Idp configuration for an Identity Toolkit project. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource name of the config, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig>;
      /** List all Oidc Idp configurations for an Identity Toolkit project. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of items to return. */
        pageSize?: number;
        /** The next_page_token value returned from a previous List request, if any. */
        pageToken?: string;
        /** The parent resource name, for example, "projects/my-awesome-project". */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse>;
      /** Update an Oidc Idp configuration for an Identity Toolkit project. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig;
      }): Request<GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig,
      ): Request<GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig>;
    }
    interface DefaultSupportedIdpConfigsResource {
      /** Create a default supported Idp configuration for an Identity Toolkit project. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default supported Idps. */
        idpId?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The parent resource name where the config to be created, for example: "projects/my-awesome-project" */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig;
      }): Request<GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default supported Idps. */
          idpId?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** The parent resource name where the config to be created, for example: "projects/my-awesome-project" */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig,
      ): Request<GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig>;
      /** Delete a default supported Idp configuration for an Identity Toolkit project. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource name of the config, for example: "projects/my-awesome-project/defaultSupportedIdpConfigs/google.com" */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Retrieve a default supported Idp configuration for an Identity Toolkit project. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource name of the config, for example: "projects/my-awesome-project/defaultSupportedIdpConfigs/google.com" */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig>;
      /** List all default supported Idp configurations for an Identity Toolkit project. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of items to return. */
        pageSize?: number;
        /** The next_page_token value returned from a previous List request, if any. */
        pageToken?: string;
        /** The parent resource name, for example, "projects/my-awesome-project". */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse>;
      /** Update a default supported Idp configuration for an Identity Toolkit project. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-project/defaultSupportedIdpConfigs/google.com" */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig;
      }): Request<GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-project/defaultSupportedIdpConfigs/google.com" */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig,
      ): Request<GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig>;
    }
    interface InboundSamlConfigsResource {
      /** Create an inbound SAML configuration for an Identity Toolkit project. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The id to use for this config. */
        inboundSamlConfigId?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The parent resource name where the config to be created, for example: "projects/my-awesome-project" */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig;
      }): Request<GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** The id to use for this config. */
          inboundSamlConfigId?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** The parent resource name where the config to be created, for example: "projects/my-awesome-project" */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig,
      ): Request<GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig>;
      /** Delete an inbound SAML configuration for an Identity Toolkit project. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource name of the config to be deleted, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Retrieve an inbound SAML configuration for an Identity Toolkit project. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource name of the config, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig>;
      /** List all inbound SAML configurations for an Identity Toolkit project. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of items to return. */
        pageSize?: number;
        /** The next_page_token value returned from a previous List request, if any. */
        pageToken?: string;
        /** The parent resource name, for example, "projects/my-awesome-project". */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse>;
      /** Update an inbound SAML configuration for an Identity Toolkit project. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig;
      }): Request<GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig,
      ): Request<GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig>;
    }
    interface OauthIdpConfigsResource {
      /** Create an Oidc Idp configuration for an Identity Toolkit project. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The id to use for this config. */
        oauthIdpConfigId?: string;
        /** The parent resource name where the config to be created, for example: "projects/my-awesome-project" */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig;
      }): Request<GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** The id to use for this config. */
          oauthIdpConfigId?: string;
          /** The parent resource name where the config to be created, for example: "projects/my-awesome-project" */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig,
      ): Request<GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig>;
      /** Delete an Oidc Idp configuration for an Identity Toolkit project. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource name of the config to be deleted, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Retrieve an Oidc Idp configuration for an Identity Toolkit project. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource name of the config, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig>;
      /** List all Oidc Idp configurations for an Identity Toolkit project. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of items to return. */
        pageSize?: number;
        /** The next_page_token value returned from a previous List request, if any. */
        pageToken?: string;
        /** The parent resource name, for example, "projects/my-awesome-project". */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse>;
      /** Update an Oidc Idp configuration for an Identity Toolkit project. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig;
      }): Request<GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig,
      ): Request<GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig>;
    }
    interface TenantsResource {
      /** Create a tenant. Requires write permission on the Agent project. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The parent resource name where the tenant will be created. For example, "projects/project1". */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitAdminV2Tenant;
      }): Request<GoogleCloudIdentitytoolkitAdminV2Tenant>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** The parent resource name where the tenant will be created. For example, "projects/project1". */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitAdminV2Tenant,
      ): Request<GoogleCloudIdentitytoolkitAdminV2Tenant>;
      /** Delete a tenant. Requires write permission on the Agent project. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Resource name of the tenant to delete. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get a tenant. Requires read permission on the Tenant resource. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Resource name of the tenant to retrieve. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitAdminV2Tenant>;
      /** Gets the access control policy for a resource. An error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it. Caller must have the right Google IAM permission on the resource. */
      getIamPolicy(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field. */
          resource: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleIamV1GetIamPolicyRequest,
      ): Request<GoogleIamV1Policy>;
      /** List tenants under the given agent project. Requires read permission on the Agent project. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of results to return, capped at 1000. If not specified, the default value is 20. */
        pageSize?: number;
        /** The pagination token from the response of a previous request. */
        pageToken?: string;
        /** Required. The parent resource name to list tenants for. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse>;
      /** Update a tenant. Requires write permission on the Tenant resource. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Output only. Resource name of a tenant. For example: "projects/{project-id}/tenants/{tenant-id}" */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** If provided, only update fields set in the update mask. Otherwise, all settable fields will be updated. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitAdminV2Tenant;
      }): Request<GoogleCloudIdentitytoolkitAdminV2Tenant>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Output only. Resource name of a tenant. For example: "projects/{project-id}/tenants/{tenant-id}" */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** If provided, only update fields set in the update mask. Otherwise, all settable fields will be updated. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitAdminV2Tenant,
      ): Request<GoogleCloudIdentitytoolkitAdminV2Tenant>;
      /** Sets the access control policy for a resource. If the policy exists, it is replaced. Caller must have the right Google IAM permission on the resource. */
      setIamPolicy(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field. */
          resource: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleIamV1SetIamPolicyRequest,
      ): Request<GoogleIamV1Policy>;
      /** Returns the caller's permissions on a resource. An error is returned if the resource does not exist. A caller is not required to have Google IAM permission to make this request. */
      testIamPermissions(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field. */
          resource: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleIamV1TestIamPermissionsRequest,
      ): Request<GoogleIamV1TestIamPermissionsResponse>;
      defaultSupportedIdpConfigs: DefaultSupportedIdpConfigsResource;
      inboundSamlConfigs: InboundSamlConfigsResource;
      oauthIdpConfigs: OauthIdpConfigsResource;
    }
    interface ProjectsResource {
      /** Retrieve an Identity Toolkit project configuration. */
      getConfig(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource name of the config, for example: "projects/my-awesome-project/config" */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitAdminV2Config>;
      /** Update an Identity Toolkit project configuration. */
      updateConfig(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Output only. The name of the Config resource. Example: "projects/my-awesome-project/config" */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** The update mask applies to the resource. Fields set in the config but not included in this update mask will be ignored. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudIdentitytoolkitAdminV2Config;
      }): Request<GoogleCloudIdentitytoolkitAdminV2Config>;
      updateConfig(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Output only. The name of the Config resource. Example: "projects/my-awesome-project/config" */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** The update mask applies to the resource. Fields set in the config but not included in this update mask will be ignored. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudIdentitytoolkitAdminV2Config,
      ): Request<GoogleCloudIdentitytoolkitAdminV2Config>;
      defaultSupportedIdpConfigs: DefaultSupportedIdpConfigsResource;
      identityPlatform: IdentityPlatformResource;
      inboundSamlConfigs: InboundSamlConfigsResource;
      oauthIdpConfigs: OauthIdpConfigsResource;
      tenants: TenantsResource;
    }
    interface V2Resource {
      /** Gets password policy config set on the project or tenant. */
      getPasswordPolicy(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** The id of a tenant. */
        tenantId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudIdentitytoolkitV2PasswordPolicy>;
      /** Gets parameters needed for reCAPTCHA analysis. */
      getRecaptchaConfig(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** reCAPTCHA Enterprise uses separate site keys for different client types. Specify the client type to get the corresponding key. */
        clientType?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** The id of a tenant. */
        tenantId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** The reCAPTCHA version. */
        version?: string;
      }): Request<GoogleCloudIdentitytoolkitV2RecaptchaConfig>;
    }

    const accounts: AccountsResource;

    const defaultSupportedIdps: DefaultSupportedIdpsResource;

    const projects: ProjectsResource;

    const v2: V2Resource;
  }
}
