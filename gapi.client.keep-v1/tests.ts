/* This is stub file for gapi.client.keep-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20220808

gapi.load('client', async () => {
    /** now we can use gapi.client */

    await gapi.client.load('https://keep.googleapis.com/$discovery/rest?version=v1');
    /** now we can use gapi.client.keep */

    /** don't forget to authenticate your client before sending any request to resources: */
    /** declare client_id registered in Google Developers Console */
    const client_id = '<<PUT YOUR CLIENT ID HERE>>';
    const scope = [
        /** See, edit, create and permanently delete all your Google Keep data */
        'https://www.googleapis.com/auth/keep',
        /** View all your Google Keep data */
        'https://www.googleapis.com/auth/keep.readonly',
    ];
    const immediate = false;
    gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
        if (authResult && !authResult.error) {
            /** handle successful authorization */
            run();
        } else {
            /** handle authorization error */
        }
    });

    async function run() {
        /**
         * Gets an attachment. To download attachment media via REST requires the alt=media query parameter. Returns a 400 bad request error if attachment media is not available in the requested
         * MIME type.
         */
        await gapi.client.keep.media.download({
            mimeType: "Test string",
            name: "Test string",
        });
        /** Creates a new note. */
        await gapi.client.keep.notes.create({
        }, {
            attachments: [
                {
                    mimeType: [
                        "Test string"
                    ],
                    name: "Test string",
                }
            ],
            body: {
                list: {
                    listItems: [
                        {
                            checked: true,
                            childListItems: undefined,
                            text: {
                                text: "Test string",
                            },
                        }
                    ],
                },
                text: {
                    text: "Test string",
                },
            },
            createTime: "Test string",
            name: "Test string",
            permissions: [
                {
                    deleted: true,
                    email: "Test string",
                    family: {
                    },
                    group: {
                        email: "Test string",
                    },
                    name: "Test string",
                    role: "Test string",
                    user: {
                        email: "Test string",
                    },
                }
            ],
            title: "Test string",
            trashed: true,
            trashTime: "Test string",
            updateTime: "Test string",
        });
        /**
         * Deletes a note. Caller must have the `OWNER` role on the note to delete. Deleting a note removes the resource immediately and cannot be undone. Any collaborators will lose access to the
         * note.
         */
        await gapi.client.keep.notes.delete({
            name: "Test string",
        });
        /** Gets a note. */
        await gapi.client.keep.notes.get({
            name: "Test string",
        });
        /**
         * Lists notes. Every list call returns a page of results with `page_size` as the upper bound of returned items. A `page_size` of zero allows the server to choose the upper bound. The
         * ListNotesResponse contains at most `page_size` entries. If there are more things left to list, it provides a `next_page_token` value. (Page tokens are opaque values.) To get the next
         * page of results, copy the result's `next_page_token` into the next request's `page_token`. Repeat until the `next_page_token` returned with a page of results is empty. ListNotes return
         * consistent results in the face of concurrent changes, or signals that it cannot with an ABORTED error.
         */
        await gapi.client.keep.notes.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
        });
        /**
         * Creates one or more permissions on the note. Only permissions with the `WRITER` role may be created. If adding any permission fails, then the entire request fails and no changes are
         * made.
         */
        await gapi.client.keep.notes.permissions.batchCreate({
            parent: "Test string",
        }, {
            requests: [
                {
                    parent: "Test string",
                    permission: {
                        deleted: true,
                        email: "Test string",
                        family: {
                        },
                        group: {
                            email: "Test string",
                        },
                        name: "Test string",
                        role: "Test string",
                        user: {
                            email: "Test string",
                        },
                    },
                }
            ],
        });
        /**
         * Deletes one or more permissions on the note. The specified entities will immediately lose access. A permission with the `OWNER` role can't be removed. If removing a permission fails,
         * then the entire request fails and no changes are made. Returns a 400 bad request error if a specified permission does not exist on the note.
         */
        await gapi.client.keep.notes.permissions.batchDelete({
            parent: "Test string",
        }, {
            names: [
                "Test string"
            ],
        });
    }
});
