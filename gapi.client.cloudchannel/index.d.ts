/* Type definitions for non-npm package Cloud Channel API v1 1.0 */
// Project: https://cloud.google.com/channel
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://cloudchannel.googleapis.com/$discovery/rest?version=v1
// Revision: 20210314

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Cloud Channel API v1 */
    function load(name: "cloudchannel", version: "v1"): PromiseLike<void>;
    function load(name: "cloudchannel", version: "v1", callback: () => any): void;

    namespace cloudchannel {
        interface GoogleCloudChannelV1ActivateEntitlementRequest {
            /**
             * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has
             * already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the
             * server can check if the original operation with the same request ID was received, and if so, will ignore the second request. The request ID must be a valid
             * [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
             */
            requestId?: string;
        }
        interface GoogleCloudChannelV1AdminUser {
            /** Primary email of the admin user. */
            email?: string;
            /** Family name of the admin user. */
            familyName?: string;
            /** Given name of the admin user. */
            givenName?: string;
        }
        interface GoogleCloudChannelV1alpha1AssociationInfo {
            /** The name of the base entitlement, for which this entitlement is an add-on. */
            baseEntitlement?: string;
        }
        interface GoogleCloudChannelV1alpha1CommitmentSettings {
            /** Output only. Commitment end timestamp. */
            endTime?: string;
            /** Optional. Renewal settings applicable for a commitment-based Offer. */
            renewalSettings?: GoogleCloudChannelV1alpha1RenewalSettings;
            /** Output only. Commitment start timestamp. */
            startTime?: string;
        }
        interface GoogleCloudChannelV1alpha1CustomerEvent {
            /** Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id} */
            customer?: string;
            /** Type of event which happened on the customer. */
            eventType?: string;
        }
        interface GoogleCloudChannelV1alpha1Entitlement {
            /** The current number of users that are assigned a license for the product defined in provisioned_service.skuId. Read-only. Deprecated: Use `parameters` instead. */
            assignedUnits?: number;
            /** Association information to other entitlements. */
            associationInfo?: GoogleCloudChannelV1alpha1AssociationInfo;
            /**
             * Cloud Identity ID of a channel partner who will be the direct reseller for the customer's order. This field is generally used in 2-tier ordering, where the order is placed by a
             * top-level distributor on behalf of their channel partner or reseller. Required for distributors. Deprecated: `channel_partner_id` has been moved to the Customer.
             */
            channelPartnerId?: string;
            /** Commitment settings for a commitment-based Offer. Required for commitment based offers. */
            commitmentSettings?: GoogleCloudChannelV1alpha1CommitmentSettings;
            /** Output only. The time at which the entitlement is created. */
            createTime?: string;
            /**
             * Maximum number of units for a non commitment-based Offer, such as Flexible, Trial or Free entitlements. For commitment-based entitlements, this is a read-only field, which only the
             * internal support team can update. Deprecated: Use `parameters` instead.
             */
            maxUnits?: number;
            /** Output only. Resource name of an entitlement in the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}. */
            name?: string;
            /**
             * Number of units for a commitment-based Offer. For example, for seat-based Offers, this would be the number of seats; for license-based Offers, this would be the number of licenses.
             * Required for creating commitment-based Offers. Deprecated: Use `parameters` instead.
             */
            numUnits?: number;
            /** Required. The offer resource name for which the entitlement is to be created. Takes the form: accounts/{account_id}/offers/{offer_id}. */
            offer?: string;
            /** Extended entitlement parameters. When creating an entitlement, valid parameters' names and values are defined in the offer's parameter definitions. */
            parameters?: GoogleCloudChannelV1alpha1Parameter[];
            /** Output only. Service provisioning details for the entitlement. */
            provisionedService?: GoogleCloudChannelV1alpha1ProvisionedService;
            /** Output only. Current provisioning state of the entitlement. */
            provisioningState?: string;
            /**
             * Optional. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value is given, it appears in the API responses and
             * shows up in the invoice. The property accepts up to 80 plain text characters.
             */
            purchaseOrderId?: string;
            /** Output only. Enumerable of all current suspension reasons for an entitlement. */
            suspensionReasons?: string[];
            /** Output only. Settings for trial offers. */
            trialSettings?: GoogleCloudChannelV1alpha1TrialSettings;
            /** Output only. The time at which the entitlement is updated. */
            updateTime?: string;
        }
        interface GoogleCloudChannelV1alpha1EntitlementEvent {
            /** Resource name of an entitlement of the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} */
            entitlement?: string;
            /** Type of event which happened on the entitlement. */
            eventType?: string;
        }
        interface GoogleCloudChannelV1alpha1OperationMetadata {
            /** The RPC that initiated this Long Running Operation. */
            operationType?: string;
        }
        interface GoogleCloudChannelV1alpha1Parameter {
            /**
             * Output only. Specifies whether this parameter is allowed to be changed. For example, for a Google Workspace Business Starter entitlement in commitment plan, num_units is editable
             * when entitlement is active.
             */
            editable?: boolean;
            /** Name of the parameter. */
            name?: string;
            /** Value of the parameter. */
            value?: GoogleCloudChannelV1alpha1Value;
        }
        interface GoogleCloudChannelV1alpha1Period {
            /** Total duration of Period Type defined. */
            duration?: number;
            /** Period Type. */
            periodType?: string;
        }
        interface GoogleCloudChannelV1alpha1ProvisionedService {
            /** Output only. The product pertaining to the provisioning resource as specified in the Offer. */
            productId?: string;
            /** Output only. Provisioning ID of the entitlement. For Google Workspace, this would be the underlying Subscription ID. */
            provisioningId?: string;
            /** Output only. The SKU pertaining to the provisioning resource as specified in the Offer. */
            skuId?: string;
        }
        interface GoogleCloudChannelV1alpha1RenewalSettings {
            /** If true, disables commitment-based offer on renewal and switches to flexible or pay as you go. Deprecated: Use `payment_plan` instead. */
            disableCommitment?: boolean;
            /** If false, the plan will be completed at the end date. */
            enableRenewal?: boolean;
            /** Describes how frequently the reseller will be billed, such as once per month. */
            paymentCycle?: GoogleCloudChannelV1alpha1Period;
            /** Set if enable_renewal=true. Deprecated: Use `payment_cycle` instead. */
            paymentOption?: string;
            /** Describes how a reseller will be billed. */
            paymentPlan?: string;
            /** If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time. */
            resizeUnitCount?: boolean;
        }
        interface GoogleCloudChannelV1alpha1SubscriberEvent {
            /** Customer event send as part of Pub/Sub event to partners. */
            customerEvent?: GoogleCloudChannelV1alpha1CustomerEvent;
            /** Entitlement event send as part of Pub/Sub event to partners. */
            entitlementEvent?: GoogleCloudChannelV1alpha1EntitlementEvent;
        }
        interface GoogleCloudChannelV1alpha1TransferEntitlementsResponse {
            /** The entitlements that have been transferred. */
            entitlements?: GoogleCloudChannelV1alpha1Entitlement[];
        }
        interface GoogleCloudChannelV1alpha1TrialSettings {
            /** Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example [Epoch converter](https://www.epochconverter.com). */
            endTime?: string;
            /** Determines if the entitlement is in a trial or not: * `true` - The entitlement is in trial. * `false` - The entitlement is not in trial. */
            trial?: boolean;
        }
        interface GoogleCloudChannelV1alpha1Value {
            /** Represents a double value. */
            doubleValue?: number;
            /** Represents an int64 value. */
            int64Value?: string;
            /** Represents an 'Any' proto value. */
            protoValue?: { [P in string]: any };
            /** Represents a string value. */
            stringValue?: string;
        }
        interface GoogleCloudChannelV1AssociationInfo {
            /** The name of the base entitlement, for which this entitlement is an add-on. */
            baseEntitlement?: string;
        }
        interface GoogleCloudChannelV1CancelEntitlementRequest {
            /**
             * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has
             * already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the
             * server can check if the original operation with the same request ID was received, and if so, will ignore the second request. The request ID must be a valid
             * [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
             */
            requestId?: string;
        }
        interface GoogleCloudChannelV1ChangeOfferRequest {
            /** Required. New Offer. Format: accounts/{account_id}/offers/{offer_id}. */
            offer?: string;
            /** Optional. Parameters needed to purchase the Offer. */
            parameters?: GoogleCloudChannelV1Parameter[];
            /** Optional. Purchase order id provided by the reseller. */
            purchaseOrderId?: string;
            /**
             * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has
             * already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the
             * server can check if the original operation with the same request ID was received, and if so, will ignore the second request. The request ID must be a valid
             * [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
             */
            requestId?: string;
        }
        interface GoogleCloudChannelV1ChangeParametersRequest {
            /** Required. Entitlement parameters to update. Only editable parameters are allowed to be changed. */
            parameters?: GoogleCloudChannelV1Parameter[];
            /** Optional. Purchase order ID provided by the reseller. */
            purchaseOrderId?: string;
            /**
             * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has
             * already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the
             * server can check if the original operation with the same request ID was received, and if so, will ignore the second request. The request ID must be a valid
             * [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
             */
            requestId?: string;
        }
        interface GoogleCloudChannelV1ChangeRenewalSettingsRequest {
            /** Required. New renewal settings. */
            renewalSettings?: GoogleCloudChannelV1RenewalSettings;
            /**
             * Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been
             * completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can
             * check if the original operation with the same request ID was received, and if so, will ignore the second request. The request ID must be a valid
             * [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
             */
            requestId?: string;
        }
        interface GoogleCloudChannelV1ChannelPartnerLink {
            /** Output only. Cloud Identity info of the channel partner (IR). */
            channelPartnerCloudIdentityInfo?: GoogleCloudChannelV1CloudIdentityInfo;
            /** Output only. Timestamp of when the channel partner link is created. */
            createTime?: string;
            /** Output only. URI of the web page where partner accepts the link invitation. */
            inviteLinkUri?: string;
            /** Required. State of the channel partner link. */
            linkState?: string;
            /** Output only. Resource name for the channel partner link, in the format accounts/{account_id}/channelPartnerLinks/{id}. */
            name?: string;
            /** Output only. Public identifier that a customer must use to generate a transfer token to move to this distributor-reseller combination. */
            publicId?: string;
            /** Required. Cloud Identity ID of the linked reseller. */
            resellerCloudIdentityId?: string;
            /** Output only. Timestamp of when the channel partner link is updated. */
            updateTime?: string;
        }
        interface GoogleCloudChannelV1CheckCloudIdentityAccountsExistRequest {
            /** Required. Domain for which the Cloud Identity account customer is fetched. */
            domain?: string;
        }
        interface GoogleCloudChannelV1CheckCloudIdentityAccountsExistResponse {
            /** The Cloud Identity accounts associated with the domain. */
            cloudIdentityAccounts?: GoogleCloudChannelV1CloudIdentityCustomerAccount[];
        }
        interface GoogleCloudChannelV1CloudIdentityCustomerAccount {
            /** Cloud Identity ID of the customer. This field is populated ONLY if existing = true. */
            customerCloudIdentityId?: string;
            /**
             * Name of the customer that owns the Cloud Identity account. This field is populated ONLY if owned = true. The customer_name takes the format:
             * accounts/{account_id}/customers/{customer_id}
             */
            customerName?: string;
            /** True if a Cloud Identity account exists for a specific domain. */
            existing?: boolean;
            /** True if the Cloud Identity account is associated with a customer belonging to the Channel Services partner making the API call. */
            owned?: boolean;
        }
        interface GoogleCloudChannelV1CloudIdentityInfo {
            /** Output only. URI of Customer's Admin console dashboard. */
            adminConsoleUri?: string;
            /** The alternate email. */
            alternateEmail?: string;
            /** CustomerType indicates verification type needed for using services. */
            customerType?: string;
            /** Edu information about the customer. */
            eduData?: GoogleCloudChannelV1EduData;
            /** Whether the domain is verified. */
            isDomainVerified?: boolean;
            /** Language code. */
            languageCode?: string;
            /** Phone number associated with the Cloud Identity. */
            phoneNumber?: string;
            /** Output only. The primary domain name. */
            primaryDomain?: string;
        }
        interface GoogleCloudChannelV1CommitmentSettings {
            /** Output only. Commitment end timestamp. */
            endTime?: string;
            /** Optional. Renewal settings applicable for a commitment-based Offer. */
            renewalSettings?: GoogleCloudChannelV1RenewalSettings;
            /** Output only. Commitment start timestamp. */
            startTime?: string;
        }
        interface GoogleCloudChannelV1Constraints {
            /** Represents constraints required to purchase the Offer for a customer. */
            customerConstraints?: GoogleCloudChannelV1CustomerConstraints;
        }
        interface GoogleCloudChannelV1ContactInfo {
            /** Output only. Display name of the contact in the customer account. Populated by combining customer first name and last name. */
            displayName?: string;
            /**
             * Email of the contact in the customer account. Email is required for entitlements that need creation of admin.google.com accounts. The email will be the username used in credentials
             * to access the admin.google.com account.
             */
            email?: string;
            /** First name of the contact in the customer account. */
            firstName?: string;
            /** Last name of the contact in the customer account. */
            lastName?: string;
            /** Phone number of the contact in the customer account. */
            phone?: string;
            /** Optional. Job title of the contact in the customer account. */
            title?: string;
        }
        interface GoogleCloudChannelV1CreateEntitlementRequest {
            /** Required. The entitlement to create. */
            entitlement?: GoogleCloudChannelV1Entitlement;
            /**
             * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has
             * already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the
             * server can check if the original operation with the same request ID was received, and if so, will ignore the second request. The request ID must be a valid
             * [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
             */
            requestId?: string;
        }
        interface GoogleCloudChannelV1Customer {
            /**
             * Secondary contact email. Alternate email and primary contact email are required to have different domains if primary contact email is present. When creating admin.google.com
             * accounts, users get notified credentials at this email. This email address is also used as a recovery email.
             */
            alternateEmail?: string;
            /** Cloud Identity ID of the customer's channel partner. Populated only if a channel partner exists for this customer. */
            channelPartnerId?: string;
            /** Output only. Customer's cloud_identity_id. Populated only if a Cloud Identity resource exists for this customer. */
            cloudIdentityId?: string;
            /** Output only. Cloud Identity information for the customer. Populated only if a Cloud Identity account exists for this customer. */
            cloudIdentityInfo?: GoogleCloudChannelV1CloudIdentityInfo;
            /** Output only. The time at which the customer is created. */
            createTime?: string;
            /** Required. Primary domain used by the customer. Domain of primary contact email is required to be same as the provided domain. */
            domain?: string;
            /** Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier. */
            languageCode?: string;
            /** Output only. Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id} */
            name?: string;
            /** Required. Name of the organization that the customer entity represents. */
            orgDisplayName?: string;
            /**
             * Required. Address of the organization of the customer entity. Region and zip codes are required to enforce US laws and embargoes. Valid address lines are required for all customers.
             * Language code is discarded. Use the Customer-level language code to set the customer's language.
             */
            orgPostalAddress?: GoogleTypePostalAddress;
            /** Primary contact info. */
            primaryContactInfo?: GoogleCloudChannelV1ContactInfo;
            /** Output only. The time at which the customer is updated. */
            updateTime?: string;
        }
        interface GoogleCloudChannelV1CustomerConstraints {
            /** Allowed Customer Type. */
            allowedCustomerTypes?: string[];
            /** Allowed geographical regions of the customer. */
            allowedRegions?: string[];
            /** Allowed Promotional Order Type. Present for Promotional offers. */
            promotionalOrderTypes?: string[];
        }
        interface GoogleCloudChannelV1CustomerEvent {
            /** Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id} */
            customer?: string;
            /** Type of event which happened on the customer. */
            eventType?: string;
        }
        interface GoogleCloudChannelV1EduData {
            /** Size of the institute. */
            instituteSize?: string;
            /** Designated institute type of customer. */
            instituteType?: string;
            /** Web address for the edu customer's institution. */
            website?: string;
        }
        interface GoogleCloudChannelV1Entitlement {
            /** Association information to other entitlements. */
            associationInfo?: GoogleCloudChannelV1AssociationInfo;
            /** Commitment settings for a commitment-based Offer. Required for commitment based offers. */
            commitmentSettings?: GoogleCloudChannelV1CommitmentSettings;
            /** Output only. The time at which the entitlement is created. */
            createTime?: string;
            /** Output only. Resource name of an entitlement in the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}. */
            name?: string;
            /** Required. The offer resource name for which the entitlement is to be created. Takes the form: accounts/{account_id}/offers/{offer_id}. */
            offer?: string;
            /** Extended entitlement parameters. When creating an entitlement, valid parameters' names and values are defined in the offer's parameter definitions. */
            parameters?: GoogleCloudChannelV1Parameter[];
            /** Output only. Service provisioning details for the entitlement. */
            provisionedService?: GoogleCloudChannelV1ProvisionedService;
            /** Output only. Current provisioning state of the entitlement. */
            provisioningState?: string;
            /**
             * Optional. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value is given, it appears in the API responses and
             * shows up in the invoice. The property accepts up to 80 plain text characters.
             */
            purchaseOrderId?: string;
            /** Output only. Enumerable of all current suspension reasons for an entitlement. */
            suspensionReasons?: string[];
            /** Output only. Settings for trial offers. */
            trialSettings?: GoogleCloudChannelV1TrialSettings;
            /** Output only. The time at which the entitlement is updated. */
            updateTime?: string;
        }
        interface GoogleCloudChannelV1EntitlementEvent {
            /** Resource name of an entitlement of the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} */
            entitlement?: string;
            /** Type of event which happened on the entitlement. */
            eventType?: string;
        }
        interface GoogleCloudChannelV1ListChannelPartnerLinksResponse {
            /** The Channel partner links for a reseller. */
            channelPartnerLinks?: GoogleCloudChannelV1ChannelPartnerLink[];
            /** A token to retrieve the next page of results. Pass to ListChannelPartnerLinksRequest.page_token to obtain that page. */
            nextPageToken?: string;
        }
        interface GoogleCloudChannelV1ListCustomersResponse {
            /** The customers belonging to the reseller or distributor. */
            customers?: GoogleCloudChannelV1Customer[];
            /** A token to retrieve the next page of results. Pass to ListCustomersRequest.page_token to obtain that page. */
            nextPageToken?: string;
        }
        interface GoogleCloudChannelV1ListEntitlementsResponse {
            /** The entitlements belonging to the reseller's customer. */
            entitlements?: GoogleCloudChannelV1Entitlement[];
            /** A token to List next page of results. Pass to ListEntitlementsRequest.page_token to obtain that page. */
            nextPageToken?: string;
        }
        interface GoogleCloudChannelV1ListOffersResponse {
            /** A token to retrieve the next page of results. */
            nextPageToken?: string;
            /** The list of Offers requested. */
            offers?: GoogleCloudChannelV1Offer[];
        }
        interface GoogleCloudChannelV1ListProductsResponse {
            /** A token to retrieve the next page of results. */
            nextPageToken?: string;
            /** List of Products requested. */
            products?: GoogleCloudChannelV1Product[];
        }
        interface GoogleCloudChannelV1ListPurchasableOffersResponse {
            /** A token to retrieve the next page of results. */
            nextPageToken?: string;
            /** The list of Offers requested. */
            purchasableOffers?: GoogleCloudChannelV1PurchasableOffer[];
        }
        interface GoogleCloudChannelV1ListPurchasableSkusResponse {
            /** A token to retrieve the next page of results. */
            nextPageToken?: string;
            /** The list of SKUs requested. */
            purchasableSkus?: GoogleCloudChannelV1PurchasableSku[];
        }
        interface GoogleCloudChannelV1ListSkusResponse {
            /** A token to retrieve the next page of results. */
            nextPageToken?: string;
            /** The list of SKUs requested. */
            skus?: GoogleCloudChannelV1Sku[];
        }
        interface GoogleCloudChannelV1ListSubscribersResponse {
            /** A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
            nextPageToken?: string;
            /** List of service accounts which have subscriber access to the topic. */
            serviceAccounts?: string[];
            /** Name of the topic registered with the reseller. */
            topic?: string;
        }
        interface GoogleCloudChannelV1ListTransferableOffersRequest {
            /** Customer's Cloud Identity ID */
            cloudIdentityId?: string;
            /** A reseller should create a customer and use the resource name of the created customer here. */
            customerName?: string;
            /** The BCP-47 language code, such as "en-US". If specified, the response will be localized to the corresponding language code. Default is "en-US". */
            languageCode?: string;
            /**
             * Requested page size. Server might return fewer results than requested. If unspecified, at most 100 Offers will be returned. The maximum value is 1000; values above 1000 will be
             * coerced to 1000.
             */
            pageSize?: number;
            /**
             * A token identifying a page of results, if other than the first one. Typically obtained via ListTransferableOffersResponse.next_page_token of the previous
             * CloudChannelService.ListTransferableOffers call.
             */
            pageToken?: string;
            /** Required. SKU for which the Offers are being looked up. */
            sku?: string;
        }
        interface GoogleCloudChannelV1ListTransferableOffersResponse {
            /** A token to retrieve the next page of results. Pass to ListTransferableOffersRequest.page_token to obtain that page. */
            nextPageToken?: string;
            /** Information about Offers for a customer that can be used for transfer. */
            transferableOffers?: GoogleCloudChannelV1TransferableOffer[];
        }
        interface GoogleCloudChannelV1ListTransferableSkusRequest {
            /**
             * This token is generated by the Super Admin of the resold customer to authorize a reseller to access their Cloud Identity and purchase entitlements on their behalf. This token can be
             * omitted once the authorization is generated. See https://support.google.com/a/answer/7643790 for more details.
             */
            authToken?: string;
            /** Customer's Cloud Identity ID */
            cloudIdentityId?: string;
            /** A reseller is required to create a customer and use the resource name of the created customer here. The customer_name takes the format: accounts/{account_id}/customers/{customer_id} */
            customerName?: string;
            /** The BCP-47 language code, such as "en-US". If specified, the response will be localized to the corresponding language code. Default is "en-US". Optional. */
            languageCode?: string;
            /**
             * Requested page size. Server might return fewer results than requested. If unspecified, at most 100 SKUs will be returned. The maximum value is 1000; values above 1000 will be
             * coerced to 1000. Optional.
             */
            pageSize?: number;
            /**
             * A token identifying a page of results, if other than the first one. Typically obtained via ListTransferableSkusResponse.next_page_token of the previous
             * CloudChannelService.ListTransferableSkus call. Optional.
             */
            pageToken?: string;
        }
        interface GoogleCloudChannelV1ListTransferableSkusResponse {
            /** A token to retrieve the next page of results. Pass to ListTransferableSkusRequest.page_token to obtain that page. */
            nextPageToken?: string;
            /** Information about existing SKUs for a customer that would need to be transferred. */
            transferableSkus?: GoogleCloudChannelV1TransferableSku[];
        }
        interface GoogleCloudChannelV1MarketingInfo {
            /** Default logo. */
            defaultLogo?: GoogleCloudChannelV1Media;
            /** Human readable description. Description can contain HTML. */
            description?: string;
            /** Human readable name. */
            displayName?: string;
        }
        interface GoogleCloudChannelV1Media {
            /** URL of the media. */
            content?: string;
            /** Title of the media. */
            title?: string;
            /** Type of the media. */
            type?: string;
        }
        interface GoogleCloudChannelV1Offer {
            /** Constraints on transacting the Offer. */
            constraints?: GoogleCloudChannelV1Constraints;
            /** Output only. End of the Offer validity time. */
            endTime?: string;
            /** Marketing information for the Offer. */
            marketingInfo?: GoogleCloudChannelV1MarketingInfo;
            /** Resource Name of the Offer. Format: accounts/{account_id}/offers/{offer_id} */
            name?: string;
            /** Parameters required to use current Offer to purchase. */
            parameterDefinitions?: GoogleCloudChannelV1ParameterDefinition[];
            /** Describes the payment plan for the Offer. */
            plan?: GoogleCloudChannelV1Plan;
            /** Price for each monetizable resource type. */
            priceByResources?: GoogleCloudChannelV1PriceByResource[];
            /** SKU the offer is associated with. */
            sku?: GoogleCloudChannelV1Sku;
            /** Start of the Offer validity time. */
            startTime?: string;
        }
        interface GoogleCloudChannelV1OperationMetadata {
            /** The RPC that initiated this Long Running Operation. */
            operationType?: string;
        }
        interface GoogleCloudChannelV1Parameter {
            /**
             * Output only. Specifies whether this parameter is allowed to be changed. For example, for a Google Workspace Business Starter entitlement in commitment plan, num_units is editable
             * when entitlement is active.
             */
            editable?: boolean;
            /** Name of the parameter. */
            name?: string;
            /** Value of the parameter. */
            value?: GoogleCloudChannelV1Value;
        }
        interface GoogleCloudChannelV1ParameterDefinition {
            /** If not empty, parameter values must be drawn from this list. For example, [us-west1, us-west2, ...] Applicable to STRING parameter type. */
            allowedValues?: GoogleCloudChannelV1Value[];
            /**
             * Maximum value of the parameter, if applicable. Inclusive. For example, maximum seats when purchasing Google Workspace Business Standard. Applicable to INT64 and DOUBLE parameter
             * types.
             */
            maxValue?: GoogleCloudChannelV1Value;
            /** Minimal value of the parameter, if applicable. Inclusive. For example, minimal commitment when purchasing Anthos is 0.01. Applicable to INT64 and DOUBLE parameter types. */
            minValue?: GoogleCloudChannelV1Value;
            /** Name of the parameter. */
            name?: string;
            /** If set to true, parameter is optional to purchase this Offer. */
            optional?: boolean;
            /** Data type of the parameter. Minimal value, Maximum value and allowed values will use specified data type here. */
            parameterType?: string;
        }
        interface GoogleCloudChannelV1Period {
            /** Total duration of Period Type defined. */
            duration?: number;
            /** Period Type. */
            periodType?: string;
        }
        interface GoogleCloudChannelV1Plan {
            /** Reseller Billing account to charge after an offer transaction. Only present for Google Cloud Platform offers. */
            billingAccount?: string;
            /** Describes how frequently the reseller will be billed, such as once per month. */
            paymentCycle?: GoogleCloudChannelV1Period;
            /** Describes how a reseller will be billed. */
            paymentPlan?: string;
            /** Specifies when the payment needs to happen. */
            paymentType?: string;
            /**
             * Present for Offers with a trial period. For trial-only Offers, a paid service needs to start before the trial period ends for continued service. For Regular Offers with a trial
             * period, the regular pricing goes into effect when trial period ends, or if paid service is started before the end of the trial period.
             */
            trialPeriod?: GoogleCloudChannelV1Period;
        }
        interface GoogleCloudChannelV1Price {
            /** Base price. */
            basePrice?: GoogleTypeMoney;
            /** Discount percentage, represented as decimal. For example, a 20% discount will be represent as 0.2. */
            discount?: number;
            /** Effective Price after applying the discounts. */
            effectivePrice?: GoogleTypeMoney;
            /** Link to external price list, such as link to Google Voice rate card. */
            externalPriceUri?: string;
        }
        interface GoogleCloudChannelV1PriceByResource {
            /** Price of the Offer. Present if there are no price phases. */
            price?: GoogleCloudChannelV1Price;
            /** Specifies the price by time range. */
            pricePhases?: GoogleCloudChannelV1PricePhase[];
            /** Resource Type. Example: SEAT */
            resourceType?: string;
        }
        interface GoogleCloudChannelV1PricePhase {
            /** Defines first period for the phase. */
            firstPeriod?: number;
            /** Defines first period for the phase. */
            lastPeriod?: number;
            /** Defines the phase period type. */
            periodType?: string;
            /** Price of the phase. Present if there are no price tiers. */
            price?: GoogleCloudChannelV1Price;
            /** Price by the resource tiers. */
            priceTiers?: GoogleCloudChannelV1PriceTier[];
        }
        interface GoogleCloudChannelV1PriceTier {
            /** First resource for which the tier price applies. */
            firstResource?: number;
            /** Last resource for which the tier price applies. */
            lastResource?: number;
            /** Price of the tier. */
            price?: GoogleCloudChannelV1Price;
        }
        interface GoogleCloudChannelV1Product {
            /** Marketing information for the product. */
            marketingInfo?: GoogleCloudChannelV1MarketingInfo;
            /** Resource Name of the Product. Format: products/{product_id} */
            name?: string;
        }
        interface GoogleCloudChannelV1ProvisionCloudIdentityRequest {
            /** CloudIdentity-specific customer information. */
            cloudIdentityInfo?: GoogleCloudChannelV1CloudIdentityInfo;
            /** Admin user information. */
            user?: GoogleCloudChannelV1AdminUser;
            /** If set, validate the request and preview the review, but do not actually post it. */
            validateOnly?: boolean;
        }
        interface GoogleCloudChannelV1ProvisionedService {
            /** Output only. The product pertaining to the provisioning resource as specified in the Offer. */
            productId?: string;
            /** Output only. Provisioning ID of the entitlement. For Google Workspace, this would be the underlying Subscription ID. */
            provisioningId?: string;
            /** Output only. The SKU pertaining to the provisioning resource as specified in the Offer. */
            skuId?: string;
        }
        interface GoogleCloudChannelV1PurchasableOffer {
            /** Offer. */
            offer?: GoogleCloudChannelV1Offer;
        }
        interface GoogleCloudChannelV1PurchasableSku {
            /** SKU */
            sku?: GoogleCloudChannelV1Sku;
        }
        interface GoogleCloudChannelV1RegisterSubscriberRequest {
            /** Required. Service account which will provide subscriber access to the registered topic. */
            serviceAccount?: string;
        }
        interface GoogleCloudChannelV1RegisterSubscriberResponse {
            /** Name of the topic to which the subscriber will listen to. */
            topic?: string;
        }
        interface GoogleCloudChannelV1RenewalSettings {
            /** If false, the plan will be completed at the end date. */
            enableRenewal?: boolean;
            /** Describes how frequently the reseller will be billed, such as once per month. */
            paymentCycle?: GoogleCloudChannelV1Period;
            /** Describes how a reseller will be billed. */
            paymentPlan?: string;
            /** If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time. */
            resizeUnitCount?: boolean;
        }
        interface GoogleCloudChannelV1Sku {
            /** Marketing information for the SKU. */
            marketingInfo?: GoogleCloudChannelV1MarketingInfo;
            /** Resource Name of the SKU. Format: products/{product_id}/skus/{sku_id} */
            name?: string;
            /** Product the SKU is associated with. */
            product?: GoogleCloudChannelV1Product;
        }
        interface GoogleCloudChannelV1StartPaidServiceRequest {
            /**
             * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has
             * already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the
             * server can check if the original operation with the same request ID was received, and if so, will ignore the second request. The request ID must be a valid
             * [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
             */
            requestId?: string;
        }
        interface GoogleCloudChannelV1SubscriberEvent {
            /** Customer event send as part of Pub/Sub event to partners. */
            customerEvent?: GoogleCloudChannelV1CustomerEvent;
            /** Entitlement event send as part of Pub/Sub event to partners. */
            entitlementEvent?: GoogleCloudChannelV1EntitlementEvent;
        }
        interface GoogleCloudChannelV1SuspendEntitlementRequest {
            /**
             * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has
             * already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the
             * server can check if the original operation with the same request ID was received, and if so, will ignore the second request. The request ID must be a valid
             * [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
             */
            requestId?: string;
        }
        interface GoogleCloudChannelV1TransferableOffer {
            /** Offer with parameter constraints updated to allow the Transfer. */
            offer?: GoogleCloudChannelV1Offer;
        }
        interface GoogleCloudChannelV1TransferableSku {
            /** The SKU pertaining to the provisioning resource as specified in the Offer. */
            sku?: GoogleCloudChannelV1Sku;
            /** Describes the transfer eligibility of a SKU. */
            transferEligibility?: GoogleCloudChannelV1TransferEligibility;
        }
        interface GoogleCloudChannelV1TransferEligibility {
            /** Localized description if reseller is not eligible to transfer the SKU. */
            description?: string;
            /** Specified the reason for ineligibility. */
            ineligibilityReason?: string;
            /** Whether reseller is eligible to transfer the SKU. */
            isEligible?: boolean;
        }
        interface GoogleCloudChannelV1TransferEntitlementsRequest {
            /**
             * This token is generated by the Super Admin of the resold customer to authorize a reseller to access their Cloud Identity and purchase entitlements on their behalf. This token can be
             * omitted once the authorization is generated. See https://support.google.com/a/answer/7643790 for more details.
             */
            authToken?: string;
            /** Required. The new entitlements to be created or transferred. */
            entitlements?: GoogleCloudChannelV1Entitlement[];
            /**
             * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has
             * already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the
             * server can check if the original operation with the same request ID was received, and if so, will ignore the second request. The request ID must be a valid
             * [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
             */
            requestId?: string;
        }
        interface GoogleCloudChannelV1TransferEntitlementsResponse {
            /** The entitlements that have been transferred. */
            entitlements?: GoogleCloudChannelV1Entitlement[];
        }
        interface GoogleCloudChannelV1TransferEntitlementsToGoogleRequest {
            /** Required. The entitlements to be transferred to Google. */
            entitlements?: GoogleCloudChannelV1Entitlement[];
            /**
             * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has
             * already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the
             * server can check if the original operation with the same request ID was received, and if so, will ignore the second request. The request ID must be a valid
             * [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
             */
            requestId?: string;
        }
        interface GoogleCloudChannelV1TrialSettings {
            /** Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example [Epoch converter](https://www.epochconverter.com). */
            endTime?: string;
            /** Determines if the entitlement is in a trial or not: * `true` - The entitlement is in trial. * `false` - The entitlement is not in trial. */
            trial?: boolean;
        }
        interface GoogleCloudChannelV1UnregisterSubscriberRequest {
            /** Required. Service account which will be unregistered from getting subscriber access to the topic. */
            serviceAccount?: string;
        }
        interface GoogleCloudChannelV1UnregisterSubscriberResponse {
            /** Name of the topic from which the service account subscriber access has been removed. */
            topic?: string;
        }
        interface GoogleCloudChannelV1UpdateChannelPartnerLinkRequest {
            /** Required. The channel partner link to update. Only field channel_partner_link.link_state is allowed to be updated. */
            channelPartnerLink?: GoogleCloudChannelV1ChannelPartnerLink;
            /** Required. The update mask that applies to the resource. The only allowable value for update mask is channel_partner_link.link_state. */
            updateMask?: string;
        }
        interface GoogleCloudChannelV1Value {
            /** Represents a double value. */
            doubleValue?: number;
            /** Represents an int64 value. */
            int64Value?: string;
            /** Represents an 'Any' proto value. */
            protoValue?: { [P in string]: any };
            /** Represents a string value. */
            stringValue?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleLongrunningCancelOperationRequest {
        }
        interface GoogleLongrunningListOperationsResponse {
            /** The standard List next-page token. */
            nextPageToken?: string;
            /** A list of operations that matches the specified filter in the request. */
            operations?: GoogleLongrunningOperation[];
        }
        interface GoogleLongrunningOperation {
            /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
            done?: boolean;
            /** The error result of the operation in case of failure or cancellation. */
            error?: GoogleRpcStatus;
            /**
             * Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such
             * metadata. Any method that returns a long-running operation should document the metadata type, if any.
             */
            metadata?: { [P in string]: any };
            /**
             * The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending
             * with `operations/{unique_id}`.
             */
            name?: string;
            /**
             * The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the
             * original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the
             * original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
             */
            response?: { [P in string]: any };
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleProtobufEmpty {
        }
        interface GoogleRpcStatus {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?: number;
            /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
            details?: Array<{ [P in string]: any }>;
            /**
             * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the
             * client.
             */
            message?: string;
        }
        interface GoogleTypeMoney {
            /** The three-letter currency code defined in ISO 4217. */
            currencyCode?: string;
            /**
             * Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units`
             * is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and
             * `nanos`=-750,000,000.
             */
            nanos?: number;
            /** The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar. */
            units?: string;
        }
        interface GoogleTypePostalAddress {
            /**
             * Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a
             * single field (e.g. "Austin, TX"), it is important that the line order is clear. The order of address lines should be "envelope order" for the country/region of the address. In
             * places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. "ja" for large-to-small ordering and "ja-Latn" or "en" for small-to-large). This way, the
             * most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining
             * information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of
             * the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to
             * handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).
             */
            addressLines?: string[];
            /**
             * Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture.
             * Specifically, for Spain this is the province and not the autonomous community (e.g. "Barcelona" and not "Catalonia"). Many countries don't use an administrative area in postal
             * addresses. E.g. in Switzerland this should be left unpopulated.
             */
            administrativeArea?: string;
            /**
             * Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the
             * address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never
             * affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples:
             * "zh-Hant", "ja", "ja-Latn", "en".
             */
            languageCode?: string;
            /**
             * Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do
             * not fit into this structure well, leave locality empty and use address_lines.
             */
            locality?: string;
            /** Optional. The name of the organization at the address. */
            organization?: string;
            /**
             * Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts
             * of the address (e.g. state/zip validation in the U.S.A.).
             */
            postalCode?: string;
            /** Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain "care of" information. */
            recipients?: string[];
            /**
             * Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and
             * http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: "CH" for Switzerland.
             */
            regionCode?: string;
            /** The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions. */
            revision?: number;
            /**
             * Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like "CEDEX", optionally followed by a number
             * (e.g. "CEDEX 7"), or just a number alone, representing the "sector code" (Jamaica), "delivery area indicator" (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
             */
            sortingCode?: string;
            /** Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts. */
            sublocality?: string;
        }
        interface ChannelPartnerLinksResource {
            /**
             * Initiates a channel partner link between a distributor and a reseller or between resellers in an n-tier reseller channel. To accept the invite, the invited partner should follow the
             * invite_link_uri provided in the response. If the link creation is accepted, a valid link is set up between the two involved parties. To call this method, you must be a distributor.
             * Possible Error Codes: * PERMISSION_DENIED: If the reseller account making the request and the reseller account being queried for are different. * INVALID_ARGUMENT: Missing or
             * invalid required parameters in the request. * ALREADY_EXISTS: If the ChannelPartnerLink sent in the request already exists. * NOT_FOUND: If no Cloud Identity customer exists for
             * domain provided. * INTERNAL: Any non-user error related to a technical issue in the backend. In this case, contact Cloud Channel support. * UNKNOWN: Any non-user error related to a
             * technical issue in the backend. In this case, contact Cloud Channel support. Return Value: Newly created ChannelPartnerLink resource if successful, otherwise error is returned.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of reseller's account for which to create a channel partner link. The parent takes the format: accounts/{account_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1ChannelPartnerLink;
            }): Request<GoogleCloudChannelV1ChannelPartnerLink>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of reseller's account for which to create a channel partner link. The parent takes the format: accounts/{account_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1ChannelPartnerLink): Request<GoogleCloudChannelV1ChannelPartnerLink>;
            /**
             * Returns a requested ChannelPartnerLink resource. To call this method, you must be a distributor. Possible Error Codes: * PERMISSION_DENIED: If the reseller account making the
             * request and the reseller account being queried for are different. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. * NOT_FOUND: ChannelPartnerLink resource
             * not found. Results due invalid channel partner link name. Return Value: ChannelPartnerLink resource if found, otherwise returns an error.
             */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The resource name of the channel partner link to retrieve. The name takes the format: accounts/{account_id}/channelPartnerLinks/{id} where {id} is the Cloud Identity
                 * ID of the partner.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Optional. The level of granularity the ChannelPartnerLink will display. */
                view?: string;
            }): Request<GoogleCloudChannelV1ChannelPartnerLink>;
            /**
             * List ChannelPartnerLinks belonging to a distributor. To call this method, you must be a distributor. Possible Error Codes: * PERMISSION_DENIED: If the reseller account making the
             * request and the reseller account being queried for are different. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. Return Value: If successful, returns the
             * list of ChannelPartnerLink resources for the distributor account, otherwise returns an error.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Optional. Requested page size. Server might return fewer results than requested. If unspecified, server will pick a default size (25). The maximum value is 200, values above 200
                 * will be coerced to 200.
                 */
                pageSize?: number;
                /**
                 * Optional. A token identifying a page of results, if other than the first one. Typically obtained via ListChannelPartnerLinksResponse.next_page_token of the previous
                 * CloudChannelService.ListChannelPartnerLinks call.
                 */
                pageToken?: string;
                /** Required. The resource name of the reseller account for listing channel partner links. The parent takes the format: accounts/{account_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Optional. The level of granularity the ChannelPartnerLink will display. */
                view?: string;
            }): Request<GoogleCloudChannelV1ListChannelPartnerLinksResponse>;
            /**
             * Updates a channel partner link. A distributor calls this method to change a link's status. For example, suspend a partner link. To call this method, you must be a distributor.
             * Possible Error Codes: * PERMISSION_DENIED: If the reseller account making the request and the reseller account being queried for are different. * INVALID_ARGUMENT: It can happen in
             * following scenarios - * Missing or invalid required parameters in the request. * Updating link state from invited to active or suspended. * Sending reseller_cloud_identity_id,
             * invite_url or name in update mask. * NOT_FOUND: ChannelPartnerLink resource not found. * INTERNAL: Any non-user error related to a technical issue in the backend. In this case,
             * contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. In this case, contact Cloud Channel support. Return Value: If successful,
             * the updated ChannelPartnerLink resource, otherwise returns an error.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The resource name of the channel partner link to cancel. The name takes the format: accounts/{account_id}/channelPartnerLinks/{id} where {id} is the Cloud Identity ID
                 * of the partner.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1UpdateChannelPartnerLinkRequest;
            }): Request<GoogleCloudChannelV1ChannelPartnerLink>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The resource name of the channel partner link to cancel. The name takes the format: accounts/{account_id}/channelPartnerLinks/{id} where {id} is the Cloud Identity ID
                 * of the partner.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1UpdateChannelPartnerLinkRequest): Request<GoogleCloudChannelV1ChannelPartnerLink>;
        }
        interface EntitlementsResource {
            /**
             * Activates a previously suspended entitlement. The entitlement must be in a suspended state for it to be activated. Entitlements suspended for pending ToS acceptance can't be
             * activated using this method. An entitlement activation is a long-running operation and can result in updates to the state of the customer entitlement. Possible Error Codes: *
             * PERMISSION_DENIED: If the customer doesn't belong to the reseller or if the reseller account making the request and reseller account being queried for are different. *
             * INVALID_ARGUMENT: Missing or invalid required parameters in the request. * NOT_FOUND: Entitlement resource not found. * SUSPENSION_NOT_RESELLER_INITIATED: Can't activate an
             * entitlement that is pending TOS acceptance. Only reseller initiated suspensions can be activated. * NOT_SUSPENDED: Can't activate entitlements that are already in ACTIVE state. Can
             * only activate suspended entitlements. * INTERNAL: Any non-user error related to a technical issue in the backend. In this case, contact Cloud Channel support. * UNKNOWN: Any
             * non-user error related to a technical issue in the backend. In this case, contact Cloud Channel support. Return Value: Long Running Operation ID. To get the results of the
             * operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
             */
            activate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The resource name of the entitlement to activate. The name takes the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1ActivateEntitlementRequest;
            }): Request<GoogleLongrunningOperation>;
            activate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The resource name of the entitlement to activate. The name takes the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1ActivateEntitlementRequest): Request<GoogleLongrunningOperation>;
            /**
             * Cancels a previously fulfilled entitlement. An entitlement cancellation is a long-running operation. Possible Error Codes: * PERMISSION_DENIED: If the customer doesn't belong to the
             * reseller or if the reseller account making the request and reseller account being queried for are different. * FAILED_PRECONDITION: If there are any Google Cloud projects linked to
             * the Google Cloud entitlement's Cloud Billing subaccount. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. * NOT_FOUND: Entitlement resource not found. *
             * DELETION_TYPE_NOT_ALLOWED: Cancel is only allowed for Google Workspace add-ons or entitlements for Google Cloud's development platform. * INTERNAL: Any non-user error related to a
             * technical issue in the backend. In this case, contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. In this case, contact Cloud
             * Channel support. Return Value: Long Running Operation ID. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The response will
             * contain google.protobuf.Empty on success. The Operation metadata will contain an instance of OperationMetadata.
             */
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The resource name of the entitlement to cancel. The name takes the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1CancelEntitlementRequest;
            }): Request<GoogleLongrunningOperation>;
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The resource name of the entitlement to cancel. The name takes the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1CancelEntitlementRequest): Request<GoogleLongrunningOperation>;
            /**
             * Updates the Offer for an existing customer entitlement. An entitlement update is a long-running operation and results in updates to the entitlement as a result of fulfillment.
             * Possible Error Codes: * PERMISSION_DENIED: If the customer doesn't belong to the reseller. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. * NOT_FOUND:
             * Offer or Entitlement resource not found. * INTERNAL: Any non-user error related to a technical issue in the backend. In this case, contact Cloud Channel support. * UNKNOWN: Any
             * non-user error related to a technical issue in the backend. In this case, contact Cloud Channel support. Return Value: Long Running Operation ID. To get the results of the
             * operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
             */
            changeOffer(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the entitlement to update. Format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1ChangeOfferRequest;
            }): Request<GoogleLongrunningOperation>;
            changeOffer(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the entitlement to update. Format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1ChangeOfferRequest): Request<GoogleLongrunningOperation>;
            /**
             * Change parameters of the entitlement An entitlement parameters update is a long-running operation and results in updates to the entitlement as a result of fulfillment. Possible
             * Error Codes: * PERMISSION_DENIED: If the customer doesn't belong to the reseller. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. For example, if the
             * number of seats being changed to is greater than the allowed number of max seats for the resource. Or decreasing seats for a commitment based plan. * NOT_FOUND: Entitlement resource
             * not found. * INTERNAL: Any non-user error related to a technical issue in the backend. In this case, contact Cloud Channel support. * UNKNOWN: Any non-user error related to a
             * technical issue in the backend. In this case, contact Cloud Channel support. Return Value: Long Running Operation ID. To get the results of the operation, call the GetOperation
             * method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
             */
            changeParameters(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the entitlement to update. The name takes the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1ChangeParametersRequest;
            }): Request<GoogleLongrunningOperation>;
            changeParameters(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the entitlement to update. The name takes the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1ChangeParametersRequest): Request<GoogleLongrunningOperation>;
            /**
             * Updates the renewal settings for an existing customer entitlement. An entitlement update is a long-running operation and results in updates to the entitlement as a result of
             * fulfillment. Possible Error Codes: * PERMISSION_DENIED: If the customer doesn't belong to the reseller. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. *
             * NOT_FOUND: Entitlement resource not found. * NOT_COMMITMENT_PLAN: Renewal Settings are only applicable for a commitment plan. Can't enable or disable renewal for non-commitment
             * plans. * INTERNAL: Any non user error related to a technical issue in the backend. In this case, contact Cloud Channel support. * UNKNOWN: Any non user error related to a technical
             * issue in the backend. In this case, contact Cloud Channel support. Return Value: Long Running Operation ID. To get the results of the operation, call the GetOperation method of
             * CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
             */
            changeRenewalSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the entitlement to update. The name takes the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1ChangeRenewalSettingsRequest;
            }): Request<GoogleLongrunningOperation>;
            changeRenewalSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the entitlement to update. The name takes the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1ChangeRenewalSettingsRequest): Request<GoogleLongrunningOperation>;
            /**
             * Creates an entitlement for a customer. Possible Error Codes: * PERMISSION_DENIED: If the customer doesn't belong to the reseller. * INVALID_ARGUMENT: It can happen in below
             * scenarios - * Missing or invalid required parameters in the request. * Cannot purchase an entitlement if there is already an entitlement for customer, for a SKU from the same
             * product family. * INVALID_VALUE: Offer passed in isn't valid. Make sure OfferId is valid. If it is valid, then contact Google Channel support for further troubleshooting. *
             * NOT_FOUND: If the customer or offer resource is not found for the reseller. * ALREADY_EXISTS: This failure can happen in the following cases: * If the SKU has been already purchased
             * for the customer. * If the customer's primary email already exists. In this case retry after changing the customer's primary contact email. * CONDITION_NOT_MET or
             * FAILED_PRECONDITION: This failure can happen in the following cases: * Purchasing a SKU that requires domain verification and the domain has not been verified. * Purchasing an
             * Add-On SKU like Vault or Drive without purchasing the pre-requisite SKU, such as Google Workspace Business Starter. * Applicable only for developer accounts: reseller and resold
             * domain. Must meet the following domain naming requirements: * Domain names must start with goog-test. * Resold domain names must include the reseller domain. * INTERNAL: Any
             * non-user error related to a technical issue in the backend. Contact Cloud Channel Support in this case. * UNKNOWN: Any non-user error related to a technical issue in the backend.
             * Contact Cloud Channel Support in this case. Return Value: Long Running Operation ID. To get the results of the operation, call the GetOperation method of
             * CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of reseller's customer account in which to create the entitlement. The parent takes the format: accounts/{account_id}/customers/{customer_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1CreateEntitlementRequest;
            }): Request<GoogleLongrunningOperation>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of reseller's customer account in which to create the entitlement. The parent takes the format: accounts/{account_id}/customers/{customer_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1CreateEntitlementRequest): Request<GoogleLongrunningOperation>;
            /**
             * Returns a requested Entitlement resource. Possible Error Codes: * PERMISSION_DENIED: If the customer doesn't belong to the reseller. * INVALID_ARGUMENT: Missing or invalid required
             * parameters in the request. * NOT_FOUND: If the entitlement is not found for the customer. Return Value: If found, the requested Entitlement resource, otherwise returns an error.
             */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The resource name of the entitlement to retrieve. The name takes the format: accounts/{account_id}/customers/{customer_id}/entitlements/{id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudChannelV1Entitlement>;
            /**
             * List Entitlements belonging to a customer. Possible Error Codes: * PERMISSION_DENIED: If the customer doesn't belong to the reseller. * INVALID_ARGUMENT: Missing or invalid required
             * parameters in the request. Return Value: List of Entitlements belonging to the customer, or empty list if there are none.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Optional. Requested page size. Server might return fewer results than requested. If unspecified, at most 50 entitlements will be returned. The maximum value is 100; values above
                 * 100 will be coerced to 100.
                 */
                pageSize?: number;
                /**
                 * Optional. A token identifying a page of results, if other than the first one. Typically obtained via ListEntitlementsResponse.next_page_token of the previous
                 * CloudChannelService.ListEntitlements call.
                 */
                pageToken?: string;
                /** Required. The resource name of the reseller's customer account for which to list entitlements. The parent takes the format: accounts/{account_id}/customers/{customer_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudChannelV1ListEntitlementsResponse>;
            /**
             * Starts paid service for a trial entitlement. Starts paid service for a trial entitlement immediately. This method is only applicable if a plan has already been set up for a trial
             * entitlement but has some trial days remaining. Possible Error Codes: * PERMISSION_DENIED: If the customer doesn't belong to the reseller. * INVALID_ARGUMENT: Missing or invalid
             * required parameters in the request. * NOT_FOUND: Entitlement resource not found. * FAILED_PRECONDITION/NOT_IN_TRIAL: This method only works for entitlement on trial plans. *
             * INTERNAL: Any non-user error related to a technical issue in the backend. In this case, contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in
             * the backend. In this case, contact Cloud Channel support. Return Value: Long Running Operation ID. To get the results of the operation, call the GetOperation method of
             * CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
             */
            startPaidService(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the entitlement for which paid service is being started. The name takes the format:
                 * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1StartPaidServiceRequest;
            }): Request<GoogleLongrunningOperation>;
            startPaidService(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the entitlement for which paid service is being started. The name takes the format:
                 * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1StartPaidServiceRequest): Request<GoogleLongrunningOperation>;
            /**
             * Suspends a previously fulfilled entitlement. An entitlement suspension is a long-running operation. Possible Error Codes: * PERMISSION_DENIED: If the customer doesn't belong to the
             * reseller. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. * NOT_FOUND: Entitlement resource not found. * NOT_ACTIVE: Entitlement is not active. *
             * INTERNAL: Any non-user error related to a technical issue in the backend. In this case, contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in
             * the backend. In this case, contact Cloud Channel support. Return Value: Long Running Operation ID. To get the results of the operation, call the GetOperation method of
             * CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
             */
            suspend(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The resource name of the entitlement to suspend. The name takes the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1SuspendEntitlementRequest;
            }): Request<GoogleLongrunningOperation>;
            suspend(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The resource name of the entitlement to suspend. The name takes the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1SuspendEntitlementRequest): Request<GoogleLongrunningOperation>;
        }
        interface CustomersResource {
            /**
             * Creates a new Customer resource under the reseller or distributor account. Possible Error Codes: * PERMISSION_DENIED: If the reseller account making the request and the reseller
             * account being queried for are different. * INVALID_ARGUMENT: It can happen in following scenarios - * Missing or invalid required parameters in the request. * Domain field value
             * doesn't match the domain specified in primary email. Return Value: If successful, the newly created Customer resource, otherwise returns an error.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of reseller account in which to create the customer. The parent takes the format: accounts/{account_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1Customer;
            }): Request<GoogleCloudChannelV1Customer>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of reseller account in which to create the customer. The parent takes the format: accounts/{account_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1Customer): Request<GoogleCloudChannelV1Customer>;
            /**
             * Deletes the given Customer permanently and irreversibly. Possible Error Codes: * PERMISSION_DENIED: If the account making the request does not own this customer. * INVALID_ARGUMENT:
             * Missing or invalid required parameters in the request. * FAILED_PRECONDITION: If the customer has existing entitlements. * NOT_FOUND: No Customer resource found for the name
             * specified in the request.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The resource name of the customer to delete. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /**
             * Returns a requested Customer resource. Possible Error Codes: * PERMISSION_DENIED: If the reseller account making the request and the reseller account being queried for are
             * different. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. * NOT_FOUND: If the customer resource doesn't exist. Usually the result of an invalid name
             * parameter. Return Value: Customer resource if found, error otherwise.
             */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The resource name of the customer to retrieve. The name takes the format: accounts/{account_id}/customers/{customer_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudChannelV1Customer>;
            /**
             * List downstream Customers. Possible Error Codes: * PERMISSION_DENIED: If the reseller account making the request and the reseller account being queried for are different. *
             * INVALID_ARGUMENT: Missing or invalid required parameters in the request. Return Value: List of Customers pertaining to the reseller or empty list if there are none.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Optional. The maximum number of customers to return. The service may return fewer than this value. If unspecified, at most 10 customers will be returned. The maximum value is
                 * 50; values about 50 will be coerced to 50.
                 */
                pageSize?: number;
                /**
                 * Optional. A token identifying a page of results, if other than the first one. Typically obtained via ListCustomersResponse.next_page_token of the previous
                 * CloudChannelService.ListCustomers call.
                 */
                pageToken?: string;
                /** Required. The resource name of the reseller account from which to list customers. The parent takes the format: accounts/{account_id}. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudChannelV1ListCustomersResponse>;
            /**
             * Lists the Purchasable Offers for the following cases: * Offers that can be newly purchased for a customer * Offers that can be changed to, for an entitlement. Possible Error Codes:
             * * PERMISSION_DENIED: If the customer doesn't belong to the reseller * INVALID_ARGUMENT: Missing or invalid required parameters in the request.
             */
            listPurchasableOffers(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. Resource name of the entitlement. Format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} */
                "changeOfferPurchase.entitlement"?: string;
                /** Optional. Resource name of the SKU that is being changed to. Should be provided if upgrading or downgrading an entitlement. Format: products/{product_id}/skus/{sku_id} */
                "changeOfferPurchase.newSku"?: string;
                /** Required. SKU that the result should be restricted to. Format: products/{product_id}/skus/{sku_id}. */
                "createEntitlementPurchase.sku"?: string;
                /** Required. The resource name of the customer for which to list Offers. Format: accounts/{account_id}/customers/{customer_id}. */
                customer: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. The BCP-47 language code, such as "en-US". If specified, the response will be localized to the corresponding language code. Default is "en-US". */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Optional. Requested page size. Server might return fewer results than requested. If unspecified, at most 100 Offers will be returned. The maximum value is 1000; values above
                 * 1000 will be coerced to 1000.
                 */
                pageSize?: number;
                /** Optional. A token identifying a page of results, if other than the first one. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudChannelV1ListPurchasableOffersResponse>;
            /**
             * Lists the Purchasable SKUs for following cases: * SKUs that can be newly purchased for a customer * SKUs that can be upgraded/downgraded to, for an entitlement. Possible Error
             * Codes: * PERMISSION_DENIED: If the customer doesn't belong to the reseller * INVALID_ARGUMENT: Missing or invalid required parameters in the request.
             */
            listPurchasableSkus(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. Change Type for the entitlement. */
                "changeOfferPurchase.changeType"?: string;
                /** Required. Resource name of the entitlement. Format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} */
                "changeOfferPurchase.entitlement"?: string;
                /** Required. List SKUs belonging to this Product. Format: products/{product_id}. Supports products/- to retrieve SKUs for all products. */
                "createEntitlementPurchase.product"?: string;
                /** Required. The resource name of the customer for which to list SKUs. Format: accounts/{account_id}/customers/{customer_id}. */
                customer: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. The BCP-47 language code, such as "en-US". If specified, the response will be localized to the corresponding language code. Default is "en-US". */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Optional. Requested page size. Server might return fewer results than requested. If unspecified, at most 100 SKUs will be returned. The maximum value is 1000; values above 1000
                 * will be coerced to 1000.
                 */
                pageSize?: number;
                /** Optional. A token identifying a page of results, if other than the first one. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudChannelV1ListPurchasableSkusResponse>;
            /**
             * Updates an existing Customer resource belonging to the reseller or distributor. Possible Error Codes: * PERMISSION_DENIED: If the reseller account making the request and the
             * reseller account being queried for are different. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. * NOT_FOUND: No Customer resource found for the name
             * specified in the request. Return Value: If successful, the updated Customer resource, otherwise returns an error.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Output only. Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The update mask that applies to the resource. Optional. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1Customer;
            }): Request<GoogleCloudChannelV1Customer>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Output only. Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id} */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The update mask that applies to the resource. Optional. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1Customer): Request<GoogleCloudChannelV1Customer>;
            /**
             * Creates a Cloud Identity for the given customer using the customer's information or the information provided here, if present. Possible Error Codes: * PERMISSION_DENIED: If the
             * customer doesn't belong to the reseller. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. * NOT_FOUND: If the customer is not found for the reseller. *
             * ALREADY_EXISTS: If the customer's primary email already exists. In this case, retry after changing the customer's primary contact email. * INTERNAL: Any non-user error related to a
             * technical issue in the backend. Contact Cloud Channel support in this case. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support
             * in this case. Return Value: Long Running Operation ID. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata
             * will contain an instance of OperationMetadata.
             */
            provisionCloudIdentity(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id} */
                customer: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1ProvisionCloudIdentityRequest;
            }): Request<GoogleLongrunningOperation>;
            provisionCloudIdentity(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id} */
                customer: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1ProvisionCloudIdentityRequest): Request<GoogleLongrunningOperation>;
            /**
             * Transfers customer entitlements to new reseller. Possible Error Codes: * PERMISSION_DENIED: If the customer doesn't belong to the reseller. * INVALID_ARGUMENT: Missing or invalid
             * required parameters in the request. * NOT_FOUND: If the customer or offer resource is not found for the reseller. * ALREADY_EXISTS: If the SKU has been already transferred for the
             * customer. * CONDITION_NOT_MET or FAILED_PRECONDITION: This failure can happen in the following cases: * Transferring a SKU that requires domain verification and the domain has not
             * been verified. * Transferring an Add-On SKU like Vault or Drive without transferring the pre-requisite SKU, such as G Suite Basic. * Applicable only for developer accounts: reseller
             * and resold domain must follow the domain naming convention as follows: * Domain names must start with goog-test. * Resold domain names must include the reseller domain. * All
             * transferring entitlements must be specified. * INTERNAL: Any non-user error related to a technical issue in the backend. Please contact Cloud Channel Support in this case. *
             * UNKNOWN: Any non-user error related to a technical issue in the backend. Please contact Cloud Channel Support in this case. Return Value: Long Running Operation ID. To get the
             * results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
             */
            transferEntitlements(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of reseller's customer account where the entitlements transfer to. The parent takes the format: accounts/{account_id}/customers/{customer_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1TransferEntitlementsRequest;
            }): Request<GoogleLongrunningOperation>;
            transferEntitlements(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of reseller's customer account where the entitlements transfer to. The parent takes the format: accounts/{account_id}/customers/{customer_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1TransferEntitlementsRequest): Request<GoogleLongrunningOperation>;
            /**
             * Transfers customer entitlements from current reseller to Google. Possible Error Codes: * PERMISSION_DENIED: If the customer doesn't belong to the reseller. * INVALID_ARGUMENT:
             * Missing or invalid required parameters in the request. * NOT_FOUND: If the customer or offer resource is not found for the reseller. * ALREADY_EXISTS: If the SKU has been already
             * transferred for the customer. * CONDITION_NOT_MET or FAILED_PRECONDITION: This failure can happen in the following cases: * Transferring a SKU that requires domain verification and
             * the domain has not been verified. * Transferring an Add-On SKU like Vault or Drive without purchasing the pre-requisite SKU, such as G Suite Basic. * Applicable only for developer
             * accounts: reseller and resold domain must follow the domain naming convention as follows: * Domain names must start with goog-test. * Resold domain names must include the reseller
             * domain. * INTERNAL: Any non-user error related to a technical issue in the backend. Please contact Cloud Channel Support in this case. * UNKNOWN: Any non-user error related to a
             * technical issue in the backend. Please contact Cloud Channel Support in this case. Return Value: Long Running Operation ID. To get the results of the operation, call the
             * GetOperation method of CloudChannelOperationsService. The response will contain google.protobuf.Empty on success. The Operation metadata will contain an instance of
             * OperationMetadata.
             */
            transferEntitlementsToGoogle(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of reseller's customer account where the entitlements transfer from. The parent takes the format: accounts/{account_id}/customers/{customer_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1TransferEntitlementsToGoogleRequest;
            }): Request<GoogleLongrunningOperation>;
            transferEntitlementsToGoogle(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of reseller's customer account where the entitlements transfer from. The parent takes the format: accounts/{account_id}/customers/{customer_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1TransferEntitlementsToGoogleRequest): Request<GoogleLongrunningOperation>;
            entitlements: EntitlementsResource;
        }
        interface OffersResource {
            /** Lists the Offers the reseller can sell. Possible Error Codes: * INVALID_ARGUMENT: Missing or invalid required parameters in the request. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Optional. The expression to filter results by name (name of the Offer), sku.name (name of the SKU) or sku.product.name (name of the Product). Example 1:
                 * sku.product.name=products/p1 AND sku.name!=products/p1/skus/s1 Example 2: name=accounts/a1/offers/o1
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. The BCP-47 language code, such as "en-US". If specified, the response will be localized to the corresponding language code. Default is "en-US". */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Optional. Requested page size. Server might return fewer results than requested. If unspecified, at most 500 Offers will be returned. The maximum value is 1000; values above
                 * 1000 will be coerced to 1000.
                 */
                pageSize?: number;
                /** Optional. A token identifying a page of results, if other than the first one. */
                pageToken?: string;
                /** Required. The resource name of the reseller account from which to list Offers. The parent takes the format: accounts/{account_id}. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudChannelV1ListOffersResponse>;
        }
        interface AccountsResource {
            /**
             * Confirms the existence of Cloud Identity accounts, based on the domain and whether the Cloud Identity accounts are owned by the reseller. Possible Error Codes: * PERMISSION_DENIED:
             * If the reseller account making the request and the reseller account being queried for are different. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. *
             * INVALID_VALUE: Invalid domain value in the request. Return Value: List of CloudIdentityCustomerAccount resources for the domain. List may be empty. Note: in the v1alpha1 version of
             * the API, a NOT_FOUND error is returned if no CloudIdentityCustomerAccount resources match the domain.
             */
            checkCloudIdentityAccountsExist(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of the reseller account. The parent takes the format: accounts/{account_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1CheckCloudIdentityAccountsExistRequest;
            }): Request<GoogleCloudChannelV1CheckCloudIdentityAccountsExistResponse>;
            checkCloudIdentityAccountsExist(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of the reseller account. The parent takes the format: accounts/{account_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1CheckCloudIdentityAccountsExistRequest): Request<GoogleCloudChannelV1CheckCloudIdentityAccountsExistResponse>;
            /**
             * Lists service accounts with subscriber privileges on the Cloud Pub/Sub topic created for this Channel Services account. Possible Error Codes: * PERMISSION_DENIED: If the reseller
             * account making the request and the reseller account being provided are different, or if the account is not a super admin. * INVALID_ARGUMENT: Missing or invalid required parameters
             * in the request. * NOT_FOUND: If the topic resource doesn't exist. * INTERNAL: Any non-user error related to a technical issue in the backend. In this case, contact Cloud Channel
             * support. * UNKNOWN: Any non-user error related to a technical issue in the backend. In this case, contact Cloud Channel support. Return Value: List of service email addresses if
             * successful, otherwise error is returned.
             */
            listSubscribers(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Required. Resource name of the account. */
                account: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Optional. The maximum number of service accounts to return. The service may return fewer than this value. If unspecified, at most 100 service accounts will be returned. The
                 * maximum value is 1000; values above 1000 will be coerced to 1000.
                 */
                pageSize?: number;
                /**
                 * Optional. A page token, received from a previous `ListSubscribers` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to
                 * `ListSubscribers` must match the call that provided the page token.
                 */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudChannelV1ListSubscribersResponse>;
            /**
             * List TransferableOffers of a customer based on Cloud Identity ID or Customer Name in the request. This method is used when a reseller gets the entitlement information of a customer
             * that is not owned. The reseller should provide the customer's Cloud Identity ID or Customer Name. Possible Error Codes: * PERMISSION_DENIED: Appears because of one of the following:
             * * If the customer doesn't belong to the reseller and no auth token or invalid auth token is supplied. * If the reseller account making the request and the reseller account being
             * queried for are different. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. Return Value: List of TransferableOffer for the given customer and SKU.
             */
            listTransferableOffers(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of the reseller's account. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1ListTransferableOffersRequest;
            }): Request<GoogleCloudChannelV1ListTransferableOffersResponse>;
            listTransferableOffers(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of the reseller's account. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1ListTransferableOffersRequest): Request<GoogleCloudChannelV1ListTransferableOffersResponse>;
            /**
             * List TransferableSkus of a customer based on Cloud Identity ID or Customer Name in the request. This method is used when a reseller lists the entitlements information of a customer
             * that is not owned. The reseller should provide the customer's Cloud Identity ID or Customer Name. Possible Error Codes: * PERMISSION_DENIED: Appears because of one of the following
             * - * The customer doesn't belong to the reseller and no auth token. * The supplied auth token is invalid. * The reseller account making the request and the queries reseller account
             * are different. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. Return Value: List of TransferableSku for the given customer.
             */
            listTransferableSkus(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of the reseller's account. The parent takes the format: accounts/{account_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1ListTransferableSkusRequest;
            }): Request<GoogleCloudChannelV1ListTransferableSkusResponse>;
            listTransferableSkus(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of the reseller's account. The parent takes the format: accounts/{account_id} */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1ListTransferableSkusRequest): Request<GoogleCloudChannelV1ListTransferableSkusResponse>;
            /**
             * Registers a service account with subscriber privileges on the Cloud Pub/Sub topic created for this Channel Services account. Once you create a subscriber, you will get the events as
             * per SubscriberEvent Possible Error Codes: * PERMISSION_DENIED: If the reseller account making the request and the reseller account being provided are different, or if the
             * impersonated user is not a super admin. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. * INTERNAL: Any non-user error related to a technical issue in the
             * backend. In this case, contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. In this case, contact Cloud Channel support. Return
             * Value: Topic name with service email address registered if successful, otherwise error is returned.
             */
            register(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Required. Resource name of the account. */
                account: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1RegisterSubscriberRequest;
            }): Request<GoogleCloudChannelV1RegisterSubscriberResponse>;
            register(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Required. Resource name of the account. */
                account: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1RegisterSubscriberRequest): Request<GoogleCloudChannelV1RegisterSubscriberResponse>;
            /**
             * Unregisters a service account with subscriber privileges on the Cloud Pub/Sub topic created for this Channel Services account. If there are no more service account left with
             * sunbscriber privileges, the topic will be deleted. You can check this by calling ListSubscribers api. Possible Error Codes: * PERMISSION_DENIED: If the reseller account making the
             * request and the reseller account being provided are different, or if the impersonated user is not a super admin. * INVALID_ARGUMENT: Missing or invalid required parameters in the
             * request. * NOT_FOUND: If the topic resource doesn't exist. * INTERNAL: Any non-user error related to a technical issue in the backend. In this case, contact Cloud Channel support. *
             * UNKNOWN: Any non-user error related to a technical issue in the backend. In this case, contact Cloud Channel support. Return Value: Topic name from which service email address has
             * been unregistered if successful, otherwise error is returned. If the service email was already not associated with the topic, the success response will be returned.
             */
            unregister(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Required. Resource name of the account. */
                account: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudChannelV1UnregisterSubscriberRequest;
            }): Request<GoogleCloudChannelV1UnregisterSubscriberResponse>;
            unregister(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Required. Resource name of the account. */
                account: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudChannelV1UnregisterSubscriberRequest): Request<GoogleCloudChannelV1UnregisterSubscriberResponse>;
            channelPartnerLinks: ChannelPartnerLinksResource;
            customers: CustomersResource;
            offers: OffersResource;
        }
        interface OperationsResource {
            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support
             * this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the
             * operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a
             * google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
             */
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleLongrunningCancelOperationRequest;
            }): Request<{}>;
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleLongrunningCancelOperationRequest): Request<{}>;
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't
             * support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be deleted. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningOperation>;
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services
             * to override the binding to use different resource name schemes, such as `users/∗/operations`. To override the binding, API services can add a binding such as
             * `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must
             * ensure the name binding is the parent resource, without the operations collection id.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** The standard list filter. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation's parent resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The standard list page size. */
                pageSize?: number;
                /** The standard list page token. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningListOperationsResponse>;
        }
        interface SkusResource {
            /** Lists the SKUs for a product the reseller is authorized to sell. Possible Error Codes: * INVALID_ARGUMENT: Missing or invalid required parameters in the request. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Required. Resource name of the reseller. Format: accounts/{account_id}. */
                account?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. The BCP-47 language code, such as "en-US". If specified, the response will be localized to the corresponding language code. Default is "en-US". */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Optional. Requested page size. Server might return fewer results than requested. If unspecified, at most 100 SKUs will be returned. The maximum value is 1000; values above 1000
                 * will be coerced to 1000.
                 */
                pageSize?: number;
                /** Optional. A token identifying a page of results, if other than the first one. Optional. */
                pageToken?: string;
                /** Required. The resource name of the Product for which to list SKUs. The parent takes the format: products/{product_id}. Supports products/- to retrieve SKUs for all products. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudChannelV1ListSkusResponse>;
        }
        interface ProductsResource {
            /** Lists the Products the reseller is authorized to sell. Possible Error Codes: * INVALID_ARGUMENT: Missing or invalid required parameters in the request. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Required. The resource name of the reseller account. Format: accounts/{account_id}. */
                account?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. The BCP-47 language code, such as "en-US". If specified, the response will be localized to the corresponding language code. Default is "en-US". */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Optional. Requested page size. Server might return fewer results than requested. If unspecified, at most 100 Products will be returned. The maximum value is 1000; values above
                 * 1000 will be coerced to 1000.
                 */
                pageSize?: number;
                /** Optional. A token identifying a page of results, if other than the first one. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudChannelV1ListProductsResponse>;
            skus: SkusResource;
        }

        const accounts: AccountsResource;

        const operations: OperationsResource;

        const products: ProductsResource;
    }
}
