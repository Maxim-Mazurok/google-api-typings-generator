/* This is stub file for gapi.client.cloudsupport definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20220506

gapi.load('client', () => {
    /** now we can use gapi.client */
    gapi.client.load('cloudsupport', 'v2beta', () => {
        /** now we can use gapi.client.cloudsupport */

        /** don't forget to authenticate your client before sending any request to resources: */
        /** declare client_id registered in Google Developers Console */
        const client_id = '<<PUT YOUR CLIENT ID HERE>>';
        const scope = [
            /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
            'https://www.googleapis.com/auth/cloud-platform',
        ];
        const immediate = false;
        gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
            if (authResult && !authResult.error) {
                /** handle successful authorization */
                run();
            } else {
                /** handle authorization error */
            }
        });
    });

    async function run() {
        /** Create a file attachment on a case or Cloud resource. */
        await gapi.client.cloudsupport.attachments.create({
            parent: "Test string",
        }, {
            attachment: {
                createTime: "Test string",
                creator: {
                    displayName: "Test string",
                    email: "Test string",
                    googleSupport: true,
                },
                filename: "Test string",
                mimeType: "Test string",
                name: "Test string",
                sizeBytes: "Test string",
            },
        });
        /**
         * Retrieve valid classifications to be used when creating a support case. The classications are hierarchical, with each classification containing all levels of the hierarchy, separated by
         * " > ". For example "Technical Issue > Compute > Compute Engine".
         */
        await gapi.client.cloudsupport.caseClassifications.search({
            pageSize: 42,
            pageToken: "Test string",
            query: "Test string",
        });
        /** Close the specified case. */
        await gapi.client.cloudsupport.cases.close({
            name: "Test string",
        }, {
        });
        /** Retrieve all attachments associated with a support case. */
        await gapi.client.cloudsupport.cases.attachments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Add a new comment to the specified Case. */
        await gapi.client.cloudsupport.cases.comments.create({
            parent: "Test string",
        }, {
            body: "Test string",
            createTime: "Test string",
            creator: {
                displayName: "Test string",
                email: "Test string",
                googleSupport: true,
            },
            name: "Test string",
            plainTextBody: "Test string",
        });
        /** Retrieve all Comments associated with the Case object. */
        await gapi.client.cloudsupport.cases.comments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Create a new case and associate it with the given Cloud resource. */
        await gapi.client.cloudsupport.cases.create({
            parent: "Test string",
        }, {
            classification: {
                displayName: "Test string",
                id: "Test string",
            },
            createTime: "Test string",
            creator: {
                displayName: "Test string",
                email: "Test string",
                googleSupport: true,
            },
            description: "Test string",
            displayName: "Test string",
            escalated: true,
            name: "Test string",
            priority: "Test string",
            severity: "Test string",
            state: "Test string",
            subscriberEmailAddresses: [
                "Test string"            ],
            testCase: true,
            timeZone: "Test string",
            updateTime: "Test string",
        });
        /** Retrieve all attachments associated with a support case. */
        await gapi.client.cloudsupport.cases.attachments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Add a new comment to the specified Case. */
        await gapi.client.cloudsupport.cases.comments.create({
            parent: "Test string",
        }, {
            body: "Test string",
            createTime: "Test string",
            creator: {
                displayName: "Test string",
                email: "Test string",
                googleSupport: true,
            },
            name: "Test string",
            plainTextBody: "Test string",
        });
        /** Retrieve all Comments associated with the Case object. */
        await gapi.client.cloudsupport.cases.comments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Escalate a case. Escalating a case will initiate the Cloud Support escalation management process. This operation is only available to certain Customer Care tiers. Go to
         * https://cloud.google.com/support and look for 'Technical support escalations' in the feature list to find out which tiers are able to perform escalations.
         */
        await gapi.client.cloudsupport.cases.escalate({
            name: "Test string",
        }, {
            escalation: {
                justification: "Test string",
                reason: "Test string",
            },
        });
        /** Retrieve all attachments associated with a support case. */
        await gapi.client.cloudsupport.cases.attachments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Add a new comment to the specified Case. */
        await gapi.client.cloudsupport.cases.comments.create({
            parent: "Test string",
        }, {
            body: "Test string",
            createTime: "Test string",
            creator: {
                displayName: "Test string",
                email: "Test string",
                googleSupport: true,
            },
            name: "Test string",
            plainTextBody: "Test string",
        });
        /** Retrieve all Comments associated with the Case object. */
        await gapi.client.cloudsupport.cases.comments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Retrieve the specified case. */
        await gapi.client.cloudsupport.cases.get({
            name: "Test string",
        });
        /** Retrieve all attachments associated with a support case. */
        await gapi.client.cloudsupport.cases.attachments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Add a new comment to the specified Case. */
        await gapi.client.cloudsupport.cases.comments.create({
            parent: "Test string",
        }, {
            body: "Test string",
            createTime: "Test string",
            creator: {
                displayName: "Test string",
                email: "Test string",
                googleSupport: true,
            },
            name: "Test string",
            plainTextBody: "Test string",
        });
        /** Retrieve all Comments associated with the Case object. */
        await gapi.client.cloudsupport.cases.comments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Retrieve all cases under the specified parent. */
        await gapi.client.cloudsupport.cases.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Retrieve all attachments associated with a support case. */
        await gapi.client.cloudsupport.cases.attachments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Add a new comment to the specified Case. */
        await gapi.client.cloudsupport.cases.comments.create({
            parent: "Test string",
        }, {
            body: "Test string",
            createTime: "Test string",
            creator: {
                displayName: "Test string",
                email: "Test string",
                googleSupport: true,
            },
            name: "Test string",
            plainTextBody: "Test string",
        });
        /** Retrieve all Comments associated with the Case object. */
        await gapi.client.cloudsupport.cases.comments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Update the specified case. Only a subset of fields (display_name, description, time_zone, subscriber_email_addresses, related_resources, severity, priority, primary_contact, and labels)
         * can be updated.
         */
        await gapi.client.cloudsupport.cases.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            classification: {
                displayName: "Test string",
                id: "Test string",
            },
            createTime: "Test string",
            creator: {
                displayName: "Test string",
                email: "Test string",
                googleSupport: true,
            },
            description: "Test string",
            displayName: "Test string",
            escalated: true,
            name: "Test string",
            priority: "Test string",
            severity: "Test string",
            state: "Test string",
            subscriberEmailAddresses: [
                "Test string"            ],
            testCase: true,
            timeZone: "Test string",
            updateTime: "Test string",
        });
        /** Retrieve all attachments associated with a support case. */
        await gapi.client.cloudsupport.cases.attachments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Add a new comment to the specified Case. */
        await gapi.client.cloudsupport.cases.comments.create({
            parent: "Test string",
        }, {
            body: "Test string",
            createTime: "Test string",
            creator: {
                displayName: "Test string",
                email: "Test string",
                googleSupport: true,
            },
            name: "Test string",
            plainTextBody: "Test string",
        });
        /** Retrieve all Comments associated with the Case object. */
        await gapi.client.cloudsupport.cases.comments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Search cases using the specified query. */
        await gapi.client.cloudsupport.cases.search({
            pageSize: 42,
            pageToken: "Test string",
            query: "Test string",
        });
        /** Retrieve all attachments associated with a support case. */
        await gapi.client.cloudsupport.cases.attachments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Add a new comment to the specified Case. */
        await gapi.client.cloudsupport.cases.comments.create({
            parent: "Test string",
        }, {
            body: "Test string",
            createTime: "Test string",
            creator: {
                displayName: "Test string",
                email: "Test string",
                googleSupport: true,
            },
            name: "Test string",
            plainTextBody: "Test string",
        });
        /** Retrieve all Comments associated with the Case object. */
        await gapi.client.cloudsupport.cases.comments.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Download a file attachment on a case. Note: HTTP requests must append "?alt=media" to the URL. */
        await gapi.client.cloudsupport.media.download({
            name: "Test string",
        });
        /** Create a file attachment on a case or Cloud resource. */
        await gapi.client.cloudsupport.media.upload({
            parent: "Test string",
        }, {
            attachment: {
                createTime: "Test string",
                creator: {
                    displayName: "Test string",
                    email: "Test string",
                    googleSupport: true,
                },
                filename: "Test string",
                mimeType: "Test string",
                name: "Test string",
                sizeBytes: "Test string",
            },
        });
    }
});
