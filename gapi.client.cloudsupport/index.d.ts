/* Type definitions for non-npm package Google Cloud Support API v2beta 2.0 */
// Project: https://cloud.google.com/support/docs/apis
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://cloudsupport.googleapis.com/$discovery/rest?version=v2beta
// Revision: 20220328

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Google Cloud Support API v2beta */
    function load(name: "cloudsupport", version: "v2beta"): PromiseLike<void>;
    function load(name: "cloudsupport", version: "v2beta", callback: () => any): void;

    namespace cloudsupport {
        interface Actor {
            /**
             * The name to display for the actor. If not provided, it is inferred from credentials supplied during case creation. When an email is provided, a display name must also be provided.
             * This will be obfuscated if the user is a Google Support agent.
             */
            displayName?: string;
            /**
             * The email address of the actor. If not provided, it is inferred from credentials supplied during case creation. If the authenticated principal does not have an email address, one
             * must be provided. When a name is provided, an email must also be provided. This will be obfuscated if the user is a Google Support agent.
             */
            email?: string;
            /** Output only. Whether the actor is a Google support actor. */
            googleSupport?: boolean;
        }
        interface Attachment {
            /** Output only. The time at which the attachment was created. */
            createTime?: string;
            /** Output only. The user who uploaded the attachment. Note, the name and email will be obfuscated if the attachment was uploaded by Google support. */
            creator?: Actor;
            /** The filename of the attachment (e.g. `"graph.jpg"`). */
            filename?: string;
            /** Output only. The MIME type of the attachment (e.g. text/plain). */
            mimeType?: string;
            /** Output only. The resource name of the attachment. */
            name?: string;
            /** Output only. The size of the attachment in bytes. */
            sizeBytes?: string;
        }
        interface Blobstore2Info {
            /** # gdata.* are outside protos with mising documentation */
            blobGeneration?: string;
            /** # gdata.* are outside protos with mising documentation */
            blobId?: string;
            /** # gdata.* are outside protos with mising documentation */
            downloadReadHandle?: string;
            /** # gdata.* are outside protos with mising documentation */
            readToken?: string;
            /** # gdata.* are outside protos with mising documentation */
            uploadMetadataContainer?: string;
        }
        interface Case {
            /** The issue classification applicable to this case. */
            classification?: CaseClassification;
            /** Output only. The time this case was created. */
            createTime?: string;
            /** The user who created the case. Note: The name and email will be obfuscated if the case was created by Google Support. */
            creator?: Actor;
            /** A broad description of the issue. */
            description?: string;
            /** The short summary of the issue reported in this case. */
            displayName?: string;
            /** Whether the case is currently escalated. */
            escalated?: boolean;
            /** The resource name for the case. */
            name?: string;
            /** The priority of this case. If this is set, do not set severity. */
            priority?: string;
            /** The severity of this case. Deprecated. Use priority instead. */
            severity?: string;
            /** Output only. The current status of the support case. */
            state?: string;
            /** The email addresses to receive updates on this case. */
            subscriberEmailAddresses?: string[];
            /** Whether this case was created for internal API testing and should not be acted on by the support team. */
            testCase?: boolean;
            /** The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API. */
            timeZone?: string;
            /** Output only. The time this case was last updated. */
            updateTime?: string;
        }
        interface CaseClassification {
            /** The display name of the classification. */
            displayName?: string;
            /** The unique ID for a classification. Must be specified for case creation. */
            id?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface CloseCaseRequest {
        }
        interface Comment {
            /** The full comment body. Maximum of 120000 characters. This can contain rich text syntax. */
            body?: string;
            /** Output only. The time when this comment was created. */
            createTime?: string;
            /** Output only. The user or Google Support agent created this comment. */
            creator?: Actor;
            /** Output only. The resource name for the comment. */
            name?: string;
            /** Output only. An automatically generated plain text version of body with all rich text syntax stripped. */
            plainTextBody?: string;
        }
        interface CompositeMedia {
            /** # gdata.* are outside protos with mising documentation */
            blobRef?: string;
            /** # gdata.* are outside protos with mising documentation */
            blobstore2Info?: Blobstore2Info;
            /** # gdata.* are outside protos with mising documentation */
            cosmoBinaryReference?: string;
            /** # gdata.* are outside protos with mising documentation */
            crc32cHash?: number;
            /** # gdata.* are outside protos with mising documentation */
            inline?: string;
            /** # gdata.* are outside protos with mising documentation */
            length?: string;
            /** # gdata.* are outside protos with mising documentation */
            md5Hash?: string;
            /** # gdata.* are outside protos with mising documentation */
            objectId?: ObjectId;
            /** # gdata.* are outside protos with mising documentation */
            path?: string;
            /** # gdata.* are outside protos with mising documentation */
            referenceType?: string;
            /** # gdata.* are outside protos with mising documentation */
            sha1Hash?: string;
        }
        interface ContentTypeInfo {
            /** # gdata.* are outside protos with mising documentation */
            bestGuess?: string;
            /** # gdata.* are outside protos with mising documentation */
            fromBytes?: string;
            /** # gdata.* are outside protos with mising documentation */
            fromFileName?: string;
            /** # gdata.* are outside protos with mising documentation */
            fromHeader?: string;
            /** # gdata.* are outside protos with mising documentation */
            fromUrlPath?: string;
        }
        interface CreateAttachmentRequest {
            /** Required. The attachment to be created. */
            attachment?: Attachment;
        }
        interface DiffChecksumsResponse {
            /** # gdata.* are outside protos with mising documentation */
            checksumsLocation?: CompositeMedia;
            /** # gdata.* are outside protos with mising documentation */
            chunkSizeBytes?: string;
            /** # gdata.* are outside protos with mising documentation */
            objectLocation?: CompositeMedia;
            /** # gdata.* are outside protos with mising documentation */
            objectSizeBytes?: string;
            /** # gdata.* are outside protos with mising documentation */
            objectVersion?: string;
        }
        interface DiffDownloadResponse {
            /** # gdata.* are outside protos with mising documentation */
            objectLocation?: CompositeMedia;
        }
        interface DiffUploadRequest {
            /** # gdata.* are outside protos with mising documentation */
            checksumsInfo?: CompositeMedia;
            /** # gdata.* are outside protos with mising documentation */
            objectInfo?: CompositeMedia;
            /** # gdata.* are outside protos with mising documentation */
            objectVersion?: string;
        }
        interface DiffUploadResponse {
            /** # gdata.* are outside protos with mising documentation */
            objectVersion?: string;
            /** # gdata.* are outside protos with mising documentation */
            originalObject?: CompositeMedia;
        }
        interface DiffVersionResponse {
            /** # gdata.* are outside protos with mising documentation */
            objectSizeBytes?: string;
            /** # gdata.* are outside protos with mising documentation */
            objectVersion?: string;
        }
        interface DownloadParameters {
            /** # gdata.* are outside protos with mising documentation */
            allowGzipCompression?: boolean;
            /** # gdata.* are outside protos with mising documentation */
            ignoreRange?: boolean;
        }
        interface EscalateCaseRequest {
            /** The escalation object to be sent with the escalation request. */
            escalation?: Escalation;
        }
        interface Escalation {
            /** Required. A free text description to accompany the `reason` field above. Provides additional context on why the case is being escalated. */
            justification?: string;
            /** Required. The reason why the Case is being escalated. */
            reason?: string;
        }
        interface ListAttachmentsResponse {
            /** The list of attachments associated with the given case. */
            attachments?: Attachment[];
            /**
             * A token to retrieve the next page of results. This should be set in the `page_token` field of subsequent `cases.attachments.list` requests. If unspecified, there are no more results
             * to retrieve.
             */
            nextPageToken?: string;
        }
        interface ListCasesResponse {
            /** The list of cases associated with the cloud resource, after any filters have been applied. */
            cases?: Case[];
            /**
             * A token to retrieve the next page of results. This should be set in the `page_token` field of subsequent `ListCasesRequest` message that is issued. If unspecified, there are no more
             * results to retrieve.
             */
            nextPageToken?: string;
        }
        interface ListCommentsResponse {
            /** The list of Comments associated with the given Case. */
            comments?: Comment[];
            /**
             * A token to retrieve the next page of results. This should be set in the `page_token` field of subsequent `ListCommentsRequest` message that is issued. If unspecified, there are no
             * more results to retrieve.
             */
            nextPageToken?: string;
        }
        interface Media {
            /** # gdata.* are outside protos with mising documentation */
            algorithm?: string;
            /** # gdata.* are outside protos with mising documentation */
            bigstoreObjectRef?: string;
            /** # gdata.* are outside protos with mising documentation */
            blobRef?: string;
            /** # gdata.* are outside protos with mising documentation */
            blobstore2Info?: Blobstore2Info;
            /** # gdata.* are outside protos with mising documentation */
            compositeMedia?: CompositeMedia[];
            /** # gdata.* are outside protos with mising documentation */
            contentType?: string;
            /** # gdata.* are outside protos with mising documentation */
            contentTypeInfo?: ContentTypeInfo;
            /** # gdata.* are outside protos with mising documentation */
            cosmoBinaryReference?: string;
            /** # gdata.* are outside protos with mising documentation */
            crc32cHash?: number;
            /** # gdata.* are outside protos with mising documentation */
            diffChecksumsResponse?: DiffChecksumsResponse;
            /** # gdata.* are outside protos with mising documentation */
            diffDownloadResponse?: DiffDownloadResponse;
            /** # gdata.* are outside protos with mising documentation */
            diffUploadRequest?: DiffUploadRequest;
            /** # gdata.* are outside protos with mising documentation */
            diffUploadResponse?: DiffUploadResponse;
            /** # gdata.* are outside protos with mising documentation */
            diffVersionResponse?: DiffVersionResponse;
            /** # gdata.* are outside protos with mising documentation */
            downloadParameters?: DownloadParameters;
            /** # gdata.* are outside protos with mising documentation */
            filename?: string;
            /** # gdata.* are outside protos with mising documentation */
            hash?: string;
            /** # gdata.* are outside protos with mising documentation */
            hashVerified?: boolean;
            /** # gdata.* are outside protos with mising documentation */
            inline?: string;
            /** # gdata.* are outside protos with mising documentation */
            isPotentialRetry?: boolean;
            /** # gdata.* are outside protos with mising documentation */
            length?: string;
            /** # gdata.* are outside protos with mising documentation */
            md5Hash?: string;
            /** # gdata.* are outside protos with mising documentation */
            mediaId?: string;
            /** # gdata.* are outside protos with mising documentation */
            objectId?: ObjectId;
            /** # gdata.* are outside protos with mising documentation */
            path?: string;
            /** # gdata.* are outside protos with mising documentation */
            referenceType?: string;
            /** # gdata.* are outside protos with mising documentation */
            sha1Hash?: string;
            /** # gdata.* are outside protos with mising documentation */
            sha256Hash?: string;
            /** # gdata.* are outside protos with mising documentation */
            timestamp?: string;
            /** # gdata.* are outside protos with mising documentation */
            token?: string;
        }
        interface ObjectId {
            /** # gdata.* are outside protos with mising documentation */
            bucketName?: string;
            /** # gdata.* are outside protos with mising documentation */
            generation?: string;
            /** # gdata.* are outside protos with mising documentation */
            objectName?: string;
        }
        interface SearchCaseClassificationsResponse {
            /** The classifications retrieved. */
            caseClassifications?: CaseClassification[];
            /**
             * A token to retrieve the next page of results. This should be set in the `page_token` field of subsequent `SearchCaseClassificationsRequest` message that is issued. If unspecified,
             * there are no more results to retrieve.
             */
            nextPageToken?: string;
        }
        interface SearchCasesResponse {
            /** The list of Case associated with the cloud resource, after any filters have been applied. */
            cases?: Case[];
            /**
             * A token to retrieve the next page of results. This should be set in the `page_token` field of subsequent `SearchCaseRequest` message that is issued. If unspecified, there are no
             * more results to retrieve.
             */
            nextPageToken?: string;
        }
        interface WorkflowOperationMetadata {
            /** The namespace that the job was scheduled in. Must be included in the workflow metadata so the workflow status can be retrieved. */
            namespace?: string;
            /** The type of action the operation is classified as. */
            operationAction?: string;
            /** Which version of the workflow service this operation came from. */
            workflowOperationType?: string;
        }
        interface AttachmentsResource {
            /** Create a file attachment on a case or Cloud resource. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of the case to which attachment should be attached. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: CreateAttachmentRequest;
            }): Request<Attachment>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of the case to which attachment should be attached. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: CreateAttachmentRequest): Request<Attachment>;
        }
        interface CaseClassificationsResource {
            /**
             * Retrieve valid classifications to be used when creating a support case. The classications are hierarchical, with each classification containing all levels of the hierarchy,
             * separated by " > ". For example "Technical Issue > Compute > Compute Engine".
             */
            search(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of cases fetched with each request. */
                pageSize?: number;
                /** A token identifying the page of results to return. If unspecified, the first page is retrieved. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An expression written in the Cloud filter language. If non-empty, then only cases whose fields match the filter are returned. If empty, then no messages are filtered out. */
                query?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<SearchCaseClassificationsResponse>;
        }
        interface AttachmentsResource {
            /** Retrieve all attachments associated with a support case. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of attachments fetched with each request. If not provided, the default is 10. The maximum page size that will be returned is 100. */
                pageSize?: number;
                /** A token identifying the page of results to return. If unspecified, the first page is retrieved. */
                pageToken?: string;
                /** Required. The resource name of Case object for which attachments should be listed. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ListAttachmentsResponse>;
        }
        interface CommentsResource {
            /** Add a new comment to the specified Case. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of Case to which this comment should be added. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: Comment;
            }): Request<Comment>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of Case to which this comment should be added. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: Comment): Request<Comment>;
            /** Retrieve all Comments associated with the Case object. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of comments fetched with each request. Defaults to 10. */
                pageSize?: number;
                /** A token identifying the page of results to return. If unspecified, the first page is retrieved. */
                pageToken?: string;
                /** Required. The resource name of Case object for which comments should be listed. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ListCommentsResponse>;
        }
        interface CasesResource {
            /** Close the specified case. */
            close(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The fully qualified name of the case resource to be closed. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: CloseCaseRequest;
            }): Request<Case>;
            close(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The fully qualified name of the case resource to be closed. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: CloseCaseRequest): Request<Case>;
            /** Create a new case and associate it with the given Cloud resource. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the Cloud resource under which the case should be created. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: Case;
            }): Request<Case>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the Cloud resource under which the case should be created. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: Case): Request<Case>;
            /**
             * Escalate a case. Escalating a case will initiate the Cloud Support escalation management process. This operation is only available to certain Customer Care tiers. Go to
             * https://cloud.google.com/support and look for 'Technical support escalations' in the feature list to find out which tiers are able to perform escalations.
             */
            escalate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The fully qualified name of the Case resource to be escalated. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: EscalateCaseRequest;
            }): Request<Case>;
            escalate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The fully qualified name of the Case resource to be escalated. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: EscalateCaseRequest): Request<Case>;
            /** Retrieve the specified case. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The fully qualified name of a case to be retrieved. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Case>;
            /** Retrieve all cases under the specified parent. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * An expression written in the Cloud filter language. If non-empty, then only cases whose fields match the filter are returned. If empty, then no messages are filtered out. Filter
                 * strings can use the following fields: - state (Accepted values: OPEN or CLOSED) - severity (Accepted values: S0, S1, S2, S3, or S4) - creator.email with the operators equals (=)
                 * and AND. Additionally, a global restriction (with no operator) can be used to search across displayName, description, and comments (e.g. "my search").
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of cases fetched with each request. Defaults to 10. */
                pageSize?: number;
                /** A token identifying the page of results to return. If unspecified, the first page is retrieved. */
                pageToken?: string;
                /** Required. The fully qualified name of parent resource to list cases under. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ListCasesResponse>;
            /**
             * Update the specified case. Only a subset of fields (display_name, description, time_zone, subscriber_email_addresses, related_resources, severity, priority, primary_contact, and
             * labels) can be updated.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource name for the case. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * A field that represents attributes of a case object that should be updated as part of this request. Supported values are severity, display_name, and subscriber_email_addresses.
                 * If no fields are specified, all supported fields will be updated. WARNING: If you do not provide a field mask then you may accidentally clear some fields. For example, if you
                 * leave field mask empty and do not provide a value for subscriber_email_addresses then subscriber_email_addresses will be updated to empty.
                 */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: Case;
            }): Request<Case>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource name for the case. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * A field that represents attributes of a case object that should be updated as part of this request. Supported values are severity, display_name, and subscriber_email_addresses.
                 * If no fields are specified, all supported fields will be updated. WARNING: If you do not provide a field mask then you may accidentally clear some fields. For example, if you
                 * leave field mask empty and do not provide a value for subscriber_email_addresses then subscriber_email_addresses will be updated to empty.
                 */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: Case): Request<Case>;
            /** Search cases using the specified query. */
            search(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of cases fetched with each request. The default page size is 10. */
                pageSize?: number;
                /** A token identifying the page of results to return. If unspecified, the first page is retrieved. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * An expression written in the Cloud filter language. Filter strings can use the following fields: - organization (A name of the form organizations/) - project (A name of the form
                 * projects/) - customer (A name of the form customers/) - state (Accepted values: OPEN or CLOSED) - severity (Accepted values: S0, S1, S2, S3, or S4) - creator.email with the
                 * operators equals (=) and AND. Additionally, a global restriction (with no key/operator) can be used to search across display_name, description, and comments (e.g. "my search").
                 * One of organization, project, or customer field must be specified.
                 */
                query?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<SearchCasesResponse>;
            attachments: AttachmentsResource;
            comments: CommentsResource;
        }
        interface MediaResource {
            /** Download a file attachment on a case. Note: HTTP requests must append "?alt=media" to the URL. */
            download(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource name of the attachment to be downloaded. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Media>;
            /** Create a file attachment on a case or Cloud resource. */
            upload(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of the case to which attachment should be attached. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: CreateAttachmentRequest;
            }): Request<Attachment>;
            upload(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The resource name of the case to which attachment should be attached. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: CreateAttachmentRequest): Request<Attachment>;
        }

        const attachments: AttachmentsResource;

        const caseClassifications: CaseClassificationsResource;

        const cases: CasesResource;

        const media: MediaResource;
    }
}
