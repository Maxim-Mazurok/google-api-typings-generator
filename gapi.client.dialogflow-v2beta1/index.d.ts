/* Type definitions for non-npm package Dialogflow API v2beta1 0.0 */
// Project: https://cloud.google.com/dialogflow/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://dialogflow.googleapis.com/$discovery/rest?version=v2beta1
// Revision: 20230321

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Dialogflow API v2beta1 */
    function load(urlOrObject: "https://dialogflow.googleapis.com/$discovery/rest?version=v2beta1"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "dialogflow", version: "v2beta1"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "dialogflow", version: "v2beta1", callback: () => any): void;

    namespace dialogflow {
        interface GoogleCloudDialogflowCxV3AudioInput {
            /**
             * The natural language speech audio to be processed. A single request can contain up to 2 minutes of speech audio data. The transcribed text cannot contain more than 256 bytes. For
             * non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be
             * provided in all following requests.
             */
            audio?: string;
            /** Required. Instructs the speech recognizer how to process the speech audio. */
            config?: GoogleCloudDialogflowCxV3InputAudioConfig;
        }
        interface GoogleCloudDialogflowCxV3BatchRunTestCasesMetadata {
            /** The test errors. */
            errors?: GoogleCloudDialogflowCxV3TestError[];
        }
        interface GoogleCloudDialogflowCxV3BatchRunTestCasesResponse {
            /** The test case results. The detailed conversation turns are empty in this response. */
            results?: GoogleCloudDialogflowCxV3TestCaseResult[];
        }
        interface GoogleCloudDialogflowCxV3beta1AudioInput {
            /**
             * The natural language speech audio to be processed. A single request can contain up to 2 minutes of speech audio data. The transcribed text cannot contain more than 256 bytes. For
             * non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be
             * provided in all following requests.
             */
            audio?: string;
            /** Required. Instructs the speech recognizer how to process the speech audio. */
            config?: GoogleCloudDialogflowCxV3beta1InputAudioConfig;
        }
        interface GoogleCloudDialogflowCxV3beta1BatchRunTestCasesMetadata {
            /** The test errors. */
            errors?: GoogleCloudDialogflowCxV3beta1TestError[];
        }
        interface GoogleCloudDialogflowCxV3beta1BatchRunTestCasesResponse {
            /** The test case results. The detailed conversation turns are empty in this response. */
            results?: GoogleCloudDialogflowCxV3beta1TestCaseResult[];
        }
        interface GoogleCloudDialogflowCxV3beta1ContinuousTestResult {
            /** The resource name for the continuous test result. Format: `projects//locations//agents//environments//continuousTestResults/`. */
            name?: string;
            /** The result of this continuous test run, i.e. whether all the tests in this continuous test run pass or not. */
            result?: string;
            /** Time when the continuous testing run starts. */
            runTime?: string;
            /** A list of individual test case results names in this continuous test run. */
            testCaseResults?: string[];
        }
        interface GoogleCloudDialogflowCxV3beta1ConversationSignals {
            /** Required. Turn signals for the current turn. */
            turnSignals?: GoogleCloudDialogflowCxV3beta1TurnSignals;
        }
        interface GoogleCloudDialogflowCxV3beta1ConversationTurn {
            /** The user input. */
            userInput?: GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput;
            /** The virtual agent output. */
            virtualAgentOutput?: GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput;
        }
        interface GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput {
            /** Whether sentiment analysis is enabled. */
            enableSentimentAnalysis?: boolean;
            /** Parameters that need to be injected into the conversation during intent detection. */
            injectedParameters?: { [P in string]: any };
            /** Supports text input, event input, dtmf input in the test case. */
            input?: GoogleCloudDialogflowCxV3beta1QueryInput;
            /** If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled. */
            isWebhookEnabled?: boolean;
        }
        interface GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput {
            /** The Page on which the utterance was spoken. Only name and displayName will be set. */
            currentPage?: GoogleCloudDialogflowCxV3beta1Page;
            /** Required. Input only. The diagnostic info output for the turn. Required to calculate the testing coverage. */
            diagnosticInfo?: { [P in string]: any };
            /** Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any. */
            differences?: GoogleCloudDialogflowCxV3beta1TestRunDifference[];
            /** The session parameters available to the bot at this point. */
            sessionParameters?: { [P in string]: any };
            /** Response error from the agent in the test result. If set, other output is empty. */
            status?: GoogleRpcStatus;
            /** The text responses from the agent for the turn. */
            textResponses?: GoogleCloudDialogflowCxV3beta1ResponseMessageText[];
            /** The Intent that triggered the response. Only name and displayName will be set. */
            triggeredIntent?: GoogleCloudDialogflowCxV3beta1Intent;
        }
        interface GoogleCloudDialogflowCxV3beta1CreateDocumentOperationMetadata {
            /** The generic information of the operation. */
            genericMetadata?: GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata;
        }
        interface GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata {
            /** Name of the created version. Format: `projects//locations//agents//flows//versions/`. */
            version?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1DeleteDocumentOperationMetadata {
            /** The generic information of the operation. */
            genericMetadata?: GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata;
        }
        interface GoogleCloudDialogflowCxV3beta1DeployFlowMetadata {
            /** Errors of running deployment tests. */
            testErrors?: GoogleCloudDialogflowCxV3beta1TestError[];
        }
        interface GoogleCloudDialogflowCxV3beta1DeployFlowResponse {
            /** The name of the flow version deployment. Format: `projects//locations//agents// environments//deployments/`. */
            deployment?: string;
            /** The updated environment where the flow is deployed. */
            environment?: GoogleCloudDialogflowCxV3beta1Environment;
        }
        interface GoogleCloudDialogflowCxV3beta1DtmfInput {
            /** The dtmf digits. */
            digits?: string;
            /** The finish digit (if any). */
            finishDigit?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1Environment {
            /** The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected. */
            description?: string;
            /** Required. The human-readable name of the environment (unique in an agent). Limit of 64 characters. */
            displayName?: string;
            /** The name of the environment. Format: `projects//locations//agents//environments/`. */
            name?: string;
            /** The test cases config for continuous tests of this environment. */
            testCasesConfig?: GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig;
            /** Output only. Update time of this environment. */
            updateTime?: string;
            /** A list of configurations for flow versions. You should include version configs for all flows that are reachable from `Start Flow` in the agent. Otherwise, an error will be returned. */
            versionConfigs?: GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig[];
            /** The webhook configuration for this environment. */
            webhookConfig?: GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig;
        }
        interface GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig {
            /** Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run once a day. */
            enableContinuousRun?: boolean;
            /** Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false. */
            enablePredeploymentRun?: boolean;
            /** A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/` */
            testCases?: string[];
        }
        interface GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig {
            /** Required. Format: projects//locations//agents//flows//versions/. */
            version?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig {
            /** The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can override fields in `generic_web_service` and `service_directory`. */
            webhookOverrides?: GoogleCloudDialogflowCxV3beta1Webhook[];
        }
        interface GoogleCloudDialogflowCxV3beta1EventHandler {
            /** Required. The name of the event to handle. */
            event?: string;
            /** Output only. The unique identifier of this event handler. */
            name?: string;
            /** The target flow to transition to. Format: `projects//locations//agents//flows/`. */
            targetFlow?: string;
            /** The target page to transition to. Format: `projects//locations//agents//flows//pages/`. */
            targetPage?: string;
            /**
             * The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment
             * for a handler handling webhooks.
             */
            triggerFulfillment?: GoogleCloudDialogflowCxV3beta1Fulfillment;
        }
        interface GoogleCloudDialogflowCxV3beta1EventInput {
            /** Name of the event. */
            event?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1ExportAgentResponse {
            /** Uncompressed raw byte content for agent. */
            agentContent?: string;
            /** The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in ExportAgentRequest. */
            agentUri?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1ExportFlowResponse {
            /** Uncompressed raw byte content for flow. */
            flowContent?: string;
            /** The URI to a file containing the exported flow. This field is populated only if `flow_uri` is specified in ExportFlowRequest. */
            flowUri?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDialogflowCxV3beta1ExportTestCasesMetadata {
        }
        interface GoogleCloudDialogflowCxV3beta1ExportTestCasesResponse {
            /** Uncompressed raw byte content for test cases. */
            content?: string;
            /** The URI to a file containing the exported test cases. This field is populated only if `gcs_uri` is specified in ExportTestCasesRequest. */
            gcsUri?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1Form {
            /** Parameters to collect from the user. */
            parameters?: GoogleCloudDialogflowCxV3beta1FormParameter[];
        }
        interface GoogleCloudDialogflowCxV3beta1FormParameter {
            /** The default value of an optional parameter. If the parameter is required, the default value will be ignored. */
            defaultValue?: any;
            /** Required. The human-readable name of the parameter, unique within the form. */
            displayName?: string;
            /**
             * Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example,
             * `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
             */
            entityType?: string;
            /** Required. Defines fill behavior for the parameter. */
            fillBehavior?: GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior;
            /** Indicates whether the parameter represents a list of values. */
            isList?: boolean;
            /**
             * Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the
             * parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
             */
            redact?: boolean;
            /**
             * Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled
             * before form filling concludes.
             */
            required?: boolean;
        }
        interface GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior {
            /** Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter. */
            initialPromptFulfillment?: GoogleCloudDialogflowCxV3beta1Fulfillment;
            /**
             * The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can
             * be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the
             * first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the
             * `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next
             * no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered
             * no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by
             * webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter`
             * handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be
             * re-prompted.
             */
            repromptEventHandlers?: GoogleCloudDialogflowCxV3beta1EventHandler[];
        }
        interface GoogleCloudDialogflowCxV3beta1Fulfillment {
            /** Conditional cases for this fulfillment. */
            conditionalCases?: GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases[];
            /** The list of rich message responses to present to the user. */
            messages?: GoogleCloudDialogflowCxV3beta1ResponseMessage[];
            /**
             * Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning:
             * 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3
             * partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
             */
            returnPartialResponses?: boolean;
            /** Set parameter values before executing the webhook. */
            setParameterActions?: GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction[];
            /**
             * The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the
             * webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
             */
            tag?: string;
            /** The webhook to call. Format: `projects//locations//agents//webhooks/`. */
            webhook?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases {
            /** A list of cascading if-else conditions. */
            cases?: GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase[];
        }
        interface GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase {
            /** A list of case content. */
            caseContent?: GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent[];
            /**
             * The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the
             * [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
             */
            condition?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent {
            /** Additional cases to be evaluated. */
            additionalCases?: GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases;
            /** Returned message. */
            message?: GoogleCloudDialogflowCxV3beta1ResponseMessage;
        }
        interface GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction {
            /** Display name of the parameter. */
            parameter?: string;
            /** The new value of the parameter. A null value clears the parameter. */
            value?: any;
        }
        interface GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata {
            /** Required. Output only. The current state of this operation. */
            state?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1ImportDocumentsOperationMetadata {
            /** The generic information of the operation. */
            genericMetadata?: GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata;
        }
        interface GoogleCloudDialogflowCxV3beta1ImportDocumentsResponse {
            /** Includes details about skipped documents or any other warnings. */
            warnings?: GoogleRpcStatus[];
        }
        interface GoogleCloudDialogflowCxV3beta1ImportFlowResponse {
            /** The unique identifier of the new flow. Format: `projects//locations//agents//flows/`. */
            flow?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1ImportTestCasesMetadata {
            /** Errors for failed test cases. */
            errors?: GoogleCloudDialogflowCxV3beta1TestCaseError[];
        }
        interface GoogleCloudDialogflowCxV3beta1ImportTestCasesResponse {
            /** The unique identifiers of the new test cases. Format: `projects//locations//agents//testCases/`. */
            names?: string[];
        }
        interface GoogleCloudDialogflowCxV3beta1InputAudioConfig {
            /** Required. Audio encoding of the audio content to process. */
            audioEncoding?: string;
            /**
             * Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or
             * unspecified, Speech doesn't return any word-level information.
             */
            enableWordInfo?: boolean;
            /**
             * Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we
             * auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the
             * language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API
             * documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details. If you specify a model, the following models typically have the best performance:
             * - phone_call (best for Agent Assist and telephony) - latest_short (best for Dialogflow non-telephony) - command_and_search (best for very short utterances and commands)
             */
            model?: string;
            /** Optional. Which variant of the Speech model to use. */
            modelVariant?: string;
            /**
             * Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech
             * documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
             */
            phraseHints?: string[];
            /** Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details. */
            sampleRateHertz?: number;
            /**
             * Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio.
             * Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new
             * request with a new stream as needed. Note: This setting is relevant only for streaming methods.
             */
            singleUtterance?: boolean;
        }
        interface GoogleCloudDialogflowCxV3beta1Intent {
            /** Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters. */
            description?: string;
            /** Required. The human-readable name of the intent, unique within the agent. */
            displayName?: string;
            /**
             * Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback
             * intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
             */
            isFallback?: boolean;
            /**
             * The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from
             * unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined
             * labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. "sys-head" means the intent is a head intent.
             * "sys-contextual" means the intent is a contextual intent.
             */
            labels?: { [P in string]: string };
            /**
             * The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format:
             * `projects//locations//agents//intents/`.
             */
            name?: string;
            /** The collection of parameters associated with the intent. */
            parameters?: GoogleCloudDialogflowCxV3beta1IntentParameter[];
            /**
             * The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds
             * to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
             */
            priority?: number;
            /** The collection of training phrases the agent is trained on to identify the intent. */
            trainingPhrases?: GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase[];
        }
        interface GoogleCloudDialogflowCxV3beta1IntentInput {
            /** Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`. */
            intent?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1IntentParameter {
            /**
             * Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example,
             * `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
             */
            entityType?: string;
            /** Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts. */
            id?: string;
            /** Indicates whether the parameter represents a list of values. */
            isList?: boolean;
            /**
             * Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the
             * parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
             */
            redact?: boolean;
        }
        interface GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase {
            /** Output only. The unique identifier of the training phrase. */
            id?: string;
            /**
             * Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases
             * like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the
             * training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must
             * create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a
             * part of the phrase that you want to annotate, and the `parameter_id` field is set.
             */
            parts?: GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart[];
            /** Indicates how many times this example was added to the intent. */
            repeatCount?: number;
        }
        interface GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart {
            /** The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase. */
            parameterId?: string;
            /** Required. The text for this part. */
            text?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1Page {
            /** Required. The human-readable name of the page, unique within the flow. */
            displayName?: string;
            /** The fulfillment to call when the session is entering the page. */
            entryFulfillment?: GoogleCloudDialogflowCxV3beta1Fulfillment;
            /** Handlers associated with the page to handle events such as webhook errors, no match or no input. */
            eventHandlers?: GoogleCloudDialogflowCxV3beta1EventHandler[];
            /** The form associated with the page, used for collecting parameters relevant to the page. */
            form?: GoogleCloudDialogflowCxV3beta1Form;
            /** The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`. */
            name?: string;
            /**
             * Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to
             * the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a
             * page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`.
             */
            transitionRouteGroups?: string[];
            /**
             * A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the
             * TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with
             * intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes
             * defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
             */
            transitionRoutes?: GoogleCloudDialogflowCxV3beta1TransitionRoute[];
        }
        interface GoogleCloudDialogflowCxV3beta1PageInfo {
            /** Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page. Format: `projects//locations//agents//flows//pages/`. */
            currentPage?: string;
            /** Always present for WebhookRequest. Ignored for WebhookResponse. The display name of the current page. */
            displayName?: string;
            /** Optional for both WebhookRequest and WebhookResponse. Information about the form. */
            formInfo?: GoogleCloudDialogflowCxV3beta1PageInfoFormInfo;
        }
        interface GoogleCloudDialogflowCxV3beta1PageInfoFormInfo {
            /** Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the webhook cannot add or remove any form parameter. */
            parameterInfo?: GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo[];
        }
        interface GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo {
            /** Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter, unique within the form. This field cannot be modified by the webhook. */
            displayName?: string;
            /** Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just collected on the last conversation turn. */
            justCollected?: boolean;
            /**
             * Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user
             * specifies them. Required parameters must be filled before form filling concludes.
             */
            required?: boolean;
            /**
             * Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can be set to INVALID by the webhook to invalidate the parameter; other
             * values set by the webhook will be ignored.
             */
            state?: string;
            /** Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by the webhook to change the parameter value. */
            value?: any;
        }
        interface GoogleCloudDialogflowCxV3beta1QueryInput {
            /** The natural language speech audio to be processed. */
            audio?: GoogleCloudDialogflowCxV3beta1AudioInput;
            /** The DTMF event to be handled. */
            dtmf?: GoogleCloudDialogflowCxV3beta1DtmfInput;
            /** The event to be triggered. */
            event?: GoogleCloudDialogflowCxV3beta1EventInput;
            /** The intent to be triggered. */
            intent?: GoogleCloudDialogflowCxV3beta1IntentInput;
            /**
             * Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes.
             * Note that queries in the same session do not necessarily need to specify the same language.
             */
            languageCode?: string;
            /** The natural language text to be processed. */
            text?: GoogleCloudDialogflowCxV3beta1TextInput;
        }
        interface GoogleCloudDialogflowCxV3beta1ReloadDocumentOperationMetadata {
            /** The generic information of the operation. */
            genericMetadata?: GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata;
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessage {
            /** The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned. */
            channel?: string;
            /** Indicates that the conversation succeeded. */
            conversationSuccess?: GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess;
            /**
             * Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION`
             * page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.
             */
            endInteraction?: any;
            /** Hands off conversation to a human agent. */
            liveAgentHandoff?: GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff;
            /**
             * Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only
             * and not supposed to be defined by the user.
             */
            mixedAudio?: GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio;
            /** A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message. */
            outputAudioText?: GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText;
            /** Returns a response containing a custom, platform-specific payload. */
            payload?: { [P in string]: any };
            /**
             * Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or
             * process the URI in any way.
             */
            playAudio?: GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio;
            /** A signal that the client should transfer the phone call connected to this agent to a third-party endpoint. */
            telephonyTransferCall?: GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall;
            /** Returns a text response. */
            text?: GoogleCloudDialogflowCxV3beta1ResponseMessageText;
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess {
            /** Custom metadata. Dialogflow doesn't impose any structure on this. */
            metadata?: { [P in string]: any };
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction {
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff {
            /** Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this. */
            metadata?: { [P in string]: any };
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio {
            /** Segments this audio response is composed of. */
            segments?: GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment[];
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment {
            /** Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request. */
            allowPlaybackInterruption?: boolean;
            /** Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request. */
            audio?: string;
            /** Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it. */
            uri?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText {
            /** Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request. */
            allowPlaybackInterruption?: boolean;
            /** The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml). */
            ssml?: string;
            /** The raw text to be synthesized. */
            text?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio {
            /** Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request. */
            allowPlaybackInterruption?: boolean;
            /** Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it. */
            audioUri?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall {
            /** Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164). */
            phoneNumber?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessageText {
            /** Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request. */
            allowPlaybackInterruption?: boolean;
            /** Required. A collection of text responses. */
            text?: string[];
        }
        interface GoogleCloudDialogflowCxV3beta1RunContinuousTestMetadata {
            /** The test errors. */
            errors?: GoogleCloudDialogflowCxV3beta1TestError[];
        }
        interface GoogleCloudDialogflowCxV3beta1RunContinuousTestResponse {
            /** The result for a continuous test run. */
            continuousTestResult?: GoogleCloudDialogflowCxV3beta1ContinuousTestResult;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDialogflowCxV3beta1RunTestCaseMetadata {
        }
        interface GoogleCloudDialogflowCxV3beta1RunTestCaseResponse {
            /** The result. */
            result?: GoogleCloudDialogflowCxV3beta1TestCaseResult;
        }
        interface GoogleCloudDialogflowCxV3beta1SessionInfo {
            /**
             * Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents during the session. Parameters can be created, updated, or removed by the
             * webhook. To remove a parameter from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map is keyed by parameters' display names.
             */
            parameters?: { [P in string]: any };
            /**
             * Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This field can be used by the webhook to identify a session. Format:
             * `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/` if environment is specified.
             */
            session?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1TestCase {
            /** Output only. When the test was created. */
            creationTime?: string;
            /** Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters. */
            displayName?: string;
            /** The latest test result. */
            lastTestResult?: GoogleCloudDialogflowCxV3beta1TestCaseResult;
            /** The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`. */
            name?: string;
            /** Additional freeform notes about the test case. Limit of 400 characters. */
            notes?: string;
            /** Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with "#" and has a limit of 30 characters. */
            tags?: string[];
            /**
             * The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is
             * working properly.
             */
            testCaseConversationTurns?: GoogleCloudDialogflowCxV3beta1ConversationTurn[];
            /** Config for the test case. */
            testConfig?: GoogleCloudDialogflowCxV3beta1TestConfig;
        }
        interface GoogleCloudDialogflowCxV3beta1TestCaseError {
            /** The status associated with the test case. */
            status?: GoogleRpcStatus;
            /** The test case. */
            testCase?: GoogleCloudDialogflowCxV3beta1TestCase;
        }
        interface GoogleCloudDialogflowCxV3beta1TestCaseResult {
            /** The conversation turns uttered during the test case replay in chronological order. */
            conversationTurns?: GoogleCloudDialogflowCxV3beta1ConversationTurn[];
            /** Environment where the test was run. If not set, it indicates the draft environment. */
            environment?: string;
            /** The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`. */
            name?: string;
            /** Whether the test case passed in the agent environment. */
            testResult?: string;
            /** The time that the test was run. */
            testTime?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1TestConfig {
            /**
             * Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If
             * both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.
             */
            flow?: string;
            /**
             * The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of `flow` and `page` should be set to indicate the starting point of the test
             * case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.
             */
            page?: string;
            /** Session parameters to be compared when calculating differences. */
            trackingParameters?: string[];
        }
        interface GoogleCloudDialogflowCxV3beta1TestError {
            /** The status associated with the test. */
            status?: GoogleRpcStatus;
            /** The test case resource name. */
            testCase?: string;
            /** The timestamp when the test was completed. */
            testTime?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1TestRunDifference {
            /** A description of the diff, showing the actual output vs expected output. */
            description?: string;
            /** The type of diff. */
            type?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1TextInput {
            /** Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters. */
            text?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1TransitionRoute {
            /**
             * The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least
             * one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
             */
            condition?: string;
            /**
             * The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of
             * `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
             */
            intent?: string;
            /** Output only. The unique identifier of this transition route. */
            name?: string;
            /** The target flow to transition to. Format: `projects//locations//agents//flows/`. */
            targetFlow?: string;
            /** The target page to transition to. Format: `projects//locations//agents//flows//pages/`. */
            targetPage?: string;
            /**
             * The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is
             * executed first.
             */
            triggerFulfillment?: GoogleCloudDialogflowCxV3beta1Fulfillment;
        }
        interface GoogleCloudDialogflowCxV3beta1TurnSignals {
            /** Whether agent responded with LiveAgentHandoff fulfillment. */
            agentEscalated?: boolean;
            /** Whether user was using DTMF input. */
            dtmfUsed?: boolean;
            /** Failure reasons of the turn. */
            failureReasons?: string[];
            /** Whether NLU predicted NO_MATCH. */
            noMatch?: boolean;
            /** Whether user provided no input. */
            noUserInput?: boolean;
            /** Whether turn resulted in End Session page. */
            reachedEndPage?: boolean;
            /** Whether user was specifically asking for a live agent. */
            userEscalated?: boolean;
            /** Human-readable statuses of the webhooks triggered during this turn. */
            webhookStatuses?: string[];
        }
        interface GoogleCloudDialogflowCxV3beta1UpdateDocumentOperationMetadata {
            /** The generic information of the operation. */
            genericMetadata?: GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata;
        }
        interface GoogleCloudDialogflowCxV3beta1Webhook {
            /** Indicates whether the webhook is disabled. */
            disabled?: boolean;
            /** Required. The human-readable name of the webhook, unique within the agent. */
            displayName?: string;
            /** Configuration for a generic web service. */
            genericWebService?: GoogleCloudDialogflowCxV3beta1WebhookGenericWebService;
            /**
             * The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format:
             * `projects//locations//agents//webhooks/`.
             */
            name?: string;
            /** Configuration for a [Service Directory](https://cloud.google.com/service-directory) service. */
            serviceDirectory?: GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig;
            /**
             * Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum
             * allowed timeout is 30 seconds.
             */
            timeout?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1WebhookGenericWebService {
            /**
             * Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified,
             * Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with "subject alt name". For instance a certificate
             * can be self-signed using the following command, ``` openssl x509 -req -days 200 -in example.com.csr \ -signkey example.com.key \ -out example.com.crt \ -extfile <(printf
             * "\nsubjectAltName='DNS:www.example.com'") ```
             */
            allowedCaCerts?: string[];
            /** The password for HTTP Basic authentication. */
            password?: string;
            /** The HTTP request headers to send together with webhook requests. */
            requestHeaders?: { [P in string]: string };
            /** Required. The webhook URI for receiving POST requests. It must use https protocol. */
            uri?: string;
            /** The user name for HTTP Basic authentication. */
            username?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1WebhookRequest {
            /** Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller. */
            detectIntentResponseId?: string;
            /** Always present. Information about the fulfillment that triggered this webhook call. */
            fulfillmentInfo?: GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo;
            /** Information about the last matched intent. */
            intentInfo?: GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo;
            /** The language code specified in the original request. */
            languageCode?: string;
            /** The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response; */
            messages?: GoogleCloudDialogflowCxV3beta1ResponseMessage[];
            /** Information about page status. */
            pageInfo?: GoogleCloudDialogflowCxV3beta1PageInfo;
            /** Custom data set in QueryParameters.payload. */
            payload?: { [P in string]: any };
            /** The sentiment analysis result of the current user request. The field is filled when sentiment analysis is configured to be enabled for the request. */
            sentimentAnalysisResult?: GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult;
            /** Information about session status. */
            sessionInfo?: GoogleCloudDialogflowCxV3beta1SessionInfo;
            /** If natural language text was provided as input, this field will contain a copy of the text. */
            text?: string;
            /** If natural language speech audio was provided as input, this field will contain the transcript for the audio. */
            transcript?: string;
            /** If an event was provided as input, this field will contain the name of the event. */
            triggerEvent?: string;
            /** If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`. */
            triggerIntent?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo {
            /**
             * Always present. The value of the Fulfillment.tag field will be populated in this field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook
             * service to identify which fulfillment is being called, but it could be used for other purposes.
             */
            tag?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo {
            /** The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). */
            confidence?: number;
            /** Always present. The display name of the last matched intent. */
            displayName?: string;
            /** Always present. The unique identifier of the last matched intent. Format: `projects//locations//agents//intents/`. */
            lastMatchedIntent?: string;
            /**
             * Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user's utterance. All
             * parameters defined in the matched intent that are identified will be surfaced here.
             */
            parameters?: { [P in string]: GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue };
        }
        interface GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue {
            /** Always present. Original text value extracted from user utterance. */
            originalValue?: string;
            /** Always present. Structured value for the parameter extracted from user utterance. */
            resolvedValue?: any;
        }
        interface GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult {
            /** A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative). */
            magnitude?: number;
            /** Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment). */
            score?: number;
        }
        interface GoogleCloudDialogflowCxV3beta1WebhookResponse {
            /** The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend to send any response to the user. */
            fulfillmentResponse?: GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse;
            /** Information about page status. This field can be omitted by the webhook if it does not intend to modify page status. */
            pageInfo?: GoogleCloudDialogflowCxV3beta1PageInfo;
            /** Value to append directly to QueryResult.webhook_payloads. */
            payload?: { [P in string]: any };
            /** Information about session status. This field can be omitted by the webhook if it does not intend to modify session status. */
            sessionInfo?: GoogleCloudDialogflowCxV3beta1SessionInfo;
            /** The target flow to transition to. Format: `projects//locations//agents//flows/`. */
            targetFlow?: string;
            /** The target page to transition to. Format: `projects//locations//agents//flows//pages/`. */
            targetPage?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse {
            /** Merge behavior for `messages`. */
            mergeBehavior?: string;
            /** The list of rich message responses to present to the user. */
            messages?: GoogleCloudDialogflowCxV3beta1ResponseMessage[];
        }
        interface GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig {
            /** Generic Service configuration of this webhook. */
            genericWebService?: GoogleCloudDialogflowCxV3beta1WebhookGenericWebService;
            /**
             * Required. The name of [Service Directory](https://cloud.google.com/service-directory) service. Format: `projects//locations//namespaces//services/`. `Location ID` of the service
             * directory must be the same as the location of the agent.
             */
            service?: string;
        }
        interface GoogleCloudDialogflowCxV3ContinuousTestResult {
            /** The resource name for the continuous test result. Format: `projects//locations//agents//environments//continuousTestResults/`. */
            name?: string;
            /** The result of this continuous test run, i.e. whether all the tests in this continuous test run pass or not. */
            result?: string;
            /** Time when the continuous testing run starts. */
            runTime?: string;
            /** A list of individual test case results names in this continuous test run. */
            testCaseResults?: string[];
        }
        interface GoogleCloudDialogflowCxV3ConversationSignals {
            /** Required. Turn signals for the current turn. */
            turnSignals?: GoogleCloudDialogflowCxV3TurnSignals;
        }
        interface GoogleCloudDialogflowCxV3ConversationTurn {
            /** The user input. */
            userInput?: GoogleCloudDialogflowCxV3ConversationTurnUserInput;
            /** The virtual agent output. */
            virtualAgentOutput?: GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput;
        }
        interface GoogleCloudDialogflowCxV3ConversationTurnUserInput {
            /** Whether sentiment analysis is enabled. */
            enableSentimentAnalysis?: boolean;
            /** Parameters that need to be injected into the conversation during intent detection. */
            injectedParameters?: { [P in string]: any };
            /** Supports text input, event input, dtmf input in the test case. */
            input?: GoogleCloudDialogflowCxV3QueryInput;
            /** If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled. */
            isWebhookEnabled?: boolean;
        }
        interface GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput {
            /** The Page on which the utterance was spoken. Only name and displayName will be set. */
            currentPage?: GoogleCloudDialogflowCxV3Page;
            /** Required. Input only. The diagnostic info output for the turn. Required to calculate the testing coverage. */
            diagnosticInfo?: { [P in string]: any };
            /** Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any. */
            differences?: GoogleCloudDialogflowCxV3TestRunDifference[];
            /** The session parameters available to the bot at this point. */
            sessionParameters?: { [P in string]: any };
            /** Response error from the agent in the test result. If set, other output is empty. */
            status?: GoogleRpcStatus;
            /** The text responses from the agent for the turn. */
            textResponses?: GoogleCloudDialogflowCxV3ResponseMessageText[];
            /** The Intent that triggered the response. Only name and displayName will be set. */
            triggeredIntent?: GoogleCloudDialogflowCxV3Intent;
        }
        interface GoogleCloudDialogflowCxV3CreateDocumentOperationMetadata {
            /** The generic information of the operation. */
            genericMetadata?: GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata;
        }
        interface GoogleCloudDialogflowCxV3CreateVersionOperationMetadata {
            /** Name of the created version. Format: `projects//locations//agents//flows//versions/`. */
            version?: string;
        }
        interface GoogleCloudDialogflowCxV3DeleteDocumentOperationMetadata {
            /** The generic information of the operation. */
            genericMetadata?: GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata;
        }
        interface GoogleCloudDialogflowCxV3DeployFlowMetadata {
            /** Errors of running deployment tests. */
            testErrors?: GoogleCloudDialogflowCxV3TestError[];
        }
        interface GoogleCloudDialogflowCxV3DeployFlowResponse {
            /** The name of the flow version Deployment. Format: `projects//locations//agents// environments//deployments/`. */
            deployment?: string;
            /** The updated environment where the flow is deployed. */
            environment?: GoogleCloudDialogflowCxV3Environment;
        }
        interface GoogleCloudDialogflowCxV3DtmfInput {
            /** The dtmf digits. */
            digits?: string;
            /** The finish digit (if any). */
            finishDigit?: string;
        }
        interface GoogleCloudDialogflowCxV3Environment {
            /** The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected. */
            description?: string;
            /** Required. The human-readable name of the environment (unique in an agent). Limit of 64 characters. */
            displayName?: string;
            /** The name of the environment. Format: `projects//locations//agents//environments/`. */
            name?: string;
            /** The test cases config for continuous tests of this environment. */
            testCasesConfig?: GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig;
            /** Output only. Update time of this environment. */
            updateTime?: string;
            /** A list of configurations for flow versions. You should include version configs for all flows that are reachable from `Start Flow` in the agent. Otherwise, an error will be returned. */
            versionConfigs?: GoogleCloudDialogflowCxV3EnvironmentVersionConfig[];
            /** The webhook configuration for this environment. */
            webhookConfig?: GoogleCloudDialogflowCxV3EnvironmentWebhookConfig;
        }
        interface GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig {
            /** Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run once a day. */
            enableContinuousRun?: boolean;
            /** Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false. */
            enablePredeploymentRun?: boolean;
            /** A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/` */
            testCases?: string[];
        }
        interface GoogleCloudDialogflowCxV3EnvironmentVersionConfig {
            /** Required. Format: projects//locations//agents//flows//versions/. */
            version?: string;
        }
        interface GoogleCloudDialogflowCxV3EnvironmentWebhookConfig {
            /** The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can override fields in `generic_web_service` and `service_directory`. */
            webhookOverrides?: GoogleCloudDialogflowCxV3Webhook[];
        }
        interface GoogleCloudDialogflowCxV3EventHandler {
            /** Required. The name of the event to handle. */
            event?: string;
            /** Output only. The unique identifier of this event handler. */
            name?: string;
            /** The target flow to transition to. Format: `projects//locations//agents//flows/`. */
            targetFlow?: string;
            /** The target page to transition to. Format: `projects//locations//agents//flows//pages/`. */
            targetPage?: string;
            /**
             * The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment
             * for a handler handling webhooks.
             */
            triggerFulfillment?: GoogleCloudDialogflowCxV3Fulfillment;
        }
        interface GoogleCloudDialogflowCxV3EventInput {
            /** Name of the event. */
            event?: string;
        }
        interface GoogleCloudDialogflowCxV3ExportAgentResponse {
            /** Uncompressed raw byte content for agent. */
            agentContent?: string;
            /** The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in ExportAgentRequest. */
            agentUri?: string;
        }
        interface GoogleCloudDialogflowCxV3ExportFlowResponse {
            /** Uncompressed raw byte content for flow. */
            flowContent?: string;
            /** The URI to a file containing the exported flow. This field is populated only if `flow_uri` is specified in ExportFlowRequest. */
            flowUri?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDialogflowCxV3ExportTestCasesMetadata {
        }
        interface GoogleCloudDialogflowCxV3ExportTestCasesResponse {
            /** Uncompressed raw byte content for test cases. */
            content?: string;
            /** The URI to a file containing the exported test cases. This field is populated only if `gcs_uri` is specified in ExportTestCasesRequest. */
            gcsUri?: string;
        }
        interface GoogleCloudDialogflowCxV3Form {
            /** Parameters to collect from the user. */
            parameters?: GoogleCloudDialogflowCxV3FormParameter[];
        }
        interface GoogleCloudDialogflowCxV3FormParameter {
            /** The default value of an optional parameter. If the parameter is required, the default value will be ignored. */
            defaultValue?: any;
            /** Required. The human-readable name of the parameter, unique within the form. */
            displayName?: string;
            /**
             * Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example,
             * `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
             */
            entityType?: string;
            /** Required. Defines fill behavior for the parameter. */
            fillBehavior?: GoogleCloudDialogflowCxV3FormParameterFillBehavior;
            /** Indicates whether the parameter represents a list of values. */
            isList?: boolean;
            /**
             * Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the
             * parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
             */
            redact?: boolean;
            /**
             * Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled
             * before form filling concludes.
             */
            required?: boolean;
        }
        interface GoogleCloudDialogflowCxV3FormParameterFillBehavior {
            /** Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter. */
            initialPromptFulfillment?: GoogleCloudDialogflowCxV3Fulfillment;
            /**
             * The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can
             * be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the
             * first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the
             * `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next
             * no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered
             * no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by
             * webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter`
             * handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be
             * re-prompted.
             */
            repromptEventHandlers?: GoogleCloudDialogflowCxV3EventHandler[];
        }
        interface GoogleCloudDialogflowCxV3Fulfillment {
            /** Conditional cases for this fulfillment. */
            conditionalCases?: GoogleCloudDialogflowCxV3FulfillmentConditionalCases[];
            /** The list of rich message responses to present to the user. */
            messages?: GoogleCloudDialogflowCxV3ResponseMessage[];
            /**
             * Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning:
             * 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3
             * partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
             */
            returnPartialResponses?: boolean;
            /** Set parameter values before executing the webhook. */
            setParameterActions?: GoogleCloudDialogflowCxV3FulfillmentSetParameterAction[];
            /**
             * The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the
             * webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
             */
            tag?: string;
            /** The webhook to call. Format: `projects//locations//agents//webhooks/`. */
            webhook?: string;
        }
        interface GoogleCloudDialogflowCxV3FulfillmentConditionalCases {
            /** A list of cascading if-else conditions. */
            cases?: GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase[];
        }
        interface GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase {
            /** A list of case content. */
            caseContent?: GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent[];
            /**
             * The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the
             * [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
             */
            condition?: string;
        }
        interface GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent {
            /** Additional cases to be evaluated. */
            additionalCases?: GoogleCloudDialogflowCxV3FulfillmentConditionalCases;
            /** Returned message. */
            message?: GoogleCloudDialogflowCxV3ResponseMessage;
        }
        interface GoogleCloudDialogflowCxV3FulfillmentSetParameterAction {
            /** Display name of the parameter. */
            parameter?: string;
            /** The new value of the parameter. A null value clears the parameter. */
            value?: any;
        }
        interface GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata {
            /** Required. Output only. The current state of this operation. */
            state?: string;
        }
        interface GoogleCloudDialogflowCxV3ImportDocumentsOperationMetadata {
            /** The generic information of the operation. */
            genericMetadata?: GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata;
        }
        interface GoogleCloudDialogflowCxV3ImportDocumentsResponse {
            /** Includes details about skipped documents or any other warnings. */
            warnings?: GoogleRpcStatus[];
        }
        interface GoogleCloudDialogflowCxV3ImportFlowResponse {
            /** The unique identifier of the new flow. Format: `projects//locations//agents//flows/`. */
            flow?: string;
        }
        interface GoogleCloudDialogflowCxV3ImportTestCasesMetadata {
            /** Errors for failed test cases. */
            errors?: GoogleCloudDialogflowCxV3TestCaseError[];
        }
        interface GoogleCloudDialogflowCxV3ImportTestCasesResponse {
            /** The unique identifiers of the new test cases. Format: `projects//locations//agents//testCases/`. */
            names?: string[];
        }
        interface GoogleCloudDialogflowCxV3InputAudioConfig {
            /** Required. Audio encoding of the audio content to process. */
            audioEncoding?: string;
            /**
             * Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or
             * unspecified, Speech doesn't return any word-level information.
             */
            enableWordInfo?: boolean;
            /**
             * Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we
             * auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the
             * language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API
             * documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details. If you specify a model, the following models typically have the best performance:
             * - phone_call (best for Agent Assist and telephony) - latest_short (best for Dialogflow non-telephony) - command_and_search (best for very short utterances and commands)
             */
            model?: string;
            /** Optional. Which variant of the Speech model to use. */
            modelVariant?: string;
            /**
             * Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech
             * documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
             */
            phraseHints?: string[];
            /** Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details. */
            sampleRateHertz?: number;
            /**
             * Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio.
             * Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new
             * request with a new stream as needed. Note: This setting is relevant only for streaming methods.
             */
            singleUtterance?: boolean;
        }
        interface GoogleCloudDialogflowCxV3Intent {
            /** Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters. */
            description?: string;
            /** Required. The human-readable name of the intent, unique within the agent. */
            displayName?: string;
            /**
             * Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback
             * intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
             */
            isFallback?: boolean;
            /**
             * The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from
             * unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined
             * labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. "sys-head" means the intent is a head intent.
             * "sys.contextual" means the intent is a contextual intent.
             */
            labels?: { [P in string]: string };
            /**
             * The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format:
             * `projects//locations//agents//intents/`.
             */
            name?: string;
            /** The collection of parameters associated with the intent. */
            parameters?: GoogleCloudDialogflowCxV3IntentParameter[];
            /**
             * The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds
             * to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
             */
            priority?: number;
            /** The collection of training phrases the agent is trained on to identify the intent. */
            trainingPhrases?: GoogleCloudDialogflowCxV3IntentTrainingPhrase[];
        }
        interface GoogleCloudDialogflowCxV3IntentInput {
            /** Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`. */
            intent?: string;
        }
        interface GoogleCloudDialogflowCxV3IntentParameter {
            /**
             * Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example,
             * `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
             */
            entityType?: string;
            /** Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts. */
            id?: string;
            /** Indicates whether the parameter represents a list of values. */
            isList?: boolean;
            /**
             * Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the
             * parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
             */
            redact?: boolean;
        }
        interface GoogleCloudDialogflowCxV3IntentTrainingPhrase {
            /** Output only. The unique identifier of the training phrase. */
            id?: string;
            /**
             * Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases
             * like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the
             * training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must
             * create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a
             * part of the phrase that you want to annotate, and the `parameter_id` field is set.
             */
            parts?: GoogleCloudDialogflowCxV3IntentTrainingPhrasePart[];
            /** Indicates how many times this example was added to the intent. */
            repeatCount?: number;
        }
        interface GoogleCloudDialogflowCxV3IntentTrainingPhrasePart {
            /** The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase. */
            parameterId?: string;
            /** Required. The text for this part. */
            text?: string;
        }
        interface GoogleCloudDialogflowCxV3Page {
            /** Required. The human-readable name of the page, unique within the flow. */
            displayName?: string;
            /** The fulfillment to call when the session is entering the page. */
            entryFulfillment?: GoogleCloudDialogflowCxV3Fulfillment;
            /** Handlers associated with the page to handle events such as webhook errors, no match or no input. */
            eventHandlers?: GoogleCloudDialogflowCxV3EventHandler[];
            /** The form associated with the page, used for collecting parameters relevant to the page. */
            form?: GoogleCloudDialogflowCxV3Form;
            /** The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`. */
            name?: string;
            /**
             * Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to
             * the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a
             * page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`.
             */
            transitionRouteGroups?: string[];
            /**
             * A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the
             * TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with
             * intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes
             * defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
             */
            transitionRoutes?: GoogleCloudDialogflowCxV3TransitionRoute[];
        }
        interface GoogleCloudDialogflowCxV3PageInfo {
            /** Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page. Format: `projects//locations//agents//flows//pages/`. */
            currentPage?: string;
            /** Always present for WebhookRequest. Ignored for WebhookResponse. The display name of the current page. */
            displayName?: string;
            /** Optional for both WebhookRequest and WebhookResponse. Information about the form. */
            formInfo?: GoogleCloudDialogflowCxV3PageInfoFormInfo;
        }
        interface GoogleCloudDialogflowCxV3PageInfoFormInfo {
            /** Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the webhook cannot add or remove any form parameter. */
            parameterInfo?: GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo[];
        }
        interface GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo {
            /** Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter, unique within the form. This field cannot be modified by the webhook. */
            displayName?: string;
            /** Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just collected on the last conversation turn. */
            justCollected?: boolean;
            /**
             * Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user
             * specifies them. Required parameters must be filled before form filling concludes.
             */
            required?: boolean;
            /**
             * Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can be set to INVALID by the webhook to invalidate the parameter; other
             * values set by the webhook will be ignored.
             */
            state?: string;
            /** Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by the webhook to change the parameter value. */
            value?: any;
        }
        interface GoogleCloudDialogflowCxV3QueryInput {
            /** The natural language speech audio to be processed. */
            audio?: GoogleCloudDialogflowCxV3AudioInput;
            /** The DTMF event to be handled. */
            dtmf?: GoogleCloudDialogflowCxV3DtmfInput;
            /** The event to be triggered. */
            event?: GoogleCloudDialogflowCxV3EventInput;
            /** The intent to be triggered. */
            intent?: GoogleCloudDialogflowCxV3IntentInput;
            /**
             * Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes.
             * Note that queries in the same session do not necessarily need to specify the same language.
             */
            languageCode?: string;
            /** The natural language text to be processed. */
            text?: GoogleCloudDialogflowCxV3TextInput;
        }
        interface GoogleCloudDialogflowCxV3ReloadDocumentOperationMetadata {
            /** The generic information of the operation. */
            genericMetadata?: GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata;
        }
        interface GoogleCloudDialogflowCxV3ResponseMessage {
            /** The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned. */
            channel?: string;
            /** Indicates that the conversation succeeded. */
            conversationSuccess?: GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess;
            /**
             * Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION`
             * page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.
             */
            endInteraction?: any;
            /** Hands off conversation to a human agent. */
            liveAgentHandoff?: GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff;
            /**
             * Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only
             * and not supposed to be defined by the user.
             */
            mixedAudio?: GoogleCloudDialogflowCxV3ResponseMessageMixedAudio;
            /** A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message. */
            outputAudioText?: GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText;
            /** Returns a response containing a custom, platform-specific payload. */
            payload?: { [P in string]: any };
            /**
             * Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or
             * process the URI in any way.
             */
            playAudio?: GoogleCloudDialogflowCxV3ResponseMessagePlayAudio;
            /** A signal that the client should transfer the phone call connected to this agent to a third-party endpoint. */
            telephonyTransferCall?: GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall;
            /** Returns a text response. */
            text?: GoogleCloudDialogflowCxV3ResponseMessageText;
        }
        interface GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess {
            /** Custom metadata. Dialogflow doesn't impose any structure on this. */
            metadata?: { [P in string]: any };
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDialogflowCxV3ResponseMessageEndInteraction {
        }
        interface GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff {
            /** Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this. */
            metadata?: { [P in string]: any };
        }
        interface GoogleCloudDialogflowCxV3ResponseMessageMixedAudio {
            /** Segments this audio response is composed of. */
            segments?: GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment[];
        }
        interface GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment {
            /** Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request. */
            allowPlaybackInterruption?: boolean;
            /** Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request. */
            audio?: string;
            /** Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it. */
            uri?: string;
        }
        interface GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText {
            /** Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request. */
            allowPlaybackInterruption?: boolean;
            /** The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml). */
            ssml?: string;
            /** The raw text to be synthesized. */
            text?: string;
        }
        interface GoogleCloudDialogflowCxV3ResponseMessagePlayAudio {
            /** Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request. */
            allowPlaybackInterruption?: boolean;
            /** Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it. */
            audioUri?: string;
        }
        interface GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall {
            /** Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164). */
            phoneNumber?: string;
        }
        interface GoogleCloudDialogflowCxV3ResponseMessageText {
            /** Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request. */
            allowPlaybackInterruption?: boolean;
            /** Required. A collection of text responses. */
            text?: string[];
        }
        interface GoogleCloudDialogflowCxV3RunContinuousTestMetadata {
            /** The test errors. */
            errors?: GoogleCloudDialogflowCxV3TestError[];
        }
        interface GoogleCloudDialogflowCxV3RunContinuousTestResponse {
            /** The result for a continuous test run. */
            continuousTestResult?: GoogleCloudDialogflowCxV3ContinuousTestResult;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDialogflowCxV3RunTestCaseMetadata {
        }
        interface GoogleCloudDialogflowCxV3RunTestCaseResponse {
            /** The result. */
            result?: GoogleCloudDialogflowCxV3TestCaseResult;
        }
        interface GoogleCloudDialogflowCxV3SessionInfo {
            /**
             * Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents during the session. Parameters can be created, updated, or removed by the
             * webhook. To remove a parameter from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map is keyed by parameters' display names.
             */
            parameters?: { [P in string]: any };
            /**
             * Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This field can be used by the webhook to identify a session. Format:
             * `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/` if environment is specified.
             */
            session?: string;
        }
        interface GoogleCloudDialogflowCxV3TestCase {
            /** Output only. When the test was created. */
            creationTime?: string;
            /** Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters. */
            displayName?: string;
            /** The latest test result. */
            lastTestResult?: GoogleCloudDialogflowCxV3TestCaseResult;
            /** The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`. */
            name?: string;
            /** Additional freeform notes about the test case. Limit of 400 characters. */
            notes?: string;
            /** Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with "#" and has a limit of 30 characters. */
            tags?: string[];
            /**
             * The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is
             * working properly.
             */
            testCaseConversationTurns?: GoogleCloudDialogflowCxV3ConversationTurn[];
            /** Config for the test case. */
            testConfig?: GoogleCloudDialogflowCxV3TestConfig;
        }
        interface GoogleCloudDialogflowCxV3TestCaseError {
            /** The status associated with the test case. */
            status?: GoogleRpcStatus;
            /** The test case. */
            testCase?: GoogleCloudDialogflowCxV3TestCase;
        }
        interface GoogleCloudDialogflowCxV3TestCaseResult {
            /** The conversation turns uttered during the test case replay in chronological order. */
            conversationTurns?: GoogleCloudDialogflowCxV3ConversationTurn[];
            /** Environment where the test was run. If not set, it indicates the draft environment. */
            environment?: string;
            /** The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`. */
            name?: string;
            /** Whether the test case passed in the agent environment. */
            testResult?: string;
            /** The time that the test was run. */
            testTime?: string;
        }
        interface GoogleCloudDialogflowCxV3TestConfig {
            /**
             * Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If
             * both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.
             */
            flow?: string;
            /**
             * The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of `flow` and `page` should be set to indicate the starting point of the test
             * case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.
             */
            page?: string;
            /** Session parameters to be compared when calculating differences. */
            trackingParameters?: string[];
        }
        interface GoogleCloudDialogflowCxV3TestError {
            /** The status associated with the test. */
            status?: GoogleRpcStatus;
            /** The test case resource name. */
            testCase?: string;
            /** The timestamp when the test was completed. */
            testTime?: string;
        }
        interface GoogleCloudDialogflowCxV3TestRunDifference {
            /** A description of the diff, showing the actual output vs expected output. */
            description?: string;
            /** The type of diff. */
            type?: string;
        }
        interface GoogleCloudDialogflowCxV3TextInput {
            /** Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters. */
            text?: string;
        }
        interface GoogleCloudDialogflowCxV3TransitionRoute {
            /**
             * The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least
             * one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
             */
            condition?: string;
            /**
             * The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of
             * `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
             */
            intent?: string;
            /** Output only. The unique identifier of this transition route. */
            name?: string;
            /** The target flow to transition to. Format: `projects//locations//agents//flows/`. */
            targetFlow?: string;
            /** The target page to transition to. Format: `projects//locations//agents//flows//pages/`. */
            targetPage?: string;
            /**
             * The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is
             * executed first.
             */
            triggerFulfillment?: GoogleCloudDialogflowCxV3Fulfillment;
        }
        interface GoogleCloudDialogflowCxV3TurnSignals {
            /** Whether agent responded with LiveAgentHandoff fulfillment. */
            agentEscalated?: boolean;
            /** Whether user was using DTMF input. */
            dtmfUsed?: boolean;
            /** Failure reasons of the turn. */
            failureReasons?: string[];
            /** Whether NLU predicted NO_MATCH. */
            noMatch?: boolean;
            /** Whether user provided no input. */
            noUserInput?: boolean;
            /** Whether turn resulted in End Session page. */
            reachedEndPage?: boolean;
            /** Whether user was specifically asking for a live agent. */
            userEscalated?: boolean;
            /** Human-readable statuses of the webhooks triggered during this turn. */
            webhookStatuses?: string[];
        }
        interface GoogleCloudDialogflowCxV3UpdateDocumentOperationMetadata {
            /** The generic information of the operation. */
            genericMetadata?: GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata;
        }
        interface GoogleCloudDialogflowCxV3Webhook {
            /** Indicates whether the webhook is disabled. */
            disabled?: boolean;
            /** Required. The human-readable name of the webhook, unique within the agent. */
            displayName?: string;
            /** Configuration for a generic web service. */
            genericWebService?: GoogleCloudDialogflowCxV3WebhookGenericWebService;
            /**
             * The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format:
             * `projects//locations//agents//webhooks/`.
             */
            name?: string;
            /** Configuration for a [Service Directory](https://cloud.google.com/service-directory) service. */
            serviceDirectory?: GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig;
            /**
             * Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum
             * allowed timeout is 30 seconds.
             */
            timeout?: string;
        }
        interface GoogleCloudDialogflowCxV3WebhookGenericWebService {
            /**
             * Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified,
             * Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with "subject alt name". For instance a certificate
             * can be self-signed using the following command, ``` openssl x509 -req -days 200 -in example.com.csr \ -signkey example.com.key \ -out example.com.crt \ -extfile <(printf
             * "\nsubjectAltName='DNS:www.example.com'") ```
             */
            allowedCaCerts?: string[];
            /** The password for HTTP Basic authentication. */
            password?: string;
            /** The HTTP request headers to send together with webhook requests. */
            requestHeaders?: { [P in string]: string };
            /** Required. The webhook URI for receiving POST requests. It must use https protocol. */
            uri?: string;
            /** The user name for HTTP Basic authentication. */
            username?: string;
        }
        interface GoogleCloudDialogflowCxV3WebhookRequest {
            /** Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller. */
            detectIntentResponseId?: string;
            /** Always present. Information about the fulfillment that triggered this webhook call. */
            fulfillmentInfo?: GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo;
            /** Information about the last matched intent. */
            intentInfo?: GoogleCloudDialogflowCxV3WebhookRequestIntentInfo;
            /** The language code specified in the original request. */
            languageCode?: string;
            /** The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response; */
            messages?: GoogleCloudDialogflowCxV3ResponseMessage[];
            /** Information about page status. */
            pageInfo?: GoogleCloudDialogflowCxV3PageInfo;
            /** Custom data set in QueryParameters.payload. */
            payload?: { [P in string]: any };
            /** The sentiment analysis result of the current user request. The field is filled when sentiment analysis is configured to be enabled for the request. */
            sentimentAnalysisResult?: GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult;
            /** Information about session status. */
            sessionInfo?: GoogleCloudDialogflowCxV3SessionInfo;
            /** If natural language text was provided as input, this field will contain a copy of the text. */
            text?: string;
            /** If natural language speech audio was provided as input, this field will contain the transcript for the audio. */
            transcript?: string;
            /** If an event was provided as input, this field will contain the name of the event. */
            triggerEvent?: string;
            /** If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`. */
            triggerIntent?: string;
        }
        interface GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo {
            /**
             * Always present. The value of the Fulfillment.tag field will be populated in this field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook
             * service to identify which fulfillment is being called, but it could be used for other purposes.
             */
            tag?: string;
        }
        interface GoogleCloudDialogflowCxV3WebhookRequestIntentInfo {
            /** The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). */
            confidence?: number;
            /** Always present. The display name of the last matched intent. */
            displayName?: string;
            /** Always present. The unique identifier of the last matched intent. Format: `projects//locations//agents//intents/`. */
            lastMatchedIntent?: string;
            /**
             * Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user's utterance. All
             * parameters defined in the matched intent that are identified will be surfaced here.
             */
            parameters?: { [P in string]: GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue };
        }
        interface GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue {
            /** Always present. Original text value extracted from user utterance. */
            originalValue?: string;
            /** Always present. Structured value for the parameter extracted from user utterance. */
            resolvedValue?: any;
        }
        interface GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult {
            /** A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative). */
            magnitude?: number;
            /** Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment). */
            score?: number;
        }
        interface GoogleCloudDialogflowCxV3WebhookResponse {
            /** The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend to send any response to the user. */
            fulfillmentResponse?: GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse;
            /** Information about page status. This field can be omitted by the webhook if it does not intend to modify page status. */
            pageInfo?: GoogleCloudDialogflowCxV3PageInfo;
            /** Value to append directly to QueryResult.webhook_payloads. */
            payload?: { [P in string]: any };
            /** Information about session status. This field can be omitted by the webhook if it does not intend to modify session status. */
            sessionInfo?: GoogleCloudDialogflowCxV3SessionInfo;
            /** The target flow to transition to. Format: `projects//locations//agents//flows/`. */
            targetFlow?: string;
            /** The target page to transition to. Format: `projects//locations//agents//flows//pages/`. */
            targetPage?: string;
        }
        interface GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse {
            /** Merge behavior for `messages`. */
            mergeBehavior?: string;
            /** The list of rich message responses to present to the user. */
            messages?: GoogleCloudDialogflowCxV3ResponseMessage[];
        }
        interface GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig {
            /** Generic Service configuration of this webhook. */
            genericWebService?: GoogleCloudDialogflowCxV3WebhookGenericWebService;
            /**
             * Required. The name of [Service Directory](https://cloud.google.com/service-directory) service. Format: `projects//locations//namespaces//services/`. `Location ID` of the service
             * directory must be the same as the location of the agent.
             */
            service?: string;
        }
        interface GoogleCloudDialogflowV2AnnotatedMessagePart {
            /**
             * The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the
             * phrase part with a system entity.
             */
            entityType?: string;
            /**
             * The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type
             * `@sys.unit-currency`, this may contain: { "amount": 5, "currency": "USD" }
             */
            formattedValue?: any;
            /** A part of a message possibly annotated with an entity. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2ArticleAnswer {
            /** The name of answer record, in the format of "projects//locations//answerRecords/" */
            answerRecord?: string;
            /**
             * Article match confidence. The system's confidence score that this article is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely
             * certain).
             */
            confidence?: number;
            /** A map that contains metadata about the answer and the document from which it originates. */
            metadata?: { [P in string]: string };
            /** Article snippets. */
            snippets?: string[];
            /** The article title. */
            title?: string;
            /** The article URI. */
            uri?: string;
        }
        interface GoogleCloudDialogflowV2ArticleSuggestionModelMetadata {
            /** Optional. Type of the article suggestion model. If not provided, model_type is used. */
            trainingModelType?: string;
        }
        interface GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse {
            /** The collection of updated or created entity types. */
            entityTypes?: GoogleCloudDialogflowV2EntityType[];
        }
        interface GoogleCloudDialogflowV2BatchUpdateIntentsResponse {
            /** The collection of updated or created intents. */
            intents?: GoogleCloudDialogflowV2Intent[];
        }
        interface GoogleCloudDialogflowV2beta1Agent {
            /**
             * Optional. API version displayed in Dialogflow console. If not specified, V2 API is assumed. Clients are free to query different service endpoints for different API versions.
             * However, bots connectors and webhook calls will follow the specified API version.
             */
            apiVersion?: string;
            /**
             * Optional. The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted [Web
             * Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo) integration.
             */
            avatarUri?: string;
            /**
             * Optional. To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold.
             * If the returned score value is less than the threshold value, then a fallback intent will be triggered or, if there are no fallback intents defined, no intent will be triggered. The
             * score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
             */
            classificationThreshold?: number;
            /**
             * Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently
             * supported language codes. This field cannot be set by the `Update` method.
             */
            defaultLanguageCode?: string;
            /** Optional. The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected. */
            description?: string;
            /** Required. The name of this agent. */
            displayName?: string;
            /** Optional. Determines whether this agent should log conversation queries. */
            enableLogging?: boolean;
            /** Optional. Determines how intents are detected from user queries. */
            matchMode?: string;
            /** Required. The project of this agent. Format: `projects/` or `projects//locations/` */
            parent?: string;
            /** Optional. The list of all languages supported by this agent (except for the `default_language_code`). */
            supportedLanguageCodes?: string[];
            /** Optional. The agent tier. If not specified, TIER_STANDARD is assumed. */
            tier?: string;
            /** Required. The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. */
            timeZone?: string;
        }
        interface GoogleCloudDialogflowV2beta1AgentAssistantFeedback {
            /**
             * Optional. Whether or not the suggested answer is relevant. For example: * Query: "Can I change my mailing address?" * Suggested document says: "Items must be returned/exchanged
             * within 60 days of the purchase date." * answer_relevance: AnswerRelevance.IRRELEVANT
             */
            answerRelevance?: string;
            /**
             * Optional. Whether or not the information in the document is correct. For example: * Query: "Can I return the package in 2 days once received?" * Suggested document says: "Items must
             * be returned/exchanged within 60 days of the purchase date." * Ground truth: "No return or exchange is allowed." * [document_correctness]: INCORRECT
             */
            documentCorrectness?: string;
            /**
             * Optional. Whether or not the suggested document is efficient. For example, if the document is poorly written, hard to understand, hard to use or too long to find useful information,
             * document_efficiency is DocumentEfficiency.INEFFICIENT.
             */
            documentEfficiency?: string;
            /** Feedback for conversation summarization. */
            summarizationFeedback?: GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback;
        }
        interface GoogleCloudDialogflowV2beta1AgentAssistantFeedbackSummarizationFeedback {
            /** Timestamp when composing of the summary starts. */
            startTimestamp?: string;
            /** Timestamp when the summary was submitted. */
            submitTimestamp?: string;
            /** Text of actual submitted summary. */
            summaryText?: string;
        }
        interface GoogleCloudDialogflowV2beta1AgentAssistantRecord {
            /** Output only. The article suggestion answer. */
            articleSuggestionAnswer?: GoogleCloudDialogflowV2beta1ArticleAnswer;
            /** Output only. The FAQ answer. */
            faqAnswer?: GoogleCloudDialogflowV2beta1FaqAnswer;
        }
        interface GoogleCloudDialogflowV2beta1AnalyzeContentRequest {
            /** Parameters for a human assist query. */
            assistQueryParams?: GoogleCloudDialogflowV2beta1AssistQueryParameters;
            /** The natural language speech audio to be processed. */
            audioInput?: GoogleCloudDialogflowV2beta1AudioInput;
            /**
             * The unique identifier of the CX page to override the `current_page` in the session. Format: `projects//locations//agents//flows//pages/`. If `cx_current_page` is specified, the
             * previous state of the session will be ignored by Dialogflow CX, including the previous page and the previous session parameters. In most cases, `cx_current_page` and `cx_parameters`
             * should be configured together to direct a session to a specific state. Note: this field should only be used if you are connecting to a Dialogflow CX agent.
             */
            cxCurrentPage?: string;
            /**
             * Additional parameters to be put into Dialogflow CX session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. Note: this
             * field should only be used if you are connecting to a Dialogflow CX agent.
             */
            cxParameters?: { [P in string]: any };
            /** An input event to send to Dialogflow. */
            eventInput?: GoogleCloudDialogflowV2beta1EventInput;
            /**
             * Optional. The send time of the message from end user or human agent's perspective. It is used for identifying the same message under one participant. Given two messages under the
             * same participant: - If send time are different regardless of whether the content of the messages are exactly the same, the conversation will regard them as two distinct messages
             * sent by the participant. - If send time is the same regardless of whether the content of the messages are exactly the same, the conversation will regard them as same message, and
             * ignore the message received later. If the value is not provided, a new request will always be regarded as a new message without any de-duplication.
             */
            messageSendTime?: string;
            /** Parameters for a Dialogflow virtual-agent query. */
            queryParams?: GoogleCloudDialogflowV2beta1QueryParameters;
            /**
             * Speech synthesis configuration. The speech synthesis settings for a virtual agent that may be configured for the associated conversation profile are not used when calling
             * AnalyzeContent. If this configuration is not supplied, speech synthesis is disabled.
             */
            replyAudioConfig?: GoogleCloudDialogflowV2beta1OutputAudioConfig;
            /** A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided. */
            requestId?: string;
            /** The natural language text to be processed. */
            textInput?: GoogleCloudDialogflowV2beta1TextInput;
        }
        interface GoogleCloudDialogflowV2beta1AnalyzeContentResponse {
            /**
             * Optional. Only set if a Dialogflow automated agent has responded. Note that: AutomatedAgentReply.detect_intent_response.output_audio and
             * AutomatedAgentReply.detect_intent_response.output_audio_config are always empty, use reply_audio instead.
             */
            automatedAgentReply?: GoogleCloudDialogflowV2beta1AutomatedAgentReply;
            /** Indicates the parameters of DTMF. */
            dtmfParameters?: GoogleCloudDialogflowV2beta1DtmfParameters;
            /**
             * The suggestions for end user. The order is the same as HumanAgentAssistantConfig.SuggestionConfig.feature_configs of HumanAgentAssistantConfig.end_user_suggestion_config. Same as
             * human_agent_suggestion_results, any failure of Agent Assist features will not lead to the overall failure of an AnalyzeContent API call. Instead, the features will fail silently
             * with the error field set in the corresponding SuggestionResult.
             */
            endUserSuggestionResults?: GoogleCloudDialogflowV2beta1SuggestionResult[];
            /**
             * The suggestions for most recent human agent. The order is the same as HumanAgentAssistantConfig.SuggestionConfig.feature_configs of
             * HumanAgentAssistantConfig.human_agent_suggestion_config. Note that any failure of Agent Assist features will not lead to the overall failure of an AnalyzeContent API call. Instead,
             * the features will fail silently with the error field set in the corresponding SuggestionResult.
             */
            humanAgentSuggestionResults?: GoogleCloudDialogflowV2beta1SuggestionResult[];
            /** Output only. Message analyzed by CCAI. */
            message?: GoogleCloudDialogflowV2beta1Message;
            /**
             * Optional. The audio data bytes encoded as specified in the request. This field is set if: - `reply_audio_config` was specified in the request, or - The automated agent responded
             * with audio to play to the user. In such case, `reply_audio.config` contains settings used to synthesize the speech. In some scenarios, multiple output audio fields may be present in
             * the response structure. In these cases, only the top-most-level audio output has content.
             */
            replyAudio?: GoogleCloudDialogflowV2beta1OutputAudio;
            /** Output only. The output text content. This field is set if the automated agent responded with text to show to the user. */
            replyText?: string;
        }
        interface GoogleCloudDialogflowV2beta1AnnotatedMessagePart {
            /**
             * Optional. The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not
             * annotate the phrase part with a system entity.
             */
            entityType?: string;
            /**
             * Optional. The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity
             * of type `@sys.unit-currency`, this may contain: { "amount": 5, "currency": "USD" }
             */
            formattedValue?: any;
            /** Required. A part of a message possibly annotated with an entity. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2beta1AnswerFeedback {
            /** Optional. Detail feedback of agent assistant suggestions. */
            agentAssistantDetailFeedback?: GoogleCloudDialogflowV2beta1AgentAssistantFeedback;
            /** Indicates whether the answer/item was clicked by the human agent or not. Default to false. */
            clicked?: boolean;
            /** Time when the answer/item was clicked. */
            clickTime?: string;
            /** The correctness level of the specific answer. */
            correctnessLevel?: string;
            /** Indicates whether the answer/item was displayed to the human agent in the agent desktop UI. Default to false. */
            displayed?: boolean;
            /** Time when the answer/item was displayed. */
            displayTime?: string;
        }
        interface GoogleCloudDialogflowV2beta1AnswerRecord {
            /** Output only. The record for human agent assistant. */
            agentAssistantRecord?: GoogleCloudDialogflowV2beta1AgentAssistantRecord;
            /** Optional. The AnswerFeedback for this record. You can set this with AnswerRecords.UpdateAnswerRecord in order to give us feedback about this answer. */
            answerFeedback?: GoogleCloudDialogflowV2beta1AnswerFeedback;
            /** The unique identifier of this answer record. Required for AnswerRecords.UpdateAnswerRecord method. Format: `projects//locations//answerRecords/`. */
            name?: string;
        }
        interface GoogleCloudDialogflowV2beta1ArticleAnswer {
            /** The name of answer record, in the format of "projects//locations//answerRecords/" */
            answerRecord?: string;
            /** A map that contains metadata about the answer and the document from which it originates. */
            metadata?: { [P in string]: string };
            /** Output only. Article snippets. */
            snippets?: string[];
            /** The article title. */
            title?: string;
            /** The article URI. */
            uri?: string;
        }
        interface GoogleCloudDialogflowV2beta1AssistQueryParameters {
            /**
             * Key-value filters on the metadata of documents returned by article suggestion. If specified, article suggestion only returns suggested documents that match all filters in their
             * Document.metadata. Multiple values for a metadata key should be concatenated by comma. For example, filters to match all documents that have 'US' or 'CA' in their market metadata
             * values and 'agent' in their user metadata values will be ``` documents_metadata_filters { key: "market" value: "US,CA" } documents_metadata_filters { key: "user" value: "agent" }
             * ```
             */
            documentsMetadataFilters?: { [P in string]: string };
        }
        interface GoogleCloudDialogflowV2beta1AudioInput {
            /**
             * Required. The natural language speech audio to be processed. A single request can contain up to 1 minute of speech audio data. The transcribed text cannot contain more than 256
             * bytes for virtual agent interactions.
             */
            audio?: string;
            /** Required. Instructs the speech recognizer how to process the speech audio. */
            config?: GoogleCloudDialogflowV2beta1InputAudioConfig;
        }
        interface GoogleCloudDialogflowV2beta1AutomatedAgentConfig {
            /**
             * Required. ID of the Dialogflow agent environment to use. This project needs to either be the same project as the conversation or you need to grant
             * `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow API Service Agent` role in this project. - For ES agents, use format:
             * `projects//locations//agent/environments/`. If environment is not specified, the default `draft` environment is used. Refer to
             * [DetectIntentRequest](/dialogflow/docs/reference/rpc/google.cloud.dialogflow.v2beta1#google.cloud.dialogflow.v2beta1.DetectIntentRequest) for more details. - For CX agents, use
             * format `projects//locations//agents//environments/`. If environment is not specified, the default `draft` environment is used.
             */
            agent?: string;
        }
        interface GoogleCloudDialogflowV2beta1AutomatedAgentReply {
            /**
             * Indicates whether the partial automated agent reply is interruptible when a later reply message arrives. e.g. if the agent specified some music as partial response, it can be
             * cancelled.
             */
            allowCancellation?: boolean;
            /** AutomatedAgentReply type. */
            automatedAgentReplyType?: string;
            /** The unique identifier of the current Dialogflow CX conversation page. Format: `projects//locations//agents//flows//pages/`. */
            cxCurrentPage?: string;
            /** The collection of current Dialogflow CX agent session parameters at the time of this response. Deprecated: Use `parameters` instead. */
            cxSessionParameters?: { [P in string]: any };
            /** Response of the Dialogflow Sessions.DetectIntent call. */
            detectIntentResponse?: GoogleCloudDialogflowV2beta1DetectIntentResponse;
            /** Event name if an event is triggered for the query. */
            event?: string;
            /**
             * Name of the intent if an intent is matched for the query. For a V2 query, the value format is `projects//locations/ /agent/intents/`. For a V3 query, the value format is
             * `projects//locations/ /agents//intents/`.
             */
            intent?: string;
            /**
             * The confidence of the match. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match
             * the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation.
             */
            matchConfidence?: number;
            /** The collection of current parameters at the time of this response. */
            parameters?: { [P in string]: any };
            /** Response messages from the automated agent. */
            responseMessages?: GoogleCloudDialogflowV2beta1ResponseMessage[];
        }
        interface GoogleCloudDialogflowV2beta1BargeInConfig {
            /** Duration that is not eligible for barge-in at the beginning of the input audio. */
            noBargeInDuration?: string;
            /** Total duration for the playback at the beginning of the input audio. */
            totalDuration?: string;
        }
        interface GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest {
            /** Required. The entities to create. */
            entities?: GoogleCloudDialogflowV2beta1EntityTypeEntity[];
            /**
             * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
             * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
             */
            languageCode?: string;
        }
        interface GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest {
            /** Required. A maximum of 1000 Messages can be created in a batch. CreateMessageRequest.message.send_time is required. All created messages will have identical Message.create_time. */
            requests?: GoogleCloudDialogflowV2beta1CreateMessageRequest[];
        }
        interface GoogleCloudDialogflowV2beta1BatchCreateMessagesResponse {
            /** Messages created. */
            messages?: GoogleCloudDialogflowV2beta1Message[];
        }
        interface GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest {
            /** Required. The reference `values` of the entities to delete. Note that these are not fully-qualified names, i.e. they don't start with `projects/`. */
            entityValues?: string[];
            /**
             * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
             * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
             */
            languageCode?: string;
        }
        interface GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest {
            /** Required. The names entity types to delete. All names must point to the same agent as `parent`. */
            entityTypeNames?: string[];
        }
        interface GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest {
            /** Required. The collection of intents to delete. Only intent `name` must be filled in. */
            intents?: GoogleCloudDialogflowV2beta1Intent[];
        }
        interface GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest {
            /** Required. The entities to update or create. */
            entities?: GoogleCloudDialogflowV2beta1EntityTypeEntity[];
            /**
             * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
             * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
             */
            languageCode?: string;
            /** Optional. The mask to control which fields get updated. */
            updateMask?: string;
        }
        interface GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest {
            /** The collection of entity types to update or create. */
            entityTypeBatchInline?: GoogleCloudDialogflowV2beta1EntityTypeBatch;
            /**
             * The URI to a Google Cloud Storage file containing entity types to update or create. The file format can either be a serialized proto (of EntityBatch type) or a JSON object. Note:
             * The URI must start with "gs://".
             */
            entityTypeBatchUri?: string;
            /**
             * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
             * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
             */
            languageCode?: string;
            /** Optional. The mask to control which fields get updated. */
            updateMask?: string;
        }
        interface GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse {
            /** The collection of updated or created entity types. */
            entityTypes?: GoogleCloudDialogflowV2beta1EntityType[];
        }
        interface GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest {
            /** The collection of intents to update or create. */
            intentBatchInline?: GoogleCloudDialogflowV2beta1IntentBatch;
            /**
             * The URI to a Google Cloud Storage file containing intents to update or create. The file format can either be a serialized proto (of IntentBatch type) or JSON object. Note: The URI
             * must start with "gs://".
             */
            intentBatchUri?: string;
            /** Optional. The resource view to apply to the returned intent. */
            intentView?: string;
            /**
             * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
             * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
             */
            languageCode?: string;
            /** Optional. The mask to control which fields get updated. */
            updateMask?: string;
        }
        interface GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse {
            /** The collection of updated or created intents. */
            intents?: GoogleCloudDialogflowV2beta1Intent[];
        }
        interface GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata {
            /** The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/` */
            conversationProfile?: string;
            /** Timestamp whe the request was created. The time is measured on server side. */
            createTime?: string;
            /** Required. The participant role to remove the suggestion feature config. Only HUMAN_AGENT or END_USER can be used. */
            participantRole?: string;
            /** Required. The type of the suggestion feature to remove. */
            suggestionFeatureType?: string;
        }
        interface GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest {
            /** Required. The participant role to remove the suggestion feature config. Only HUMAN_AGENT or END_USER can be used. */
            participantRole?: string;
            /** Required. The type of the suggestion feature to remove. */
            suggestionFeatureType?: string;
        }
        interface GoogleCloudDialogflowV2beta1CompileSuggestionRequest {
            /** Optional. Max number of messages prior to and including [latest_message] to use as context when compiling the suggestion. If zero or less than zero, 20 is used. */
            contextSize?: number;
            /**
             * Optional. The name of the latest conversation message to compile suggestion for. If empty, it will be the latest message of the conversation. Format:
             * `projects//locations//conversations//messages/`.
             */
            latestMessage?: string;
        }
        interface GoogleCloudDialogflowV2beta1CompileSuggestionResponse {
            /**
             * Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the CompileSuggestionRequest.context_size field in the request if there
             * aren't that many messages in the conversation.
             */
            contextSize?: number;
            /** The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`. */
            latestMessage?: string;
            /** The compiled suggestion. */
            suggestion?: GoogleCloudDialogflowV2beta1Suggestion;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDialogflowV2beta1CompleteConversationRequest {
        }
        interface GoogleCloudDialogflowV2beta1Context {
            /**
             * Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire
             * automatically after 20 minutes if there are no matching queries.
             */
            lifespanCount?: number;
            /**
             * Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
             * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to
             * lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID`
             * is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with
             * these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
             */
            name?: string;
            /**
             * Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table,
             * dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type
             * is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a
             * composite entity: map from composite entity property names to property values - Else: parameter value
             */
            parameters?: { [P in string]: any };
        }
        interface GoogleCloudDialogflowV2beta1Conversation {
            /** Required. The Conversation Profile to be used to configure this Conversation. This field cannot be updated. Format: `projects//locations//conversationProfiles/`. */
            conversationProfile?: string;
            /**
             * The stage of a conversation. It indicates whether the virtual agent or a human agent is handling the conversation. If the conversation is created with the conversation profile that
             * has Dialogflow config set, defaults to ConversationStage.VIRTUAL_AGENT_STAGE; Otherwise, defaults to ConversationStage.HUMAN_ASSIST_STAGE. If the conversation is created with the
             * conversation profile that has Dialogflow config set but explicitly sets conversation_stage to ConversationStage.HUMAN_ASSIST_STAGE, it skips ConversationStage.VIRTUAL_AGENT_STAGE
             * stage and directly goes to ConversationStage.HUMAN_ASSIST_STAGE.
             */
            conversationStage?: string;
            /** Output only. The time the conversation was finished. */
            endTime?: string;
            /** Output only. The current state of the Conversation. */
            lifecycleState?: string;
            /** Output only. The unique identifier of this conversation. Format: `projects//locations//conversations/`. */
            name?: string;
            /** Output only. Required if the conversation is to be connected over telephony. */
            phoneNumber?: GoogleCloudDialogflowV2beta1ConversationPhoneNumber;
            /** Output only. The time the conversation was started. */
            startTime?: string;
        }
        interface GoogleCloudDialogflowV2beta1ConversationEvent {
            /** Required. The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`. */
            conversation?: string;
            /** Optional. More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL. */
            errorStatus?: GoogleRpcStatus;
            /** Payload of NEW_MESSAGE event. */
            newMessagePayload?: GoogleCloudDialogflowV2beta1Message;
            /** Required. The type of the event that this notification refers to. */
            type?: string;
        }
        interface GoogleCloudDialogflowV2beta1ConversationPhoneNumber {
            /** Output only. The phone number to connect to this conversation. */
            phoneNumber?: string;
        }
        interface GoogleCloudDialogflowV2beta1ConversationProfile {
            /** Configuration for an automated agent to use with this profile. */
            automatedAgentConfig?: GoogleCloudDialogflowV2beta1AutomatedAgentConfig;
            /** Output only. Create time of the conversation profile. */
            createTime?: string;
            /** Required. Human readable name for this profile. Max length 1024 bytes. */
            displayName?: string;
            /** Configuration for agent assistance to use with this profile. */
            humanAgentAssistantConfig?: GoogleCloudDialogflowV2beta1HumanAgentAssistantConfig;
            /** Configuration for connecting to a live agent. Currently, this feature is not general available, please contact Google to get access. */
            humanAgentHandoffConfig?: GoogleCloudDialogflowV2beta1HumanAgentHandoffConfig;
            /**
             * Language code for the conversation profile. If not specified, the language is en-US. Language at ConversationProfile should be set for all non en-us languages. This should be a
             * [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
             */
            languageCode?: string;
            /** Configuration for logging conversation lifecycle events. */
            loggingConfig?: GoogleCloudDialogflowV2beta1LoggingConfig;
            /** The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`. */
            name?: string;
            /** Configuration for publishing new message events. Event will be sent in format of ConversationEvent */
            newMessageEventNotificationConfig?: GoogleCloudDialogflowV2beta1NotificationConfig;
            /** Configuration for publishing conversation lifecycle events. */
            notificationConfig?: GoogleCloudDialogflowV2beta1NotificationConfig;
            /** Name of the CX SecuritySettings reference for the agent. Format: `projects//locations//securitySettings/`. */
            securitySettings?: string;
            /** Settings for speech transcription. */
            sttConfig?: GoogleCloudDialogflowV2beta1SpeechToTextConfig;
            /** The time zone of this conversational profile from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. Defaults to America/New_York. */
            timeZone?: string;
            /**
             * Configuration for Text-to-Speech synthesization. Used by Phone Gateway to specify synthesization options. If agent defines synthesization options as well, agent settings overrides
             * the option here.
             */
            ttsConfig?: GoogleCloudDialogflowV2beta1SynthesizeSpeechConfig;
            /** Output only. Update time of the conversation profile. */
            updateTime?: string;
        }
        interface GoogleCloudDialogflowV2beta1CreateMessageRequest {
            /** Required. The message to create. Message.participant is required. */
            message?: GoogleCloudDialogflowV2beta1Message;
            /** Required. Resource identifier of the conversation to create message. Format: `projects//locations//conversations/`. */
            parent?: string;
        }
        interface GoogleCloudDialogflowV2beta1DetectIntentRequest {
            /**
             * The natural language speech audio to be processed. This field should be populated iff `query_input` is set to an input audio config. A single request can contain up to 1 minute of
             * speech audio data.
             */
            inputAudio?: string;
            /** Instructs the speech synthesizer how to generate the output audio. If this field is not set and agent-level speech synthesizer is not configured, no output audio is generated. */
            outputAudioConfig?: GoogleCloudDialogflowV2beta1OutputAudioConfig;
            /**
             * Mask for output_audio_config indicating which settings in this request-level config should override speech synthesizer settings defined at agent-level. If unspecified or empty,
             * output_audio_config replaces the agent-level config in its entirety.
             */
            outputAudioConfigMask?: string;
            /**
             * Required. The input specification. It can be set to: 1. an audio config which instructs the speech recognizer how to process the speech audio, 2. a conversational query in the form
             * of text, or 3. an event that specifies which intent to trigger.
             */
            queryInput?: GoogleCloudDialogflowV2beta1QueryInput;
            /** The parameters of this query. */
            queryParams?: GoogleCloudDialogflowV2beta1QueryParameters;
        }
        interface GoogleCloudDialogflowV2beta1DetectIntentResponse {
            /**
             * If Knowledge Connectors are enabled, there could be more than one result returned for a given query or event, and this field will contain all results except for the top one, which
             * is captured in query_result. The alternative results are ordered by decreasing `QueryResult.intent_detection_confidence`. If Knowledge Connectors are disabled, this field will be
             * empty until multiple responses for regular intents are supported, at which point those additional results will be surfaced here.
             */
            alternativeQueryResults?: GoogleCloudDialogflowV2beta1QueryResult[];
            /**
             * The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the values of default platform text responses found in the
             * `query_result.fulfillment_messages` field. If multiple default text responses exist, they will be concatenated when generating audio. If no default platform text responses exist,
             * the generated audio content will be empty. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio
             * output has content.
             */
            outputAudio?: string;
            /** The config used by the speech synthesizer to generate the output audio. */
            outputAudioConfig?: GoogleCloudDialogflowV2beta1OutputAudioConfig;
            /** The selected results of the conversational query or event processing. See `alternative_query_results` for additional potential results. */
            queryResult?: GoogleCloudDialogflowV2beta1QueryResult;
            /** The unique identifier of the response. It can be used to locate a response in the training example set or for reporting issues. */
            responseId?: string;
            /** Specifies the status of the webhook request. */
            webhookStatus?: GoogleRpcStatus;
        }
        interface GoogleCloudDialogflowV2beta1Document {
            /**
             * The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types. Note: This field is in the process of being deprecated, please use
             * raw_content instead.
             */
            content?: string;
            /**
             * The URI where the file content is located. For documents stored in Google Cloud Storage, these URIs must have the form `gs:///`. NOTE: External URLs must correspond to public
             * webpages, i.e., they must be indexed by Google Search. In particular, URLs for showing documents in Google Cloud Storage (i.e. the URL in your browser) are not supported. Instead
             * use the `gs://` format URI described above.
             */
            contentUri?: string;
            /** Required. The display name of the document. The name must be 1024 bytes or less; otherwise, the creation request fails. */
            displayName?: string;
            /**
             * Optional. If true, we try to automatically reload the document every day (at a time picked by the system). If false or unspecified, we don't try to automatically reload the
             * document. Currently you can only enable automatic reload for documents sourced from a public url, see `source` field for the source types. Reload status can be tracked in
             * `latest_reload_status`. If a reload fails, we will keep the document unchanged. If a reload fails with internal errors, the system will try to reload the document on the next day.
             * If a reload fails with non-retriable errors (e.g. PERMISSION_DENIED), the system will not try to reload the document anymore. You need to manually reload the document successfully
             * by calling `ReloadDocument` and clear the errors.
             */
            enableAutoReload?: boolean;
            /** Required. The knowledge type of document content. */
            knowledgeTypes?: string[];
            /** Output only. The time and status of the latest reload. This reload may have been triggered automatically or manually and may not have succeeded. */
            latestReloadStatus?: GoogleCloudDialogflowV2beta1DocumentReloadStatus;
            /**
             * Optional. Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the
             * document's content_uri, etc. The max size of a `key` or a `value` of the metadata is 1024 bytes.
             */
            metadata?: { [P in string]: string };
            /** Required. The MIME type of this document. */
            mimeType?: string;
            /** Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`. */
            name?: string;
            /** The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types. */
            rawContent?: string;
            /** Output only. The current state of the document. */
            state?: string;
        }
        interface GoogleCloudDialogflowV2beta1DocumentReloadStatus {
            /** Output only. The status of a reload attempt or the initial load. */
            status?: GoogleRpcStatus;
            /** Output only. The time of a reload attempt. This reload may have been triggered automatically or manually and may not have succeeded. */
            time?: string;
        }
        interface GoogleCloudDialogflowV2beta1DtmfParameters {
            /** Indicates whether DTMF input can be handled in the next request. */
            acceptsDtmfInput?: boolean;
        }
        interface GoogleCloudDialogflowV2beta1EntityType {
            /** Optional. Indicates whether the entity type can be automatically expanded. */
            autoExpansionMode?: string;
            /** Required. The name of the entity type. */
            displayName?: string;
            /** Optional. Enables fuzzy entity extraction during classification. */
            enableFuzzyExtraction?: boolean;
            /** Optional. The collection of entity entries associated with the entity type. */
            entities?: GoogleCloudDialogflowV2beta1EntityTypeEntity[];
            /** Required. Indicates the kind of entity type. */
            kind?: string;
            /**
             * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: -
             * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            name?: string;
        }
        interface GoogleCloudDialogflowV2beta1EntityTypeBatch {
            /** A collection of entity types. */
            entityTypes?: GoogleCloudDialogflowV2beta1EntityType[];
        }
        interface GoogleCloudDialogflowV2beta1EntityTypeEntity {
            /**
             * Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity
             * types: * This collection must contain exactly one synonym equal to `value`.
             */
            synonyms?: string[];
            /**
             * Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A
             * reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).
             */
            value?: string;
        }
        interface GoogleCloudDialogflowV2beta1Environment {
            /** Optional. The agent version loaded into this environment. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/` */
            agentVersion?: string;
            /** Optional. The developer-provided description for this environment. The maximum length is 500 characters. If exceeded, the request is rejected. */
            description?: string;
            /** Optional. The fulfillment settings to use for this environment. */
            fulfillment?: GoogleCloudDialogflowV2beta1Fulfillment;
            /** Output only. The unique identifier of this agent environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` */
            name?: string;
            /** Output only. The state of this environment. This field is read-only, i.e., it cannot be set by create and update methods. */
            state?: string;
            /** Optional. Text to speech settings for this environment. */
            textToSpeechSettings?: GoogleCloudDialogflowV2beta1TextToSpeechSettings;
            /** Output only. The last update time of this environment. This field is read-only, i.e., it cannot be set by create and update methods. */
            updateTime?: string;
        }
        interface GoogleCloudDialogflowV2beta1EnvironmentHistory {
            /** Output only. The list of agent environments. There will be a maximum number of items returned based on the page_size field in the request. */
            entries?: GoogleCloudDialogflowV2beta1EnvironmentHistoryEntry[];
            /** Output only. Token to retrieve the next page of results, or empty if there are no more results in the list. */
            nextPageToken?: string;
            /** Output only. The name of the environment this history is for. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` */
            parent?: string;
        }
        interface GoogleCloudDialogflowV2beta1EnvironmentHistoryEntry {
            /** The agent version loaded into this environment history entry. */
            agentVersion?: string;
            /** The creation time of this environment history entry. */
            createTime?: string;
            /** The developer-provided description for this environment history entry. */
            description?: string;
        }
        interface GoogleCloudDialogflowV2beta1EventInput {
            /**
             * Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note
             * that queries in the same session do not necessarily need to specify the same language. This field is ignored when used in the context of a WebhookResponse.followup_event_input
             * field, because the language was already defined in the originating detect intent request.
             */
            languageCode?: string;
            /** Required. The unique identifier of the event. */
            name?: string;
            /**
             * The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON
             * object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite
             * entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite
             * entity: map from composite entity property names to property values - Else: parameter value
             */
            parameters?: { [P in string]: any };
        }
        interface GoogleCloudDialogflowV2beta1ExportAgentRequest {
            /**
             * Optional. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the agent to. The format of this URI must be `gs:///`. If left unspecified, the serialized
             * agent is returned inline. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for
             * the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
             */
            agentUri?: string;
        }
        interface GoogleCloudDialogflowV2beta1ExportAgentResponse {
            /** Zip compressed raw byte content for agent. */
            agentContent?: string;
            /** The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`. */
            agentUri?: string;
        }
        interface GoogleCloudDialogflowV2beta1ExportOperationMetadata {
            /** Cloud Storage file path of the exported data. */
            exportedGcsDestination?: GoogleCloudDialogflowV2beta1GcsDestination;
        }
        interface GoogleCloudDialogflowV2beta1FaqAnswer {
            /** The piece of text from the `source` knowledge base document. */
            answer?: string;
            /** The name of answer record, in the format of "projects//locations//answerRecords/" */
            answerRecord?: string;
            /** The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain). */
            confidence?: number;
            /** A map that contains metadata about the answer and the document from which it originates. */
            metadata?: { [P in string]: string };
            /** The corresponding FAQ question. */
            question?: string;
            /** Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`. */
            source?: string;
        }
        interface GoogleCloudDialogflowV2beta1Fulfillment {
            /** The human-readable name of the fulfillment, unique within the agent. This field is not used for Fulfillment in an Environment. */
            displayName?: string;
            /** Whether fulfillment is enabled. */
            enabled?: boolean;
            /** The field defines whether the fulfillment is enabled for certain features. */
            features?: GoogleCloudDialogflowV2beta1FulfillmentFeature[];
            /** Configuration for a generic web service. */
            genericWebService?: GoogleCloudDialogflowV2beta1FulfillmentGenericWebService;
            /**
             * Required. The unique identifier of the fulfillment. Supported formats: - `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for
             * Fulfillment in an Environment.
             */
            name?: string;
        }
        interface GoogleCloudDialogflowV2beta1FulfillmentFeature {
            /** The type of the feature that enabled for fulfillment. */
            type?: string;
        }
        interface GoogleCloudDialogflowV2beta1FulfillmentGenericWebService {
            /**
             * Optional. Indicates if generic web service is created through Cloud Functions integration. Defaults to false. is_cloud_function is deprecated. Cloud functions can be configured by
             * its uri as a regular web service now.
             */
            isCloudFunction?: boolean;
            /** The password for HTTP Basic authentication. */
            password?: string;
            /** The HTTP request headers to send together with fulfillment requests. */
            requestHeaders?: { [P in string]: string };
            /** Required. The fulfillment URI for receiving POST requests. It must use https protocol. */
            uri?: string;
            /** The user name for HTTP Basic authentication. */
            username?: string;
        }
        interface GoogleCloudDialogflowV2beta1GcsDestination {
            /**
             * Required. The Google Cloud Storage URIs for the output. A URI is of the form: gs://bucket/object-prefix-or-name Whether a prefix or name is used depends on the use case. The
             * requesting user must have "write-permission" to the bucket.
             */
            uri?: string;
        }
        interface GoogleCloudDialogflowV2beta1GcsSource {
            /** Required. The Google Cloud Storage URIs for the inputs. A URI is of the form: gs://bucket/object-prefix-or-name Whether a prefix or name is used depends on the use case. */
            uri?: string;
        }
        interface GoogleCloudDialogflowV2beta1GcsSources {
            /** Required. Google Cloud Storage URIs for the inputs. A URI is of the form: gs://bucket/object-prefix-or-name Whether a prefix or name is used depends on the use case. */
            uris?: string[];
        }
        interface GoogleCloudDialogflowV2beta1HumanAgentAssistantConfig {
            /** Configuration for agent assistance of end user participant. Currently, this feature is not general available, please contact Google to get access. */
            endUserSuggestionConfig?: GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig;
            /** Configuration for agent assistance of human agent participant. */
            humanAgentSuggestionConfig?: GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig;
            /** Configuration for message analysis. */
            messageAnalysisConfig?: GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigMessageAnalysisConfig;
            /** Pub/Sub topic on which to publish new agent assistant events. */
            notificationConfig?: GoogleCloudDialogflowV2beta1NotificationConfig;
        }
        interface GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationModelConfig {
            /** Conversation model resource name. Format: `projects//conversationModels/`. */
            model?: string;
        }
        interface GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationProcessConfig {
            /** Number of recent non-small-talk sentences to use as context for article and FAQ suggestion */
            recentSentencesCount?: number;
        }
        interface GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigMessageAnalysisConfig {
            /**
             * Enable entity extraction in conversation messages on [agent assist stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If unspecified, defaults to
             * false. Currently, this feature is not general available, please contact Google to get access.
             */
            enableEntityExtraction?: boolean;
            /**
             * Enable sentiment analysis in conversation messages on [agent assist stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If unspecified, defaults to
             * false. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral:
             * https://cloud.google.com/natural-language/docs/basics#sentiment_analysis For Participants.StreamingAnalyzeContent method, result will be in
             * StreamingAnalyzeContentResponse.message.SentimentAnalysisResult. For Participants.AnalyzeContent method, result will be in AnalyzeContentResponse.message.SentimentAnalysisResult For
             * Conversations.ListMessages method, result will be in ListMessagesResponse.messages.SentimentAnalysisResult If Pub/Sub notification is configured, result will be in
             * ConversationEvent.new_message_payload.SentimentAnalysisResult.
             */
            enableSentimentAnalysis?: boolean;
        }
        interface GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionConfig {
            /** Configuration of different suggestion features. One feature can have only one config. */
            featureConfigs?: GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig[];
            /**
             * If `group_suggestion_responses` is false, and there are multiple `feature_configs` in `event based suggestion` or StreamingAnalyzeContent, we will try to deliver suggestions to
             * customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or `StreamingAnalyzeContentResponse`. If
             * `group_suggestion_responses` set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or
             * StreamingAnalyzeContentResponse.
             */
            groupSuggestionResponses?: boolean;
        }
        interface GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig {
            /** Configs of custom conversation model. */
            conversationModelConfig?: GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationModelConfig;
            /** Configs for processing conversation. */
            conversationProcessConfig?: GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigConversationProcessConfig;
            /** Automatically iterates all participants and tries to compile suggestions. Supported features: ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST. */
            enableEventBasedSuggestion?: boolean;
            /** Configs of query. */
            queryConfig?: GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfig;
            /** The suggestion feature. */
            suggestionFeature?: GoogleCloudDialogflowV2beta1SuggestionFeature;
            /** Settings of suggestion trigger. Currently, only ARTICLE_SUGGESTION, FAQ, and DIALOGFLOW_ASSIST will use this field. */
            suggestionTriggerSettings?: GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionTriggerSettings;
        }
        interface GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfig {
            /**
             * Confidence threshold of query result. Agent Assist gives each suggestion a score in the range [0.0, 1.0], based on the relevance between the suggestion and the current conversation
             * context. A score of 0.0 has no relevance, while a score of 1.0 has high relevance. Only suggestions with a score greater than or equal to the value of this field are included in the
             * results. For a baseline model (the default), the recommended value is in the range [0.05, 0.1]. For a custom model, there is no recommended value. Tune this value by starting from a
             * very low value and slowly increasing until you have desired results. If this field is not set, it is default to 0.0, which means that all suggestions are returned. Supported
             * features: ARTICLE_SUGGESTION, FAQ, SMART_REPLY, SMART_COMPOSE.
             */
            confidenceThreshold?: number;
            /** Determines how recent conversation context is filtered when generating suggestions. If unspecified, no messages will be dropped. */
            contextFilterSettings?: GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettings;
            /** Query from Dialogflow agent. It is used by DIALOGFLOW_ASSIST. */
            dialogflowQuerySource?: GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySource;
            /** Query from knowledge base document. It is used by: SMART_REPLY, SMART_COMPOSE. */
            documentQuerySource?: GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySource;
            /** Query from knowledgebase. It is used by: ARTICLE_SUGGESTION, FAQ. */
            knowledgeBaseQuerySource?: GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySource;
            /** Maximum number of results to return. Currently, if unset, defaults to 10. And the max number is 20. */
            maxResults?: number;
        }
        interface GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettings {
            /** If set to true, the last message from virtual agent (hand off message) and the message before it (trigger message of hand off) are dropped. */
            dropHandoffMessages?: boolean;
            /** If set to true, all messages from ivr stage are dropped. */
            dropIvrMessages?: boolean;
            /** If set to true, all messages from virtual agent are dropped. */
            dropVirtualAgentMessages?: boolean;
        }
        interface GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySource {
            /**
             * Required. The name of a dialogflow virtual agent used for end user side intent detection and suggestion. Format: `projects//locations//agent`. When multiple agents are allowed in
             * the same Dialogflow project.
             */
            agent?: string;
        }
        interface GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySource {
            /** Required. Knowledge documents to query from. Format: `projects//locations//knowledgeBases//documents/`. Currently, only one document is supported. */
            documents?: string[];
        }
        interface GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySource {
            /** Required. Knowledge bases to query. Format: `projects//locations//knowledgeBases/`. Currently, only one knowledge base is supported. */
            knowledgeBases?: string[];
        }
        interface GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionTriggerSettings {
            /** Do not trigger if last utterance is small talk. */
            noSmallTalk?: boolean;
            /** Only trigger suggestion if participant role of last utterance is END_USER. */
            onlyEndUser?: boolean;
        }
        interface GoogleCloudDialogflowV2beta1HumanAgentAssistantEvent {
            /** The conversation this notification refers to. Format: `projects//conversations/`. */
            conversation?: string;
            /**
             * The participant that the suggestion is compiled for. And This field is used to call Participants.ListSuggestions API. Format: `projects//conversations//participants/`. It will not
             * be set in legacy workflow. HumanAgentAssistantConfig.name for more information.
             */
            participant?: string;
            /** The suggestion results payload that this notification refers to. It will only be set when HumanAgentAssistantConfig.SuggestionConfig.group_suggestion_responses sets to true. */
            suggestionResults?: GoogleCloudDialogflowV2beta1SuggestionResult[];
        }
        interface GoogleCloudDialogflowV2beta1HumanAgentHandoffConfig {
            /** Uses LivePerson (https://www.liveperson.com). */
            livePersonConfig?: GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigLivePersonConfig;
            /** Uses Salesforce Live Agent. */
            salesforceLiveAgentConfig?: GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig;
        }
        interface GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigLivePersonConfig {
            /** Required. Account number of the LivePerson account to connect. This is the account number you input at the login page. */
            accountNumber?: string;
        }
        interface GoogleCloudDialogflowV2beta1HumanAgentHandoffConfigSalesforceLiveAgentConfig {
            /** Required. Live Agent chat button ID. */
            buttonId?: string;
            /** Required. Live Agent deployment ID. */
            deploymentId?: string;
            /**
             * Required. Domain of the Live Agent endpoint for this agent. You can find the endpoint URL in the `Live Agent settings` page. For example if URL has the form
             * https://d.la4-c2-phx.salesforceliveagent.com/..., you should fill in d.la4-c2-phx.salesforceliveagent.com.
             */
            endpointDomain?: string;
            /** Required. The organization ID of the Salesforce account. */
            organizationId?: string;
        }
        interface GoogleCloudDialogflowV2beta1ImportAgentRequest {
            /** Zip compressed raw byte content for agent. */
            agentContent?: string;
            /**
             * The URI to a Google Cloud Storage file containing the agent to import. Note: The URI must start with "gs://". Dialogflow performs a read operation for the Cloud Storage object on
             * the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access
             * control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
             */
            agentUri?: string;
        }
        interface GoogleCloudDialogflowV2beta1ImportDocumentsRequest {
            /** Required. Document template used for importing all the documents. */
            documentTemplate?: GoogleCloudDialogflowV2beta1ImportDocumentTemplate;
            /** The Google Cloud Storage location for the documents. The path can include a wildcard. These URIs may have the forms `gs:///`. `gs:////*.`. */
            gcsSource?: GoogleCloudDialogflowV2beta1GcsSources;
            /** Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is Google Cloud Storage URI. */
            importGcsCustomMetadata?: boolean;
        }
        interface GoogleCloudDialogflowV2beta1ImportDocumentsResponse {
            /** Includes details about skipped documents or any other warnings. */
            warnings?: GoogleRpcStatus[];
        }
        interface GoogleCloudDialogflowV2beta1ImportDocumentTemplate {
            /** Required. The knowledge type of document content. */
            knowledgeTypes?: string[];
            /**
             * Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's
             * content_uri, etc. The max size of a `key` or a `value` of the metadata is 1024 bytes.
             */
            metadata?: { [P in string]: string };
            /** Required. The MIME type of the document. */
            mimeType?: string;
        }
        interface GoogleCloudDialogflowV2beta1InputAudioConfig {
            /** Required. Audio encoding of the audio content to process. */
            audioEncoding?: string;
            /** Configuration of barge-in behavior during the streaming of input audio. */
            bargeInConfig?: GoogleCloudDialogflowV2beta1BargeInConfig;
            /**
             * Only used in Participants.AnalyzeContent and Participants.StreamingAnalyzeContent. If `false` and recognition doesn't return any result, trigger `NO_SPEECH_RECOGNIZED` event to
             * Dialogflow agent.
             */
            disableNoSpeechRecognizedEvent?: boolean;
            /**
             * If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or
             * unspecified, Speech doesn't return any word-level information.
             */
            enableWordInfo?: boolean;
            /**
             * Required. The language of the supplied audio. Dialogflow does not do translations. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of
             * the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
             */
            languageCode?: string;
            /**
             * Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a
             * model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not
             * exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API
             * documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details. If you specify a model, the following models typically have the best performance:
             * - phone_call (best for Agent Assist and telephony) - latest_short (best for Dialogflow non-telephony) - command_and_search (best for very short utterances and commands)
             */
            model?: string;
            /** Which variant of the Speech model to use. */
            modelVariant?: string;
            /**
             * A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech
             * documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details. This field is deprecated. Please use [speech_contexts]() instead. If you specify
             * both [phrase_hints]() and [speech_contexts](), Dialogflow will treat the [phrase_hints]() as a single additional [SpeechContext]().
             */
            phraseHints?: string[];
            /**
             * Required. Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more
             * details.
             */
            sampleRateHertz?: number;
            /**
             * If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition
             * ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a
             * new stream as needed. Note: This setting is relevant only for streaming methods. Note: When specified, InputAudioConfig.single_utterance takes precedence over
             * StreamingDetectIntentRequest.single_utterance.
             */
            singleUtterance?: boolean;
            /** Context information to assist speech recognition. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details. */
            speechContexts?: GoogleCloudDialogflowV2beta1SpeechContext[];
        }
        interface GoogleCloudDialogflowV2beta1Intent {
            /** Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces. */
            action?: string;
            /** Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform). */
            defaultResponsePlatforms?: string[];
            /** Required. The name of this intent. */
            displayName?: string;
            /**
             * Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an
             * end user. Default is false.
             */
            endInteraction?: boolean;
            /**
             * Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for
             * an event to trigger this intent. Event names are limited to 150 characters.
             */
            events?: string[];
            /** Output only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output. */
            followupIntentInfo?: GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo[];
            /** Optional. The list of context names required for this intent to be triggered. Formats: - `projects//agent/sessions/-/contexts/` - `projects//locations//agent/sessions/-/contexts/` */
            inputContextNames?: string[];
            /** Optional. Indicates whether this is a fallback intent. */
            isFallback?: boolean;
            /**
             * Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set
             * end_interaction to true as well. Default is false.
             */
            liveAgentHandoff?: boolean;
            /** Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console. */
            messages?: GoogleCloudDialogflowV2beta1IntentMessage[];
            /**
             * Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference
             * in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.
             */
            mlDisabled?: boolean;
            /**
             * Optional. Indicates whether Machine Learning is enabled for the intent. Note: If `ml_enabled` setting is set to false, then this intent is not taken into account during inference in
             * `ML ONLY` match mode. Also, auto-markup in the UI is turned off. DEPRECATED! Please use `ml_disabled` field instead. NOTE: If both `ml_enabled` and `ml_disabled` are either not set
             * or false, then the default value is determined as follows: - Before April 15th, 2018 the default is: ml_enabled = false / ml_disabled = true. - After April 15th, 2018 the default
             * is: ml_enabled = true / ml_disabled = false.
             */
            mlEnabled?: boolean;
            /**
             * Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
             * `projects//locations//agent/intents/`
             */
            name?: string;
            /**
             * Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the
             * `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.
             */
            outputContexts?: GoogleCloudDialogflowV2beta1Context[];
            /** Optional. The collection of parameters associated with the intent. */
            parameters?: GoogleCloudDialogflowV2beta1IntentParameter[];
            /**
             * Optional. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or
             * BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.
             */
            parentFollowupIntentName?: string;
            /**
             * Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which
             * corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
             */
            priority?: number;
            /** Optional. Indicates whether to delete all contexts in the current session when this intent is matched. */
            resetContexts?: boolean;
            /**
             * Output only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. Format:
             * `projects//agent/intents/`.
             */
            rootFollowupIntentName?: string;
            /** Optional. The collection of examples that the agent is trained on. */
            trainingPhrases?: GoogleCloudDialogflowV2beta1IntentTrainingPhrase[];
            /** Optional. Indicates whether webhooks are enabled for the intent. */
            webhookState?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentBatch {
            /** A collection of intents. */
            intents?: GoogleCloudDialogflowV2beta1Intent[];
        }
        interface GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo {
            /** The unique identifier of the followup intent. Format: `projects//agent/intents/`. */
            followupIntentName?: string;
            /** The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`. */
            parentFollowupIntentName?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessage {
            /** Displays a basic card for Actions on Google. */
            basicCard?: GoogleCloudDialogflowV2beta1IntentMessageBasicCard;
            /** Browse carousel card for Actions on Google. */
            browseCarouselCard?: GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard;
            /** Displays a card. */
            card?: GoogleCloudDialogflowV2beta1IntentMessageCard;
            /** Displays a carousel card for Actions on Google. */
            carouselSelect?: GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect;
            /** Displays an image. */
            image?: GoogleCloudDialogflowV2beta1IntentMessageImage;
            /** Displays a link out suggestion chip for Actions on Google. */
            linkOutSuggestion?: GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion;
            /** Displays a list card for Actions on Google. */
            listSelect?: GoogleCloudDialogflowV2beta1IntentMessageListSelect;
            /** The media content card for Actions on Google. */
            mediaContent?: GoogleCloudDialogflowV2beta1IntentMessageMediaContent;
            /** A custom platform-specific response. */
            payload?: { [P in string]: any };
            /** Optional. The platform that this message is intended for. */
            platform?: string;
            /** Displays quick replies. */
            quickReplies?: GoogleCloudDialogflowV2beta1IntentMessageQuickReplies;
            /** Rich Business Messaging (RBM) carousel rich card response. */
            rbmCarouselRichCard?: GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard;
            /** Standalone Rich Business Messaging (RBM) rich card response. */
            rbmStandaloneRichCard?: GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard;
            /** Rich Business Messaging (RBM) text response. RBM allows businesses to send enriched and branded versions of SMS. See https://jibe.google.com/business-messaging. */
            rbmText?: GoogleCloudDialogflowV2beta1IntentMessageRbmText;
            /** Returns a voice or text-only response for Actions on Google. */
            simpleResponses?: GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses;
            /** Displays suggestion chips for Actions on Google. */
            suggestions?: GoogleCloudDialogflowV2beta1IntentMessageSuggestions;
            /** Table card for Actions on Google. */
            tableCard?: GoogleCloudDialogflowV2beta1IntentMessageTableCard;
            /** Plays audio from a file in Telephony Gateway. */
            telephonyPlayAudio?: GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio;
            /** Synthesizes speech in Telephony Gateway. */
            telephonySynthesizeSpeech?: GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech;
            /** Transfers the call in Telephony Gateway. */
            telephonyTransferCall?: GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall;
            /** Returns a text response. */
            text?: GoogleCloudDialogflowV2beta1IntentMessageText;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageBasicCard {
            /** Optional. The collection of card buttons. */
            buttons?: GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton[];
            /** Required, unless image is present. The body text of the card. */
            formattedText?: string;
            /** Optional. The image for the card. */
            image?: GoogleCloudDialogflowV2beta1IntentMessageImage;
            /** Optional. The subtitle of the card. */
            subtitle?: string;
            /** Optional. The title of the card. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton {
            /** Required. Action to take when a user taps on the button. */
            openUriAction?: GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction;
            /** Required. The title of the button. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction {
            /** Required. The HTTP or HTTPS scheme URI. */
            uri?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard {
            /** Optional. Settings for displaying the image. Applies to every image in items. */
            imageDisplayOptions?: string;
            /** Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten. */
            items?: GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem[];
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem {
            /** Optional. Description of the carousel item. Maximum of four lines of text. */
            description?: string;
            /** Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text. */
            footer?: string;
            /** Optional. Hero image for the carousel item. */
            image?: GoogleCloudDialogflowV2beta1IntentMessageImage;
            /** Required. Action to present to the user. */
            openUriAction?: GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction;
            /** Required. Title of the carousel item. Maximum of two lines of text. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction {
            /** Required. URL */
            url?: string;
            /** Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser. */
            urlTypeHint?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageCard {
            /** Optional. The collection of card buttons. */
            buttons?: GoogleCloudDialogflowV2beta1IntentMessageCardButton[];
            /** Optional. The public URI to an image file for the card. */
            imageUri?: string;
            /** Optional. The subtitle of the card. */
            subtitle?: string;
            /** Optional. The title of the card. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageCardButton {
            /** Optional. The text to send back to the Dialogflow API or a URI to open. */
            postback?: string;
            /** Optional. The text to show on the button. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect {
            /** Required. Carousel items. */
            items?: GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem[];
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem {
            /** Optional. The body text of the card. */
            description?: string;
            /** Optional. The image to display. */
            image?: GoogleCloudDialogflowV2beta1IntentMessageImage;
            /** Required. Additional info about the option item. */
            info?: GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo;
            /** Required. Title of the carousel item. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageColumnProperties {
            /** Required. Column heading. */
            header?: string;
            /** Optional. Defines text alignment for all cells in this column. */
            horizontalAlignment?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageImage {
            /** A text description of the image to be used for accessibility, e.g., screen readers. Required if image_uri is set for CarouselSelect. */
            accessibilityText?: string;
            /** Optional. The public URI to an image file. */
            imageUri?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion {
            /** Required. The name of the app or site this chip is linking to. */
            destinationName?: string;
            /** Required. The URI of the app or site to open when the user taps the suggestion chip. */
            uri?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageListSelect {
            /** Required. List items. */
            items?: GoogleCloudDialogflowV2beta1IntentMessageListSelectItem[];
            /** Optional. Subtitle of the list. */
            subtitle?: string;
            /** Optional. The overall title of the list. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageListSelectItem {
            /** Optional. The main text describing the item. */
            description?: string;
            /** Optional. The image to display. */
            image?: GoogleCloudDialogflowV2beta1IntentMessageImage;
            /** Required. Additional information about this option. */
            info?: GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo;
            /** Required. The title of the list item. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageMediaContent {
            /** Required. List of media objects. */
            mediaObjects?: GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject[];
            /** Optional. What type of media is the content (ie "audio"). */
            mediaType?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject {
            /** Required. Url where the media is stored. */
            contentUrl?: string;
            /** Optional. Description of media card. */
            description?: string;
            /** Optional. Icon to display above media content. */
            icon?: GoogleCloudDialogflowV2beta1IntentMessageImage;
            /** Optional. Image to display above media content. */
            largeImage?: GoogleCloudDialogflowV2beta1IntentMessageImage;
            /** Required. Name of media card. */
            name?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageQuickReplies {
            /** Optional. The collection of quick replies. */
            quickReplies?: string[];
            /** Optional. The title of the collection of quick replies. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent {
            /** Optional. Description of the card (at most 2000 bytes). At least one of the title, description or media must be set. */
            description?: string;
            /** Optional. However at least one of the title, description or media must be set. Media (image, GIF or a video) to include in the card. */
            media?: GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia;
            /** Optional. List of suggestions to include in the card. */
            suggestions?: GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion[];
            /** Optional. Title of the card (at most 200 bytes). At least one of the title, description or media must be set. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia {
            /**
             * Required. Publicly reachable URI of the file. The RBM platform determines the MIME type of the file from the content-type field in the HTTP headers when the platform fetches the
             * file. The content-type field must be present and accurate in the HTTP response from the URL.
             */
            fileUri?: string;
            /**
             * Required for cards with vertical orientation. The height of the media within a rich card with a vertical layout. For a standalone card with horizontal layout, height is not
             * customizable, and this field is ignored.
             */
            height?: string;
            /**
             * Optional. Publicly reachable URI of the thumbnail.If you don't provide a thumbnail URI, the RBM platform displays a blank placeholder thumbnail until the user's device downloads the
             * file. Depending on the user's setting, the file may not download automatically and may require the user to tap a download button.
             */
            thumbnailUri?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard {
            /** Required. The cards in the carousel. A carousel must have at least 2 cards and at most 10. */
            cardContents?: GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent[];
            /** Required. The width of the cards in the carousel. */
            cardWidth?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard {
            /** Required. Card content. */
            cardContent?: GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent;
            /** Required. Orientation of the card. */
            cardOrientation?: string;
            /** Required if orientation is horizontal. Image preview alignment for standalone cards with horizontal layout. */
            thumbnailImageAlignment?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction {
            /** Suggested client side action: Dial a phone number */
            dial?: GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial;
            /** Suggested client side action: Open a URI on device */
            openUrl?: GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri;
            /**
             * Opaque payload that the Dialogflow receives in a user event when the user taps the suggested action. This data will be also forwarded to webhook to allow performing custom business
             * logic.
             */
            postbackData?: string;
            /** Suggested client side action: Share user location */
            shareLocation?: any;
            /** Text to display alongside the action. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial {
            /**
             * Required. The phone number to fill in the default dialer app. This field should be in [E.164](https://en.wikipedia.org/wiki/E.164) format. An example of a correctly formatted phone
             * number: +15556767888.
             */
            phoneNumber?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri {
            /** Required. The uri to open on the user device */
            uri?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation {
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply {
            /**
             * Opaque payload that the Dialogflow receives in a user event when the user taps the suggested reply. This data will be also forwarded to webhook to allow performing custom business
             * logic.
             */
            postbackData?: string;
            /** Suggested reply text. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion {
            /** Predefined client side actions that user can choose */
            action?: GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction;
            /** Predefined replies for user to select instead of typing */
            reply?: GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmText {
            /** Optional. One or more suggestions to show to the user. */
            rbmSuggestion?: GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion[];
            /** Required. Text sent and displayed to the user. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo {
            /** Required. A unique key that will be sent back to the agent if this response is given. */
            key?: string;
            /** Optional. A list of synonyms that can also be used to trigger this item in dialog. */
            synonyms?: string[];
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse {
            /** Optional. The text to display. */
            displayText?: string;
            /** One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech. */
            ssml?: string;
            /** One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml. */
            textToSpeech?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses {
            /** Required. The list of simple responses. */
            simpleResponses?: GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse[];
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageSuggestion {
            /** Required. The text shown the in the suggestion chip. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageSuggestions {
            /** Required. The list of suggested replies. */
            suggestions?: GoogleCloudDialogflowV2beta1IntentMessageSuggestion[];
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageTableCard {
            /** Optional. List of buttons for the card. */
            buttons?: GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton[];
            /** Optional. Display properties for the columns in this table. */
            columnProperties?: GoogleCloudDialogflowV2beta1IntentMessageColumnProperties[];
            /** Optional. Image which should be displayed on the card. */
            image?: GoogleCloudDialogflowV2beta1IntentMessageImage;
            /** Optional. Rows in this table of data. */
            rows?: GoogleCloudDialogflowV2beta1IntentMessageTableCardRow[];
            /** Optional. Subtitle to the title. */
            subtitle?: string;
            /** Required. Title of the card. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageTableCardCell {
            /** Required. Text in this cell. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageTableCardRow {
            /** Optional. List of cells that make up this row. */
            cells?: GoogleCloudDialogflowV2beta1IntentMessageTableCardCell[];
            /** Optional. Whether to add a visual divider after this row. */
            dividerAfter?: boolean;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio {
            /**
             * Required. URI to a Google Cloud Storage object containing the audio to play, e.g., "gs://bucket/object". The object must contain a single channel (mono) of linear PCM audio (2 bytes
             * / sample) at 8kHz. This object must be readable by the `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` service account where is the number of the Telephony Gateway project
             * (usually the same as the Dialogflow agent project). If the Google Cloud Storage bucket is in the Telephony Gateway project, this permission is added by default when enabling the
             * Dialogflow V2 API. For audio from other sources, consider using the `TelephonySynthesizeSpeech` message with SSML.
             */
            audioUri?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech {
            /** The SSML to be synthesized. For more information, see [SSML](https://developers.google.com/actions/reference/ssml). */
            ssml?: string;
            /** The raw text to be synthesized. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall {
            /** Required. The phone number to transfer the call to in [E.164 format](https://en.wikipedia.org/wiki/E.164). We currently only allow transferring to US numbers (+1xxxyyyzzzz). */
            phoneNumber?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageText {
            /** Optional. The collection of the agent's responses. */
            text?: string[];
        }
        interface GoogleCloudDialogflowV2beta1IntentParameter {
            /**
             * Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax:
             * `#context_name.parameter_name`.
             */
            defaultValue?: string;
            /** Required. The name of the parameter. */
            displayName?: string;
            /** Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided. */
            entityTypeDisplayName?: string;
            /** Optional. Indicates whether the parameter represents a list of values. */
            isList?: boolean;
            /** Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value. */
            mandatory?: boolean;
            /** The unique identifier of this parameter. */
            name?: string;
            /** Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter. */
            prompts?: string[];
            /**
             * Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as
             * `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`.
             */
            value?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentTrainingPhrase {
            /** Output only. The unique identifier of this training phrase. */
            name?: string;
            /**
             * Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases
             * like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the
             * training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must
             * create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a
             * part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set.
             */
            parts?: GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart[];
            /** Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased. */
            timesAddedCount?: number;
            /** Required. The type of the training phrase. */
            type?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart {
            /** Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase. */
            alias?: string;
            /** Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase. */
            entityType?: string;
            /** Required. The text for this part. */
            text?: string;
            /**
             * Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated
             * part with the API, you must set this to true.
             */
            userDefined?: boolean;
        }
        interface GoogleCloudDialogflowV2beta1KnowledgeAnswers {
            /** A list of answers from Knowledge Connector. */
            answers?: GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer[];
        }
        interface GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer {
            /** The piece of text from the `source` knowledge base document that answers this conversational query. */
            answer?: string;
            /** The corresponding FAQ question if the answer was extracted from a FAQ Document, empty otherwise. */
            faqQuestion?: string;
            /**
             * The system's confidence score that this Knowledge answer is a good match for this conversational query. The range is from 0.0 (completely uncertain) to 1.0 (completely certain).
             * Note: The confidence score is likely to vary somewhat (possibly even for identical requests), as the underlying model is under constant improvement. It may be deprecated in the
             * future. We recommend using `match_confidence_level` which should be generally more stable.
             */
            matchConfidence?: number;
            /**
             * The system's confidence level that this knowledge answer is a good match for this conversational query. NOTE: The confidence level for a given `` pair may change without notice, as
             * it depends on models that are constantly being improved. However, it will change less frequently than the confidence score below, and should be preferred for referencing the quality
             * of an answer.
             */
            matchConfidenceLevel?: string;
            /** Indicates which Knowledge Document this answer was extracted from. Format: `projects//knowledgeBases//documents/`. */
            source?: string;
        }
        interface GoogleCloudDialogflowV2beta1KnowledgeBase {
            /** Required. The display name of the knowledge base. The name must be 1024 bytes or less; otherwise, the creation request fails. */
            displayName?: string;
            /**
             * Language which represents the KnowledgeBase. When the KnowledgeBase is created/updated, this is populated for all non en-us languages. If not populated, the default language en-us
             * applies.
             */
            languageCode?: string;
            /** The knowledge base resource name. The name must be empty when creating a knowledge base. Format: `projects//locations//knowledgeBases/`. */
            name?: string;
        }
        interface GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata {
            /** Metadata for the Export Data Operation such as the destination of export. */
            exportOperationMetadata?: GoogleCloudDialogflowV2beta1ExportOperationMetadata;
            /** The name of the knowledge base interacted with during the operation. */
            knowledgeBase?: string;
            /** Required. Output only. The current state of this operation. */
            state?: string;
        }
        interface GoogleCloudDialogflowV2beta1ListAnswerRecordsResponse {
            /** The list of answer records. */
            answerRecords?: GoogleCloudDialogflowV2beta1AnswerRecord[];
            /**
             * A token to retrieve next page of results. Or empty if there are no more results. Pass this value in the ListAnswerRecordsRequest.page_token field in the subsequent call to
             * `ListAnswerRecords` method to retrieve the next page of results.
             */
            nextPageToken?: string;
        }
        interface GoogleCloudDialogflowV2beta1ListContextsResponse {
            /** The list of contexts. There will be a maximum number of items returned based on the page_size field in the request. */
            contexts?: GoogleCloudDialogflowV2beta1Context[];
            /** Token to retrieve the next page of results, or empty if there are no more results in the list. */
            nextPageToken?: string;
        }
        interface GoogleCloudDialogflowV2beta1ListConversationProfilesResponse {
            /** The list of project conversation profiles. There is a maximum number of items returned based on the page_size field in the request. */
            conversationProfiles?: GoogleCloudDialogflowV2beta1ConversationProfile[];
            /** Token to retrieve the next page of results, or empty if there are no more results in the list. */
            nextPageToken?: string;
        }
        interface GoogleCloudDialogflowV2beta1ListConversationsResponse {
            /** The list of conversations. There will be a maximum number of items returned based on the page_size field in the request. */
            conversations?: GoogleCloudDialogflowV2beta1Conversation[];
            /** Token to retrieve the next page of results, or empty if there are no more results in the list. */
            nextPageToken?: string;
        }
        interface GoogleCloudDialogflowV2beta1ListDocumentsResponse {
            /** The list of documents. */
            documents?: GoogleCloudDialogflowV2beta1Document[];
            /** Token to retrieve the next page of results, or empty if there are no more results in the list. */
            nextPageToken?: string;
        }
        interface GoogleCloudDialogflowV2beta1ListEntityTypesResponse {
            /** The list of agent entity types. There will be a maximum number of items returned based on the page_size field in the request. */
            entityTypes?: GoogleCloudDialogflowV2beta1EntityType[];
            /** Token to retrieve the next page of results, or empty if there are no more results in the list. */
            nextPageToken?: string;
        }
        interface GoogleCloudDialogflowV2beta1ListEnvironmentsResponse {
            /** The list of agent environments. There will be a maximum number of items returned based on the page_size field in the request. */
            environments?: GoogleCloudDialogflowV2beta1Environment[];
            /** Token to retrieve the next page of results, or empty if there are no more results in the list. */
            nextPageToken?: string;
        }
        interface GoogleCloudDialogflowV2beta1ListIntentsResponse {
            /** The list of agent intents. There will be a maximum number of items returned based on the page_size field in the request. */
            intents?: GoogleCloudDialogflowV2beta1Intent[];
            /** Token to retrieve the next page of results, or empty if there are no more results in the list. */
            nextPageToken?: string;
        }
        interface GoogleCloudDialogflowV2beta1ListKnowledgeBasesResponse {
            /** The list of knowledge bases. */
            knowledgeBases?: GoogleCloudDialogflowV2beta1KnowledgeBase[];
            /** Token to retrieve the next page of results, or empty if there are no more results in the list. */
            nextPageToken?: string;
        }
        interface GoogleCloudDialogflowV2beta1ListMessagesResponse {
            /**
             * Required. The list of messages. There will be a maximum number of items returned based on the page_size field in the request. `messages` is sorted by `create_time` in descending
             * order.
             */
            messages?: GoogleCloudDialogflowV2beta1Message[];
            /** Optional. Token to retrieve the next page of results, or empty if there are no more results in the list. */
            nextPageToken?: string;
        }
        interface GoogleCloudDialogflowV2beta1ListParticipantsResponse {
            /** Token to retrieve the next page of results or empty if there are no more results in the list. */
            nextPageToken?: string;
            /** The list of participants. There is a maximum number of items returned based on the page_size field in the request. */
            participants?: GoogleCloudDialogflowV2beta1Participant[];
        }
        interface GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse {
            /** Token to retrieve the next page of results, or empty if there are no more results in the list. */
            nextPageToken?: string;
            /** The list of session entity types. There will be a maximum number of items returned based on the page_size field in the request. */
            sessionEntityTypes?: GoogleCloudDialogflowV2beta1SessionEntityType[];
        }
        interface GoogleCloudDialogflowV2beta1ListSuggestionsResponse {
            /** Optional. Token to retrieve the next page of results or empty if there are no more results in the list. */
            nextPageToken?: string;
            /**
             * Required. The list of suggestions. There will be a maximum number of items returned based on the page_size field in the request. `suggestions` is sorted by `create_time` in
             * descending order.
             */
            suggestions?: GoogleCloudDialogflowV2beta1Suggestion[];
        }
        interface GoogleCloudDialogflowV2beta1ListVersionsResponse {
            /** Token to retrieve the next page of results, or empty if there are no more results in the list. */
            nextPageToken?: string;
            /** The list of agent versions. There will be a maximum number of items returned based on the page_size field in the request. */
            versions?: GoogleCloudDialogflowV2beta1Version[];
        }
        interface GoogleCloudDialogflowV2beta1LoggingConfig {
            /** Whether to log conversation events like CONVERSATION_STARTED to Stackdriver in the conversation project as JSON format ConversationEvent protos. */
            enableStackdriverLogging?: boolean;
        }
        interface GoogleCloudDialogflowV2beta1Message {
            /** Required. The message content. */
            content?: string;
            /** Output only. The time when the message was created in Contact Center AI. */
            createTime?: string;
            /** Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US". */
            languageCode?: string;
            /** Output only. The annotation for the message. */
            messageAnnotation?: GoogleCloudDialogflowV2beta1MessageAnnotation;
            /** Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`. */
            name?: string;
            /** Output only. The participant that sends this message. */
            participant?: string;
            /** Output only. The role of the participant. */
            participantRole?: string;
            /** Optional. The time when the message was sent. */
            sendTime?: string;
            /** Output only. The sentiment analysis result for the message. */
            sentimentAnalysis?: GoogleCloudDialogflowV2beta1SentimentAnalysisResult;
        }
        interface GoogleCloudDialogflowV2beta1MessageAnnotation {
            /** Required. Indicates whether the text message contains entities. */
            containEntities?: boolean;
            /** Optional. The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text]. */
            parts?: GoogleCloudDialogflowV2beta1AnnotatedMessagePart[];
        }
        interface GoogleCloudDialogflowV2beta1NotificationConfig {
            /** Format of message. */
            messageFormat?: string;
            /**
             * Name of the Pub/Sub topic to publish conversation events like CONVERSATION_STARTED as serialized ConversationEvent protos. For telephony integration to receive notification, make
             * sure either this topic is in the same project as the conversation or you grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow Service Agent` role in the topic
             * project. For chat integration to receive notification, make sure API caller has been granted the `Dialogflow Service Agent` role for the topic. Format:
             * `projects//locations//topics/`.
             */
            topic?: string;
        }
        interface GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest {
            /**
             * Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional
             * information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { "telephony": { "caller_id": "+18558363987" } } Note: The caller
             * ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition
             * agents.
             */
            payload?: { [P in string]: any };
            /** The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers. */
            source?: string;
            /** Optional. The version of the protocol used for this request. This field is AoG-specific. */
            version?: string;
        }
        interface GoogleCloudDialogflowV2beta1OutputAudio {
            /** Required. The natural language speech audio. */
            audio?: string;
            /** Required. Instructs the speech synthesizer how to generate the speech audio. */
            config?: GoogleCloudDialogflowV2beta1OutputAudioConfig;
        }
        interface GoogleCloudDialogflowV2beta1OutputAudioConfig {
            /** Required. Audio encoding of the synthesized audio content. */
            audioEncoding?: string;
            /**
             * The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from
             * the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).
             */
            sampleRateHertz?: number;
            /** Configuration of how speech should be synthesized. */
            synthesizeSpeechConfig?: GoogleCloudDialogflowV2beta1SynthesizeSpeechConfig;
        }
        interface GoogleCloudDialogflowV2beta1Participant {
            /**
             * Optional. Key-value filters on the metadata of documents returned by article suggestion. If specified, article suggestion only returns suggested documents that match all filters in
             * their Document.metadata. Multiple values for a metadata key should be concatenated by comma. For example, filters to match all documents that have 'US' or 'CA' in their market
             * metadata values and 'agent' in their user metadata values will be ``` documents_metadata_filters { key: "market" value: "US,CA" } documents_metadata_filters { key: "user" value:
             * "agent" } ```
             */
            documentsMetadataFilters?: { [P in string]: string };
            /** Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`. */
            name?: string;
            /**
             * Optional. Obfuscated user id that should be associated with the created participant. You can specify a user id as follows: 1. If you set this field in CreateParticipantRequest or
             * UpdateParticipantRequest, Dialogflow adds the obfuscated user id with the participant. 2. If you set this field in AnalyzeContent or StreamingAnalyzeContent, Dialogflow will update
             * Participant.obfuscated_external_user_id. Dialogflow uses this user id for following purposes: 1) Billing and measurement. If user with the same obfuscated_external_user_id is
             * created in a later conversation, dialogflow will know it's the same user. 2) Agent assist suggestion personalization. For example, Dialogflow can use it to provide personalized
             * smart reply suggestions for this user. Note: * Please never pass raw user ids to Dialogflow. Always obfuscate your user id first. * Dialogflow only accepts a UTF-8 encoded string,
             * e.g., a hex digest of a hash function like SHA-512. * The length of the user id must be <= 256 characters.
             */
            obfuscatedExternalUserId?: string;
            /** Immutable. The role this participant plays in the conversation. This field must be set during participant creation and is then immutable. */
            role?: string;
        }
        interface GoogleCloudDialogflowV2beta1QueryInput {
            /** Instructs the speech recognizer how to process the speech audio. */
            audioConfig?: GoogleCloudDialogflowV2beta1InputAudioConfig;
            /** The DTMF digits used to invoke intent and fill in parameter value. */
            dtmf?: GoogleCloudDialogflowV2beta1TelephonyDtmfEvents;
            /** The event to be processed. */
            event?: GoogleCloudDialogflowV2beta1EventInput;
            /** The natural language text to be processed. */
            text?: GoogleCloudDialogflowV2beta1TextInput;
        }
        interface GoogleCloudDialogflowV2beta1QueryParameters {
            /** The collection of contexts to be activated before this query is executed. */
            contexts?: GoogleCloudDialogflowV2beta1Context[];
            /** The geo location of this conversational query. */
            geoLocation?: GoogleTypeLatLng;
            /** KnowledgeBases to get alternative results from. If not set, the KnowledgeBases enabled in the agent (through UI) will be used. Format: `projects//knowledgeBases/`. */
            knowledgeBaseNames?: string[];
            /**
             * This field can be used to pass custom data to your webhook. Arbitrary JSON objects are supported. If supplied, the value is used to populate the
             * `WebhookRequest.original_detect_intent_request.payload` field sent to your webhook.
             */
            payload?: { [P in string]: any };
            /** Specifies whether to delete all contexts in the current session before the new ones are activated. */
            resetContexts?: boolean;
            /**
             * Configures the type of sentiment analysis to perform. If not provided, sentiment analysis is not performed. Note: Sentiment Analysis is only currently available for Essentials
             * Edition agents.
             */
            sentimentAnalysisRequestConfig?: GoogleCloudDialogflowV2beta1SentimentAnalysisRequestConfig;
            /** Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session of this query. */
            sessionEntityTypes?: GoogleCloudDialogflowV2beta1SessionEntityType[];
            /**
             * For mega agent query, directly specify which sub agents to query. If any specified sub agent is not linked to the mega agent, an error will be returned. If empty, Dialogflow will
             * decide which sub agents to query. If specified for a non-mega-agent query, will be silently ignored.
             */
            subAgents?: GoogleCloudDialogflowV2beta1SubAgent[];
            /**
             * The time zone of this conversational query from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. If not provided, the time zone
             * specified in agent settings is used.
             */
            timeZone?: string;
            /**
             * This field can be used to pass HTTP headers for a webhook call. These headers will be sent to webhook along with the headers that have been configured through Dialogflow web
             * console. The headers defined within this field will overwrite the headers configured through Dialogflow console if there is a conflict. Header names are case-insensitive. Google's
             * specified headers are not allowed. Including: "Host", "Content-Length", "Connection", "From", "User-Agent", "Accept-Encoding", "If-Modified-Since", "If-None-Match",
             * "X-Forwarded-For", etc.
             */
            webhookHeaders?: { [P in string]: string };
        }
        interface GoogleCloudDialogflowV2beta1QueryResult {
            /** The action name from the matched intent. */
            action?: string;
            /**
             * This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter
             * values have been collected, or if the matched intent doesn't contain any required parameters.
             */
            allRequiredParamsPresent?: boolean;
            /**
             * Indicates whether the conversational query triggers a cancellation for slot filling. For more information, see the [cancel slot filling
             * documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).
             */
            cancelsSlotFilling?: boolean;
            /**
             * Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its
             * structure. The data may contain: - webhook call latency - webhook errors
             */
            diagnosticInfo?: { [P in string]: any };
            /** The collection of rich messages to present to the user. */
            fulfillmentMessages?: GoogleCloudDialogflowV2beta1IntentMessage[];
            /** The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred. */
            fulfillmentText?: string;
            /**
             * The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and
             * `is_fallback`.
             */
            intent?: GoogleCloudDialogflowV2beta1Intent;
            /**
             * The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help
             * match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation.
             * If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.
             */
            intentDetectionConfidence?: number;
            /** The result from Knowledge Connector (if any), ordered by decreasing `KnowledgeAnswers.match_confidence`. */
            knowledgeAnswers?: GoogleCloudDialogflowV2beta1KnowledgeAnswers;
            /**
             * The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
             * language codes.
             */
            languageCode?: string;
            /** The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query. */
            outputContexts?: GoogleCloudDialogflowV2beta1Context[];
            /**
             * The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of
             * a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else:
             * depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from
             * composite entity property names to property values - Else: parameter value
             */
            parameters?: { [P in string]: any };
            /**
             * The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided
             * as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is
             * enabled, `query_text` will contain the corrected user input.
             */
            queryText?: string;
            /** The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request. */
            sentimentAnalysisResult?: GoogleCloudDialogflowV2beta1SentimentAnalysisResult;
            /**
             * The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a
             * sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the
             * streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.
             */
            speechRecognitionConfidence?: number;
            /** If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response. */
            webhookPayload?: { [P in string]: any };
            /** If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response. */
            webhookSource?: string;
        }
        interface GoogleCloudDialogflowV2beta1ReloadDocumentRequest {
            /** The path for a Cloud Storage source file for reloading document content. If not provided, the Document's existing source will be reloaded. */
            gcsSource?: GoogleCloudDialogflowV2beta1GcsSource;
            /** Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is Google Cloud Storage URI. */
            importGcsCustomMetadata?: boolean;
        }
        interface GoogleCloudDialogflowV2beta1ResponseMessage {
            /** A signal that indicates the interaction with the Dialogflow agent has ended. */
            endInteraction?: any;
            /** Hands off conversation to a live agent. */
            liveAgentHandoff?: GoogleCloudDialogflowV2beta1ResponseMessageLiveAgentHandoff;
            /** An audio response message composed of both the synthesized Dialogflow agent responses and the audios hosted in places known to the client. */
            mixedAudio?: GoogleCloudDialogflowV2beta1ResponseMessageMixedAudio;
            /** Returns a response containing a custom, platform-specific payload. */
            payload?: { [P in string]: any };
            /** A signal that the client should transfer the phone call connected to this agent to a third-party endpoint. */
            telephonyTransferCall?: GoogleCloudDialogflowV2beta1ResponseMessageTelephonyTransferCall;
            /** Returns a text response. */
            text?: GoogleCloudDialogflowV2beta1ResponseMessageText;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDialogflowV2beta1ResponseMessageEndInteraction {
        }
        interface GoogleCloudDialogflowV2beta1ResponseMessageLiveAgentHandoff {
            /** Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this. */
            metadata?: { [P in string]: any };
        }
        interface GoogleCloudDialogflowV2beta1ResponseMessageMixedAudio {
            /** Segments this audio response is composed of. */
            segments?: GoogleCloudDialogflowV2beta1ResponseMessageMixedAudioSegment[];
        }
        interface GoogleCloudDialogflowV2beta1ResponseMessageMixedAudioSegment {
            /** Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request. */
            allowPlaybackInterruption?: boolean;
            /** Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request. */
            audio?: string;
            /** Client-specific URI that points to an audio clip accessible to the client. */
            uri?: string;
        }
        interface GoogleCloudDialogflowV2beta1ResponseMessageTelephonyTransferCall {
            /** Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164). */
            phoneNumber?: string;
            /** Transfer the call to a SIP endpoint. */
            sipUri?: string;
        }
        interface GoogleCloudDialogflowV2beta1ResponseMessageText {
            /** A collection of text responses. */
            text?: string[];
        }
        interface GoogleCloudDialogflowV2beta1RestoreAgentRequest {
            /** Zip compressed raw byte content for agent. */
            agentContent?: string;
            /**
             * The URI to a Google Cloud Storage file containing the agent to restore. Note: The URI must start with "gs://". Dialogflow performs a read operation for the Cloud Storage object on
             * the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access
             * control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
             */
            agentUri?: string;
        }
        interface GoogleCloudDialogflowV2beta1SearchAgentsResponse {
            /** The list of agents. There will be a maximum number of items returned based on the page_size field in the request. */
            agents?: GoogleCloudDialogflowV2beta1Agent[];
            /** Token to retrieve the next page of results, or empty if there are no more results in the list. */
            nextPageToken?: string;
        }
        interface GoogleCloudDialogflowV2beta1Sentiment {
            /** A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative). */
            magnitude?: number;
            /** Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment). */
            score?: number;
        }
        interface GoogleCloudDialogflowV2beta1SentimentAnalysisRequestConfig {
            /** Instructs the service to perform sentiment analysis on `query_text`. If not provided, sentiment analysis is not performed on `query_text`. */
            analyzeQueryTextSentiment?: boolean;
        }
        interface GoogleCloudDialogflowV2beta1SentimentAnalysisResult {
            /** The sentiment analysis result for `query_text`. */
            queryTextSentiment?: GoogleCloudDialogflowV2beta1Sentiment;
        }
        interface GoogleCloudDialogflowV2beta1SessionEntityType {
            /** Required. The collection of entities associated with this session entity type. */
            entities?: GoogleCloudDialogflowV2beta1EntityTypeEntity[];
            /** Required. Indicates whether the additional data should override or supplement the custom entity type definition. */
            entityOverrideMode?: string;
            /**
             * Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
             * `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we assume
             * default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display
             * name of an existing entity type in the same agent that will be overridden or supplemented.
             */
            name?: string;
        }
        interface GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata {
            /** The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/` */
            conversationProfile?: string;
            /** Timestamp whe the request was created. The time is measured on server side. */
            createTime?: string;
            /** Required. The participant role to add or update the suggestion feature config. Only HUMAN_AGENT or END_USER can be used. */
            participantRole?: string;
            /** Required. The type of the suggestion feature to add or update. */
            suggestionFeatureType?: string;
        }
        interface GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest {
            /** Required. The participant role to add or update the suggestion feature config. Only HUMAN_AGENT or END_USER can be used. */
            participantRole?: string;
            /** Required. The suggestion feature config to add or update. */
            suggestionFeatureConfig?: GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigSuggestionFeatureConfig;
        }
        interface GoogleCloudDialogflowV2beta1SmartReplyAnswer {
            /** The name of answer record, in the format of "projects//locations//answerRecords/" */
            answerRecord?: string;
            /** Smart reply confidence. The system's confidence score that this reply is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain). */
            confidence?: number;
            /** The content of the reply. */
            reply?: string;
        }
        interface GoogleCloudDialogflowV2beta1SpeechContext {
            /**
             * Optional. Boost for this context compared to other contexts: * If the boost is positive, Dialogflow will increase the probability that the phrases in this context are recognized
             * over similar sounding phrases. * If the boost is unspecified or non-positive, Dialogflow will not apply any boost. Dialogflow recommends that you use boosts in the range (0, 20] and
             * that you find a value that fits your use case with binary search.
             */
            boost?: number;
            /**
             * Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. This list can be used to: * improve accuracy for words
             * and phrases you expect the user to say, e.g. typical commands for your Dialogflow agent * add additional words to the speech recognizer vocabulary * ... See the [Cloud Speech
             * documentation](https://cloud.google.com/speech-to-text/quotas) for usage limits.
             */
            phrases?: string[];
        }
        interface GoogleCloudDialogflowV2beta1SpeechToTextConfig {
            /**
             * Which Speech model to select. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then a default model is used. Refer to [Cloud
             * Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details.
             */
            model?: string;
            /**
             * The speech model used in speech to text. `SPEECH_MODEL_VARIANT_UNSPECIFIED`, `USE_BEST_AVAILABLE` will be treated as `USE_ENHANCED`. It can be overridden in AnalyzeContentRequest
             * and StreamingAnalyzeContentRequest request. If enhanced model variant is specified and an enhanced version of the specified model for the language does not exist, then it would emit
             * an error.
             */
            speechModelVariant?: string;
        }
        interface GoogleCloudDialogflowV2beta1SubAgent {
            /** Optional. The unique identifier (`environment name` in dialogflow console) of this sub-agent environment. Assumes draft environment if `environment` is not set. */
            environment?: string;
            /** Required. The project of this agent. Format: `projects/` or `projects//locations/`. */
            project?: string;
        }
        interface GoogleCloudDialogflowV2beta1SuggestArticlesRequest {
            /** Optional. Parameters for a human assist query. */
            assistQueryParams?: GoogleCloudDialogflowV2beta1AssistQueryParameters;
            /** Optional. Max number of messages prior to and including latest_message to use as context when compiling the suggestion. By default 20 and at most 50. */
            contextSize?: number;
            /**
             * Optional. The name of the latest conversation message to compile suggestion for. If empty, it will be the latest message of the conversation. Format:
             * `projects//locations//conversations//messages/`.
             */
            latestMessage?: string;
        }
        interface GoogleCloudDialogflowV2beta1SuggestArticlesResponse {
            /** Output only. Articles ordered by score in descending order. */
            articleAnswers?: GoogleCloudDialogflowV2beta1ArticleAnswer[];
            /**
             * Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestArticlesResponse.context_size field in the request if there
             * aren't that many messages in the conversation.
             */
            contextSize?: number;
            /** The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`. */
            latestMessage?: string;
        }
        interface GoogleCloudDialogflowV2beta1SuggestConversationSummaryRequest {
            /** Parameters for a human assist query. */
            assistQueryParams?: GoogleCloudDialogflowV2beta1AssistQueryParameters;
            /** Max number of messages prior to and including [latest_message] to use as context when compiling the suggestion. By default 500 and at most 1000. */
            contextSize?: number;
            /**
             * The name of the latest conversation message used as context for compiling suggestion. If empty, the latest message of the conversation will be used. Format:
             * `projects//locations//conversations//messages/`.
             */
            latestMessage?: string;
        }
        interface GoogleCloudDialogflowV2beta1SuggestConversationSummaryResponse {
            /**
             * Number of messages prior to and including last_conversation_message used to compile the suggestion. It may be smaller than the SuggestSummaryRequest.context_size field in the
             * request if there weren't that many messages in the conversation.
             */
            contextSize?: number;
            /** The name of the latest conversation message used as context for compiling suggestion. Format: `projects//locations//conversations//messages/`. */
            latestMessage?: string;
            /** Generated summary. */
            summary?: GoogleCloudDialogflowV2beta1SuggestConversationSummaryResponseSummary;
        }
        interface GoogleCloudDialogflowV2beta1SuggestConversationSummaryResponseSummary {
            /** The name of the answer record. Format: "projects//answerRecords/" */
            answerRecord?: string;
            /** The summary content that is concatenated into one string. */
            text?: string;
            /** The summary content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value. */
            textSections?: { [P in string]: string };
        }
        interface GoogleCloudDialogflowV2beta1SuggestFaqAnswersRequest {
            /** Optional. Parameters for a human assist query. */
            assistQueryParams?: GoogleCloudDialogflowV2beta1AssistQueryParameters;
            /** Optional. Max number of messages prior to and including [latest_message] to use as context when compiling the suggestion. By default 20 and at most 50. */
            contextSize?: number;
            /**
             * Optional. The name of the latest conversation message to compile suggestion for. If empty, it will be the latest message of the conversation. Format:
             * `projects//locations//conversations//messages/`.
             */
            latestMessage?: string;
        }
        interface GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse {
            /**
             * Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size field in the request if there
             * aren't that many messages in the conversation.
             */
            contextSize?: number;
            /** Output only. Answers extracted from FAQ documents. */
            faqAnswers?: GoogleCloudDialogflowV2beta1FaqAnswer[];
            /** The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`. */
            latestMessage?: string;
        }
        interface GoogleCloudDialogflowV2beta1Suggestion {
            /** Output only. Articles ordered by score in descending order. */
            articles?: GoogleCloudDialogflowV2beta1SuggestionArticle[];
            /** Output only. The time the suggestion was created. */
            createTime?: string;
            /** Output only. Answers extracted from FAQ documents. */
            faqAnswers?: GoogleCloudDialogflowV2beta1SuggestionFaqAnswer[];
            /** Output only. Latest message used as context to compile this suggestion. Format: `projects//locations//conversations//messages/`. */
            latestMessage?: string;
            /** Output only. The name of this suggestion. Format: `projects//locations//conversations//participants/*‍/suggestions/`. */
            name?: string;
        }
        interface GoogleCloudDialogflowV2beta1SuggestionArticle {
            /** Output only. The name of answer record, in the format of "projects//locations//answerRecords/" */
            answerRecord?: string;
            /** Output only. A map that contains metadata about the answer and the document from which it originates. */
            metadata?: { [P in string]: string };
            /** Output only. Article snippets. */
            snippets?: string[];
            /** Output only. The article title. */
            title?: string;
            /** Output only. The article URI. */
            uri?: string;
        }
        interface GoogleCloudDialogflowV2beta1SuggestionFaqAnswer {
            /** Output only. The piece of text from the `source` knowledge base document. */
            answer?: string;
            /** Output only. The name of answer record, in the format of "projects//locations//answerRecords/" */
            answerRecord?: string;
            /** The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain). */
            confidence?: number;
            /** Output only. A map that contains metadata about the answer and the document from which it originates. */
            metadata?: { [P in string]: string };
            /** Output only. The corresponding FAQ question. */
            question?: string;
            /** Output only. Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`. */
            source?: string;
        }
        interface GoogleCloudDialogflowV2beta1SuggestionFeature {
            /** Type of Human Agent Assistant API feature to request. */
            type?: string;
        }
        interface GoogleCloudDialogflowV2beta1SuggestionResult {
            /** Error status if the request failed. */
            error?: GoogleRpcStatus;
            /** SuggestArticlesResponse if request is for ARTICLE_SUGGESTION. */
            suggestArticlesResponse?: GoogleCloudDialogflowV2beta1SuggestArticlesResponse;
            /** SuggestFaqAnswersResponse if request is for FAQ_ANSWER. */
            suggestFaqAnswersResponse?: GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse;
            /** SuggestSmartRepliesResponse if request is for SMART_REPLY. */
            suggestSmartRepliesResponse?: GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse;
        }
        interface GoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest {
            /** Optional. Max number of messages prior to and including [latest_message] to use as context when compiling the suggestion. By default 20 and at most 50. */
            contextSize?: number;
            /**
             * The current natural language text segment to compile suggestion for. This provides a way for user to get follow up smart reply suggestion after a smart reply selection, without
             * sending a text message.
             */
            currentTextInput?: GoogleCloudDialogflowV2beta1TextInput;
            /**
             * The name of the latest conversation message to compile suggestion for. If empty, it will be the latest message of the conversation. Format:
             * `projects//locations//conversations//messages/`.
             */
            latestMessage?: string;
        }
        interface GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse {
            /**
             * Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestSmartRepliesRequest.context_size field in the request if there
             * aren't that many messages in the conversation.
             */
            contextSize?: number;
            /** The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`. */
            latestMessage?: string;
            /**
             * Output only. Multiple reply options provided by smart reply service. The order is based on the rank of the model prediction. The maximum number of the returned replies is set in
             * SmartReplyConfig.
             */
            smartReplyAnswers?: GoogleCloudDialogflowV2beta1SmartReplyAnswer[];
        }
        interface GoogleCloudDialogflowV2beta1SynthesizeSpeechConfig {
            /**
             * Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are
             * given.
             */
            effectsProfileId?: string[];
            /** Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch. */
            pitch?: number;
            /**
             * Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If
             * unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.
             */
            speakingRate?: number;
            /** Optional. The desired voice of the synthesized audio. */
            voice?: GoogleCloudDialogflowV2beta1VoiceSelectionParams;
            /**
             * Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal
             * native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately
             * twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater
             * than that.
             */
            volumeGainDb?: number;
        }
        interface GoogleCloudDialogflowV2beta1TelephonyDtmfEvents {
            /** A sequence of TelephonyDtmf digits. */
            dtmfEvents?: string[];
        }
        interface GoogleCloudDialogflowV2beta1TextInput {
            /**
             * Required. The language of this conversational query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
             * language codes. Note that queries in the same session do not necessarily need to specify the same language.
             */
            languageCode?: string;
            /** Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters for virtual agent interactions. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2beta1TextToSpeechSettings {
            /** Optional. Indicates whether text to speech is enabled. Even when this field is false, other settings in this proto are still retained. */
            enableTextToSpeech?: boolean;
            /** Required. Audio encoding of the synthesized audio content. */
            outputAudioEncoding?: string;
            /**
             * Optional. The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is
             * different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).
             */
            sampleRateHertz?: number;
            /** Optional. Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/docs/reference/language) to SynthesizeSpeechConfig. */
            synthesizeSpeechConfigs?: { [P in string]: GoogleCloudDialogflowV2beta1SynthesizeSpeechConfig };
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDialogflowV2beta1TrainAgentRequest {
        }
        interface GoogleCloudDialogflowV2beta1ValidationError {
            /**
             * The names of the entries that the error is associated with. Format: - "projects//agent", if the error is associated with the entire agent. - "projects//agent/intents/", if the error
             * is associated with certain intents. - "projects//agent/intents//trainingPhrases/", if the error is associated with certain intent training phrases. -
             * "projects//agent/intents//parameters/", if the error is associated with certain intent parameters. - "projects//agent/entities/", if the error is associated with certain entities.
             */
            entries?: string[];
            /** The detailed error message. */
            errorMessage?: string;
            /** The severity of the error. */
            severity?: string;
        }
        interface GoogleCloudDialogflowV2beta1ValidationResult {
            /** Contains all validation errors. */
            validationErrors?: GoogleCloudDialogflowV2beta1ValidationError[];
        }
        interface GoogleCloudDialogflowV2beta1Version {
            /** Output only. The creation time of this version. This field is read-only, i.e., it cannot be set by create and update methods. */
            createTime?: string;
            /** Optional. The developer-provided description of this version. */
            description?: string;
            /** Output only. The unique identifier of this agent version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/` */
            name?: string;
            /** Output only. The status of this version. This field is read-only and cannot be set by create and update methods. */
            status?: string;
            /** Output only. The sequential number of this version. This field is read-only which means it cannot be set by create and update methods. */
            versionNumber?: number;
        }
        interface GoogleCloudDialogflowV2beta1VoiceSelectionParams {
            /**
             * Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender. For the list of available voices,
             * please refer to [Supported voices and languages](https://cloud.google.com/text-to-speech/docs/voices).
             */
            name?: string;
            /**
             * Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a
             * preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the
             * request.
             */
            ssmlGender?: string;
        }
        interface GoogleCloudDialogflowV2beta1WebhookRequest {
            /** Alternative query results from KnowledgeService. */
            alternativeQueryResults?: GoogleCloudDialogflowV2beta1QueryResult[];
            /** Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call. */
            originalDetectIntentRequest?: GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest;
            /** The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`. */
            queryResult?: GoogleCloudDialogflowV2beta1QueryResult;
            /** The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`. */
            responseId?: string;
            /**
             * The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Supported formats: - `projects//agent/sessions/, -
             * `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`,
             */
            session?: string;
        }
        interface GoogleCloudDialogflowV2beta1WebhookResponse {
            /**
             * Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an
             * end user. Default is false.
             */
            endInteraction?: boolean;
            /** Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields. */
            followupEventInput?: GoogleCloudDialogflowV2beta1EventInput;
            /**
             * Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API
             * caller.
             */
            fulfillmentMessages?: GoogleCloudDialogflowV2beta1IntentMessage[];
            /**
             * Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to
             * populate QueryResult.fulfillment_text sent to the integration or API caller.
             */
            fulfillmentText?: string;
            /**
             * Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction
             * to true as well. Default is false.
             */
            liveAgentHandoff?: boolean;
            /**
             * Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to
             * populate QueryResult.output_contexts sent to the integration or API caller.
             */
            outputContexts?: GoogleCloudDialogflowV2beta1Context[];
            /**
             * Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this
             * field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant
             * integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook
             * format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
             */
            payload?: { [P in string]: any };
            /**
             * Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data
             * from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods.
             */
            sessionEntityTypes?: GoogleCloudDialogflowV2beta1SessionEntityType[];
            /**
             * Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent
             * to the integration or API caller.
             */
            source?: string;
        }
        interface GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata {
            /** The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/` */
            conversationProfile?: string;
            /** Timestamp whe the request was created. The time is measured on server side. */
            createTime?: string;
            /** Required. The participant role to remove the suggestion feature config. Only HUMAN_AGENT or END_USER can be used. */
            participantRole?: string;
            /** Required. The type of the suggestion feature to remove. */
            suggestionFeatureType?: string;
        }
        interface GoogleCloudDialogflowV2Context {
            /**
             * Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire
             * automatically after 20 minutes if there are no matching queries.
             */
            lifespanCount?: number;
            /**
             * Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
             * always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft'
             * environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or
             * create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
             */
            name?: string;
            /**
             * Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table,
             * dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type
             * is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a
             * composite entity: map from composite entity property names to property values - Else: parameter value
             */
            parameters?: { [P in string]: any };
        }
        interface GoogleCloudDialogflowV2ConversationEvent {
            /** The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`. */
            conversation?: string;
            /** More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL. */
            errorStatus?: GoogleRpcStatus;
            /** Payload of NEW_MESSAGE event. */
            newMessagePayload?: GoogleCloudDialogflowV2Message;
            /** The type of the event that this notification refers to. */
            type?: string;
        }
        interface GoogleCloudDialogflowV2ConversationModel {
            /** Metadata for article suggestion models. */
            articleSuggestionModelMetadata?: GoogleCloudDialogflowV2ArticleSuggestionModelMetadata;
            /** Output only. Creation time of this model. */
            createTime?: string;
            /** Required. Datasets used to create model. */
            datasets?: GoogleCloudDialogflowV2InputDataset[];
            /** Required. The display name of the model. At most 64 bytes long. */
            displayName?: string;
            /**
             * Language code for the conversation model. If not specified, the language is en-US. Language at ConversationModel should be set for all non en-us languages. This should be a
             * [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
             */
            languageCode?: string;
            /** ConversationModel resource name. Format: `projects//conversationModels/` */
            name?: string;
            /** Metadata for smart reply models. */
            smartReplyModelMetadata?: GoogleCloudDialogflowV2SmartReplyModelMetadata;
            /** Output only. State of the model. A model can only serve prediction requests after it gets deployed. */
            state?: string;
        }
        interface GoogleCloudDialogflowV2CreateConversationDatasetOperationMetadata {
            /** The resource name of the conversation dataset that will be created. Format: `projects//locations//conversationDatasets/` */
            conversationDataset?: string;
        }
        interface GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata {
            /** The resource name of the conversation model. Format: `projects//locations//conversationModels/` */
            conversationModel?: string;
            /** The resource name of the conversation model. Format: `projects//locations//conversationModels//evaluations/` */
            conversationModelEvaluation?: string;
            /** Timestamp when the request to create conversation model was submitted. The time is measured on server side. */
            createTime?: string;
            /** State of CreateConversationModel operation. */
            state?: string;
        }
        interface GoogleCloudDialogflowV2CreateConversationModelOperationMetadata {
            /** The resource name of the conversation model. Format: `projects//conversationModels/` */
            conversationModel?: string;
            /** Timestamp when the request to create conversation model is submitted. The time is measured on server side. */
            createTime?: string;
            /** State of CreateConversationModel operation. */
            state?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDialogflowV2DeleteConversationDatasetOperationMetadata {
        }
        interface GoogleCloudDialogflowV2DeleteConversationModelOperationMetadata {
            /** The resource name of the conversation model. Format: `projects//conversationModels/` */
            conversationModel?: string;
            /** Timestamp when delete conversation model request was created. The time is measured on server side. */
            createTime?: string;
        }
        interface GoogleCloudDialogflowV2DeployConversationModelOperationMetadata {
            /** The resource name of the conversation model. Format: `projects//conversationModels/` */
            conversationModel?: string;
            /** Timestamp when request to deploy conversation model was submitted. The time is measured on server side. */
            createTime?: string;
        }
        interface GoogleCloudDialogflowV2EntityType {
            /** Optional. Indicates whether the entity type can be automatically expanded. */
            autoExpansionMode?: string;
            /** Required. The name of the entity type. */
            displayName?: string;
            /** Optional. Enables fuzzy entity extraction during classification. */
            enableFuzzyExtraction?: boolean;
            /** Optional. The collection of entity entries associated with the entity type. */
            entities?: GoogleCloudDialogflowV2EntityTypeEntity[];
            /** Required. Indicates the kind of entity type. */
            kind?: string;
            /** The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`. */
            name?: string;
        }
        interface GoogleCloudDialogflowV2EntityTypeEntity {
            /**
             * Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity
             * types: * This collection must contain exactly one synonym equal to `value`.
             */
            synonyms?: string[];
            /**
             * Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A
             * reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).
             */
            value?: string;
        }
        interface GoogleCloudDialogflowV2EventInput {
            /**
             * Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note
             * that queries in the same session do not necessarily need to specify the same language. This field is ignored when used in the context of a WebhookResponse.followup_event_input
             * field, because the language was already defined in the originating detect intent request.
             */
            languageCode?: string;
            /** Required. The unique identifier of the event. */
            name?: string;
            /**
             * The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON
             * object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite
             * entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite
             * entity: map from composite entity property names to property values - Else: parameter value
             */
            parameters?: { [P in string]: any };
        }
        interface GoogleCloudDialogflowV2ExportAgentResponse {
            /** Zip compressed raw byte content for agent. */
            agentContent?: string;
            /** The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`. */
            agentUri?: string;
        }
        interface GoogleCloudDialogflowV2ExportOperationMetadata {
            /** Cloud Storage file path of the exported data. */
            exportedGcsDestination?: GoogleCloudDialogflowV2GcsDestination;
        }
        interface GoogleCloudDialogflowV2FaqAnswer {
            /** The piece of text from the `source` knowledge base document. */
            answer?: string;
            /** The name of answer record, in the format of "projects//locations//answerRecords/" */
            answerRecord?: string;
            /** The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain). */
            confidence?: number;
            /** A map that contains metadata about the answer and the document from which it originates. */
            metadata?: { [P in string]: string };
            /** The corresponding FAQ question. */
            question?: string;
            /** Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`. */
            source?: string;
        }
        interface GoogleCloudDialogflowV2GcsDestination {
            /**
             * The Google Cloud Storage URIs for the output. A URI is of the form: gs://bucket/object-prefix-or-name Whether a prefix or name is used depends on the use case. The requesting user
             * must have "write-permission" to the bucket.
             */
            uri?: string;
        }
        interface GoogleCloudDialogflowV2HumanAgentAssistantEvent {
            /** The conversation this notification refers to. Format: `projects//conversations/`. */
            conversation?: string;
            /** The participant that the suggestion is compiled for. Format: `projects//conversations//participants/`. It will not be set in legacy workflow. */
            participant?: string;
            /** The suggestion results payload that this notification refers to. */
            suggestionResults?: GoogleCloudDialogflowV2SuggestionResult[];
        }
        interface GoogleCloudDialogflowV2ImportConversationDataOperationMetadata {
            /** The resource name of the imported conversation dataset. Format: `projects//locations//conversationDatasets/` */
            conversationDataset?: string;
            /** Timestamp when import conversation data request was created. The time is measured on server side. */
            createTime?: string;
            /** Partial failures are failures that don't fail the whole long running operation, e.g. single files that couldn't be read. */
            partialFailures?: GoogleRpcStatus[];
        }
        interface GoogleCloudDialogflowV2ImportConversationDataOperationResponse {
            /** The resource name of the imported conversation dataset. Format: `projects//locations//conversationDatasets/` */
            conversationDataset?: string;
            /** Number of conversations imported successfully. */
            importCount?: number;
        }
        interface GoogleCloudDialogflowV2ImportDocumentsResponse {
            /** Includes details about skipped documents or any other warnings. */
            warnings?: GoogleRpcStatus[];
        }
        interface GoogleCloudDialogflowV2InputDataset {
            /** Required. ConversationDataset resource name. Format: `projects//locations//conversationDatasets/` */
            dataset?: string;
        }
        interface GoogleCloudDialogflowV2Intent {
            /** Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces. */
            action?: string;
            /** Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform). */
            defaultResponsePlatforms?: string[];
            /** Required. The name of this intent. */
            displayName?: string;
            /**
             * Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an
             * end user. Default is false.
             */
            endInteraction?: boolean;
            /**
             * Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for
             * an event to trigger this intent. Event names are limited to 150 characters.
             */
            events?: string[];
            /** Output only. Read-only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output. */
            followupIntentInfo?: GoogleCloudDialogflowV2IntentFollowupIntentInfo[];
            /** Optional. The list of context names required for this intent to be triggered. Format: `projects//agent/sessions/-/contexts/`. */
            inputContextNames?: string[];
            /** Optional. Indicates whether this is a fallback intent. */
            isFallback?: boolean;
            /**
             * Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set
             * end_interaction to true as well. Default is false.
             */
            liveAgentHandoff?: boolean;
            /** Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console. */
            messages?: GoogleCloudDialogflowV2IntentMessage[];
            /**
             * Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference
             * in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.
             */
            mlDisabled?: boolean;
            /** Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`. */
            name?: string;
            /**
             * Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the
             * `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.
             */
            outputContexts?: GoogleCloudDialogflowV2Context[];
            /** Optional. The collection of parameters associated with the intent. */
            parameters?: GoogleCloudDialogflowV2IntentParameter[];
            /**
             * Read-only after creation. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent
             * or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.
             */
            parentFollowupIntentName?: string;
            /**
             * Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which
             * corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
             */
            priority?: number;
            /** Optional. Indicates whether to delete all contexts in the current session when this intent is matched. */
            resetContexts?: boolean;
            /**
             * Output only. Read-only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. We populate this
             * field only in the output. Format: `projects//agent/intents/`.
             */
            rootFollowupIntentName?: string;
            /** Optional. The collection of examples that the agent is trained on. */
            trainingPhrases?: GoogleCloudDialogflowV2IntentTrainingPhrase[];
            /** Optional. Indicates whether webhooks are enabled for the intent. */
            webhookState?: string;
        }
        interface GoogleCloudDialogflowV2IntentFollowupIntentInfo {
            /** The unique identifier of the followup intent. Format: `projects//agent/intents/`. */
            followupIntentName?: string;
            /** The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`. */
            parentFollowupIntentName?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessage {
            /** The basic card response for Actions on Google. */
            basicCard?: GoogleCloudDialogflowV2IntentMessageBasicCard;
            /** Browse carousel card for Actions on Google. */
            browseCarouselCard?: GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard;
            /** The card response. */
            card?: GoogleCloudDialogflowV2IntentMessageCard;
            /** The carousel card response for Actions on Google. */
            carouselSelect?: GoogleCloudDialogflowV2IntentMessageCarouselSelect;
            /** The image response. */
            image?: GoogleCloudDialogflowV2IntentMessageImage;
            /** The link out suggestion chip for Actions on Google. */
            linkOutSuggestion?: GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion;
            /** The list card response for Actions on Google. */
            listSelect?: GoogleCloudDialogflowV2IntentMessageListSelect;
            /** The media content card for Actions on Google. */
            mediaContent?: GoogleCloudDialogflowV2IntentMessageMediaContent;
            /** A custom platform-specific response. */
            payload?: { [P in string]: any };
            /** Optional. The platform that this message is intended for. */
            platform?: string;
            /** The quick replies response. */
            quickReplies?: GoogleCloudDialogflowV2IntentMessageQuickReplies;
            /** The voice and text-only responses for Actions on Google. */
            simpleResponses?: GoogleCloudDialogflowV2IntentMessageSimpleResponses;
            /** The suggestion chips for Actions on Google. */
            suggestions?: GoogleCloudDialogflowV2IntentMessageSuggestions;
            /** Table card for Actions on Google. */
            tableCard?: GoogleCloudDialogflowV2IntentMessageTableCard;
            /** The text response. */
            text?: GoogleCloudDialogflowV2IntentMessageText;
        }
        interface GoogleCloudDialogflowV2IntentMessageBasicCard {
            /** Optional. The collection of card buttons. */
            buttons?: GoogleCloudDialogflowV2IntentMessageBasicCardButton[];
            /** Required, unless image is present. The body text of the card. */
            formattedText?: string;
            /** Optional. The image for the card. */
            image?: GoogleCloudDialogflowV2IntentMessageImage;
            /** Optional. The subtitle of the card. */
            subtitle?: string;
            /** Optional. The title of the card. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageBasicCardButton {
            /** Required. Action to take when a user taps on the button. */
            openUriAction?: GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction;
            /** Required. The title of the button. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction {
            /** Required. The HTTP or HTTPS scheme URI. */
            uri?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard {
            /** Optional. Settings for displaying the image. Applies to every image in items. */
            imageDisplayOptions?: string;
            /** Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten. */
            items?: GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem[];
        }
        interface GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem {
            /** Optional. Description of the carousel item. Maximum of four lines of text. */
            description?: string;
            /** Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text. */
            footer?: string;
            /** Optional. Hero image for the carousel item. */
            image?: GoogleCloudDialogflowV2IntentMessageImage;
            /** Required. Action to present to the user. */
            openUriAction?: GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction;
            /** Required. Title of the carousel item. Maximum of two lines of text. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction {
            /** Required. URL */
            url?: string;
            /** Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser. */
            urlTypeHint?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageCard {
            /** Optional. The collection of card buttons. */
            buttons?: GoogleCloudDialogflowV2IntentMessageCardButton[];
            /** Optional. The public URI to an image file for the card. */
            imageUri?: string;
            /** Optional. The subtitle of the card. */
            subtitle?: string;
            /** Optional. The title of the card. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageCardButton {
            /** Optional. The text to send back to the Dialogflow API or a URI to open. */
            postback?: string;
            /** Optional. The text to show on the button. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageCarouselSelect {
            /** Required. Carousel items. */
            items?: GoogleCloudDialogflowV2IntentMessageCarouselSelectItem[];
        }
        interface GoogleCloudDialogflowV2IntentMessageCarouselSelectItem {
            /** Optional. The body text of the card. */
            description?: string;
            /** Optional. The image to display. */
            image?: GoogleCloudDialogflowV2IntentMessageImage;
            /** Required. Additional info about the option item. */
            info?: GoogleCloudDialogflowV2IntentMessageSelectItemInfo;
            /** Required. Title of the carousel item. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageColumnProperties {
            /** Required. Column heading. */
            header?: string;
            /** Optional. Defines text alignment for all cells in this column. */
            horizontalAlignment?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageImage {
            /** Optional. A text description of the image to be used for accessibility, e.g., screen readers. */
            accessibilityText?: string;
            /** Optional. The public URI to an image file. */
            imageUri?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion {
            /** Required. The name of the app or site this chip is linking to. */
            destinationName?: string;
            /** Required. The URI of the app or site to open when the user taps the suggestion chip. */
            uri?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageListSelect {
            /** Required. List items. */
            items?: GoogleCloudDialogflowV2IntentMessageListSelectItem[];
            /** Optional. Subtitle of the list. */
            subtitle?: string;
            /** Optional. The overall title of the list. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageListSelectItem {
            /** Optional. The main text describing the item. */
            description?: string;
            /** Optional. The image to display. */
            image?: GoogleCloudDialogflowV2IntentMessageImage;
            /** Required. Additional information about this option. */
            info?: GoogleCloudDialogflowV2IntentMessageSelectItemInfo;
            /** Required. The title of the list item. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageMediaContent {
            /** Required. List of media objects. */
            mediaObjects?: GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject[];
            /** Optional. What type of media is the content (ie "audio"). */
            mediaType?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject {
            /** Required. Url where the media is stored. */
            contentUrl?: string;
            /** Optional. Description of media card. */
            description?: string;
            /** Optional. Icon to display above media content. */
            icon?: GoogleCloudDialogflowV2IntentMessageImage;
            /** Optional. Image to display above media content. */
            largeImage?: GoogleCloudDialogflowV2IntentMessageImage;
            /** Required. Name of media card. */
            name?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageQuickReplies {
            /** Optional. The collection of quick replies. */
            quickReplies?: string[];
            /** Optional. The title of the collection of quick replies. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageSelectItemInfo {
            /** Required. A unique key that will be sent back to the agent if this response is given. */
            key?: string;
            /** Optional. A list of synonyms that can also be used to trigger this item in dialog. */
            synonyms?: string[];
        }
        interface GoogleCloudDialogflowV2IntentMessageSimpleResponse {
            /** Optional. The text to display. */
            displayText?: string;
            /** One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech. */
            ssml?: string;
            /** One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml. */
            textToSpeech?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageSimpleResponses {
            /** Required. The list of simple responses. */
            simpleResponses?: GoogleCloudDialogflowV2IntentMessageSimpleResponse[];
        }
        interface GoogleCloudDialogflowV2IntentMessageSuggestion {
            /** Required. The text shown the in the suggestion chip. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageSuggestions {
            /** Required. The list of suggested replies. */
            suggestions?: GoogleCloudDialogflowV2IntentMessageSuggestion[];
        }
        interface GoogleCloudDialogflowV2IntentMessageTableCard {
            /** Optional. List of buttons for the card. */
            buttons?: GoogleCloudDialogflowV2IntentMessageBasicCardButton[];
            /** Optional. Display properties for the columns in this table. */
            columnProperties?: GoogleCloudDialogflowV2IntentMessageColumnProperties[];
            /** Optional. Image which should be displayed on the card. */
            image?: GoogleCloudDialogflowV2IntentMessageImage;
            /** Optional. Rows in this table of data. */
            rows?: GoogleCloudDialogflowV2IntentMessageTableCardRow[];
            /** Optional. Subtitle to the title. */
            subtitle?: string;
            /** Required. Title of the card. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageTableCardCell {
            /** Required. Text in this cell. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageTableCardRow {
            /** Optional. List of cells that make up this row. */
            cells?: GoogleCloudDialogflowV2IntentMessageTableCardCell[];
            /** Optional. Whether to add a visual divider after this row. */
            dividerAfter?: boolean;
        }
        interface GoogleCloudDialogflowV2IntentMessageText {
            /** Optional. The collection of the agent's responses. */
            text?: string[];
        }
        interface GoogleCloudDialogflowV2IntentParameter {
            /**
             * Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax:
             * `#context_name.parameter_name`.
             */
            defaultValue?: string;
            /** Required. The name of the parameter. */
            displayName?: string;
            /** Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided. */
            entityTypeDisplayName?: string;
            /** Optional. Indicates whether the parameter represents a list of values. */
            isList?: boolean;
            /** Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value. */
            mandatory?: boolean;
            /** The unique identifier of this parameter. */
            name?: string;
            /** Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter. */
            prompts?: string[];
            /**
             * Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as
             * `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`.
             */
            value?: string;
        }
        interface GoogleCloudDialogflowV2IntentTrainingPhrase {
            /** Output only. The unique identifier of this training phrase. */
            name?: string;
            /**
             * Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases
             * like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the
             * training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must
             * create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a
             * part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set.
             */
            parts?: GoogleCloudDialogflowV2IntentTrainingPhrasePart[];
            /** Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased. */
            timesAddedCount?: number;
            /** Required. The type of the training phrase. */
            type?: string;
        }
        interface GoogleCloudDialogflowV2IntentTrainingPhrasePart {
            /** Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase. */
            alias?: string;
            /** Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase. */
            entityType?: string;
            /** Required. The text for this part. */
            text?: string;
            /**
             * Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated
             * part with the API, you must set this to true.
             */
            userDefined?: boolean;
        }
        interface GoogleCloudDialogflowV2KnowledgeOperationMetadata {
            /** Metadata for the Export Data Operation such as the destination of export. */
            exportOperationMetadata?: GoogleCloudDialogflowV2ExportOperationMetadata;
            /** The name of the knowledge base interacted with during the operation. */
            knowledgeBase?: string;
            /** Output only. The current state of this operation. */
            state?: string;
        }
        interface GoogleCloudDialogflowV2Message {
            /** Required. The message content. */
            content?: string;
            /** Output only. The time when the message was created in Contact Center AI. */
            createTime?: string;
            /** Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US". */
            languageCode?: string;
            /** Output only. The annotation for the message. */
            messageAnnotation?: GoogleCloudDialogflowV2MessageAnnotation;
            /** Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`. */
            name?: string;
            /** Output only. The participant that sends this message. */
            participant?: string;
            /** Output only. The role of the participant. */
            participantRole?: string;
            /** Optional. The time when the message was sent. */
            sendTime?: string;
            /** Output only. The sentiment analysis result for the message. */
            sentimentAnalysis?: GoogleCloudDialogflowV2SentimentAnalysisResult;
        }
        interface GoogleCloudDialogflowV2MessageAnnotation {
            /** Indicates whether the text message contains entities. */
            containEntities?: boolean;
            /** The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text]. */
            parts?: GoogleCloudDialogflowV2AnnotatedMessagePart[];
        }
        interface GoogleCloudDialogflowV2OriginalDetectIntentRequest {
            /**
             * Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional
             * information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { "telephony": { "caller_id": "+18558363987" } } Note: The caller
             * ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition
             * agents.
             */
            payload?: { [P in string]: any };
            /** The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers. */
            source?: string;
            /** Optional. The version of the protocol used for this request. This field is AoG-specific. */
            version?: string;
        }
        interface GoogleCloudDialogflowV2QueryResult {
            /** The action name from the matched intent. */
            action?: string;
            /**
             * This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter
             * values have been collected, or if the matched intent doesn't contain any required parameters.
             */
            allRequiredParamsPresent?: boolean;
            /**
             * Indicates whether the conversational query triggers a cancellation for slot filling. For more information, see the [cancel slot filling
             * documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).
             */
            cancelsSlotFilling?: boolean;
            /**
             * Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its
             * structure. The data may contain: - webhook call latency - webhook errors
             */
            diagnosticInfo?: { [P in string]: any };
            /** The collection of rich messages to present to the user. */
            fulfillmentMessages?: GoogleCloudDialogflowV2IntentMessage[];
            /** The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred. */
            fulfillmentText?: string;
            /**
             * The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and
             * `is_fallback`.
             */
            intent?: GoogleCloudDialogflowV2Intent;
            /**
             * The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help
             * match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation.
             * If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.
             */
            intentDetectionConfidence?: number;
            /**
             * The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
             * language codes.
             */
            languageCode?: string;
            /** The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query. */
            outputContexts?: GoogleCloudDialogflowV2Context[];
            /**
             * The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of
             * a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else:
             * depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from
             * composite entity property names to property values - Else: parameter value
             */
            parameters?: { [P in string]: any };
            /**
             * The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided
             * as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is
             * enabled, `query_text` will contain the corrected user input.
             */
            queryText?: string;
            /** The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request. */
            sentimentAnalysisResult?: GoogleCloudDialogflowV2SentimentAnalysisResult;
            /**
             * The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a
             * sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the
             * streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.
             */
            speechRecognitionConfidence?: number;
            /** If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response. */
            webhookPayload?: { [P in string]: any };
            /** If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response. */
            webhookSource?: string;
        }
        interface GoogleCloudDialogflowV2Sentiment {
            /** A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative). */
            magnitude?: number;
            /** Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment). */
            score?: number;
        }
        interface GoogleCloudDialogflowV2SentimentAnalysisResult {
            /** The sentiment analysis result for `query_text`. */
            queryTextSentiment?: GoogleCloudDialogflowV2Sentiment;
        }
        interface GoogleCloudDialogflowV2SessionEntityType {
            /** Required. The collection of entities associated with this session entity type. */
            entities?: GoogleCloudDialogflowV2EntityTypeEntity[];
            /** Required. Indicates whether the additional data should override or supplement the custom entity type definition. */
            entityOverrideMode?: string;
            /**
             * Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If
             * `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing
             * entity type in the same agent that will be overridden or supplemented.
             */
            name?: string;
        }
        interface GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata {
            /** The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/` */
            conversationProfile?: string;
            /** Timestamp whe the request was created. The time is measured on server side. */
            createTime?: string;
            /** Required. The participant role to add or update the suggestion feature config. Only HUMAN_AGENT or END_USER can be used. */
            participantRole?: string;
            /** Required. The type of the suggestion feature to add or update. */
            suggestionFeatureType?: string;
        }
        interface GoogleCloudDialogflowV2SmartReplyAnswer {
            /** The name of answer record, in the format of "projects//locations//answerRecords/" */
            answerRecord?: string;
            /** Smart reply confidence. The system's confidence score that this reply is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain). */
            confidence?: number;
            /** The content of the reply. */
            reply?: string;
        }
        interface GoogleCloudDialogflowV2SmartReplyModelMetadata {
            /** Optional. Type of the smart reply model. If not provided, model_type is used. */
            trainingModelType?: string;
        }
        interface GoogleCloudDialogflowV2SuggestArticlesResponse {
            /** Articles ordered by score in descending order. */
            articleAnswers?: GoogleCloudDialogflowV2ArticleAnswer[];
            /**
             * Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestArticlesRequest.context_size field in the request if there
             * aren't that many messages in the conversation.
             */
            contextSize?: number;
            /** The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`. */
            latestMessage?: string;
        }
        interface GoogleCloudDialogflowV2SuggestFaqAnswersResponse {
            /**
             * Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size field in the request if there
             * aren't that many messages in the conversation.
             */
            contextSize?: number;
            /** Answers extracted from FAQ documents. */
            faqAnswers?: GoogleCloudDialogflowV2FaqAnswer[];
            /** The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`. */
            latestMessage?: string;
        }
        interface GoogleCloudDialogflowV2SuggestionResult {
            /** Error status if the request failed. */
            error?: GoogleRpcStatus;
            /** SuggestArticlesResponse if request is for ARTICLE_SUGGESTION. */
            suggestArticlesResponse?: GoogleCloudDialogflowV2SuggestArticlesResponse;
            /** SuggestFaqAnswersResponse if request is for FAQ_ANSWER. */
            suggestFaqAnswersResponse?: GoogleCloudDialogflowV2SuggestFaqAnswersResponse;
            /** SuggestSmartRepliesResponse if request is for SMART_REPLY. */
            suggestSmartRepliesResponse?: GoogleCloudDialogflowV2SuggestSmartRepliesResponse;
        }
        interface GoogleCloudDialogflowV2SuggestSmartRepliesResponse {
            /**
             * Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestSmartRepliesRequest.context_size field in the request if there
             * aren't that many messages in the conversation.
             */
            contextSize?: number;
            /** The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`. */
            latestMessage?: string;
            /**
             * Output only. Multiple reply options provided by smart reply service. The order is based on the rank of the model prediction. The maximum number of the returned replies is set in
             * SmartReplyConfig.
             */
            smartReplyAnswers?: GoogleCloudDialogflowV2SmartReplyAnswer[];
        }
        interface GoogleCloudDialogflowV2UndeployConversationModelOperationMetadata {
            /** The resource name of the conversation model. Format: `projects//conversationModels/` */
            conversationModel?: string;
            /** Timestamp when the request to undeploy conversation model was submitted. The time is measured on server side. */
            createTime?: string;
        }
        interface GoogleCloudDialogflowV2WebhookRequest {
            /** Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call. */
            originalDetectIntentRequest?: GoogleCloudDialogflowV2OriginalDetectIntentRequest;
            /** The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`. */
            queryResult?: GoogleCloudDialogflowV2QueryResult;
            /** The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`. */
            responseId?: string;
            /**
             * The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Format: `projects//agent/sessions/`, or
             * `projects//agent/environments//users//sessions/`.
             */
            session?: string;
        }
        interface GoogleCloudDialogflowV2WebhookResponse {
            /** Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields. */
            followupEventInput?: GoogleCloudDialogflowV2EventInput;
            /**
             * Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API
             * caller.
             */
            fulfillmentMessages?: GoogleCloudDialogflowV2IntentMessage[];
            /**
             * Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to
             * populate QueryResult.fulfillment_text sent to the integration or API caller.
             */
            fulfillmentText?: string;
            /**
             * Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to
             * populate QueryResult.output_contexts sent to the integration or API caller.
             */
            outputContexts?: GoogleCloudDialogflowV2Context[];
            /**
             * Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this
             * field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant
             * integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook
             * format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
             */
            payload?: { [P in string]: any };
            /**
             * Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data
             * from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods.
             */
            sessionEntityTypes?: GoogleCloudDialogflowV2SessionEntityType[];
            /**
             * Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent
             * to the integration or API caller.
             */
            source?: string;
        }
        interface GoogleCloudDialogflowV3alpha1ConversationSignals {
            /** Required. Turn signals for the current turn. */
            turnSignals?: GoogleCloudDialogflowV3alpha1TurnSignals;
        }
        interface GoogleCloudDialogflowV3alpha1CreateDocumentOperationMetadata {
            /** The generic information of the operation. */
            genericMetadata?: GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata;
        }
        interface GoogleCloudDialogflowV3alpha1DeleteDocumentOperationMetadata {
            /** The generic information of the operation. */
            genericMetadata?: GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata;
        }
        interface GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata {
            /** Required. Output only. The current state of this operation. */
            state?: string;
        }
        interface GoogleCloudDialogflowV3alpha1ImportDocumentsOperationMetadata {
            /** The generic information of the operation. */
            genericMetadata?: GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata;
        }
        interface GoogleCloudDialogflowV3alpha1ImportDocumentsResponse {
            /** Includes details about skipped documents or any other warnings. */
            warnings?: GoogleRpcStatus[];
        }
        interface GoogleCloudDialogflowV3alpha1ReloadDocumentOperationMetadata {
            /** The generic information of the operation. */
            genericMetadata?: GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata;
        }
        interface GoogleCloudDialogflowV3alpha1TurnSignals {
            /** Whether agent responded with LiveAgentHandoff fulfillment. */
            agentEscalated?: boolean;
            /** Whether user was using DTMF input. */
            dtmfUsed?: boolean;
            /** Failure reasons of the turn. */
            failureReasons?: string[];
            /** Whether NLU predicted NO_MATCH. */
            noMatch?: boolean;
            /** Whether user provided no input. */
            noUserInput?: boolean;
            /** Whether turn resulted in End Session page. */
            reachedEndPage?: boolean;
            /** Whether agent has triggered the event corresponding to user abandoning the conversation. */
            triggeredAbandonmentEvent?: boolean;
            /** Whether user was specifically asking for a live agent. */
            userEscalated?: boolean;
            /** Human-readable statuses of the webhooks triggered during this turn. */
            webhookStatuses?: string[];
        }
        interface GoogleCloudDialogflowV3alpha1UpdateDocumentOperationMetadata {
            /** The generic information of the operation. */
            genericMetadata?: GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata;
        }
        interface GoogleCloudLocationListLocationsResponse {
            /** A list of locations that matches the specified filter in the request. */
            locations?: GoogleCloudLocationLocation[];
            /** The standard List next-page token. */
            nextPageToken?: string;
        }
        interface GoogleCloudLocationLocation {
            /** The friendly name for this location, typically a nearby city name. For example, "Tokyo". */
            displayName?: string;
            /** Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"} */
            labels?: { [P in string]: string };
            /** The canonical id for this location. For example: `"us-east1"`. */
            locationId?: string;
            /** Service-specific metadata. For example the available capacity at the given location. */
            metadata?: { [P in string]: any };
            /** Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"` */
            name?: string;
        }
        interface GoogleLongrunningListOperationsResponse {
            /** The standard List next-page token. */
            nextPageToken?: string;
            /** A list of operations that matches the specified filter in the request. */
            operations?: GoogleLongrunningOperation[];
        }
        interface GoogleLongrunningOperation {
            /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
            done?: boolean;
            /** The error result of the operation in case of failure or cancellation. */
            error?: GoogleRpcStatus;
            /**
             * Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such
             * metadata. Any method that returns a long-running operation should document the metadata type, if any.
             */
            metadata?: { [P in string]: any };
            /**
             * The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending
             * with `operations/{unique_id}`.
             */
            name?: string;
            /**
             * The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the
             * original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the
             * original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
             */
            response?: { [P in string]: any };
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleProtobufEmpty {
        }
        interface GoogleRpcStatus {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?: number;
            /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
            details?: Array<{ [P in string]: any }>;
            /**
             * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the
             * client.
             */
            message?: string;
        }
        interface GoogleTypeLatLng {
            /** The latitude in degrees. It must be in the range [-90.0, +90.0]. */
            latitude?: number;
            /** The longitude in degrees. It must be in the range [-180.0, +180.0]. */
            longitude?: number;
        }
        interface EntitiesResource {
            /**
             * Creates multiple new entities in the specified entity type. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
             * returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            batchCreate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the entity type to create entities in. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest;
            }): Request<GoogleLongrunningOperation>;
            batchCreate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the entity type to create entities in. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest): Request<GoogleLongrunningOperation>;
            /**
             * Deletes entities in the specified entity type. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
             * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            batchDelete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the entity type to delete entries for. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest;
            }): Request<GoogleLongrunningOperation>;
            batchDelete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the entity type to delete entries for. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest): Request<GoogleLongrunningOperation>;
            /**
             * Updates or creates multiple entities in the specified entity type. This method does not affect entities in the entity type that aren't explicitly specified in the request. Note: You
             * should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training). This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty
             * [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
             */
            batchUpdate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the entity type to update or create entities in. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest;
            }): Request<GoogleLongrunningOperation>;
            batchUpdate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the entity type to update or create entities in. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest): Request<GoogleLongrunningOperation>;
        }
        interface EntityTypesResource {
            /**
             * Deletes entity types in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
             * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            batchDelete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the agent to delete all entities types for. Supported formats: - `projects//agent`, - `projects//locations//agent`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest;
            }): Request<GoogleLongrunningOperation>;
            batchDelete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the agent to delete all entities types for. Supported formats: - `projects//agent`, - `projects//locations//agent`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest): Request<GoogleLongrunningOperation>;
            /**
             * Updates/Creates multiple entity types in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
             * returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: BatchUpdateEntityTypesResponse Note: You should always train an agent
             * prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            batchUpdate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the agent to update or create entity types in. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest;
            }): Request<GoogleLongrunningOperation>;
            batchUpdate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the agent to update or create entity types in. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest): Request<GoogleLongrunningOperation>;
            /**
             * Creates an entity type in the specified agent. Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The agent to create a entity type for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1EntityType;
            }): Request<GoogleCloudDialogflowV2beta1EntityType>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The agent to create a entity type for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1EntityType): Request<GoogleCloudDialogflowV2beta1EntityType>;
            /**
             * Deletes the specified entity type. Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the entity type to delete. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified entity type. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** Required. The name of the entity type. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1EntityType>;
            /** Returns the list of all entity types in the specified agent. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The agent to list all entity types from. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListEntityTypesResponse>;
            /**
             * Updates the specified entity type. Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /**
                 * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: -
                 * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1EntityType;
            }): Request<GoogleCloudDialogflowV2beta1EntityType>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /**
                 * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: -
                 * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1EntityType): Request<GoogleCloudDialogflowV2beta1EntityType>;
            entities: EntitiesResource;
        }
        interface IntentsResource {
            /** Returns the list of all intents in the specified agent. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. The resource view to apply to the returned intent. */
                intentView?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /**
                 * Required. The agent to list all intents from. Format: `projects//agent` or `projects//locations//agent`. Alternatively, you can specify the environment to list intents for.
                 * Format: `projects//agent/environments/` or `projects//locations//agent/environments/`. Note: training phrases of the intents will not be returned for non-draft environment.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListIntentsResponse>;
        }
        interface ContextsResource {
            /** Creates a context. If the specified context already exists, overrides the context. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Context;
            }): Request<GoogleCloudDialogflowV2beta1Context>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Context): Request<GoogleCloudDialogflowV2beta1Context>;
            /** Deletes the specified context. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the context to delete. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is not specified we assume
                 * default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified context. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is not specified we assume
                 * default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Context>;
            /** Returns the list of all contexts in the specified session. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /**
                 * Required. The session to list all contexts from. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListContextsResponse>;
            /** Updates the specified context. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to
                 * lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User
                 * ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts
                 * with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Context;
            }): Request<GoogleCloudDialogflowV2beta1Context>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to
                 * lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User
                 * ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts
                 * with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Context): Request<GoogleCloudDialogflowV2beta1Context>;
        }
        interface EntityTypesResource {
            /**
             * Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration.
             * Contact Dialogflow support if you need to use session entities with Google Assistant integration.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The session to create a session entity type for. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SessionEntityType;
            }): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The session to create a session entity type for. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SessionEntityType): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
            /**
             * Deletes the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google
             * Assistant integration.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the entity type to delete. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
                 * `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we
                 * assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /**
             * Retrieves the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google
             * Assistant integration.
             */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
                 * `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we
                 * assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
            /**
             * Returns the list of all session entity types in the specified session. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use
             * session entities with Google Assistant integration.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /**
                 * Required. The session to list all session entity types from. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse>;
            /**
             * Updates the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google
             * Assistant integration.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/`
                 * - `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we
                 * assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be
                 * the display name of an existing entity type in the same agent that will be overridden or supplemented.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SessionEntityType;
            }): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/`
                 * - `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we
                 * assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be
                 * the display name of an existing entity type in the same agent that will be overridden or supplemented.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SessionEntityType): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
        }
        interface SessionsResource {
            /** Deletes all active contexts in the specified session. */
            deleteContexts(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The name of the session to delete all contexts from. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /**
             * Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be
             * updated, which in turn might affect results of future queries. If you might use [Agent Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the
             * future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional functionality for Agent Assist and other CCAI products. Note: Always use agent
             * versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
             */
            detectIntent(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the session this query is sent to. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is
                 * not specified, we are using "-". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session
                 * identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions
                 * guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and
                 * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                 */
                session: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1DetectIntentRequest;
            }): Request<GoogleCloudDialogflowV2beta1DetectIntentResponse>;
            detectIntent(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the session this query is sent to. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is
                 * not specified, we are using "-". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session
                 * identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions
                 * guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and
                 * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                 */
                session: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1DetectIntentRequest): Request<GoogleCloudDialogflowV2beta1DetectIntentResponse>;
            contexts: ContextsResource;
            entityTypes: EntityTypesResource;
        }
        interface UsersResource {
            sessions: SessionsResource;
        }
        interface EnvironmentsResource {
            /** Creates an agent environment. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. The unique id of the new environment. */
                environmentId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The agent to create an environment for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Environment;
            }): Request<GoogleCloudDialogflowV2beta1Environment>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. The unique id of the new environment. */
                environmentId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The agent to create an environment for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Environment): Request<GoogleCloudDialogflowV2beta1Environment>;
            /** Deletes the specified agent environment. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the environment to delete. / Format: - `projects//agent/environments/` - `projects//locations//agent/environments/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified agent environment. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Environment>;
            /** Gets the history of the specified environment. */
            getHistory(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The name of the environment to retrieve history for. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1EnvironmentHistory>;
            /** Returns the list of all non-draft environments of the specified agent. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The agent to list all environments from. Format: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListEnvironmentsResponse>;
            /**
             * Updates the specified agent environment. This method allows you to deploy new agent versions into the environment. When an environment is pointed to a new agent version by setting
             * `environment.agent_version`, the environment is temporarily set to the `LOADING` state. During that time, the environment keeps on serving the previous version of the agent. After
             * the new agent version is done loading, the environment is set back to the `RUNNING` state. You can use "-" as Environment ID in environment name to update version in "draft"
             * environment. WARNING: this will negate all recent changes to draft and can't be undone. You may want to save the draft to a version before calling this function.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /**
                 * Optional. This field is used to prevent accidental overwrite of the draft environment, which is an operation that cannot be undone. To confirm that the caller desires this
                 * overwrite, this field must be explicitly set to true when updating the draft environment (environment ID = `-`).
                 */
                allowLoadToDraftAndDiscardChanges?: boolean;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Output only. The unique identifier of this agent environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Environment;
            }): Request<GoogleCloudDialogflowV2beta1Environment>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /**
                 * Optional. This field is used to prevent accidental overwrite of the draft environment, which is an operation that cannot be undone. To confirm that the caller desires this
                 * overwrite, this field must be explicitly set to true when updating the draft environment (environment ID = `-`).
                 */
                allowLoadToDraftAndDiscardChanges?: boolean;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Output only. The unique identifier of this agent environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Environment): Request<GoogleCloudDialogflowV2beta1Environment>;
            intents: IntentsResource;
            users: UsersResource;
        }
        interface IntentsResource {
            /**
             * Deletes intents in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation`
             * type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
             * `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it
             * queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            batchDelete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the agent to delete all entities types for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest;
            }): Request<GoogleLongrunningOperation>;
            batchDelete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the agent to delete all entities types for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest): Request<GoogleLongrunningOperation>;
            /**
             * Updates/Creates multiple intents in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
             * returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: BatchUpdateIntentsResponse Note: You should always train an agent prior
             * to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            batchUpdate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the agent to update or create intents in. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest;
            }): Request<GoogleLongrunningOperation>;
            batchUpdate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the agent to update or create intents in. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest): Request<GoogleLongrunningOperation>;
            /**
             * Creates an intent in the specified agent. Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. The resource view to apply to the returned intent. */
                intentView?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The agent to create a intent for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Intent;
            }): Request<GoogleCloudDialogflowV2beta1Intent>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. The resource view to apply to the returned intent. */
                intentView?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The agent to create a intent for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Intent): Request<GoogleCloudDialogflowV2beta1Intent>;
            /**
             * Deletes the specified intent and its direct or indirect followup intents. Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the intent to delete. If this intent has direct or indirect followup intents, we also delete them. Supported formats: - `projects//agent/intents/` -
                 * `projects//locations//agent/intents/`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified intent. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. The resource view to apply to the returned intent. */
                intentView?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** Required. The name of the intent. Supported formats: - `projects//agent/intents/` - `projects//locations//agent/intents/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Intent>;
            /** Returns the list of all intents in the specified agent. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. The resource view to apply to the returned intent. */
                intentView?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /**
                 * Required. The agent to list all intents from. Format: `projects//agent` or `projects//locations//agent`. Alternatively, you can specify the environment to list intents for.
                 * Format: `projects//agent/environments/` or `projects//locations//agent/environments/`. Note: training phrases of the intents will not be returned for non-draft environment.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListIntentsResponse>;
            /**
             * Updates the specified intent. Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. The resource view to apply to the returned intent. */
                intentView?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /**
                 * Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
                 * `projects//locations//agent/intents/`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Intent;
            }): Request<GoogleCloudDialogflowV2beta1Intent>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. The resource view to apply to the returned intent. */
                intentView?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /**
                 * Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
                 * `projects//locations//agent/intents/`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Intent): Request<GoogleCloudDialogflowV2beta1Intent>;
        }
        interface DocumentsResource {
            /**
             * Creates a new document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the
             * following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only
             * use `projects.knowledgeBases.documents`.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is Google Cloud Storage URI. */
                importGcsCustomMetadata?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The knowledge base to create a document for. Format: `projects//locations//knowledgeBases/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Document;
            }): Request<GoogleLongrunningOperation>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is Google Cloud Storage URI. */
                importGcsCustomMetadata?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The knowledge base to create a document for. Format: `projects//locations//knowledgeBases/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Document): Request<GoogleLongrunningOperation>;
            /**
             * Deletes the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has
             * the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use
             * `projects.knowledgeBases.documents`.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the document to delete. Format: `projects//locations//knowledgeBases//documents/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningOperation>;
            /** Retrieves the specified document. Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the document to retrieve. Format `projects//locations//knowledgeBases//documents/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Document>;
            /** Returns the list of all documents of the knowledge base. Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * The filter expression used to filter documents returned by the list method. The expression has the following syntax: [AND ] ... The following fields and operators are supported:
                 * * knowledge_types with has(:) operator * display_name with has(:) operator * state with equals(=) operator Examples: * "knowledge_types:FAQ" matches documents with FAQ knowledge
                 * type. * "display_name:customer" matches documents whose display name contains "customer". * "state=ACTIVE" matches documents with ACTIVE state. * "knowledge_types:FAQ AND
                 * state=ACTIVE" matches all active FAQ documents. For more information about filtering, see [API Filtering](https://aip.dev/160).
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of items to return in a single page. By default 10 and at most 100. */
                pageSize?: number;
                /** The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The knowledge base to list all documents for. Format: `projects//locations//knowledgeBases/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListDocumentsResponse>;
            /**
             * Updates the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has
             * the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
             * only use `projects.knowledgeBases.documents`.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Document;
            }): Request<GoogleLongrunningOperation>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Document): Request<GoogleLongrunningOperation>;
            /**
             * Reloads the specified document from its specified source, content_uri or content. The previously loaded content of the document will be deleted. Note: Even when the content of the
             * document has not changed, there still may be side effects because of internal implementation changes. Note: If the document source is Google Cloud Storage URI, its metadata will be
             * replaced with the custom metadata from Google Cloud Storage if the `import_gcs_custom_metadata` field is set to true in the request. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`:
             * KnowledgeOperationMetadata - `response`: Document Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`.
             */
            reload(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the document to reload. Format: `projects//locations//knowledgeBases//documents/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1ReloadDocumentRequest;
            }): Request<GoogleLongrunningOperation>;
            reload(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the document to reload. Format: `projects//locations//knowledgeBases//documents/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1ReloadDocumentRequest): Request<GoogleLongrunningOperation>;
        }
        interface KnowledgeBasesResource {
            /** Creates a knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project to create a knowledge base for. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1KnowledgeBase;
            }): Request<GoogleCloudDialogflowV2beta1KnowledgeBase>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project to create a knowledge base for. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1KnowledgeBase): Request<GoogleCloudDialogflowV2beta1KnowledgeBase>;
            /** Deletes the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base are also deleted. */
                force?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1KnowledgeBase>;
            /** Returns the list of all knowledge bases of the specified agent. Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * The filter expression used to filter knowledge bases returned by the list method. The expression has the following syntax: [AND ] ... The following fields and operators are
                 * supported: * display_name with has(:) operator * language_code with equals(=) operator Examples: * 'language_code=en-us' matches knowledge bases with en-us language code. *
                 * 'display_name:articles' matches knowledge bases whose display name contains "articles". * 'display_name:"Best Articles"' matches knowledge bases whose display name contains
                 * "Best Articles". * 'language_code=en-gb AND display_name=articles' matches all knowledge bases whose display name contains "articles" and whose language code is "en-gb". Note:
                 * An empty filter string (i.e. "") is a no-op and will result in no filtering. For more information about filtering, see [API Filtering](https://aip.dev/160).
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of items to return in a single page. By default 10 and at most 100. */
                pageSize?: number;
                /** The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The project to list of knowledge bases for. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListKnowledgeBasesResponse>;
            /** Updates the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The knowledge base resource name. The name must be empty when creating a knowledge base. Format: `projects//locations//knowledgeBases/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1KnowledgeBase;
            }): Request<GoogleCloudDialogflowV2beta1KnowledgeBase>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The knowledge base resource name. The name must be empty when creating a knowledge base. Format: `projects//locations//knowledgeBases/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1KnowledgeBase): Request<GoogleCloudDialogflowV2beta1KnowledgeBase>;
            documents: DocumentsResource;
        }
        interface ContextsResource {
            /** Creates a context. If the specified context already exists, overrides the context. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Context;
            }): Request<GoogleCloudDialogflowV2beta1Context>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Context): Request<GoogleCloudDialogflowV2beta1Context>;
            /** Deletes the specified context. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the context to delete. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is not specified we assume
                 * default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified context. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is not specified we assume
                 * default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Context>;
            /** Returns the list of all contexts in the specified session. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /**
                 * Required. The session to list all contexts from. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListContextsResponse>;
            /** Updates the specified context. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to
                 * lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User
                 * ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts
                 * with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Context;
            }): Request<GoogleCloudDialogflowV2beta1Context>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to
                 * lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User
                 * ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts
                 * with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Context): Request<GoogleCloudDialogflowV2beta1Context>;
        }
        interface EntityTypesResource {
            /**
             * Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration.
             * Contact Dialogflow support if you need to use session entities with Google Assistant integration.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The session to create a session entity type for. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SessionEntityType;
            }): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The session to create a session entity type for. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SessionEntityType): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
            /**
             * Deletes the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google
             * Assistant integration.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the entity type to delete. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
                 * `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we
                 * assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /**
             * Retrieves the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google
             * Assistant integration.
             */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
                 * `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we
                 * assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
            /**
             * Returns the list of all session entity types in the specified session. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use
             * session entities with Google Assistant integration.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /**
                 * Required. The session to list all session entity types from. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse>;
            /**
             * Updates the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google
             * Assistant integration.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/`
                 * - `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we
                 * assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be
                 * the display name of an existing entity type in the same agent that will be overridden or supplemented.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SessionEntityType;
            }): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/`
                 * - `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we
                 * assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be
                 * the display name of an existing entity type in the same agent that will be overridden or supplemented.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SessionEntityType): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
        }
        interface SessionsResource {
            /** Deletes all active contexts in the specified session. */
            deleteContexts(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The name of the session to delete all contexts from. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /**
             * Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be
             * updated, which in turn might affect results of future queries. If you might use [Agent Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the
             * future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional functionality for Agent Assist and other CCAI products. Note: Always use agent
             * versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
             */
            detectIntent(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the session this query is sent to. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is
                 * not specified, we are using "-". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session
                 * identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions
                 * guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and
                 * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                 */
                session: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1DetectIntentRequest;
            }): Request<GoogleCloudDialogflowV2beta1DetectIntentResponse>;
            detectIntent(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the session this query is sent to. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is
                 * not specified, we are using "-". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session
                 * identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions
                 * guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and
                 * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                 */
                session: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1DetectIntentRequest): Request<GoogleCloudDialogflowV2beta1DetectIntentResponse>;
            contexts: ContextsResource;
            entityTypes: EntityTypesResource;
        }
        interface VersionsResource {
            /** Creates an agent version. The new version points to the agent instance in the "default" environment. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The agent to create a version for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Version;
            }): Request<GoogleCloudDialogflowV2beta1Version>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The agent to create a version for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Version): Request<GoogleCloudDialogflowV2beta1Version>;
            /** Delete the specified agent version. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the version to delete. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified agent version. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Version>;
            /** Returns the list of all versions of the specified agent. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The agent to list all versions from. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListVersionsResponse>;
            /**
             * Updates the specified agent version. Note that this method does not allow you to update the state of the agent the given version points to. It allows you to update only mutable
             * properties of the version resource.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Output only. The unique identifier of this agent version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Version;
            }): Request<GoogleCloudDialogflowV2beta1Version>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Output only. The unique identifier of this agent version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Version): Request<GoogleCloudDialogflowV2beta1Version>;
        }
        interface AgentResource {
            /**
             * Exports the specified agent to a ZIP file. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
             * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: ExportAgentResponse
             */
            export(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to export is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1ExportAgentRequest;
            }): Request<GoogleLongrunningOperation>;
            export(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to export is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1ExportAgentRequest): Request<GoogleLongrunningOperation>;
            /** Retrieves the fulfillment. */
            getFulfillment(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the fulfillment. Supported formats: - `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Fulfillment>;
            /** Gets agent validation result. Agent validation is performed during training time and is updated automatically when training is completed. */
            getValidationResult(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language for which you want a validation result. If not specified, the agent's default language is used. [Many
                 * languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.
                 */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ValidationResult>;
            /**
             * Imports the specified agent from a ZIP file. Uploads new intents and entity types without deleting the existing ones. Intents and entity types with the same name are replaced with
             * the new versions from ImportAgentRequest. After the import, the imported draft agent will be trained automatically (unless disabled in agent settings). However, once the import is
             * done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty
             * [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The operation only tracks when importing is complete, not when it is done training.
             * Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            import(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to import is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1ImportAgentRequest;
            }): Request<GoogleLongrunningOperation>;
            import(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to import is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1ImportAgentRequest): Request<GoogleLongrunningOperation>;
            /**
             * Restores the specified agent from a ZIP file. Replaces the current agent version with a new one. All the intents and entity types in the older version are deleted. After the
             * restore, the restored draft agent will be trained automatically (unless disabled in agent settings). However, once the restore is done, training may not be completed yet. Please
             * call TrainAgent and wait for the operation it returns in order to train explicitly. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty
             * [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The operation only tracks when restoring is complete, not when it is done training.
             * Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            restore(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to restore is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1RestoreAgentRequest;
            }): Request<GoogleLongrunningOperation>;
            restore(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to restore is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1RestoreAgentRequest): Request<GoogleLongrunningOperation>;
            /**
             * Returns the list of agents. Since there is at most one conversational agent per project, this method is useful primarily for listing all agents across projects the caller has access
             * to. One can achieve that with a wildcard project collection id "-". Refer to [List Sub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
             */
            search(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The project to list agents from. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1SearchAgentsResponse>;
            /**
             * Trains the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the
             * following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An
             * [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the
             * [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            train(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to train is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1TrainAgentRequest;
            }): Request<GoogleLongrunningOperation>;
            train(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to train is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1TrainAgentRequest): Request<GoogleLongrunningOperation>;
            /** Updates the fulfillment. */
            updateFulfillment(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of the fulfillment. Supported formats: - `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for
                 * Fulfillment in an Environment.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields get updated. If the mask is not present, all fields will be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Fulfillment;
            }): Request<GoogleCloudDialogflowV2beta1Fulfillment>;
            updateFulfillment(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of the fulfillment. Supported formats: - `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for
                 * Fulfillment in an Environment.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields get updated. If the mask is not present, all fields will be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Fulfillment): Request<GoogleCloudDialogflowV2beta1Fulfillment>;
            entityTypes: EntityTypesResource;
            environments: EnvironmentsResource;
            intents: IntentsResource;
            knowledgeBases: KnowledgeBasesResource;
            sessions: SessionsResource;
            versions: VersionsResource;
        }
        interface AnswerRecordsResource {
            /** Deprecated. Retrieves a specific answer record. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the answer record to retrieve. Format: `projects//locations//answerRecords/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1AnswerRecord>;
            /** Returns the list of all answer records in the specified project in reverse chronological order. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. Filters to restrict results to specific answer records. For more information about filtering, see [API Filtering](https://aip.dev/160). */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of records to return in a single page. The server may return fewer records than this. If unspecified, we use 10. The maximum is 100. */
                pageSize?: number;
                /** Optional. The ListAnswerRecordsResponse.next_page_token value returned from a previous list request used to continue listing on the next page. */
                pageToken?: string;
                /** Required. The project to list all answer records for in reverse chronological order. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListAnswerRecordsResponse>;
            /** Updates the specified answer record. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The unique identifier of this answer record. Required for AnswerRecords.UpdateAnswerRecord method. Format: `projects//locations//answerRecords/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1AnswerRecord;
            }): Request<GoogleCloudDialogflowV2beta1AnswerRecord>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The unique identifier of this answer record. Required for AnswerRecords.UpdateAnswerRecord method. Format: `projects//locations//answerRecords/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1AnswerRecord): Request<GoogleCloudDialogflowV2beta1AnswerRecord>;
        }
        interface ConversationProfilesResource {
            /**
             * Clears a suggestion feature from a conversation profile for the given participant role. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`:
             * ClearSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile
             */
            clearSuggestionFeatureConfig(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. The Conversation Profile to add or update the suggestion feature config. Format: `projects//locations//conversationProfiles/`. */
                conversationProfile: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest;
            }): Request<GoogleLongrunningOperation>;
            clearSuggestionFeatureConfig(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. The Conversation Profile to add or update the suggestion feature config. Format: `projects//locations//conversationProfiles/`. */
                conversationProfile: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest): Request<GoogleLongrunningOperation>;
            /**
             * Creates a conversation profile in the specified project. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them
             * via GetConversationProfile API.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project to create a conversation profile for. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1ConversationProfile;
            }): Request<GoogleCloudDialogflowV2beta1ConversationProfile>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project to create a conversation profile for. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1ConversationProfile): Request<GoogleCloudDialogflowV2beta1ConversationProfile>;
            /** Deletes the specified conversation profile. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the conversation profile to delete. Format: `projects//locations//conversationProfiles/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified conversation profile. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ConversationProfile>;
            /** Returns the list of all conversation profiles in the specified project. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The project to list all conversation profiles from. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListConversationProfilesResponse>;
            /**
             * Updates the specified conversation profile. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via
             * GetConversationProfile API.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields to update. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1ConversationProfile;
            }): Request<GoogleCloudDialogflowV2beta1ConversationProfile>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields to update. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1ConversationProfile): Request<GoogleCloudDialogflowV2beta1ConversationProfile>;
            /**
             * Adds or updates a suggestion feature in a conversation profile. If the conversation profile contains the type of suggestion feature for the participant role, it will update it.
             * Otherwise it will insert the suggestion feature. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
             * `Operation` type has the following method-specific fields: - `metadata`: SetSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile If a long running operation to
             * add or update suggestion feature config for the same conversation profile, participant role and suggestion feature type exists, please cancel the existing long running operation
             * before sending such request, otherwise the request will be rejected.
             */
            setSuggestionFeatureConfig(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. The Conversation Profile to add or update the suggestion feature config. Format: `projects//locations//conversationProfiles/`. */
                conversationProfile: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest;
            }): Request<GoogleLongrunningOperation>;
            setSuggestionFeatureConfig(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. The Conversation Profile to add or update the suggestion feature config. Format: `projects//locations//conversationProfiles/`. */
                conversationProfile: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest): Request<GoogleLongrunningOperation>;
        }
        interface MessagesResource {
            /** Batch ingests messages to conversation. Customers can use this RPC to ingest historical messages to conversation. */
            batchCreate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Resource identifier of the conversation to create message. Format: `projects//locations//conversations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest;
            }): Request<GoogleCloudDialogflowV2beta1BatchCreateMessagesResponse>;
            batchCreate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Resource identifier of the conversation to create message. Format: `projects//locations//conversations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest): Request<GoogleCloudDialogflowV2beta1BatchCreateMessagesResponse>;
            /**
             * Lists messages that belong to a given conversation. `messages` are ordered by `create_time` in descending order. To fetch updates without duplication, send request with filter
             * `create_time_epoch_microseconds > [first item's create_time of previous request]` and empty page_token.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Optional. Filter on message fields. Currently predicates on `create_time` and `create_time_epoch_microseconds` are supported. `create_time` only support milliseconds accuracy.
                 * E.g., `create_time_epoch_microseconds > 1551790877964485` or `create_time > "2017-01-15T01:30:15.01Z"`. For more information about filtering, see [API
                 * Filtering](https://aip.dev/160).
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The name of the conversation to list messages for. Format: `projects//locations//conversations/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListMessagesResponse>;
        }
        interface SuggestionsResource {
            /**
             * Deprecated. use SuggestArticles and SuggestFaqAnswers instead. Gets suggestions for a participant based on specific historical messages. Note that ListSuggestions will only list the
             * auto-generated suggestions, while CompileSuggestion will try to compile suggestion based on the provided conversation context in the real time.
             */
            compile(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1CompileSuggestionRequest;
            }): Request<GoogleCloudDialogflowV2beta1CompileSuggestionResponse>;
            compile(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1CompileSuggestionRequest): Request<GoogleCloudDialogflowV2beta1CompileSuggestionResponse>;
            /**
             * Deprecated: Use inline suggestion, event based suggestion or Suggestion* API instead. See HumanAgentAssistantConfig.name for more details. Removal Date: 2020-09-01. Retrieves
             * suggestions for live agents. This method should be used by human agent client software to fetch auto generated suggestions in real-time, while the conversation with an end user is
             * in progress. The functionality is implemented in terms of the [list pagination](https://cloud.google.com/apis/design/design_patterns#list_pagination) design pattern. The client app
             * should use the `next_page_token` field to fetch the next batch of suggestions. `suggestions` are sorted by `create_time` in descending order. To fetch latest suggestion, just set
             * `page_size` to 1. To fetch new suggestions without duplication, send request with filter `create_time_epoch_microseconds > [first item's create_time of previous request]` and empty
             * page_token.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Optional. Filter on suggestions fields. Currently predicates on `create_time` and `create_time_epoch_microseconds` are supported. `create_time` only support milliseconds
                 * accuracy. E.g., `create_time_epoch_microseconds > 1551790877964485` or `create_time > "2017-01-15T01:30:15.01Z"` For more information about filtering, see [API
                 * Filtering](https://aip.dev/160).
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. The default value is 100; the maximum value is 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The name of the participant to fetch suggestions for. Format: `projects//locations//conversations//participants/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListSuggestionsResponse>;
            /**
             * Gets suggested articles for a participant based on specific historical messages. Note that ListSuggestions will only list the auto-generated suggestions, while CompileSuggestion
             * will try to compile suggestion based on the provided conversation context in the real time.
             */
            suggestArticles(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SuggestArticlesRequest;
            }): Request<GoogleCloudDialogflowV2beta1SuggestArticlesResponse>;
            suggestArticles(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SuggestArticlesRequest): Request<GoogleCloudDialogflowV2beta1SuggestArticlesResponse>;
            /** Gets suggested faq answers for a participant based on specific historical messages. */
            suggestFaqAnswers(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SuggestFaqAnswersRequest;
            }): Request<GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse>;
            suggestFaqAnswers(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SuggestFaqAnswersRequest): Request<GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse>;
            /** Gets smart replies for a participant based on specific historical messages. */
            suggestSmartReplies(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest;
            }): Request<GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse>;
            suggestSmartReplies(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest): Request<GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse>;
        }
        interface ParticipantsResource {
            /**
             * Adds a text (chat, for example), or audio (phone recording, for example) message from a participant into the conversation. Note: Always use agent versions for production traffic
             * sent to virtual agents. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
             */
            analyzeContent(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant this text comes from. Format: `projects//locations//conversations//participants/`. */
                participant: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1AnalyzeContentRequest;
            }): Request<GoogleCloudDialogflowV2beta1AnalyzeContentResponse>;
            analyzeContent(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant this text comes from. Format: `projects//locations//conversations//participants/`. */
                participant: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1AnalyzeContentRequest): Request<GoogleCloudDialogflowV2beta1AnalyzeContentResponse>;
            /** Creates a new participant in a conversation. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Resource identifier of the conversation adding the participant. Format: `projects//locations//conversations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Participant;
            }): Request<GoogleCloudDialogflowV2beta1Participant>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Resource identifier of the conversation adding the participant. Format: `projects//locations//conversations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Participant): Request<GoogleCloudDialogflowV2beta1Participant>;
            /** Retrieves a conversation participant. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the participant. Format: `projects//locations//conversations//participants/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Participant>;
            /** Returns the list of all participants in the specified conversation. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The conversation to list all participants from. Format: `projects//locations//conversations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListParticipantsResponse>;
            /** Updates the specified participant. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to specify which fields to update. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Participant;
            }): Request<GoogleCloudDialogflowV2beta1Participant>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to specify which fields to update. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Participant): Request<GoogleCloudDialogflowV2beta1Participant>;
            suggestions: SuggestionsResource;
        }
        interface SuggestionsResource {
            /** Suggest summary for a conversation based on specific historical messages. The range of the messages to be used for summary can be specified in the request. */
            suggestConversationSummary(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. The conversation to fetch suggestion for. Format: `projects//locations//conversations/`. */
                conversation: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SuggestConversationSummaryRequest;
            }): Request<GoogleCloudDialogflowV2beta1SuggestConversationSummaryResponse>;
            suggestConversationSummary(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. The conversation to fetch suggestion for. Format: `projects//locations//conversations/`. */
                conversation: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SuggestConversationSummaryRequest): Request<GoogleCloudDialogflowV2beta1SuggestConversationSummaryResponse>;
        }
        interface ConversationsResource {
            /** Completes the specified conversation. Finished conversations are purged from the database after 30 days. */
            complete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource identifier of the conversation to close. Format: `projects//locations//conversations/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1CompleteConversationRequest;
            }): Request<GoogleCloudDialogflowV2beta1Conversation>;
            complete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource identifier of the conversation to close. Format: `projects//locations//conversations/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1CompleteConversationRequest): Request<GoogleCloudDialogflowV2beta1Conversation>;
            /**
             * Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation Lifecycle: There are two stages during a conversation: Automated Agent Stage and Assist
             * Stage. For Automated Agent Stage, there will be a dialogflow agent responding to user queries. For Assist Stage, there's no dialogflow agent responding to user queries. But we will
             * provide suggestions which are generated from conversation. If Conversation.conversation_profile is configured for a dialogflow agent, conversation will start from `Automated Agent
             * Stage`, otherwise, it will start from `Assist Stage`. And during `Automated Agent Stage`, once an Intent with Intent.live_agent_handoff is triggered, conversation will transfer to
             * Assist Stage.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Optional. Identifier of the conversation. Generally it's auto generated by Google. Only set it if you cannot wait for the response to return a auto-generated one to you. The
                 * conversation ID must be compliant with the regression fomula "a-zA-Z*" with the characters length in range of [3,64]. If the field is provided, the caller is resposible for 1.
                 * the uniqueness of the ID, otherwise the request will be rejected. 2. the consistency for whether to use custom ID or not under a project to better ensure uniqueness.
                 */
                conversationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Resource identifier of the project creating the conversation. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Conversation;
            }): Request<GoogleCloudDialogflowV2beta1Conversation>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Optional. Identifier of the conversation. Generally it's auto generated by Google. Only set it if you cannot wait for the response to return a auto-generated one to you. The
                 * conversation ID must be compliant with the regression fomula "a-zA-Z*" with the characters length in range of [3,64]. If the field is provided, the caller is resposible for 1.
                 * the uniqueness of the ID, otherwise the request will be rejected. 2. the consistency for whether to use custom ID or not under a project to better ensure uniqueness.
                 */
                conversationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Resource identifier of the project creating the conversation. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Conversation): Request<GoogleCloudDialogflowV2beta1Conversation>;
            /** Retrieves the specific conversation. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the conversation. Format: `projects//locations//conversations/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Conversation>;
            /** Returns the list of all conversations in the specified project. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * A filter expression that filters conversations listed in the response. In general, the expression must specify the field name, a comparison operator, and the value to use for
                 * filtering: - The value must be a string, a number, or a boolean. - The comparison operator must be either `=`,`!=`, `>`, or `<`. - To filter on multiple expressions, separate
                 * the expressions with `AND` or `OR` (omitting both implies `AND`). - For clarity, expressions can be enclosed in parentheses. Only `lifecycle_state` can be filtered on in this
                 * way. For example, the following expression only returns `COMPLETED` conversations: `lifecycle_state = "COMPLETED"` For more information about filtering, see [API
                 * Filtering](https://aip.dev/160).
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The project from which to list all conversation. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListConversationsResponse>;
            messages: MessagesResource;
            participants: ParticipantsResource;
            suggestions: SuggestionsResource;
        }
        interface DocumentsResource {
            /**
             * Creates a new document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the
             * following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only
             * use `projects.knowledgeBases.documents`.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is Google Cloud Storage URI. */
                importGcsCustomMetadata?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The knowledge base to create a document for. Format: `projects//locations//knowledgeBases/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Document;
            }): Request<GoogleLongrunningOperation>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is Google Cloud Storage URI. */
                importGcsCustomMetadata?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The knowledge base to create a document for. Format: `projects//locations//knowledgeBases/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Document): Request<GoogleLongrunningOperation>;
            /**
             * Deletes the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has
             * the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use
             * `projects.knowledgeBases.documents`.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the document to delete. Format: `projects//locations//knowledgeBases//documents/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningOperation>;
            /** Retrieves the specified document. Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the document to retrieve. Format `projects//locations//knowledgeBases//documents/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Document>;
            /**
             * Create documents by importing data from external sources. Dialogflow supports up to 350 documents in each request. If you try to import more, Dialogflow will return an error. This
             * method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields:
             * - `metadata`: KnowledgeOperationMetadata - `response`: ImportDocumentsResponse
             */
            import(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The knowledge base to import documents into. Format: `projects//locations//knowledgeBases/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1ImportDocumentsRequest;
            }): Request<GoogleLongrunningOperation>;
            import(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The knowledge base to import documents into. Format: `projects//locations//knowledgeBases/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1ImportDocumentsRequest): Request<GoogleLongrunningOperation>;
            /** Returns the list of all documents of the knowledge base. Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * The filter expression used to filter documents returned by the list method. The expression has the following syntax: [AND ] ... The following fields and operators are supported:
                 * * knowledge_types with has(:) operator * display_name with has(:) operator * state with equals(=) operator Examples: * "knowledge_types:FAQ" matches documents with FAQ knowledge
                 * type. * "display_name:customer" matches documents whose display name contains "customer". * "state=ACTIVE" matches documents with ACTIVE state. * "knowledge_types:FAQ AND
                 * state=ACTIVE" matches all active FAQ documents. For more information about filtering, see [API Filtering](https://aip.dev/160).
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of items to return in a single page. By default 10 and at most 100. */
                pageSize?: number;
                /** The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The knowledge base to list all documents for. Format: `projects//locations//knowledgeBases/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListDocumentsResponse>;
            /**
             * Updates the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has
             * the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
             * only use `projects.knowledgeBases.documents`.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Document;
            }): Request<GoogleLongrunningOperation>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Document): Request<GoogleLongrunningOperation>;
            /**
             * Reloads the specified document from its specified source, content_uri or content. The previously loaded content of the document will be deleted. Note: Even when the content of the
             * document has not changed, there still may be side effects because of internal implementation changes. Note: If the document source is Google Cloud Storage URI, its metadata will be
             * replaced with the custom metadata from Google Cloud Storage if the `import_gcs_custom_metadata` field is set to true in the request. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`:
             * KnowledgeOperationMetadata - `response`: Document Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`.
             */
            reload(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the document to reload. Format: `projects//locations//knowledgeBases//documents/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1ReloadDocumentRequest;
            }): Request<GoogleLongrunningOperation>;
            reload(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the document to reload. Format: `projects//locations//knowledgeBases//documents/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1ReloadDocumentRequest): Request<GoogleLongrunningOperation>;
        }
        interface KnowledgeBasesResource {
            /** Creates a knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project to create a knowledge base for. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1KnowledgeBase;
            }): Request<GoogleCloudDialogflowV2beta1KnowledgeBase>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project to create a knowledge base for. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1KnowledgeBase): Request<GoogleCloudDialogflowV2beta1KnowledgeBase>;
            /** Deletes the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base are also deleted. */
                force?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1KnowledgeBase>;
            /** Returns the list of all knowledge bases of the specified agent. Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * The filter expression used to filter knowledge bases returned by the list method. The expression has the following syntax: [AND ] ... The following fields and operators are
                 * supported: * display_name with has(:) operator * language_code with equals(=) operator Examples: * 'language_code=en-us' matches knowledge bases with en-us language code. *
                 * 'display_name:articles' matches knowledge bases whose display name contains "articles". * 'display_name:"Best Articles"' matches knowledge bases whose display name contains
                 * "Best Articles". * 'language_code=en-gb AND display_name=articles' matches all knowledge bases whose display name contains "articles" and whose language code is "en-gb". Note:
                 * An empty filter string (i.e. "") is a no-op and will result in no filtering. For more information about filtering, see [API Filtering](https://aip.dev/160).
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of items to return in a single page. By default 10 and at most 100. */
                pageSize?: number;
                /** The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The project to list of knowledge bases for. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListKnowledgeBasesResponse>;
            /** Updates the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The knowledge base resource name. The name must be empty when creating a knowledge base. Format: `projects//locations//knowledgeBases/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1KnowledgeBase;
            }): Request<GoogleCloudDialogflowV2beta1KnowledgeBase>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The knowledge base resource name. The name must be empty when creating a knowledge base. Format: `projects//locations//knowledgeBases/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1KnowledgeBase): Request<GoogleCloudDialogflowV2beta1KnowledgeBase>;
            documents: DocumentsResource;
        }
        interface EntitiesResource {
            /**
             * Creates multiple new entities in the specified entity type. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
             * returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            batchCreate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the entity type to create entities in. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest;
            }): Request<GoogleLongrunningOperation>;
            batchCreate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the entity type to create entities in. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest): Request<GoogleLongrunningOperation>;
            /**
             * Deletes entities in the specified entity type. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
             * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            batchDelete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the entity type to delete entries for. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest;
            }): Request<GoogleLongrunningOperation>;
            batchDelete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the entity type to delete entries for. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest): Request<GoogleLongrunningOperation>;
            /**
             * Updates or creates multiple entities in the specified entity type. This method does not affect entities in the entity type that aren't explicitly specified in the request. Note: You
             * should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training). This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty
             * [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
             */
            batchUpdate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the entity type to update or create entities in. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest;
            }): Request<GoogleLongrunningOperation>;
            batchUpdate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the entity type to update or create entities in. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest): Request<GoogleLongrunningOperation>;
        }
        interface EntityTypesResource {
            /**
             * Deletes entity types in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
             * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            batchDelete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the agent to delete all entities types for. Supported formats: - `projects//agent`, - `projects//locations//agent`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest;
            }): Request<GoogleLongrunningOperation>;
            batchDelete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the agent to delete all entities types for. Supported formats: - `projects//agent`, - `projects//locations//agent`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest): Request<GoogleLongrunningOperation>;
            /**
             * Updates/Creates multiple entity types in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
             * returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: BatchUpdateEntityTypesResponse Note: You should always train an agent
             * prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            batchUpdate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the agent to update or create entity types in. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest;
            }): Request<GoogleLongrunningOperation>;
            batchUpdate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the agent to update or create entity types in. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest): Request<GoogleLongrunningOperation>;
            /**
             * Creates an entity type in the specified agent. Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The agent to create a entity type for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1EntityType;
            }): Request<GoogleCloudDialogflowV2beta1EntityType>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The agent to create a entity type for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1EntityType): Request<GoogleCloudDialogflowV2beta1EntityType>;
            /**
             * Deletes the specified entity type. Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the entity type to delete. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified entity type. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** Required. The name of the entity type. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1EntityType>;
            /** Returns the list of all entity types in the specified agent. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The agent to list all entity types from. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListEntityTypesResponse>;
            /**
             * Updates the specified entity type. Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /**
                 * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: -
                 * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1EntityType;
            }): Request<GoogleCloudDialogflowV2beta1EntityType>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /**
                 * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: -
                 * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1EntityType): Request<GoogleCloudDialogflowV2beta1EntityType>;
            entities: EntitiesResource;
        }
        interface IntentsResource {
            /** Returns the list of all intents in the specified agent. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. The resource view to apply to the returned intent. */
                intentView?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /**
                 * Required. The agent to list all intents from. Format: `projects//agent` or `projects//locations//agent`. Alternatively, you can specify the environment to list intents for.
                 * Format: `projects//agent/environments/` or `projects//locations//agent/environments/`. Note: training phrases of the intents will not be returned for non-draft environment.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListIntentsResponse>;
        }
        interface ContextsResource {
            /** Creates a context. If the specified context already exists, overrides the context. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Context;
            }): Request<GoogleCloudDialogflowV2beta1Context>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Context): Request<GoogleCloudDialogflowV2beta1Context>;
            /** Deletes the specified context. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the context to delete. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is not specified we assume
                 * default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified context. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is not specified we assume
                 * default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Context>;
            /** Returns the list of all contexts in the specified session. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /**
                 * Required. The session to list all contexts from. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListContextsResponse>;
            /** Updates the specified context. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to
                 * lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User
                 * ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts
                 * with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Context;
            }): Request<GoogleCloudDialogflowV2beta1Context>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to
                 * lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User
                 * ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts
                 * with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Context): Request<GoogleCloudDialogflowV2beta1Context>;
        }
        interface EntityTypesResource {
            /**
             * Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration.
             * Contact Dialogflow support if you need to use session entities with Google Assistant integration.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The session to create a session entity type for. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SessionEntityType;
            }): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The session to create a session entity type for. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SessionEntityType): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
            /**
             * Deletes the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google
             * Assistant integration.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the entity type to delete. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
                 * `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we
                 * assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /**
             * Retrieves the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google
             * Assistant integration.
             */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
                 * `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we
                 * assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
            /**
             * Returns the list of all session entity types in the specified session. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use
             * session entities with Google Assistant integration.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /**
                 * Required. The session to list all session entity types from. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse>;
            /**
             * Updates the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google
             * Assistant integration.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/`
                 * - `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we
                 * assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be
                 * the display name of an existing entity type in the same agent that will be overridden or supplemented.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SessionEntityType;
            }): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/`
                 * - `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we
                 * assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be
                 * the display name of an existing entity type in the same agent that will be overridden or supplemented.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SessionEntityType): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
        }
        interface SessionsResource {
            /** Deletes all active contexts in the specified session. */
            deleteContexts(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The name of the session to delete all contexts from. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /**
             * Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be
             * updated, which in turn might affect results of future queries. If you might use [Agent Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the
             * future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional functionality for Agent Assist and other CCAI products. Note: Always use agent
             * versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
             */
            detectIntent(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the session this query is sent to. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is
                 * not specified, we are using "-". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session
                 * identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions
                 * guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and
                 * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                 */
                session: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1DetectIntentRequest;
            }): Request<GoogleCloudDialogflowV2beta1DetectIntentResponse>;
            detectIntent(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the session this query is sent to. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is
                 * not specified, we are using "-". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session
                 * identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions
                 * guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and
                 * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                 */
                session: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1DetectIntentRequest): Request<GoogleCloudDialogflowV2beta1DetectIntentResponse>;
            contexts: ContextsResource;
            entityTypes: EntityTypesResource;
        }
        interface UsersResource {
            sessions: SessionsResource;
        }
        interface EnvironmentsResource {
            /** Creates an agent environment. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. The unique id of the new environment. */
                environmentId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The agent to create an environment for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Environment;
            }): Request<GoogleCloudDialogflowV2beta1Environment>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. The unique id of the new environment. */
                environmentId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The agent to create an environment for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Environment): Request<GoogleCloudDialogflowV2beta1Environment>;
            /** Deletes the specified agent environment. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the environment to delete. / Format: - `projects//agent/environments/` - `projects//locations//agent/environments/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified agent environment. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Environment>;
            /** Gets the history of the specified environment. */
            getHistory(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The name of the environment to retrieve history for. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1EnvironmentHistory>;
            /** Returns the list of all non-draft environments of the specified agent. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The agent to list all environments from. Format: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListEnvironmentsResponse>;
            /**
             * Updates the specified agent environment. This method allows you to deploy new agent versions into the environment. When an environment is pointed to a new agent version by setting
             * `environment.agent_version`, the environment is temporarily set to the `LOADING` state. During that time, the environment keeps on serving the previous version of the agent. After
             * the new agent version is done loading, the environment is set back to the `RUNNING` state. You can use "-" as Environment ID in environment name to update version in "draft"
             * environment. WARNING: this will negate all recent changes to draft and can't be undone. You may want to save the draft to a version before calling this function.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /**
                 * Optional. This field is used to prevent accidental overwrite of the draft environment, which is an operation that cannot be undone. To confirm that the caller desires this
                 * overwrite, this field must be explicitly set to true when updating the draft environment (environment ID = `-`).
                 */
                allowLoadToDraftAndDiscardChanges?: boolean;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Output only. The unique identifier of this agent environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Environment;
            }): Request<GoogleCloudDialogflowV2beta1Environment>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /**
                 * Optional. This field is used to prevent accidental overwrite of the draft environment, which is an operation that cannot be undone. To confirm that the caller desires this
                 * overwrite, this field must be explicitly set to true when updating the draft environment (environment ID = `-`).
                 */
                allowLoadToDraftAndDiscardChanges?: boolean;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Output only. The unique identifier of this agent environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Environment): Request<GoogleCloudDialogflowV2beta1Environment>;
            intents: IntentsResource;
            users: UsersResource;
        }
        interface IntentsResource {
            /**
             * Deletes intents in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation`
             * type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
             * `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it
             * queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            batchDelete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the agent to delete all entities types for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest;
            }): Request<GoogleLongrunningOperation>;
            batchDelete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the agent to delete all entities types for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest): Request<GoogleLongrunningOperation>;
            /**
             * Updates/Creates multiple intents in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
             * returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: BatchUpdateIntentsResponse Note: You should always train an agent prior
             * to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            batchUpdate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the agent to update or create intents in. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest;
            }): Request<GoogleLongrunningOperation>;
            batchUpdate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the agent to update or create intents in. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest): Request<GoogleLongrunningOperation>;
            /**
             * Creates an intent in the specified agent. Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. The resource view to apply to the returned intent. */
                intentView?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The agent to create a intent for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Intent;
            }): Request<GoogleCloudDialogflowV2beta1Intent>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. The resource view to apply to the returned intent. */
                intentView?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The agent to create a intent for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Intent): Request<GoogleCloudDialogflowV2beta1Intent>;
            /**
             * Deletes the specified intent and its direct or indirect followup intents. Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the intent to delete. If this intent has direct or indirect followup intents, we also delete them. Supported formats: - `projects//agent/intents/` -
                 * `projects//locations//agent/intents/`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified intent. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. The resource view to apply to the returned intent. */
                intentView?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** Required. The name of the intent. Supported formats: - `projects//agent/intents/` - `projects//locations//agent/intents/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Intent>;
            /** Returns the list of all intents in the specified agent. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. The resource view to apply to the returned intent. */
                intentView?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /**
                 * Required. The agent to list all intents from. Format: `projects//agent` or `projects//locations//agent`. Alternatively, you can specify the environment to list intents for.
                 * Format: `projects//agent/environments/` or `projects//locations//agent/environments/`. Note: training phrases of the intents will not be returned for non-draft environment.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListIntentsResponse>;
            /**
             * Updates the specified intent. Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. The resource view to apply to the returned intent. */
                intentView?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /**
                 * Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
                 * `projects//locations//agent/intents/`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Intent;
            }): Request<GoogleCloudDialogflowV2beta1Intent>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. The resource view to apply to the returned intent. */
                intentView?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity
                 * data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                 */
                languageCode?: string;
                /**
                 * Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
                 * `projects//locations//agent/intents/`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Intent): Request<GoogleCloudDialogflowV2beta1Intent>;
        }
        interface ContextsResource {
            /** Creates a context. If the specified context already exists, overrides the context. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Context;
            }): Request<GoogleCloudDialogflowV2beta1Context>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Context): Request<GoogleCloudDialogflowV2beta1Context>;
            /** Deletes the specified context. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the context to delete. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is not specified we assume
                 * default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified context. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is not specified we assume
                 * default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Context>;
            /** Returns the list of all contexts in the specified session. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /**
                 * Required. The session to list all contexts from. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListContextsResponse>;
            /** Updates the specified context. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to
                 * lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User
                 * ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts
                 * with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Context;
            }): Request<GoogleCloudDialogflowV2beta1Context>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to
                 * lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User
                 * ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts
                 * with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Context): Request<GoogleCloudDialogflowV2beta1Context>;
        }
        interface EntityTypesResource {
            /**
             * Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration.
             * Contact Dialogflow support if you need to use session entities with Google Assistant integration.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The session to create a session entity type for. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SessionEntityType;
            }): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The session to create a session entity type for. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SessionEntityType): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
            /**
             * Deletes the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google
             * Assistant integration.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the entity type to delete. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
                 * `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we
                 * assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /**
             * Retrieves the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google
             * Assistant integration.
             */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
                 * `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we
                 * assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
            /**
             * Returns the list of all session entity types in the specified session. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use
             * session entities with Google Assistant integration.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /**
                 * Required. The session to list all session entity types from. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse>;
            /**
             * Updates the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google
             * Assistant integration.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/`
                 * - `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we
                 * assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be
                 * the display name of an existing entity type in the same agent that will be overridden or supplemented.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SessionEntityType;
            }): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/`
                 * - `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we
                 * assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be
                 * the display name of an existing entity type in the same agent that will be overridden or supplemented.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SessionEntityType): Request<GoogleCloudDialogflowV2beta1SessionEntityType>;
        }
        interface SessionsResource {
            /** Deletes all active contexts in the specified session. */
            deleteContexts(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The name of the session to delete all contexts from. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /**
             * Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be
             * updated, which in turn might affect results of future queries. If you might use [Agent Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the
             * future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional functionality for Agent Assist and other CCAI products. Note: Always use agent
             * versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
             */
            detectIntent(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the session this query is sent to. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is
                 * not specified, we are using "-". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session
                 * identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions
                 * guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and
                 * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                 */
                session: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1DetectIntentRequest;
            }): Request<GoogleCloudDialogflowV2beta1DetectIntentResponse>;
            detectIntent(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the session this query is sent to. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we assume default 'us'
                 * location. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is
                 * not specified, we are using "-". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session
                 * identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions
                 * guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and
                 * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                 */
                session: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1DetectIntentRequest): Request<GoogleCloudDialogflowV2beta1DetectIntentResponse>;
            contexts: ContextsResource;
            entityTypes: EntityTypesResource;
        }
        interface VersionsResource {
            /** Creates an agent version. The new version points to the agent instance in the "default" environment. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The agent to create a version for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Version;
            }): Request<GoogleCloudDialogflowV2beta1Version>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The agent to create a version for. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Version): Request<GoogleCloudDialogflowV2beta1Version>;
            /** Delete the specified agent version. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the version to delete. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified agent version. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Version>;
            /** Returns the list of all versions of the specified agent. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The agent to list all versions from. Supported formats: - `projects//agent` - `projects//locations//agent` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListVersionsResponse>;
            /**
             * Updates the specified agent version. Note that this method does not allow you to update the state of the agent the given version points to. It allows you to update only mutable
             * properties of the version resource.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Output only. The unique identifier of this agent version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Version;
            }): Request<GoogleCloudDialogflowV2beta1Version>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Output only. The unique identifier of this agent version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Version): Request<GoogleCloudDialogflowV2beta1Version>;
        }
        interface AgentResource {
            /**
             * Exports the specified agent to a ZIP file. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
             * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: ExportAgentResponse
             */
            export(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to export is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1ExportAgentRequest;
            }): Request<GoogleLongrunningOperation>;
            export(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to export is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1ExportAgentRequest): Request<GoogleLongrunningOperation>;
            /** Retrieves the fulfillment. */
            getFulfillment(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the fulfillment. Supported formats: - `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Fulfillment>;
            /** Gets agent validation result. Agent validation is performed during training time and is updated automatically when training is completed. */
            getValidationResult(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. The language for which you want a validation result. If not specified, the agent's default language is used. [Many
                 * languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.
                 */
                languageCode?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ValidationResult>;
            /**
             * Imports the specified agent from a ZIP file. Uploads new intents and entity types without deleting the existing ones. Intents and entity types with the same name are replaced with
             * the new versions from ImportAgentRequest. After the import, the imported draft agent will be trained automatically (unless disabled in agent settings). However, once the import is
             * done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty
             * [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The operation only tracks when importing is complete, not when it is done training.
             * Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            import(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to import is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1ImportAgentRequest;
            }): Request<GoogleLongrunningOperation>;
            import(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to import is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1ImportAgentRequest): Request<GoogleLongrunningOperation>;
            /**
             * Restores the specified agent from a ZIP file. Replaces the current agent version with a new one. All the intents and entity types in the older version are deleted. After the
             * restore, the restored draft agent will be trained automatically (unless disabled in agent settings). However, once the restore is done, training may not be completed yet. Please
             * call TrainAgent and wait for the operation it returns in order to train explicitly. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty
             * [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The operation only tracks when restoring is complete, not when it is done training.
             * Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            restore(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to restore is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1RestoreAgentRequest;
            }): Request<GoogleLongrunningOperation>;
            restore(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to restore is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1RestoreAgentRequest): Request<GoogleLongrunningOperation>;
            /**
             * Returns the list of agents. Since there is at most one conversational agent per project, this method is useful primarily for listing all agents across projects the caller has access
             * to. One can achieve that with a wildcard project collection id "-". Refer to [List Sub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
             */
            search(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The project to list agents from. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1SearchAgentsResponse>;
            /**
             * Trains the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the
             * following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An
             * [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the
             * [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            train(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to train is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1TrainAgentRequest;
            }): Request<GoogleLongrunningOperation>;
            train(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to train is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1TrainAgentRequest): Request<GoogleLongrunningOperation>;
            /** Updates the fulfillment. */
            updateFulfillment(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of the fulfillment. Supported formats: - `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for
                 * Fulfillment in an Environment.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields get updated. If the mask is not present, all fields will be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Fulfillment;
            }): Request<GoogleCloudDialogflowV2beta1Fulfillment>;
            updateFulfillment(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The unique identifier of the fulfillment. Supported formats: - `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for
                 * Fulfillment in an Environment.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields get updated. If the mask is not present, all fields will be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Fulfillment): Request<GoogleCloudDialogflowV2beta1Fulfillment>;
            entityTypes: EntityTypesResource;
            environments: EnvironmentsResource;
            intents: IntentsResource;
            sessions: SessionsResource;
            versions: VersionsResource;
        }
        interface AnswerRecordsResource {
            /** Deprecated. Retrieves a specific answer record. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the answer record to retrieve. Format: `projects//locations//answerRecords/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1AnswerRecord>;
            /** Returns the list of all answer records in the specified project in reverse chronological order. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. Filters to restrict results to specific answer records. For more information about filtering, see [API Filtering](https://aip.dev/160). */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of records to return in a single page. The server may return fewer records than this. If unspecified, we use 10. The maximum is 100. */
                pageSize?: number;
                /** Optional. The ListAnswerRecordsResponse.next_page_token value returned from a previous list request used to continue listing on the next page. */
                pageToken?: string;
                /** Required. The project to list all answer records for in reverse chronological order. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListAnswerRecordsResponse>;
            /** Updates the specified answer record. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The unique identifier of this answer record. Required for AnswerRecords.UpdateAnswerRecord method. Format: `projects//locations//answerRecords/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1AnswerRecord;
            }): Request<GoogleCloudDialogflowV2beta1AnswerRecord>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The unique identifier of this answer record. Required for AnswerRecords.UpdateAnswerRecord method. Format: `projects//locations//answerRecords/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1AnswerRecord): Request<GoogleCloudDialogflowV2beta1AnswerRecord>;
        }
        interface ConversationProfilesResource {
            /**
             * Clears a suggestion feature from a conversation profile for the given participant role. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`:
             * ClearSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile
             */
            clearSuggestionFeatureConfig(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. The Conversation Profile to add or update the suggestion feature config. Format: `projects//locations//conversationProfiles/`. */
                conversationProfile: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest;
            }): Request<GoogleLongrunningOperation>;
            clearSuggestionFeatureConfig(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. The Conversation Profile to add or update the suggestion feature config. Format: `projects//locations//conversationProfiles/`. */
                conversationProfile: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest): Request<GoogleLongrunningOperation>;
            /**
             * Creates a conversation profile in the specified project. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them
             * via GetConversationProfile API.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project to create a conversation profile for. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1ConversationProfile;
            }): Request<GoogleCloudDialogflowV2beta1ConversationProfile>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project to create a conversation profile for. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1ConversationProfile): Request<GoogleCloudDialogflowV2beta1ConversationProfile>;
            /** Deletes the specified conversation profile. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the conversation profile to delete. Format: `projects//locations//conversationProfiles/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified conversation profile. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ConversationProfile>;
            /** Returns the list of all conversation profiles in the specified project. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The project to list all conversation profiles from. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListConversationProfilesResponse>;
            /**
             * Updates the specified conversation profile. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via
             * GetConversationProfile API.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields to update. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1ConversationProfile;
            }): Request<GoogleCloudDialogflowV2beta1ConversationProfile>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to control which fields to update. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1ConversationProfile): Request<GoogleCloudDialogflowV2beta1ConversationProfile>;
            /**
             * Adds or updates a suggestion feature in a conversation profile. If the conversation profile contains the type of suggestion feature for the participant role, it will update it.
             * Otherwise it will insert the suggestion feature. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
             * `Operation` type has the following method-specific fields: - `metadata`: SetSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile If a long running operation to
             * add or update suggestion feature config for the same conversation profile, participant role and suggestion feature type exists, please cancel the existing long running operation
             * before sending such request, otherwise the request will be rejected.
             */
            setSuggestionFeatureConfig(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. The Conversation Profile to add or update the suggestion feature config. Format: `projects//locations//conversationProfiles/`. */
                conversationProfile: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest;
            }): Request<GoogleLongrunningOperation>;
            setSuggestionFeatureConfig(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. The Conversation Profile to add or update the suggestion feature config. Format: `projects//locations//conversationProfiles/`. */
                conversationProfile: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest): Request<GoogleLongrunningOperation>;
        }
        interface MessagesResource {
            /** Batch ingests messages to conversation. Customers can use this RPC to ingest historical messages to conversation. */
            batchCreate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Resource identifier of the conversation to create message. Format: `projects//locations//conversations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest;
            }): Request<GoogleCloudDialogflowV2beta1BatchCreateMessagesResponse>;
            batchCreate(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Resource identifier of the conversation to create message. Format: `projects//locations//conversations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest): Request<GoogleCloudDialogflowV2beta1BatchCreateMessagesResponse>;
            /**
             * Lists messages that belong to a given conversation. `messages` are ordered by `create_time` in descending order. To fetch updates without duplication, send request with filter
             * `create_time_epoch_microseconds > [first item's create_time of previous request]` and empty page_token.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Optional. Filter on message fields. Currently predicates on `create_time` and `create_time_epoch_microseconds` are supported. `create_time` only support milliseconds accuracy.
                 * E.g., `create_time_epoch_microseconds > 1551790877964485` or `create_time > "2017-01-15T01:30:15.01Z"`. For more information about filtering, see [API
                 * Filtering](https://aip.dev/160).
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The name of the conversation to list messages for. Format: `projects//locations//conversations/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListMessagesResponse>;
        }
        interface SuggestionsResource {
            /**
             * Gets suggested articles for a participant based on specific historical messages. Note that ListSuggestions will only list the auto-generated suggestions, while CompileSuggestion
             * will try to compile suggestion based on the provided conversation context in the real time.
             */
            suggestArticles(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SuggestArticlesRequest;
            }): Request<GoogleCloudDialogflowV2beta1SuggestArticlesResponse>;
            suggestArticles(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SuggestArticlesRequest): Request<GoogleCloudDialogflowV2beta1SuggestArticlesResponse>;
            /** Gets suggested faq answers for a participant based on specific historical messages. */
            suggestFaqAnswers(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SuggestFaqAnswersRequest;
            }): Request<GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse>;
            suggestFaqAnswers(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SuggestFaqAnswersRequest): Request<GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse>;
            /** Gets smart replies for a participant based on specific historical messages. */
            suggestSmartReplies(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest;
            }): Request<GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse>;
            suggestSmartReplies(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest): Request<GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse>;
        }
        interface ParticipantsResource {
            /**
             * Adds a text (chat, for example), or audio (phone recording, for example) message from a participant into the conversation. Note: Always use agent versions for production traffic
             * sent to virtual agents. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
             */
            analyzeContent(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant this text comes from. Format: `projects//locations//conversations//participants/`. */
                participant: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1AnalyzeContentRequest;
            }): Request<GoogleCloudDialogflowV2beta1AnalyzeContentResponse>;
            analyzeContent(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The name of the participant this text comes from. Format: `projects//locations//conversations//participants/`. */
                participant: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1AnalyzeContentRequest): Request<GoogleCloudDialogflowV2beta1AnalyzeContentResponse>;
            /** Creates a new participant in a conversation. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Resource identifier of the conversation adding the participant. Format: `projects//locations//conversations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Participant;
            }): Request<GoogleCloudDialogflowV2beta1Participant>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Resource identifier of the conversation adding the participant. Format: `projects//locations//conversations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Participant): Request<GoogleCloudDialogflowV2beta1Participant>;
            /** Retrieves a conversation participant. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the participant. Format: `projects//locations//conversations//participants/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Participant>;
            /** Returns the list of all participants in the specified conversation. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The conversation to list all participants from. Format: `projects//locations//conversations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListParticipantsResponse>;
            /** Updates the specified participant. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to specify which fields to update. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Participant;
            }): Request<GoogleCloudDialogflowV2beta1Participant>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Required. The mask to specify which fields to update. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Participant): Request<GoogleCloudDialogflowV2beta1Participant>;
            suggestions: SuggestionsResource;
        }
        interface SuggestionsResource {
            /** Suggest summary for a conversation based on specific historical messages. The range of the messages to be used for summary can be specified in the request. */
            suggestConversationSummary(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. The conversation to fetch suggestion for. Format: `projects//locations//conversations/`. */
                conversation: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1SuggestConversationSummaryRequest;
            }): Request<GoogleCloudDialogflowV2beta1SuggestConversationSummaryResponse>;
            suggestConversationSummary(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Required. The conversation to fetch suggestion for. Format: `projects//locations//conversations/`. */
                conversation: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1SuggestConversationSummaryRequest): Request<GoogleCloudDialogflowV2beta1SuggestConversationSummaryResponse>;
        }
        interface ConversationsResource {
            /** Completes the specified conversation. Finished conversations are purged from the database after 30 days. */
            complete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource identifier of the conversation to close. Format: `projects//locations//conversations/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1CompleteConversationRequest;
            }): Request<GoogleCloudDialogflowV2beta1Conversation>;
            complete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. Resource identifier of the conversation to close. Format: `projects//locations//conversations/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1CompleteConversationRequest): Request<GoogleCloudDialogflowV2beta1Conversation>;
            /**
             * Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation Lifecycle: There are two stages during a conversation: Automated Agent Stage and Assist
             * Stage. For Automated Agent Stage, there will be a dialogflow agent responding to user queries. For Assist Stage, there's no dialogflow agent responding to user queries. But we will
             * provide suggestions which are generated from conversation. If Conversation.conversation_profile is configured for a dialogflow agent, conversation will start from `Automated Agent
             * Stage`, otherwise, it will start from `Assist Stage`. And during `Automated Agent Stage`, once an Intent with Intent.live_agent_handoff is triggered, conversation will transfer to
             * Assist Stage.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Optional. Identifier of the conversation. Generally it's auto generated by Google. Only set it if you cannot wait for the response to return a auto-generated one to you. The
                 * conversation ID must be compliant with the regression fomula "a-zA-Z*" with the characters length in range of [3,64]. If the field is provided, the caller is resposible for 1.
                 * the uniqueness of the ID, otherwise the request will be rejected. 2. the consistency for whether to use custom ID or not under a project to better ensure uniqueness.
                 */
                conversationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Resource identifier of the project creating the conversation. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Conversation;
            }): Request<GoogleCloudDialogflowV2beta1Conversation>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Optional. Identifier of the conversation. Generally it's auto generated by Google. Only set it if you cannot wait for the response to return a auto-generated one to you. The
                 * conversation ID must be compliant with the regression fomula "a-zA-Z*" with the characters length in range of [3,64]. If the field is provided, the caller is resposible for 1.
                 * the uniqueness of the ID, otherwise the request will be rejected. 2. the consistency for whether to use custom ID or not under a project to better ensure uniqueness.
                 */
                conversationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. Resource identifier of the project creating the conversation. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Conversation): Request<GoogleCloudDialogflowV2beta1Conversation>;
            /** Retrieves the specific conversation. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the conversation. Format: `projects//locations//conversations/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Conversation>;
            /** Returns the list of all conversations in the specified project. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * A filter expression that filters conversations listed in the response. In general, the expression must specify the field name, a comparison operator, and the value to use for
                 * filtering: - The value must be a string, a number, or a boolean. - The comparison operator must be either `=`,`!=`, `>`, or `<`. - To filter on multiple expressions, separate
                 * the expressions with `AND` or `OR` (omitting both implies `AND`). - For clarity, expressions can be enclosed in parentheses. Only `lifecycle_state` can be filtered on in this
                 * way. For example, the following expression only returns `COMPLETED` conversations: `lifecycle_state = "COMPLETED"` For more information about filtering, see [API
                 * Filtering](https://aip.dev/160).
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000. */
                pageSize?: number;
                /** Optional. The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The project from which to list all conversation. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListConversationsResponse>;
            messages: MessagesResource;
            participants: ParticipantsResource;
            suggestions: SuggestionsResource;
        }
        interface DocumentsResource {
            /**
             * Creates a new document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the
             * following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only
             * use `projects.knowledgeBases.documents`.
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is Google Cloud Storage URI. */
                importGcsCustomMetadata?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The knowledge base to create a document for. Format: `projects//locations//knowledgeBases/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Document;
            }): Request<GoogleLongrunningOperation>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is Google Cloud Storage URI. */
                importGcsCustomMetadata?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The knowledge base to create a document for. Format: `projects//locations//knowledgeBases/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Document): Request<GoogleLongrunningOperation>;
            /**
             * Deletes the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has
             * the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use
             * `projects.knowledgeBases.documents`.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the document to delete. Format: `projects//locations//knowledgeBases//documents/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningOperation>;
            /** Retrieves the specified document. Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the document to retrieve. Format `projects//locations//knowledgeBases//documents/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Document>;
            /**
             * Create documents by importing data from external sources. Dialogflow supports up to 350 documents in each request. If you try to import more, Dialogflow will return an error. This
             * method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields:
             * - `metadata`: KnowledgeOperationMetadata - `response`: ImportDocumentsResponse
             */
            import(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The knowledge base to import documents into. Format: `projects//locations//knowledgeBases/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1ImportDocumentsRequest;
            }): Request<GoogleLongrunningOperation>;
            import(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The knowledge base to import documents into. Format: `projects//locations//knowledgeBases/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1ImportDocumentsRequest): Request<GoogleLongrunningOperation>;
            /** Returns the list of all documents of the knowledge base. Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * The filter expression used to filter documents returned by the list method. The expression has the following syntax: [AND ] ... The following fields and operators are supported:
                 * * knowledge_types with has(:) operator * display_name with has(:) operator * state with equals(=) operator Examples: * "knowledge_types:FAQ" matches documents with FAQ knowledge
                 * type. * "display_name:customer" matches documents whose display name contains "customer". * "state=ACTIVE" matches documents with ACTIVE state. * "knowledge_types:FAQ AND
                 * state=ACTIVE" matches all active FAQ documents. For more information about filtering, see [API Filtering](https://aip.dev/160).
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of items to return in a single page. By default 10 and at most 100. */
                pageSize?: number;
                /** The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The knowledge base to list all documents for. Format: `projects//locations//knowledgeBases/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListDocumentsResponse>;
            /**
             * Updates the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has
             * the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document Note: The `projects.agent.knowledgeBases.documents` resource is deprecated;
             * only use `projects.knowledgeBases.documents`.
             */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Document;
            }): Request<GoogleLongrunningOperation>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Document): Request<GoogleLongrunningOperation>;
            /**
             * Reloads the specified document from its specified source, content_uri or content. The previously loaded content of the document will be deleted. Note: Even when the content of the
             * document has not changed, there still may be side effects because of internal implementation changes. Note: If the document source is Google Cloud Storage URI, its metadata will be
             * replaced with the custom metadata from Google Cloud Storage if the `import_gcs_custom_metadata` field is set to true in the request. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`:
             * KnowledgeOperationMetadata - `response`: Document Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`.
             */
            reload(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the document to reload. Format: `projects//locations//knowledgeBases//documents/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1ReloadDocumentRequest;
            }): Request<GoogleLongrunningOperation>;
            reload(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the document to reload. Format: `projects//locations//knowledgeBases//documents/` */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1ReloadDocumentRequest): Request<GoogleLongrunningOperation>;
        }
        interface KnowledgeBasesResource {
            /** Creates a knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project to create a knowledge base for. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1KnowledgeBase;
            }): Request<GoogleCloudDialogflowV2beta1KnowledgeBase>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project to create a knowledge base for. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1KnowledgeBase): Request<GoogleCloudDialogflowV2beta1KnowledgeBase>;
            /** Deletes the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base are also deleted. */
                force?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1KnowledgeBase>;
            /** Returns the list of all knowledge bases of the specified agent. Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * The filter expression used to filter knowledge bases returned by the list method. The expression has the following syntax: [AND ] ... The following fields and operators are
                 * supported: * display_name with has(:) operator * language_code with equals(=) operator Examples: * 'language_code=en-us' matches knowledge bases with en-us language code. *
                 * 'display_name:articles' matches knowledge bases whose display name contains "articles". * 'display_name:"Best Articles"' matches knowledge bases whose display name contains
                 * "Best Articles". * 'language_code=en-gb AND display_name=articles' matches all knowledge bases whose display name contains "articles" and whose language code is "en-gb". Note:
                 * An empty filter string (i.e. "") is a no-op and will result in no filtering. For more information about filtering, see [API Filtering](https://aip.dev/160).
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of items to return in a single page. By default 10 and at most 100. */
                pageSize?: number;
                /** The next_page_token value returned from a previous list request. */
                pageToken?: string;
                /** Required. The project to list of knowledge bases for. Format: `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1ListKnowledgeBasesResponse>;
            /** Updates the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The knowledge base resource name. The name must be empty when creating a knowledge base. Format: `projects//locations//knowledgeBases/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1KnowledgeBase;
            }): Request<GoogleCloudDialogflowV2beta1KnowledgeBase>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The knowledge base resource name. The name must be empty when creating a knowledge base. Format: `projects//locations//knowledgeBases/`. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1KnowledgeBase): Request<GoogleCloudDialogflowV2beta1KnowledgeBase>;
            documents: DocumentsResource;
        }
        interface OperationsResource {
            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support
             * this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the
             * operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a
             * google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
             */
            cancel(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningOperation>;
            /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** The standard list filter. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation's parent resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The standard list page size. */
                pageSize?: number;
                /** The standard list page token. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningListOperationsResponse>;
        }
        interface LocationsResource {
            /** Deletes the specified agent. */
            deleteAgent(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to delete is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets information about a location. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Resource name for the location. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudLocationLocation>;
            /** Retrieves the specified agent. */
            getAgent(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to fetch is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Agent>;
            /** Lists information about the supported locations for this service. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in
                 * [AIP-160](https://google.aip.dev/160).
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource that owns the locations collection, if applicable. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of results to return. If not set, the service selects a default. */
                pageSize?: number;
                /** A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudLocationListLocationsResponse>;
            /**
             * Creates/updates the specified agent. Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            setAgent(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project of this agent. Format: `projects/` or `projects//locations/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Agent;
            }): Request<GoogleCloudDialogflowV2beta1Agent>;
            setAgent(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project of this agent. Format: `projects/` or `projects//locations/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Agent): Request<GoogleCloudDialogflowV2beta1Agent>;
            agent: AgentResource;
            answerRecords: AnswerRecordsResource;
            conversationProfiles: ConversationProfilesResource;
            conversations: ConversationsResource;
            knowledgeBases: KnowledgeBasesResource;
            operations: OperationsResource;
        }
        interface OperationsResource {
            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support
             * this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the
             * operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a
             * google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
             */
            cancel(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningOperation>;
            /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** The standard list filter. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation's parent resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The standard list page size. */
                pageSize?: number;
                /** The standard list page token. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningListOperationsResponse>;
        }
        interface ProjectsResource {
            /** Deletes the specified agent. */
            deleteAgent(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to delete is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Retrieves the specified agent. */
            getAgent(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project that the agent to fetch is associated with. Format: `projects/` or `projects//locations/`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudDialogflowV2beta1Agent>;
            /**
             * Creates/updates the specified agent. Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             */
            setAgent(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project of this agent. Format: `projects/` or `projects//locations/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudDialogflowV2beta1Agent;
            }): Request<GoogleCloudDialogflowV2beta1Agent>;
            setAgent(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Required. The project of this agent. Format: `projects/` or `projects//locations/` */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. The mask to control which fields get updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudDialogflowV2beta1Agent): Request<GoogleCloudDialogflowV2beta1Agent>;
            agent: AgentResource;
            answerRecords: AnswerRecordsResource;
            conversationProfiles: ConversationProfilesResource;
            conversations: ConversationsResource;
            knowledgeBases: KnowledgeBasesResource;
            locations: LocationsResource;
            operations: OperationsResource;
        }

        const projects: ProjectsResource;
    }
}
