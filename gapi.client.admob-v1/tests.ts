/* This is stub file for gapi.client.admob-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20230718

gapi.load('client', async () => {
    /** now we can use gapi.client */

    await gapi.client.load('https://admob.googleapis.com/$discovery/rest?version=v1');
    /** now we can use gapi.client.admob */

    /** don't forget to authenticate your client before sending any request to resources: */
    /** declare client_id registered in Google Developers Console */
    const client_id = '<<PUT YOUR CLIENT ID HERE>>';
    const scope = [
        /** See your AdMob data */
        'https://www.googleapis.com/auth/admob.readonly',
        /** See your AdMob data */
        'https://www.googleapis.com/auth/admob.report',
    ];
    const immediate = false;
    gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
        if (authResult && !authResult.error) {
            /** handle successful authorization */
            run();
        } else {
            /** handle authorization error */
        }
    });

    async function run() {
        /** Gets information about the specified AdMob publisher account. */
        await gapi.client.admob.accounts.get({
            name: "Test string",
        });
        /** Lists the AdMob publisher account that was most recently signed in to from the AdMob UI. For more information, see https://support.google.com/admob/answer/10243672. */
        await gapi.client.admob.accounts.list({
            pageSize: 42,
            pageToken: "Test string",
        });
        /** List the ad units under the specified AdMob account. */
        await gapi.client.admob.accounts.adUnits.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** List the apps under the specified AdMob account. */
        await gapi.client.admob.accounts.apps.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Generates an AdMob mediation report based on the provided report specification. Returns result of a server-side streaming RPC. The result is returned in a sequence of responses. */
        await gapi.client.admob.accounts.mediationReport.generate({
            parent: "Test string",
        }, {
            reportSpec: {
                dateRange: {
                    endDate: {
                        day: 42,
                        month: 42,
                        year: 42,
                    },
                    startDate: {
                        day: 42,
                        month: 42,
                        year: 42,
                    },
                },
                dimensionFilters: [
                    {
                        dimension: "Test string",
                        matchesAny: {
                            values: [
                                "Test string"
                            ],
                        },
                    }
                ],
                dimensions: [
                    "Test string"
                ],
                localizationSettings: {
                    currencyCode: "Test string",
                    languageCode: "Test string",
                },
                maxReportRows: 42,
                metrics: [
                    "Test string"
                ],
                sortConditions: [
                    {
                        dimension: "Test string",
                        metric: "Test string",
                        order: "Test string",
                    }
                ],
                timeZone: "Test string",
            },
        });
        /** Generates an AdMob Network report based on the provided report specification. Returns result of a server-side streaming RPC. The result is returned in a sequence of responses. */
        await gapi.client.admob.accounts.networkReport.generate({
            parent: "Test string",
        }, {
            reportSpec: {
                dateRange: {
                    endDate: {
                        day: 42,
                        month: 42,
                        year: 42,
                    },
                    startDate: {
                        day: 42,
                        month: 42,
                        year: 42,
                    },
                },
                dimensionFilters: [
                    {
                        dimension: "Test string",
                        matchesAny: {
                            values: [
                                "Test string"
                            ],
                        },
                    }
                ],
                dimensions: [
                    "Test string"
                ],
                localizationSettings: {
                    currencyCode: "Test string",
                    languageCode: "Test string",
                },
                maxReportRows: 42,
                metrics: [
                    "Test string"
                ],
                sortConditions: [
                    {
                        dimension: "Test string",
                        metric: "Test string",
                        order: "Test string",
                    }
                ],
                timeZone: "Test string",
            },
        });
    }
});
