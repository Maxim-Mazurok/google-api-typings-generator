/* Type definitions for non-npm package Google Ads API v12 0.0 */
// Project: https://developers.google.com/google-ads/api/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://googleads.googleapis.com/$discovery/rest?version=v12
// Revision: 20230925

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Google Ads API v12 */
    function load(urlOrObject: "https://googleads.googleapis.com/$discovery/rest?version=v12"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "googleads", version: "v12"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "googleads", version: "v12", callback: () => any): void;

    namespace googleads {
        interface GoogleAdsGoogleadsV12Common__AdAssetPolicySummary {
            /** The overall approval status of this asset, which is calculated based on the status of its individual policy topic entries. */
            approvalStatus?:
                string;
            /** The list of policy findings for this asset. */
            policyTopicEntries?:
                GoogleAdsGoogleadsV12Common__PolicyTopicEntry[];
            /** Where in the review process this asset. */
            reviewStatus?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__AdDiscoveryCarouselCardAsset {
            /** The Asset resource name of this discovery carousel card. */
            asset?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__AddressInfo {
            /** Name of the city. */
            cityName?:
                string;
            /** Country code. */
            countryCode?:
                string;
            /** Postal code. */
            postalCode?:
                string;
            /** Province or state code. */
            provinceCode?:
                string;
            /** Province or state name. */
            provinceName?:
                string;
            /** Street address line 1. */
            streetAddress?:
                string;
            /** Street address line 2. This field is write-only. It is only used for calculating the longitude and latitude of an address when geo_point is empty. */
            streetAddress2?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__AdImageAsset {
            /** The Asset resource name of this image. */
            asset?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__AdMediaBundleAsset {
            /** The Asset resource name of this media bundle. */
            asset?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__AdScheduleInfo {
            /** Day of the week the schedule applies to. This field is required for CREATE operations and is prohibited on UPDATE operations. */
            dayOfWeek?:
                string;
            /**
             * Ending hour in 24 hour time; 24 signifies end of the day. This field must be between 0 and 24, inclusive. This field is required for CREATE operations and is prohibited on UPDATE
             * operations.
             */
            endHour?:
                number;
            /**
             * Minutes after the end hour at which this schedule ends. The schedule is exclusive of the end minute. This field is required for CREATE operations and is prohibited on UPDATE
             * operations.
             */
            endMinute?:
                string;
            /** Starting hour in 24 hour time. This field must be between 0 and 23, inclusive. This field is required for CREATE operations and is prohibited on UPDATE operations. */
            startHour?:
                number;
            /** Minutes after the start hour at which this schedule starts. This field is required for CREATE operations and is prohibited on UPDATE operations. */
            startMinute?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__AdTextAsset {
            /** The performance label of this text asset. */
            assetPerformanceLabel?:
                string;
            /**
             * The pinned field of the asset. This restricts the asset to only serve within this field. Multiple assets can be pinned to the same field. An asset that is unpinned or pinned to a
             * different field will not serve in a field where some other asset has been pinned.
             */
            pinnedField?:
                string;
            /** The policy summary of this text asset. */
            policySummaryInfo?:
                GoogleAdsGoogleadsV12Common__AdAssetPolicySummary;
            /** Asset text. */
            text?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__AdVideoAsset {
            /** The Asset resource name of this video. */
            asset?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__AffiliateLocationFeedItem {
            /** Line 1 of the business address. */
            addressLine1?:
                string;
            /** Line 2 of the business address. */
            addressLine2?:
                string;
            /** The name of the business. */
            businessName?:
                string;
            /** Id of the retail chain that is advertised as a seller of your product. */
            chainId?:
                string;
            /** Name of chain. */
            chainName?:
                string;
            /** City of the business address. */
            city?:
                string;
            /** Country code of the business address. */
            countryCode?:
                string;
            /** Phone number of the business. */
            phoneNumber?:
                string;
            /** Postal code of the business address. */
            postalCode?:
                string;
            /** Province of the business address. */
            province?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__AgeDimension {
            /** Contiguous age range to be included in the dimension. */
            ageRanges?:
                GoogleAdsGoogleadsV12Common__AgeSegment[];
            /** Include users whose age is not determined. */
            includeUndetermined?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Common__AgeRangeInfo {
            /** Type of the age range. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__AgeSegment {
            /** Maximum age to include. A maximum age need not be specified. If specified, max_age must be greater than min_age, and allowed values are 24, 34, 44, 54, and 64. */
            maxAge?:
                number;
            /** Minimum age to include. A minimum age must be specified and must be at least 18. Allowed values are 18, 25, 35, 45, 55, and 65. */
            minAge?:
                number;
        }
        interface GoogleAdsGoogleadsV12Common__AppAdInfo {
            /** List of text assets for descriptions. When the ad serves the descriptions will be selected from this list. */
            descriptions?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** List of text assets for headlines. When the ad serves the headlines will be selected from this list. */
            headlines?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** List of media bundle assets that may be used with the ad. */
            html5MediaBundles?:
                GoogleAdsGoogleadsV12Common__AdMediaBundleAsset[];
            /** List of image assets that may be displayed with the ad. */
            images?:
                GoogleAdsGoogleadsV12Common__AdImageAsset[];
            /** Mandatory ad text. */
            mandatoryAdText?:
                GoogleAdsGoogleadsV12Common__AdTextAsset;
            /** List of YouTube video assets that may be displayed with the ad. */
            youtubeVideos?:
                GoogleAdsGoogleadsV12Common__AdVideoAsset[];
        }
        interface GoogleAdsGoogleadsV12Common__AppEngagementAdInfo {
            /** List of text assets for descriptions. When the ad serves the descriptions will be selected from this list. */
            descriptions?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** List of text assets for headlines. When the ad serves the headlines will be selected from this list. */
            headlines?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** List of image assets that may be displayed with the ad. */
            images?:
                GoogleAdsGoogleadsV12Common__AdImageAsset[];
            /** List of video assets that may be displayed with the ad. */
            videos?:
                GoogleAdsGoogleadsV12Common__AdVideoAsset[];
        }
        interface GoogleAdsGoogleadsV12Common__AppFeedItem {
            /** The store-specific ID for the target application. This string must not be empty. */
            appId?:
                string;
            /** The application store that the target application belongs to. This field is required. */
            appStore?:
                string;
            /** A list of possible final mobile URLs after all cross domain redirects. */
            finalMobileUrls?:
                string[];
            /** A list of possible final URLs after all cross domain redirects. This list must not be empty. */
            finalUrls?:
                string[];
            /** URL template for appending params to landing page URLs served with parallel tracking. */
            finalUrlSuffix?:
                string;
            /** The visible text displayed when the link is rendered in an ad. This string must not be empty, and the length of this string should be between 1 and 25, inclusive. */
            linkText?:
                string;
            /** URL template for constructing a tracking URL. Default value is "{lpurl}". */
            trackingUrlTemplate?:
                string;
            /** A list of mappings to be used for substituting URL custom parameter tags in the tracking_url_template, final_urls, and/or final_mobile_urls. */
            urlCustomParameters?:
                GoogleAdsGoogleadsV12Common__CustomParameter[];
        }
        interface GoogleAdsGoogleadsV12Common__AppPaymentModelInfo {
            /** Type of the app payment model. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__AppPreRegistrationAdInfo {
            /** List of text assets for descriptions. When the ad serves the descriptions will be selected from this list. */
            descriptions?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** List of text assets for headlines. When the ad serves the headlines will be selected from this list. */
            headlines?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** List of image asset IDs whose images may be displayed with the ad. */
            images?:
                GoogleAdsGoogleadsV12Common__AdImageAsset[];
            /** List of YouTube video asset IDs whose videos may be displayed with the ad. */
            youtubeVideos?:
                GoogleAdsGoogleadsV12Common__AdVideoAsset[];
        }
        interface GoogleAdsGoogleadsV12Common__AssetInteractionTarget {
            /** The asset resource name. */
            asset?:
                string;
            /** Only used with CustomerAsset, CampaignAsset and AdGroupAsset metrics. Indicates whether the interaction metrics occurred on the asset itself or a different asset or ad unit. */
            interactionOnThisAsset?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Common__AssetUsage {
            /** Resource name of the asset. */
            asset?:
                string;
            /** The served field type of the asset. */
            servedAssetFieldType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__AudienceDimension {
            /** Dimension specifying users by their age. */
            age?:
                GoogleAdsGoogleadsV12Common__AgeDimension;
            /** Dimension specifying users by their membership in other audience segments. */
            audienceSegments?:
                GoogleAdsGoogleadsV12Common__AudienceSegmentDimension;
            /** Dimension specifying users by their gender. */
            gender?:
                GoogleAdsGoogleadsV12Common__GenderDimension;
            /** Dimension specifying users by their household income. */
            householdIncome?:
                GoogleAdsGoogleadsV12Common__HouseholdIncomeDimension;
            /** Dimension specifying users by their parental status. */
            parentalStatus?:
                GoogleAdsGoogleadsV12Common__ParentalStatusDimension;
        }
        interface GoogleAdsGoogleadsV12Common__AudienceExclusionDimension {
            /** Audience segment to be excluded. */
            exclusions?:
                GoogleAdsGoogleadsV12Common__ExclusionSegment[];
        }
        interface GoogleAdsGoogleadsV12Common__AudienceInfo {
            /** The Audience resource name. */
            audience?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__AudienceSegment {
            /** Custom audience segment. */
            customAudience?:
                GoogleAdsGoogleadsV12Common__CustomAudienceSegment;
            /** Detailed demographic segment. */
            detailedDemographic?:
                GoogleAdsGoogleadsV12Common__DetailedDemographicSegment;
            /** Live-event audience segment. */
            lifeEvent?:
                GoogleAdsGoogleadsV12Common__LifeEventSegment;
            /** Affinity or In-market segment. */
            userInterest?:
                GoogleAdsGoogleadsV12Common__UserInterestSegment;
            /** User list segment. */
            userList?:
                GoogleAdsGoogleadsV12Common__UserListSegment;
        }
        interface GoogleAdsGoogleadsV12Common__AudienceSegmentDimension {
            /** Included audience segments. Users are included if they belong to at least one segment. */
            segments?:
                GoogleAdsGoogleadsV12Common__AudienceSegment[];
        }
        interface GoogleAdsGoogleadsV12Common__BasicUserListInfo {
            /** Actions associated with this user list. */
            actions?:
                GoogleAdsGoogleadsV12Common__UserListActionInfo[];
        }
        interface GoogleAdsGoogleadsV12Common__BidModifierSimulationPoint {
            /** Projected number of biddable conversions. Only search advertising channel type supports this field. */
            biddableConversions?:
                number;
            /** Projected total value of biddable conversions. Only search advertising channel type supports this field. */
            biddableConversionsValue?:
                number;
            /** The simulated bid modifier upon which projected metrics are based. */
            bidModifier?:
                number;
            /** Projected number of clicks. */
            clicks?:
                string;
            /** Projected cost in micros. */
            costMicros?:
                string;
            /** Projected number of impressions. */
            impressions?:
                string;
            /** Projected number of biddable conversions for the parent resource. Only search advertising channel type supports this field. */
            parentBiddableConversions?:
                number;
            /** Projected total value of biddable conversions for the parent resource. Only search advertising channel type supports this field. */
            parentBiddableConversionsValue?:
                number;
            /** Projected number of clicks for the parent resource. */
            parentClicks?:
                string;
            /** Projected cost in micros for the parent resource. */
            parentCostMicros?:
                string;
            /** Projected number of impressions for the parent resource. */
            parentImpressions?:
                string;
            /** Projected minimum daily budget that must be available to the parent resource to realize this simulation. */
            parentRequiredBudgetMicros?:
                string;
            /** Projected number of top slot impressions for the parent resource. Only search advertising channel type supports this field. */
            parentTopSlotImpressions?:
                string;
            /** Projected number of top slot impressions. Only search advertising channel type supports this field. */
            topSlotImpressions?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__BidModifierSimulationPointList {
            /** Projected metrics for a series of bid modifier amounts. */
            points?:
                GoogleAdsGoogleadsV12Common__BidModifierSimulationPoint[];
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Common__BookOnGoogleAsset {
        }
        interface GoogleAdsGoogleadsV12Common__BudgetCampaignAssociationStatus {
            /** The campaign resource name. */
            campaign?:
                string;
            /** Budget campaign association status. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__BudgetSimulationPoint {
            /** Projected number of biddable conversions. */
            biddableConversions?:
                number;
            /** Projected total value of biddable conversions. */
            biddableConversionsValue?:
                number;
            /** The simulated budget upon which projected metrics are based. */
            budgetAmountMicros?:
                string;
            /** Projected number of clicks. */
            clicks?:
                string;
            /** Projected cost in micros. */
            costMicros?:
                string;
            /** Projected number of impressions. */
            impressions?:
                string;
            /**
             * Projected required daily cpc bid ceiling that the advertiser must set to realize this simulation, in micros of the advertiser currency. Only campaigns with the Target Spend bidding
             * strategy support this field.
             */
            requiredCpcBidCeilingMicros?:
                string;
            /** Projected number of top slot impressions. Only search advertising channel type supports this field. */
            topSlotImpressions?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__BudgetSimulationPointList {
            /** Projected metrics for a series of budget amounts. */
            points?:
                GoogleAdsGoogleadsV12Common__BudgetSimulationPoint[];
        }
        interface GoogleAdsGoogleadsV12Common__BusinessNameFilter {
            /** Business name string to use for filtering. */
            businessName?:
                string;
            /** The type of string matching to use when filtering with business_name. */
            filterType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__BusinessProfileBusinessNameFilter {
            /** Business name string to use for filtering. */
            businessName?:
                string;
            /** The type of string matching to use when filtering with business_name. */
            filterType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__BusinessProfileLocation {
            /** Advertiser specified label for the location on the Business Profile account. This is synced from the Business Profile account. */
            labels?:
                string[];
            /** Listing ID of this Business Profile location. This is synced from the linked Business Profile account. */
            listingId?:
                string;
            /** Business Profile store code of this location. This is synced from the Business Profile account. */
            storeCode?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__BusinessProfileLocationGroup {
            /** Filter for dynamic Business Profile location sets. */
            dynamicBusinessProfileLocationGroupFilter?:
                GoogleAdsGoogleadsV12Common__DynamicBusinessProfileLocationGroupFilter;
        }
        interface GoogleAdsGoogleadsV12Common__BusinessProfileLocationSet {
            /**
             * Immutable. The account ID of the managed business whose locations are to be used. If this field is not set, then all businesses accessible by the user (specified by the
             * emailAddress) are used.
             */
            businessAccountId?:
                string;
            /** Used to filter Google Business Profile listings by business name. If businessNameFilter is set, only listings with a matching business name are candidates to be sync'd into Assets. */
            businessNameFilter?:
                string;
            /** Required. Immutable. Email address of a Google Business Profile account or email address of a manager of the Google Business Profile account. */
            emailAddress?:
                string;
            /** Required. Immutable. The HTTP authorization token used to obtain authorization. */
            httpAuthorizationToken?:
                string;
            /**
             * Used to filter Google Business Profile listings by labels. If entries exist in labelFilters, only listings that have any of the labels set are candidates to be synchronized into
             * Assets. If no entries exist in labelFilters, then all listings are candidates for syncing. Label filters are OR'ed together.
             */
            labelFilters?:
                string[];
            /**
             * Used to filter Google Business Profile listings by listing id. If entries exist in listingIdFilters, only listings specified by the filters are candidates to be synchronized into
             * Assets. If no entries exist in listingIdFilters, then all listings are candidates for syncing. Listing ID filters are OR'ed together.
             */
            listingIdFilters?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__CallAdInfo {
            /** The business name in the ad. */
            businessName?:
                string;
            /** Whether to enable call tracking for the creative. Enabling call tracking also enables call conversions. */
            callTracked?:
                boolean;
            /**
             * The conversion action to attribute a call conversion to. If not set a default conversion action is used. This field only has effect if `call_tracked` is set to `true`. Otherwise
             * this field is ignored.
             */
            conversionAction?:
                string;
            /** The call conversion behavior of this call ad. It can use its own call conversion setting, inherit the account level setting, or be disabled. */
            conversionReportingState?:
                string;
            /** The country code in the ad. */
            countryCode?:
                string;
            /** The first line of the ad's description. */
            description1?:
                string;
            /** The second line of the ad's description. */
            description2?:
                string;
            /**
             * Whether to disable call conversion for the creative. If set to `true`, disables call conversions even when `call_tracked` is `true`. If `call_tracked` is `false`, this field is
             * ignored.
             */
            disableCallConversion?:
                boolean;
            /** First headline in the ad. */
            headline1?:
                string;
            /** Second headline in the ad. */
            headline2?:
                string;
            /** First part of text that can be appended to the URL in the ad. Optional. */
            path1?:
                string;
            /** Second part of text that can be appended to the URL in the ad. This field can only be set when `path1` is also set. Optional. */
            path2?:
                string;
            /** The phone number in the ad. */
            phoneNumber?:
                string;
            /** The URL to be used for phone number verification. */
            phoneNumberVerificationUrl?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CallAsset {
            /** List of non-overlapping schedules specifying all time intervals for which the asset may serve. There can be a maximum of 6 schedules per day, 42 in total. */
            adScheduleTargets?:
                GoogleAdsGoogleadsV12Common__AdScheduleInfo[];
            /**
             * The conversion action to attribute a call conversion to. If not set, the default conversion action is used. This field only has effect if call_conversion_reporting_state is set to
             * USE_RESOURCE_LEVEL_CALL_CONVERSION_ACTION.
             */
            callConversionAction?:
                string;
            /** Indicates whether this CallAsset should use its own call conversion setting, follow the account level setting, or disable call conversion. */
            callConversionReportingState?:
                string;
            /** Required. Two-letter country code of the phone number. Examples: 'US', 'us'. */
            countryCode?:
                string;
            /** Required. The advertiser's raw phone number. Examples: '1234567890', '(123)456-7890' */
            phoneNumber?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CallFeedItem {
            /**
             * The conversion action to attribute a call conversion to. If not set a default conversion action is used. This field only has effect if call_tracking_enabled is set to true.
             * Otherwise this field is ignored.
             */
            callConversionAction?:
                string;
            /** Enum value that indicates whether this call extension uses its own call conversion setting (or just have call conversion disabled), or following the account level setting. */
            callConversionReportingState?:
                string;
            /** If true, disable call conversion tracking. call_conversion_action should not be set if this is true. Optional. */
            callConversionTrackingDisabled?:
                boolean;
            /** Indicates whether call tracking is enabled. By default, call tracking is not enabled. */
            callTrackingEnabled?:
                boolean;
            /** Uppercase two-letter country code of the advertiser's phone number. This string must not be empty. */
            countryCode?:
                string;
            /** The advertiser's phone number to append to the ad. This string must not be empty. */
            phoneNumber?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CalloutAsset {
            /** List of non-overlapping schedules specifying all time intervals for which the asset may serve. There can be a maximum of 6 schedules per day, 42 in total. */
            adScheduleTargets?:
                GoogleAdsGoogleadsV12Common__AdScheduleInfo[];
            /** Required. The callout text. The length of this string should be between 1 and 25, inclusive. */
            calloutText?:
                string;
            /** Last date of when this asset is effective and still serving, in yyyy-MM-dd format. */
            endDate?:
                string;
            /** Start date of when this asset is effective and can begin serving, in yyyy-MM-dd format. */
            startDate?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CalloutFeedItem {
            /** The callout text. The length of this string should be between 1 and 25, inclusive. */
            calloutText?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CallToActionAsset {
            /** Call to action. */
            callToAction?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CarrierInfo {
            /** The Carrier constant resource name. */
            carrierConstant?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ChainFilter {
            /** Required. Used to filter chain locations by chain id. Only chain locations that belong to the specified chain will be in the asset set. */
            chainId?:
                string;
            /**
             * Used to filter chain locations by location attributes. Only chain locations that belong to all of the specified attribute(s) will be in the asset set. If this field is empty, it
             * means no filtering on this field.
             */
            locationAttributes?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__ChainLocationGroup {
            /** Used to filter chain locations by chain ids. Only Locations that belong to the specified chain(s) will be in the asset set. */
            dynamicChainLocationGroupFilters?:
                GoogleAdsGoogleadsV12Common__ChainFilter[];
        }
        interface GoogleAdsGoogleadsV12Common__ChainSet {
            /** Required. A list of chain level filters, all filters are OR'ed together. */
            chains?:
                GoogleAdsGoogleadsV12Common__ChainFilter[];
            /** Required. Immutable. Relationship type the specified chains have with this advertiser. */
            relationshipType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ClickLocation {
            /** The city location criterion associated with the impression. */
            city?:
                string;
            /** The country location criterion associated with the impression. */
            country?:
                string;
            /** The metro location criterion associated with the impression. */
            metro?:
                string;
            /** The most specific location criterion associated with the impression. */
            mostSpecific?:
                string;
            /** The region location criterion associated with the impression. */
            region?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CombinedAudienceInfo {
            /** The CombinedAudience resource name. */
            combinedAudience?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CombinedRuleUserListInfo {
            /** Left operand of the combined rule. This field is required and must be populated when creating new combined rule based user list. */
            leftOperand?:
                GoogleAdsGoogleadsV12Common__UserListRuleInfo;
            /** Right operand of the combined rule. This field is required and must be populated when creating new combined rule based user list. */
            rightOperand?:
                GoogleAdsGoogleadsV12Common__UserListRuleInfo;
            /** Operator to connect the two operands. Required for creating a combined rule user list. */
            ruleOperator?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__Commission {
            /**
             * Commission rate defines the portion of the conversion value that the advertiser will be billed. A commission rate of x should be passed into this field as (x * 1,000,000). For
             * example, 106,000 represents a commission rate of 0.106 (10.6%).
             */
            commissionRateMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ConceptGroup {
            /** The concept group name. */
            name?:
                string;
            /** The concept group type. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ContentLabelInfo {
            /** Content label type, required for CREATE operations. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CpcBidSimulationPoint {
            /** Projected number of biddable conversions. */
            biddableConversions?:
                number;
            /** Projected total value of biddable conversions. */
            biddableConversionsValue?:
                number;
            /** Projected number of clicks. */
            clicks?:
                string;
            /** Projected cost in micros. */
            costMicros?:
                string;
            /** The simulated CPC bid upon which projected metrics are based. */
            cpcBidMicros?:
                string;
            /** The simulated scaling modifier upon which projected metrics are based. All CPC bids relevant to the simulated entity are scaled by this modifier. */
            cpcBidScalingModifier?:
                number;
            /** Projected number of impressions. */
            impressions?:
                string;
            /** Projected required daily budget that the advertiser must set in order to receive the estimated traffic, in micros of advertiser currency. */
            requiredBudgetAmountMicros?:
                string;
            /** Projected number of top slot impressions. Only search advertising channel type supports this field. */
            topSlotImpressions?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CpcBidSimulationPointList {
            /** Projected metrics for a series of CPC bid amounts. */
            points?:
                GoogleAdsGoogleadsV12Common__CpcBidSimulationPoint[];
        }
        interface GoogleAdsGoogleadsV12Common__CpvBidSimulationPoint {
            /** Projected cost in micros. */
            costMicros?:
                string;
            /** The simulated CPV bid upon which projected metrics are based. */
            cpvBidMicros?:
                string;
            /** Projected number of impressions. */
            impressions?:
                string;
            /** Projected number of views. */
            views?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CpvBidSimulationPointList {
            /** Projected metrics for a series of CPV bid amounts. */
            points?:
                GoogleAdsGoogleadsV12Common__CpvBidSimulationPoint[];
        }
        interface GoogleAdsGoogleadsV12Common__CriterionCategoryAvailability {
            /** Channel types and subtypes that are available to the category. */
            channel?:
                GoogleAdsGoogleadsV12Common__CriterionCategoryChannelAvailability;
            /** Locales that are available to the category for the channel. */
            locale?:
                GoogleAdsGoogleadsV12Common__CriterionCategoryLocaleAvailability[];
        }
        interface GoogleAdsGoogleadsV12Common__CriterionCategoryChannelAvailability {
            /** Channel subtypes under the channel type the category is available to. */
            advertisingChannelSubType?:
                string[];
            /** Channel type the category is available to. */
            advertisingChannelType?:
                string;
            /**
             * Format of the channel availability. Can be ALL_CHANNELS (the rest of the fields will not be set), CHANNEL_TYPE (only advertising_channel_type type will be set, the category is
             * available to all sub types under it) or CHANNEL_TYPE_AND_SUBTYPES (advertising_channel_type, advertising_channel_sub_type, and include_default_channel_sub_type will all be set).
             */
            availabilityMode?:
                string;
            /**
             * Whether default channel sub type is included. For example, advertising_channel_type being DISPLAY and include_default_channel_sub_type being false means that the default display
             * campaign where channel sub type is not set is not included in this availability configuration.
             */
            includeDefaultChannelSubType?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Common__CriterionCategoryLocaleAvailability {
            /**
             * Format of the locale availability. Can be LAUNCHED_TO_ALL (both country and language will be empty), COUNTRY (only country will be set), LANGUAGE (only language wil be set),
             * COUNTRY_AND_LANGUAGE (both country and language will be set).
             */
            availabilityMode?:
                string;
            /** The ISO-3166-1 alpha-2 country code associated with the category. */
            countryCode?:
                string;
            /** ISO 639-1 code of the language associated with the category. */
            languageCode?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CrmBasedUserListInfo {
            /**
             * A string that uniquely identifies a mobile application from which the data was collected. For iOS, the ID string is the 9 digit string that appears at the end of an App Store URL
             * (for example, "476943146" for "Flood-It! 2" whose App Store link is http://itunes.apple.com/us/app/flood-it!-2/id476943146). For Android, the ID string is the application's package
             * name (for example, "com.labpixies.colordrips" for "Color Drips" given Google Play link https://play.google.com/store/apps/details?id=com.labpixies.colordrips). Required when
             * creating CrmBasedUserList for uploading mobile advertising IDs.
             */
            appId?:
                string;
            /** Data source of the list. Default value is FIRST_PARTY. Only customers on the allow-list can create third-party sourced CRM lists. */
            dataSourceType?:
                string;
            /** Matching key type of the list. Mixed data types are not allowed on the same list. This field is required for an ADD operation. */
            uploadKeyType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CustomAffinityInfo {
            /** The CustomInterest resource name. */
            customAffinity?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CustomAudienceInfo {
            /** The CustomAudience resource name. */
            customAudience?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CustomAudienceSegment {
            /** The custom audience resource. */
            customAudience?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CustomerMatchUserListMetadata {
            /** The resource name of remarketing list to update data. Required for job of CUSTOMER_MATCH_USER_LIST type. */
            userList?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CustomIntentInfo {
            /** The CustomInterest resource name. */
            customIntent?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CustomizerValue {
            /** Required. Value to insert in creative text. Customizer values of all types are stored as string to make formatting unambiguous. */
            stringValue?:
                string;
            /** Required. The data type for the customizer value. It must match the attribute type. The string_value content must match the constraints associated with the type. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__CustomParameter {
            /** The key matching the parameter tag name. */
            key?:
                string;
            /** The value to be substituted. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__DateRange {
            /** The end date, in yyyy-mm-dd format. This date is inclusive. */
            endDate?:
                string;
            /** The start date, in yyyy-mm-dd format. This date is inclusive. */
            startDate?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__DetailedDemographicSegment {
            /** The detailed demographic resource. */
            detailedDemographic?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__DeviceInfo {
            /** Type of the device. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__DiscoveryCarouselAdInfo {
            /** Required. The Advertiser/brand name. */
            businessName?:
                string;
            /** Call to action text. */
            callToActionText?:
                string;
            /** Required. Carousel cards that will display with the ad. Min 2 max 10. */
            carouselCards?:
                GoogleAdsGoogleadsV12Common__AdDiscoveryCarouselCardAsset[];
            /** Required. The descriptive text of the ad. */
            description?:
                GoogleAdsGoogleadsV12Common__AdTextAsset;
            /** Required. Headline of the ad. */
            headline?:
                GoogleAdsGoogleadsV12Common__AdTextAsset;
            /** Required. Logo image to be used in the ad. The minimum size is 128x128 and the aspect ratio must be 1:1(+-1%). */
            logoImage?:
                GoogleAdsGoogleadsV12Common__AdImageAsset;
        }
        interface GoogleAdsGoogleadsV12Common__DiscoveryCarouselCardAsset {
            /** Call to action text. */
            callToActionText?:
                string;
            /** Required. Headline of the carousel card. */
            headline?:
                string;
            /** Asset resource name of the associated 1.91:1 marketing image. This and/or square marketing image asset is required. */
            marketingImageAsset?:
                string;
            /** Asset resource name of the associated 4:5 portrait marketing image. */
            portraitMarketingImageAsset?:
                string;
            /** Asset resource name of the associated square marketing image. This and/or a marketing image asset is required. */
            squareMarketingImageAsset?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__DiscoveryMultiAssetAdInfo {
            /** The Advertiser/brand name. Maximum display width is 25. Required. */
            businessName?:
                string;
            /** Call to action text. */
            callToActionText?:
                string;
            /** The descriptive text of the ad. Maximum display width is 90. At least 1 and max 5 descriptions can be specified. */
            descriptions?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** Headline text asset of the ad. Maximum display width is 30. At least 1 and max 5 headlines can be specified. */
            headlines?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** Boolean option that indicates if this ad must be served with lead form. */
            leadFormOnly?:
                boolean;
            /**
             * Logo image assets to be used in the ad. Valid image types are GIF, JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be 1:1(+-1%). At least 1 and max 5 logo
             * images can be specified.
             */
            logoImages?:
                GoogleAdsGoogleadsV12Common__AdImageAsset[];
            /**
             * Marketing image assets to be used in the ad. Valid image types are GIF, JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must be 1.91:1 (+-1%). Required if
             * square_marketing_images is not present. Combined with `square_marketing_images` and `portrait_marketing_images` the maximum is 20.
             */
            marketingImages?:
                GoogleAdsGoogleadsV12Common__AdImageAsset[];
            /**
             * Portrait marketing image assets to be used in the ad. Valid image types are GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must be 4:5 (+-1%). Combined with
             * `marketing_images` and `square_marketing_images` the maximum is 20.
             */
            portraitMarketingImages?:
                GoogleAdsGoogleadsV12Common__AdImageAsset[];
            /**
             * Square marketing image assets to be used in the ad. Valid image types are GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must be 1:1 (+-1%). Required if
             * marketing_images is not present. Combined with `marketing_images` and `portrait_marketing_images` the maximum is 20.
             */
            squareMarketingImages?:
                GoogleAdsGoogleadsV12Common__AdImageAsset[];
        }
        interface GoogleAdsGoogleadsV12Common__DisplayUploadAdInfo {
            /** The product type of this ad. See comments on the enum for details. */
            displayUploadProductType?:
                string;
            /**
             * A media bundle asset to be used in the ad. For information about the media bundle for HTML5_UPLOAD_AD, see https://support.google.com/google-ads/answer/1722096 Media bundles that
             * are part of dynamic product types use a special format that needs to be created through the Google Web Designer. See https://support.google.com/webdesigner/answer/7543898 for more
             * information.
             */
            mediaBundle?:
                GoogleAdsGoogleadsV12Common__AdMediaBundleAsset;
        }
        interface GoogleAdsGoogleadsV12Common__DynamicAffiliateLocationSetFilter {
            /** Used to filter affiliate locations by chain ids. Only affiliate locations that belong to the specified chain(s) will be added to the FeedItemSet. */
            chainIds?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__DynamicBusinessProfileLocationGroupFilter {
            /** Used to filter Business Profile locations by business name. */
            businessNameFilter?:
                GoogleAdsGoogleadsV12Common__BusinessProfileBusinessNameFilter;
            /** Used to filter Business Profile locations by label. Only locations that have any of the listed labels will be in the asset set. Label filters are OR'ed together. */
            labelFilters?:
                string[];
            /** Used to filter Business Profile locations by listing ids. */
            listingIdFilters?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__DynamicCustomAsset {
            /** Android deep link, for example, android-app://com.example.android/http/example.com/gizmos?1234. */
            androidAppLink?:
                string;
            /** Contextual keywords, for example, Sedans, 4 door sedans. */
            contextualKeywords?:
                string[];
            /** Formatted price which can be any characters. If set, this attribute will be used instead of 'price', for example, Starting at $20,000.00. */
            formattedPrice?:
                string;
            /** Formatted sale price which can be any characters. If set, this attribute will be used instead of 'sale price', for example, On sale for $15,000.00. */
            formattedSalePrice?:
                string;
            /** Required. ID which can be any sequence of letters and digits, and must be unique and match the values of remarketing tag, for example, sedan. Required. */
            id?:
                string;
            /** ID2 which can be any sequence of letters and digits, for example, red. ID sequence (ID + ID2) must be unique. */
            id2?:
                string;
            /** Image URL, for example, http://www.example.com/image.png. The image will not be uploaded as image asset. */
            imageUrl?:
                string;
            /** iOS deep link, for example, exampleApp://content/page. */
            iosAppLink?:
                string;
            /**
             * iOS app store ID. This is used to check if the user has the app installed on their device before deep linking. If this field is set, then the ios_app_link field must also be
             * present.
             */
            iosAppStoreId?:
                string;
            /**
             * Item address which can be specified in one of the following formats. (1) City, state, code, country, for example, Mountain View, CA, USA. (2) Full address, for example, 123
             * Boulevard St, Mountain View, CA 94043. (3) Latitude-longitude in the DDD format, for example, 41.40338, 2.17403
             */
            itemAddress?:
                string;
            /** Item category, for example, Sedans. */
            itemCategory?:
                string;
            /** Item description, for example, Best selling mid-size car. */
            itemDescription?:
                string;
            /** Item subtitle, for example, At your Mountain View dealership. */
            itemSubtitle?:
                string;
            /** Required. Item title, for example, Mid-size sedan. Required. */
            itemTitle?:
                string;
            /** Price which can be number followed by the alphabetic currency code, ISO 4217 standard. Use '.' as the decimal mark, for example, 20,000.00 USD. */
            price?:
                string;
            /**
             * Sale price which can be number followed by the alphabetic currency code, ISO 4217 standard. Use '.' as the decimal mark, for example, 15,000.00 USD. Must be less than the 'price'
             * field.
             */
            salePrice?:
                string;
            /** Similar IDs. */
            similarIds?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__DynamicEducationAsset {
            /**
             * School address which can be specified in one of the following formats. (1) City, state, code, country, for example, Mountain View, CA, USA. (2) Full address, for example, 123
             * Boulevard St, Mountain View, CA 94043. (3) Latitude-longitude in the DDD format, for example, 41.40338, 2.17403
             */
            address?:
                string;
            /** Android deep link, for example, android-app://com.example.android/http/example.com/gizmos?1234. */
            androidAppLink?:
                string;
            /** Contextual keywords, for example, Nursing certification, Health, Mountain View. */
            contextualKeywords?:
                string[];
            /** Image url, for example, http://www.example.com/image.png. The image will not be uploaded as image asset. */
            imageUrl?:
                string;
            /** iOS deep link, for example, exampleApp://content/page. */
            iosAppLink?:
                string;
            /**
             * iOS app store ID. This is used to check if the user has the app installed on their device before deep linking. If this field is set, then the ios_app_link field must also be
             * present.
             */
            iosAppStoreId?:
                string;
            /** Location ID which can be any sequence of letters and digits and must be unique. */
            locationId?:
                string;
            /** Program description, for example, Nursing Certification. */
            programDescription?:
                string;
            /** Required. Program ID which can be any sequence of letters and digits, and must be unique and match the values of remarketing tag. Required. */
            programId?:
                string;
            /** Required. Program name, for example, Nursing. Required. */
            programName?:
                string;
            /** School name, for example, Mountain View School of Nursing. */
            schoolName?:
                string;
            /** Similar program IDs. */
            similarProgramIds?:
                string[];
            /** Subject of study, for example, Health. */
            subject?:
                string;
            /** Thumbnail image url, for example, http://www.example.com/thumbnail.png. The thumbnail image will not be uploaded as image asset. */
            thumbnailImageUrl?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__DynamicFlightsAsset {
            /** Android deep link, for example, android-app://com.example.android/http/example.com/gizmos?1234. */
            androidAppLink?:
                string;
            /**
             * A custom field which can be multiple key to values mapping separated by delimiters (",", "|" and ":"), in the forms of ": , , ... , | : , ... , | ... | : , ... ," for example, wifi:
             * most | aircraft: 320, 77W | flights: 42 | legroom: 32".
             */
            customMapping?:
                string;
            /** Required. Destination ID which can be any sequence of letters and digits, and must be unique and match the values of remarketing tag. Required. */
            destinationId?:
                string;
            /** Destination name, for example, Paris. */
            destinationName?:
                string;
            /** Required. Flight description, for example, Book your ticket. Required. */
            flightDescription?:
                string;
            /** Flight price which can be number followed by the alphabetic currency code, ISO 4217 standard. Use '.' as the decimal mark, for example, 100.00 USD. */
            flightPrice?:
                string;
            /**
             * Flight sale price which can be number followed by the alphabetic currency code, ISO 4217 standard. Use '.' as the decimal mark, for example, 80.00 USD. Must be less than the
             * 'flight_price' field.
             */
            flightSalePrice?:
                string;
            /** Formatted price which can be any characters. If set, this attribute will be used instead of 'price', for example, Starting at $100.00. */
            formattedPrice?:
                string;
            /** Formatted sale price which can be any characters. If set, this attribute will be used instead of 'sale price', for example, On sale for $80.00. */
            formattedSalePrice?:
                string;
            /** Image URL, for example, http://www.example.com/image.png. The image will not be uploaded as image asset. */
            imageUrl?:
                string;
            /** iOS deep link, for example, exampleApp://content/page. */
            iosAppLink?:
                string;
            /**
             * iOS app store ID. This is used to check if the user has the app installed on their device before deep linking. If this field is set, then the ios_app_link field must also be
             * present.
             */
            iosAppStoreId?:
                string;
            /** Origin ID which can be any sequence of letters and digits. The ID sequence (destination ID + origin ID) must be unique. */
            originId?:
                string;
            /** Origin name, for example, London. */
            originName?:
                string;
            /** Similar destination IDs, for example, PAR,LON. */
            similarDestinationIds?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__DynamicHotelsAndRentalsAsset {
            /**
             * Address which can be specified in one of the following formats. (1) City, state, code, country, for example, Mountain View, CA, USA. (2) Full address, for example, 123 Boulevard St,
             * Mountain View, CA 94043. (3) Latitude-longitude in the DDD format, for example, 41.40338, 2.17403
             */
            address?:
                string;
            /** Android deep link, for example, android-app://com.example.android/http/example.com/gizmos?1234. */
            androidAppLink?:
                string;
            /** Category, for example, Hotel suite. */
            category?:
                string;
            /** Contextual keywords, for example, Mountain View "Hotels", South Bay hotels. */
            contextualKeywords?:
                string[];
            /** Description, for example, Close to SJC Airport. */
            description?:
                string;
            /** Destination name, for example, Downtown Mountain View. */
            destinationName?:
                string;
            /** Formatted price which can be any characters. If set, this attribute will be used instead of 'price', for example, Starting at $100.00. */
            formattedPrice?:
                string;
            /** Formatted sale price which can be any characters. If set, this attribute will be used instead of 'sale price', for example, On sale for $80.00. */
            formattedSalePrice?:
                string;
            /** Image URL, for example, http://www.example.com/image.png. The image will not be uploaded as image asset. */
            imageUrl?:
                string;
            /** iOS deep link, for example, exampleApp://content/page. */
            iosAppLink?:
                string;
            /**
             * iOS app store ID. This is used to check if the user has the app installed on their device before deep linking. If this field is set, then the ios_app_link field must also be
             * present.
             */
            iosAppStoreId?:
                string;
            /** Price which can be number followed by the alphabetic currency code, ISO 4217 standard. Use '.' as the decimal mark, for example, 100.00 USD. */
            price?:
                string;
            /** Required. Property ID which can be any sequence of letters and digits, and must be unique and match the values of remarketing tag. Required. */
            propertyId?:
                string;
            /** Required. Property name, for example, Mountain View Hotel. Required. */
            propertyName?:
                string;
            /** ISO 4217 standard. Use '.' as the decimal mark, for example, 80.00 USD. Must be less than the 'price' field. */
            salePrice?:
                string;
            /** Similar property IDs. */
            similarPropertyIds?:
                string[];
            /** Star rating. Must be a number between 1 to 5, inclusive. */
            starRating?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__DynamicJobsAsset {
            /**
             * Address which can be specified in one of the following formats. (1) City, state, code, country, for example, Mountain View, CA, USA. (2) Full address, for example, 123 Boulevard St,
             * Mountain View, CA 94043. (3) Latitude-longitude in the DDD format, for example, 41.40338, 2.17403.
             */
            address?:
                string;
            /** Android deep link, for example, android-app://com.example.android/http/example.com/gizmos?1234. */
            androidAppLink?:
                string;
            /** Contextual keywords, for example, Software engineering job. */
            contextualKeywords?:
                string[];
            /** Description, for example, Apply your technical skills. */
            description?:
                string;
            /** Image URL, for example, http://www.example.com/image.png. The image will not be uploaded as image asset. */
            imageUrl?:
                string;
            /** iOS deep link, for example, exampleApp://content/page. */
            iosAppLink?:
                string;
            /**
             * iOS app store ID. This is used to check if the user has the app installed on their device before deep linking. If this field is set, then the ios_app_link field must also be
             * present.
             */
            iosAppStoreId?:
                string;
            /** Job category, for example, Technical. */
            jobCategory?:
                string;
            /** Required. Job ID which can be any sequence of letters and digits, and must be unique and match the values of remarketing tag. Required. */
            jobId?:
                string;
            /** Job subtitle, for example, Level II. */
            jobSubtitle?:
                string;
            /** Required. Job title, for example, Software engineer. Required. */
            jobTitle?:
                string;
            /** Location ID which can be any sequence of letters and digits. The ID sequence (job ID + location ID) must be unique. */
            locationId?:
                string;
            /** Salary, for example, $100,000. */
            salary?:
                string;
            /** Similar job IDs, for example, 1275. */
            similarJobIds?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__DynamicLocalAsset {
            /**
             * Address which can be specified in one of the following formats. (1) City, state, code, country, for example, Mountain View, CA, USA. (2) Full address, for example, 123 Boulevard St,
             * Mountain View, CA 94043. (3) Latitude-longitude in the DDD format, for example, 41.40338, 2.17403.
             */
            address?:
                string;
            /** Android deep link, for example, android-app://com.example.android/http/example.com/gizmos?1234. */
            androidAppLink?:
                string;
            /** Category, for example, Food. */
            category?:
                string;
            /** Contextual keywords, for example, Save groceries coupons. */
            contextualKeywords?:
                string[];
            /** Required. Deal ID which can be any sequence of letters and digits, and must be unique and match the values of remarketing tag. Required. */
            dealId?:
                string;
            /** Required. Deal name, for example, 50% off at Mountain View Grocers. Required. */
            dealName?:
                string;
            /** Description, for example, Save on your weekly bill. */
            description?:
                string;
            /** Formatted price which can be any characters. If set, this attribute will be used instead of 'price', for example, Starting at $100.00. */
            formattedPrice?:
                string;
            /** Formatted sale price which can be any characters. If set, this attribute will be used instead of 'sale price', for example, On sale for $80.00. */
            formattedSalePrice?:
                string;
            /** Image URL, for example, http://www.example.com/image.png. The image will not be uploaded as image asset. */
            imageUrl?:
                string;
            /** iOS deep link, for example, exampleApp://content/page. */
            iosAppLink?:
                string;
            /**
             * iOS app store ID. This is used to check if the user has the app installed on their device before deep linking. If this field is set, then the ios_app_link field must also be
             * present.
             */
            iosAppStoreId?:
                string;
            /** Price which can be a number followed by the alphabetic currency code, ISO 4217 standard. Use '.' as the decimal mark, for example, 100.00 USD. */
            price?:
                string;
            /** Sale price which can be number followed by the alphabetic currency code, ISO 4217 standard. Use '.' as the decimal mark, for example, 80.00 USD. Must be less than the 'price' field. */
            salePrice?:
                string;
            /** Similar deal IDs, for example, 1275. */
            similarDealIds?:
                string[];
            /** Subtitle, for example, Groceries. */
            subtitle?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__DynamicLocationSetFilter {
            /** Business name filter. */
            businessNameFilter?:
                GoogleAdsGoogleadsV12Common__BusinessNameFilter;
            /** If multiple labels are set, then only feeditems marked with all the labels will be added to the FeedItemSet. */
            labels?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__DynamicRealEstateAsset {
            /**
             * Address which can be specified in one of the following formats. (1) City, state, code, country, for example, Mountain View, CA, USA. (2) Full address, for example, 123 Boulevard St,
             * Mountain View, CA 94043. (3) Latitude-longitude in the DDD format, for example, 41.40338, 2.17403
             */
            address?:
                string;
            /** Android deep link, for example, android-app://com.example.android/http/example.com/gizmos?1234. */
            androidAppLink?:
                string;
            /** City name, for example, Mountain View, California. */
            cityName?:
                string;
            /** Contextual keywords, for example, For sale; Houses for sale. */
            contextualKeywords?:
                string[];
            /** Description, for example, 3 beds, 2 baths, 1568 sq. ft. */
            description?:
                string;
            /** Formatted price which can be any characters. If set, this attribute will be used instead of 'price', for example, Starting at $200,000.00. */
            formattedPrice?:
                string;
            /** Image URL, for example, http://www.example.com/image.png. The image will not be uploaded as image asset. */
            imageUrl?:
                string;
            /** iOS deep link, for example, exampleApp://content/page. */
            iosAppLink?:
                string;
            /**
             * iOS app store ID. This is used to check if the user has the app installed on their device before deep linking. If this field is set, then the ios_app_link field must also be
             * present.
             */
            iosAppStoreId?:
                string;
            /** Required. Listing ID which can be any sequence of letters and digits, and must be unique and match the values of remarketing tag. Required. */
            listingId?:
                string;
            /** Required. Listing name, for example, Boulevard Bungalow. Required. */
            listingName?:
                string;
            /** Listing type, for example, For sale. */
            listingType?:
                string;
            /** Price which can be number followed by the alphabetic currency code, ISO 4217 standard. Use '.' as the decimal mark, for example, 200,000.00 USD. */
            price?:
                string;
            /** Property type, for example, House. */
            propertyType?:
                string;
            /** Similar listing IDs. */
            similarListingIds?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__DynamicTravelAsset {
            /** Android deep link, for example, android-app://com.example.android/http/example.com/gizmos?1234. */
            androidAppLink?:
                string;
            /** Category, for example, Express. */
            category?:
                string;
            /** Contextual keywords, for example, Paris trains. */
            contextualKeywords?:
                string[];
            /**
             * Destination address which can be specified in one of the following formats. (1) City, state, code, country, for example, Mountain View, CA, USA. (2) Full address, for example, 123
             * Boulevard St, Mountain View, CA 94043. (3) Latitude-longitude in the DDD format, for example, 41.40338, 2.17403.
             */
            destinationAddress?:
                string;
            /** Required. Destination ID which can be any sequence of letters and digits, and must be unique and match the values of remarketing tag. Required. */
            destinationId?:
                string;
            /** Destination name, for example, Paris. */
            destinationName?:
                string;
            /** Formatted price which can be any characters. If set, this attribute will be used instead of 'price', for example, Starting at $100.00. */
            formattedPrice?:
                string;
            /** Formatted sale price which can be any characters. If set, this attribute will be used instead of 'sale price', for example, On sale for $80.00. */
            formattedSalePrice?:
                string;
            /** Image URL, for example, http://www.example.com/image.png. The image will not be uploaded as image asset. */
            imageUrl?:
                string;
            /** iOS deep link, for example, exampleApp://content/page. */
            iosAppLink?:
                string;
            /**
             * iOS app store ID. This is used to check if the user has the app installed on their device before deep linking. If this field is set, then the ios_app_link field must also be
             * present.
             */
            iosAppStoreId?:
                string;
            /** Origin ID which can be any sequence of letters and digits. The ID sequence (destination ID + origin ID) must be unique. */
            originId?:
                string;
            /** Origin name, for example, London. */
            originName?:
                string;
            /** Price which can be a number followed by the alphabetic currency code, ISO 4217 standard. Use '.' as the decimal mark, for example, 100.00 USD. */
            price?:
                string;
            /**
             * Sale price which can be a number followed by the alphabetic currency code, ISO 4217 standard. Use '.' as the decimal mark, for example, 80.00 USD. Must be less than the 'price'
             * field.
             */
            salePrice?:
                string;
            /** Similar destination IDs, for example, NYC. */
            similarDestinationIds?:
                string[];
            /** Required. Title, for example, Book your train ticket. Required. */
            title?:
                string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Common__EnhancedCpc {
        }
        interface GoogleAdsGoogleadsV12Common__EventAttribute {
            /** Required. Advertiser defined event to be used for remarketing. The accepted values are "Viewed", "Cart", "Purchased" and "Recommended". */
            event?:
                string;
            /**
             * Required. Timestamp at which the event happened. The format is YYYY-MM-DD HH:MM:SS[+/-HH:MM], where [+/-HH:MM] is an optional timezone offset from UTC. If the offset is absent, the
             * API will use the account's timezone as default.
             */
            eventDateTime?:
                string;
            /** Required. Item attributes of the event. */
            itemAttribute?:
                GoogleAdsGoogleadsV12Common__EventItemAttribute[];
        }
        interface GoogleAdsGoogleadsV12Common__EventItemAttribute {
            /** Optional. A unique identifier of a product. It can be either the Merchant Center Item ID or GTIN (Global Trade Item Number). */
            itemId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ExclusionSegment {
            /** User list segment to be excluded. */
            userList?:
                GoogleAdsGoogleadsV12Common__UserListSegment;
        }
        interface GoogleAdsGoogleadsV12Common__ExpandedDynamicSearchAdInfo {
            /** The description of the ad. */
            description?:
                string;
            /** The second description of the ad. */
            description2?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ExpandedTextAdInfo {
            /** The description of the ad. */
            description?:
                string;
            /** The second description of the ad. */
            description2?:
                string;
            /** The first part of the ad's headline. */
            headlinePart1?:
                string;
            /** The second part of the ad's headline. */
            headlinePart2?:
                string;
            /** The third part of the ad's headline. */
            headlinePart3?:
                string;
            /** The text that can appear alongside the ad's displayed URL. */
            path1?:
                string;
            /** Additional text that can appear alongside the ad's displayed URL. */
            path2?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ExplorerAutoOptimizerSetting {
            /** Indicates whether the optimizer is turned on. */
            optIn?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Common__ExpressionRuleUserListInfo {
            /**
             * Boolean rule that defines this user list. The rule consists of a list of rule item groups and each rule item group consists of a list of rule items. All the rule item groups are
             * ORed or ANDed together for evaluation based on rule.rule_type. Required for creating an expression rule user list.
             */
            rule?:
                GoogleAdsGoogleadsV12Common__UserListRuleInfo;
        }
        interface GoogleAdsGoogleadsV12Common__FinalAppUrl {
            /** The operating system targeted by this URL. Required. */
            osType?:
                string;
            /**
             * The app deep link URL. Deep links specify a location in an app that corresponds to the content you'd like to show, and should be of the form {scheme}://{host_path} The scheme
             * identifies which app to open. For your app, you can use a custom scheme that starts with the app's name. The host and path specify the unique location in the app where your content
             * exists. Example: "exampleapp://productid_1234". Required.
             */
            url?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__FlexibleRuleOperandInfo {
            /** Lookback window for this rule in days. From now until X days ago. */
            lookbackWindowDays?:
                string;
            /** List of rule item groups that defines this rule. Rule item groups are grouped together. */
            rule?:
                GoogleAdsGoogleadsV12Common__UserListRuleInfo;
        }
        interface GoogleAdsGoogleadsV12Common__FlexibleRuleUserListInfo {
            /** Rules representing users that should be excluded from the user list. These are located on the right side of the AND_NOT operator, and joined together by OR. */
            exclusiveOperands?:
                GoogleAdsGoogleadsV12Common__FlexibleRuleOperandInfo[];
            /**
             * Rules representing users that should be included in the user list. These are located on the left side of the AND_NOT operator, and joined together by either AND/OR as specified by
             * the inclusive_rule_operator.
             */
            inclusiveOperands?:
                GoogleAdsGoogleadsV12Common__FlexibleRuleOperandInfo[];
            /** Operator that defines how the inclusive operands are combined. */
            inclusiveRuleOperator?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__FrequencyCapEntry {
            /** Maximum number of events allowed during the time range by this cap. */
            cap?:
                number;
            /** The key of a particular frequency cap. There can be no more than one frequency cap with the same key. */
            key?:
                GoogleAdsGoogleadsV12Common__FrequencyCapKey;
        }
        interface GoogleAdsGoogleadsV12Common__FrequencyCapKey {
            /** The type of event that the cap applies to (for example, impression). */
            eventType?:
                string;
            /** The level on which the cap is to be applied (for example, ad group ad, ad group). The cap is applied to all the entities of this level. */
            level?:
                string;
            /** Number of time units the cap lasts. */
            timeLength?:
                number;
            /** Unit of time the cap is defined at (for example, day, week). */
            timeUnit?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__GenderDimension {
            /** Included gender demographic segments. */
            genders?:
                string[];
            /** Include users whose gender is not determined. */
            includeUndetermined?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Common__GenderInfo {
            /** Type of the gender. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__GeoPointInfo {
            /** Micro degrees for the latitude. */
            latitudeInMicroDegrees?:
                number;
            /** Micro degrees for the longitude. */
            longitudeInMicroDegrees?:
                number;
        }
        interface GoogleAdsGoogleadsV12Common__HistoricalMetricsOptions {
            /** Indicates whether to include average cost per click value. Average CPC is provided only for legacy support. */
            includeAverageCpc?:
                boolean;
            /**
             * The year month range for historical metrics. If not specified, metrics for the past 12 months are returned. Search metrics are available for the past 4 years. If the search volume
             * is not available for the entire year_month_range provided, the subset of the year month range for which search volume is available are returned.
             */
            yearMonthRange?:
                GoogleAdsGoogleadsV12Common__YearMonthRange;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Common__HotelAdInfo {
        }
        interface GoogleAdsGoogleadsV12Common__HotelAdvanceBookingWindowInfo {
            /** High end of the number of days prior to the stay. */
            maxDays?:
                string;
            /** Low end of the number of days prior to the stay. */
            minDays?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__HotelCalloutAsset {
            /** Required. The language of the hotel callout. Represented as BCP 47 language tag. */
            languageCode?:
                string;
            /** Required. The text of the hotel callout asset. The length of this string should be between 1 and 25, inclusive. */
            text?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__HotelCalloutFeedItem {
            /** The language of the hotel callout text. IETF BCP 47 compliant language code. */
            languageCode?:
                string;
            /** The callout text. The length of this string should be between 1 and 25, inclusive. */
            text?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__HotelCheckInDateRangeInfo {
            /** End date in the YYYY-MM-DD format. */
            endDate?:
                string;
            /** Start date in the YYYY-MM-DD format. */
            startDate?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__HotelCheckInDayInfo {
            /** The day of the week. */
            dayOfWeek?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__HotelCityInfo {
            /** The Geo Target Constant resource name. */
            cityCriterion?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__HotelClassInfo {
            /** Long value of the hotel class. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__HotelCountryRegionInfo {
            /** The Geo Target Constant resource name. */
            countryRegionCriterion?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__HotelDateSelectionTypeInfo {
            /** Type of the hotel date selection */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__HotelIdInfo {
            /** String value of the hotel ID. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__HotelLengthOfStayInfo {
            /** High end of the number of nights in the stay. */
            maxNights?:
                string;
            /** Low end of the number of nights in the stay. */
            minNights?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__HotelStateInfo {
            /** The Geo Target Constant resource name. */
            stateCriterion?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__HouseholdIncomeDimension {
            /** Include users whose household income is not determined. */
            includeUndetermined?:
                boolean;
            /** Included household income demographic segments. */
            incomeRanges?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__ImageAdInfo {
            /** An ad ID to copy the image from. */
            adIdToCopyImageFrom?:
                string;
            /** Raw image data as bytes. */
            data?:
                string;
            /** URL of the full size image. */
            imageUrl?:
                string;
            /** The MediaFile resource to use for the image. */
            mediaFile?:
                string;
            /** The mime type of the image. */
            mimeType?:
                string;
            /** The name of the image. If the image was created from a MediaFile, this is the MediaFile's name. If the image was created from bytes, this is empty. */
            name?:
                string;
            /** Height in pixels of the full size image. */
            pixelHeight?:
                string;
            /** Width in pixels of the full size image. */
            pixelWidth?:
                string;
            /** URL of the preview size image. */
            previewImageUrl?:
                string;
            /** Height in pixels of the preview size image. */
            previewPixelHeight?:
                string;
            /** Width in pixels of the preview size image. */
            previewPixelWidth?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ImageAsset {
            /** The raw bytes data of an image. This field is mutate only. */
            data?:
                string;
            /** File size of the image asset in bytes. */
            fileSize?:
                string;
            /** Metadata for this image at its original size. */
            fullSize?:
                GoogleAdsGoogleadsV12Common__ImageDimension;
            /** MIME type of the image asset. */
            mimeType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ImageDimension {
            /** Height of the image. */
            heightPixels?:
                string;
            /** A URL that returns the image with this height and width. */
            url?:
                string;
            /** Width of the image. */
            widthPixels?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ImageFeedItem {
            /** Required. Resource name of the image asset. */
            imageAsset?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__IncomeRangeInfo {
            /** Type of the income range. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__InFeedVideoAdInfo {
            /** First text line for the ad. */
            description1?:
                string;
            /** Second text line for the ad. */
            description2?:
                string;
            /** The headline of the ad. */
            headline?:
                string;
            /** Video thumbnail image to use. */
            thumbnail?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__InteractionTypeInfo {
            /** The interaction type. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__IpBlockInfo {
            /** The IP address of this IP block. */
            ipAddress?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ItemAttribute {
            /**
             * Common Locale Data Repository (CLDR) territory code of the country associated with the feed where your items are uploaded. See
             * https://developers.google.com/google-ads/api/reference/data/codes-formats#country-codes for more information.
             */
            countryCode?:
                string;
            /** A unique identifier of a product. It can be either the Merchant Center Item ID or GTIN (Global Trade Item Number). */
            itemId?:
                string;
            /** ISO 639-1 code of the language associated with the feed where your items are uploaded */
            languageCode?:
                string;
            /** ID of the Merchant Center Account. */
            merchantId?:
                string;
            /** The number of items sold. Defaults to 1 if not set. */
            quantity?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__Keyword {
            /** The AdGroupCriterion resource name. */
            adGroupCriterion?:
                string;
            /** Keyword info. */
            info?:
                GoogleAdsGoogleadsV12Common__KeywordInfo;
        }
        interface GoogleAdsGoogleadsV12Common__KeywordAnnotations {
            /** The list of concepts for the keyword. */
            concepts?:
                GoogleAdsGoogleadsV12Common__KeywordConcept[];
        }
        interface GoogleAdsGoogleadsV12Common__KeywordConcept {
            /** The concept group of the concept details. */
            conceptGroup?:
                GoogleAdsGoogleadsV12Common__ConceptGroup;
            /** The concept name for the keyword in the concept_group. */
            name?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__KeywordInfo {
            /** The match type of the keyword. */
            matchType?:
                string;
            /** The text of the keyword (at most 80 characters and 10 words). */
            text?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__KeywordPlanAggregateMetricResults {
            /**
             * The aggregate searches for all the keywords segmented by device for the specified time. Supports the following device types: MOBILE, TABLET, DESKTOP. This is only set when
             * KeywordPlanAggregateMetricTypeEnum.DEVICE is set in the KeywordPlanAggregateMetrics field in the request.
             */
            deviceSearches?:
                GoogleAdsGoogleadsV12Common__KeywordPlanDeviceSearches[];
        }
        interface GoogleAdsGoogleadsV12Common__KeywordPlanAggregateMetrics {
            /** The list of aggregate metrics to fetch data. */
            aggregateMetricTypes?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__KeywordPlanDeviceSearches {
            /** The device type. */
            device?:
                string;
            /** The total searches for the device. */
            searchCount?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__KeywordPlanHistoricalMetrics {
            /** Average Cost Per Click in micros for the keyword. */
            averageCpcMicros?:
                string;
            /** Approximate number of monthly searches on this query, averaged for the past 12 months. */
            avgMonthlySearches?:
                string;
            /** The competition level for the query. */
            competition?:
                string;
            /**
             * The competition index for the query in the range [0, 100]. Shows how competitive ad placement is for a keyword. The level of competition from 0-100 is determined by the number of ad
             * slots filled divided by the total number of ad slots available. If not enough data is available, null is returned.
             */
            competitionIndex?:
                string;
            /** Top of page bid high range (80th percentile) in micros for the keyword. */
            highTopOfPageBidMicros?:
                string;
            /** Top of page bid low range (20th percentile) in micros for the keyword. */
            lowTopOfPageBidMicros?:
                string;
            /** Approximate number of searches on this query for the past twelve months. */
            monthlySearchVolumes?:
                GoogleAdsGoogleadsV12Common__MonthlySearchVolume[];
        }
        interface GoogleAdsGoogleadsV12Common__KeywordThemeInfo {
            /** Free-form text to be matched to a Smart Campaign keyword theme constant on a best-effort basis. */
            freeFormKeywordTheme?:
                string;
            /** The resource name of a Smart Campaign keyword theme constant. `keywordThemeConstants/{keyword_theme_id}~{sub_keyword_theme_id}` */
            keywordThemeConstant?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__LanguageInfo {
            /** The language constant resource name. */
            languageConstant?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__LeadFormAsset {
            /** Asset resource name of the background image. The minimum size is 600x314 and the aspect ratio must be 1.91:1 (+-1%). */
            backgroundImageAsset?:
                string;
            /** Required. The name of the business being advertised. */
            businessName?:
                string;
            /** Required. Text giving a clear value proposition of what users expect once they expand the form. */
            callToActionDescription?:
                string;
            /** Required. Pre-defined display text that encourages user to expand the form. */
            callToActionType?:
                string;
            /** Custom disclosure shown along with Google disclaimer on the lead form. Accessible to allowed customers only. */
            customDisclosure?:
                string;
            /** Ordered list of custom question fields. This field is subject to a limit of 5 qualifying questions per form. */
            customQuestionFields?:
                GoogleAdsGoogleadsV12Common__LeadFormCustomQuestionField[];
            /** Configured methods for collected lead data to be delivered to advertiser. Only one method typed as WebhookDelivery can be configured. */
            deliveryMethods?:
                GoogleAdsGoogleadsV12Common__LeadFormDeliveryMethod[];
            /** Required. Detailed description of the expanded form to describe what the form is asking for or facilitating. */
            description?:
                string;
            /** Chosen intent for the lead form, for example, more volume or more qualified. */
            desiredIntent?:
                string;
            /** Ordered list of input fields. This field can be updated by reordering questions, but not by adding or removing questions. */
            fields?:
                GoogleAdsGoogleadsV12Common__LeadFormField[];
            /** Required. Headline of the expanded form to describe what the form is asking for or facilitating. */
            headline?:
                string;
            /** Pre-defined display text that encourages user action after the form is submitted. */
            postSubmitCallToActionType?:
                string;
            /** Detailed description shown after form submission that describes how the advertiser will follow up with the user. */
            postSubmitDescription?:
                string;
            /** Headline of text shown after form submission that describes how the advertiser will follow up with the user. */
            postSubmitHeadline?:
                string;
            /** Required. Link to a page describing the policy on how the collected data is handled by the advertiser/business. */
            privacyPolicyUrl?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__LeadFormCustomQuestionField {
            /** The exact custom question field text (for example, "What kind of vehicle do you have?"). */
            customQuestionText?:
                string;
            /** Answer configuration for a single choice question. Minimum of 2 answers and maximum of 12 allowed. */
            singleChoiceAnswers?:
                GoogleAdsGoogleadsV12Common__LeadFormSingleChoiceAnswers;
        }
        interface GoogleAdsGoogleadsV12Common__LeadFormDeliveryMethod {
            /** Webhook method of delivery. */
            webhook?:
                GoogleAdsGoogleadsV12Common__WebhookDelivery;
        }
        interface GoogleAdsGoogleadsV12Common__LeadFormField {
            /** Describes the input type, which may be a predefined type such as "full name" or a pre-vetted question like "What kind of vehicle do you have?". */
            inputType?:
                string;
            /** Answer configuration for a single choice question. Can be set only for pre-vetted question fields. Minimum of 2 answers required and maximum of 12 allowed. */
            singleChoiceAnswers?:
                GoogleAdsGoogleadsV12Common__LeadFormSingleChoiceAnswers;
        }
        interface GoogleAdsGoogleadsV12Common__LeadFormSingleChoiceAnswers {
            /** List of choices for a single question field. The order of entries defines UI order. Minimum of 2 answers required and maximum of 12 allowed. */
            answers?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__LegacyAppInstallAdInfo {
            /** The ID of the mobile app. */
            appId?:
                string;
            /** The app store the mobile app is available in. */
            appStore?:
                string;
            /** The first description line of the ad. */
            description1?:
                string;
            /** The second description line of the ad. */
            description2?:
                string;
            /** The headline of the ad. */
            headline?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__LegacyResponsiveDisplayAdInfo {
            /** The accent color of the ad in hexadecimal, for example, #ffffff for white. If one of `main_color` and `accent_color` is set, the other is required as well. */
            accentColor?:
                string;
            /**
             * Advertiser's consent to allow flexible color. When true, the ad may be served with different color if necessary. When false, the ad will be served with the specified colors or a
             * neutral color. The default value is `true`. Must be true if `main_color` and `accent_color` are not set.
             */
            allowFlexibleColor?:
                boolean;
            /** The business name in the ad. */
            businessName?:
                string;
            /** The call-to-action text for the ad. */
            callToActionText?:
                string;
            /** The description of the ad. */
            description?:
                string;
            /** Specifies which format the ad will be served in. Default is ALL_FORMATS. */
            formatSetting?:
                string;
            /** The MediaFile resource name of the logo image used in the ad. */
            logoImage?:
                string;
            /** The long version of the ad's headline. */
            longHeadline?:
                string;
            /** The main color of the ad in hexadecimal, for example, #ffffff for white. If one of `main_color` and `accent_color` is set, the other is required as well. */
            mainColor?:
                string;
            /** The MediaFile resource name of the marketing image used in the ad. */
            marketingImage?:
                string;
            /** Prefix before price. For example, 'as low as'. */
            pricePrefix?:
                string;
            /** Promotion text used for dynamic formats of responsive ads. For example 'Free two-day shipping'. */
            promoText?:
                string;
            /** The short version of the ad's headline. */
            shortHeadline?:
                string;
            /** The MediaFile resource name of the square logo image used in the ad. */
            squareLogoImage?:
                string;
            /** The MediaFile resource name of the square marketing image used in the ad. */
            squareMarketingImage?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__LifeEventSegment {
            /** The life event resource. */
            lifeEvent?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ListingDimensionInfo {
            /** City the hotel is located in. */
            hotelCity?:
                GoogleAdsGoogleadsV12Common__HotelCityInfo;
            /** Class of the hotel as a number of stars 1 to 5. */
            hotelClass?:
                GoogleAdsGoogleadsV12Common__HotelClassInfo;
            /** Country or Region the hotel is located in. */
            hotelCountryRegion?:
                GoogleAdsGoogleadsV12Common__HotelCountryRegionInfo;
            /** Advertiser-specific hotel ID. */
            hotelId?:
                GoogleAdsGoogleadsV12Common__HotelIdInfo;
            /** State the hotel is located in. */
            hotelState?:
                GoogleAdsGoogleadsV12Common__HotelStateInfo;
            /** Bidding category of a product offer. */
            productBiddingCategory?:
                GoogleAdsGoogleadsV12Common__ProductBiddingCategoryInfo;
            /** Brand of a product offer. */
            productBrand?:
                GoogleAdsGoogleadsV12Common__ProductBrandInfo;
            /** Locality of a product offer. */
            productChannel?:
                GoogleAdsGoogleadsV12Common__ProductChannelInfo;
            /** Availability of a product offer. */
            productChannelExclusivity?:
                GoogleAdsGoogleadsV12Common__ProductChannelExclusivityInfo;
            /** Condition of a product offer. */
            productCondition?:
                GoogleAdsGoogleadsV12Common__ProductConditionInfo;
            /** Custom attribute of a product offer. */
            productCustomAttribute?:
                GoogleAdsGoogleadsV12Common__ProductCustomAttributeInfo;
            /** Grouping of a product offer. This listing dimension is deprecated and it is supported only in Display campaigns. */
            productGrouping?:
                GoogleAdsGoogleadsV12Common__ProductGroupingInfo;
            /** Item id of a product offer. */
            productItemId?:
                GoogleAdsGoogleadsV12Common__ProductItemIdInfo;
            /** Labels of a product offer. This listing dimension is deprecated and it is supported only in Display campaigns. */
            productLabels?:
                GoogleAdsGoogleadsV12Common__ProductLabelsInfo;
            /** Legacy condition of a product offer. This listing dimension is deprecated and it is supported only in Display campaigns. */
            productLegacyCondition?:
                GoogleAdsGoogleadsV12Common__ProductLegacyConditionInfo;
            /** Type of a product offer. */
            productType?:
                GoogleAdsGoogleadsV12Common__ProductTypeInfo;
            /** Full type of a product offer. This listing dimension is deprecated and it is supported only in Display campaigns. */
            productTypeFull?:
                GoogleAdsGoogleadsV12Common__ProductTypeFullInfo;
            /** Unknown dimension. Set when no other listing dimension is set. */
            unknownListingDimension?:
                any;
        }
        interface GoogleAdsGoogleadsV12Common__ListingGroupInfo {
            /** Dimension value with which this listing group is refining its parent. Undefined for the root group. */
            caseValue?:
                GoogleAdsGoogleadsV12Common__ListingDimensionInfo;
            /** Resource name of ad group criterion which is the parent listing group subdivision. Null for the root group. */
            parentAdGroupCriterion?:
                string;
            /** Type of the listing group. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ListingScopeInfo {
            /** Scope of the campaign criterion. */
            dimensions?:
                GoogleAdsGoogleadsV12Common__ListingDimensionInfo[];
        }
        interface GoogleAdsGoogleadsV12Common__LocalAdInfo {
            /** List of text assets for call-to-actions. When the ad serves the call-to-actions will be selected from this list. At least 1 and at most 5 call-to-actions must be specified. */
            callToActions?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** List of text assets for descriptions. When the ad serves the descriptions will be selected from this list. At least 1 and at most 5 descriptions must be specified. */
            descriptions?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** List of text assets for headlines. When the ad serves the headlines will be selected from this list. At least 1 and at most 5 headlines must be specified. */
            headlines?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** List of logo image assets that may be displayed with the ad. The images must be 128x128 pixels and not larger than 120KB. At least 1 and at most 5 image assets must be specified. */
            logoImages?:
                GoogleAdsGoogleadsV12Common__AdImageAsset[];
            /** List of marketing image assets that may be displayed with the ad. The images must be 314x600 pixels or 320x320 pixels. At least 1 and at most 20 image assets must be specified. */
            marketingImages?:
                GoogleAdsGoogleadsV12Common__AdImageAsset[];
            /** First part of optional text that can be appended to the URL in the ad. */
            path1?:
                string;
            /** Second part of optional text that can be appended to the URL in the ad. This field can only be set when `path1` is also set. */
            path2?:
                string;
            /** List of YouTube video assets that may be displayed with the ad. At least 1 and at most 20 video assets must be specified. */
            videos?:
                GoogleAdsGoogleadsV12Common__AdVideoAsset[];
        }
        interface GoogleAdsGoogleadsV12Common__LocationAsset {
            /**
             * The list of business locations for the customer. This will only be returned if the Location Asset is syncing from the Business Profile account. It is possible to have multiple
             * Business Profile listings under the same account that point to the same Place ID.
             */
            businessProfileLocations?:
                GoogleAdsGoogleadsV12Common__BusinessProfileLocation[];
            /** The type of location ownership. If the type is BUSINESS_OWNER, it will be served as a location extension. If the type is AFFILIATE, it will be served as an affiliate location. */
            locationOwnershipType?:
                string;
            /**
             * Place IDs uniquely identify a place in the Google Places database and on Google Maps. This field is unique for a given customer ID and asset type. See
             * https://developers.google.com/places/web-service/place-id to learn more about Place ID.
             */
            placeId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__LocationFeedItem {
            /** Line 1 of the business address. */
            addressLine1?:
                string;
            /** Line 2 of the business address. */
            addressLine2?:
                string;
            /** The name of the business. */
            businessName?:
                string;
            /** City of the business address. */
            city?:
                string;
            /** Country code of the business address. */
            countryCode?:
                string;
            /** Phone number of the business. */
            phoneNumber?:
                string;
            /** Postal code of the business address. */
            postalCode?:
                string;
            /** Province of the business address. */
            province?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__LocationGroupInfo {
            /**
             * Denotes that the latest customer level asset set is used for targeting. Used with radius and radius_units. Cannot be used with feed, geo target constants or feed item sets. When
             * using asset sets, either this field or location_group_asset_sets should be specified. Both cannot be used at the same time. This can only be set in CREATE operations.
             */
            enableCustomerLevelLocationAssetSet?:
                boolean;
            /** Feed specifying locations for targeting. Cannot be set with AssetSet fields. This is required and must be set in CREATE operations. */
            feed?:
                string;
            /**
             * FeedItemSets whose FeedItems are targeted. If multiple IDs are specified, then all items that appear in at least one set are targeted. This field cannot be used with
             * geo_target_constants. This is optional and can only be set in CREATE operations. Cannot be set with AssetSet fields.
             */
            feedItemSets?:
                string[];
            /** Geo target constant(s) restricting the scope of the geographic area within the feed. Currently only one geo target constant is allowed. Cannot be set with AssetSet fields. */
            geoTargetConstants?:
                string[];
            /**
             * AssetSets whose Assets are targeted. If multiple IDs are specified, then all items that appear in at least one set are targeted. This field cannot be used with feed, geo target
             * constants or feed item sets. When using asset sets, either this field or enable_customer_level_location_asset_set should be specified. Both cannot be used at the same time. This can
             * only be set in CREATE operations.
             */
            locationGroupAssetSets?:
                string[];
            /** Distance in units specifying the radius around targeted locations. This is required and must be set in CREATE operations. */
            radius?:
                string;
            /**
             * Unit of the radius. Miles and meters are supported for geo target constants. Milli miles and meters are supported for feed item sets and asset sets. This is required and must be set
             * in CREATE operations.
             */
            radiusUnits?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__LocationInfo {
            /** The geo target constant resource name. */
            geoTargetConstant?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__LocationSet {
            /** Data used to configure a location set populated from Google Business Profile locations. */
            businessProfileLocationSet?:
                GoogleAdsGoogleadsV12Common__BusinessProfileLocationSet;
            /** Data used to configure a location on chain set populated with the specified chains. */
            chainLocationSet?:
                GoogleAdsGoogleadsV12Common__ChainSet;
            /** Required. Immutable. Location Ownership Type (owned location or affiliate location). */
            locationOwnershipType?:
                string;
            /** Only set if locations are synced based on selected maps locations */
            mapsLocationSet?:
                GoogleAdsGoogleadsV12Common__MapsLocationSet;
        }
        interface GoogleAdsGoogleadsV12Common__LogicalUserListInfo {
            /**
             * Logical list rules that define this user list. The rules are defined as a logical operator (ALL/ANY/NONE) and a list of user lists. All the rules are ANDed when they are evaluated.
             * Required for creating a logical user list.
             */
            rules?:
                GoogleAdsGoogleadsV12Common__UserListLogicalRuleInfo[];
        }
        interface GoogleAdsGoogleadsV12Common__LogicalUserListOperandInfo {
            /** Resource name of a user list as an operand. */
            userList?:
                string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Common__ManualCpa {
        }
        interface GoogleAdsGoogleadsV12Common__ManualCpc {
            /** Whether bids are to be enhanced based on conversion optimizer data. */
            enhancedCpcEnabled?:
                boolean;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Common__ManualCpm {
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Common__ManualCpv {
        }
        interface GoogleAdsGoogleadsV12Common__MapsLocationInfo {
            /** Place ID of the Maps location. */
            placeId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__MapsLocationSet {
            /** Required. A list of maps location info that user manually synced in. */
            mapsLocations?:
                GoogleAdsGoogleadsV12Common__MapsLocationInfo[];
        }
        interface GoogleAdsGoogleadsV12Common__MatchingFunction {
            /**
             * String representation of the Function. Examples: 1. IDENTITY(true) or IDENTITY(false). All or no feed items served. 2. EQUALS(CONTEXT.DEVICE,"Mobile") 3.
             * IN(FEED_ITEM_ID,{1000001,1000002,1000003}) 4. CONTAINS_ANY(FeedAttribute[12345678,0],{"Mars cruise","Venus cruise"}) 5.
             * AND(IN(FEED_ITEM_ID,{10001,10002}),EQUALS(CONTEXT.DEVICE,"Mobile")) For more details, visit https://developers.google.com/google-ads/api/docs/extensions/feeds/matching-functions
             * Note that because multiple strings may represent the same underlying function (whitespace and single versus double quotation marks, for example), the value returned may not be
             * identical to the string sent in a mutate request.
             */
            functionString?:
                string;
            /** The operands on the left hand side of the equation. This is also the operand to be used for single operand expressions such as NOT. */
            leftOperands?:
                GoogleAdsGoogleadsV12Common__Operand[];
            /** Operator for a function. */
            operator?:
                string;
            /** The operands on the right hand side of the equation. */
            rightOperands?:
                GoogleAdsGoogleadsV12Common__Operand[];
        }
        interface GoogleAdsGoogleadsV12Common__MaximizeConversions {
            /** Maximum bid limit that can be set by the bid strategy. The limit applies to all keywords managed by the strategy. Mutable for portfolio bidding strategies only. */
            cpcBidCeilingMicros?:
                string;
            /** Minimum bid limit that can be set by the bid strategy. The limit applies to all keywords managed by the strategy. Mutable for portfolio bidding strategies only. */
            cpcBidFloorMicros?:
                string;
            /**
             * The target cost-per-action (CPA) option. This is the average amount that you would like to spend per conversion action specified in micro units of the bidding strategy's currency.
             * If set, the bid strategy will get as many conversions as possible at or below the target cost-per-action. If the target CPA is not set, the bid strategy will aim to achieve the
             * lowest possible CPA given the budget.
             */
            targetCpaMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__MaximizeConversionValue {
            /** Maximum bid limit that can be set by the bid strategy. The limit applies to all keywords managed by the strategy. Mutable for portfolio bidding strategies only. */
            cpcBidCeilingMicros?:
                string;
            /** Minimum bid limit that can be set by the bid strategy. The limit applies to all keywords managed by the strategy. Mutable for portfolio bidding strategies only. */
            cpcBidFloorMicros?:
                string;
            /**
             * The target return on ad spend (ROAS) option. If set, the bid strategy will maximize revenue while averaging the target return on ad spend. If the target ROAS is high, the bid
             * strategy may not be able to spend the full budget. If the target ROAS is not set, the bid strategy will aim to achieve the highest possible ROAS for the budget.
             */
            targetRoas?:
                number;
        }
        interface GoogleAdsGoogleadsV12Common__MediaBundleAsset {
            /**
             * Media bundle (ZIP file) asset data. The format of the uploaded ZIP file depends on the ad field where it will be used. For more information on the format, see the documentation of
             * the ad field where you plan on using the MediaBundleAsset. This field is mutate only.
             */
            data?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__MetricGoal {
            /** The metric direction of the goal. For example, increase, decrease, no change. */
            direction?:
                string;
            /** The metric of the goal. For example, clicks, impressions, cost, conversions, etc. */
            metric?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__Metrics {
            /** The percent of your ad impressions that are shown as the very first ad above the organic search results. */
            absoluteTopImpressionPercentage?:
                number;
            /** Average cost of viewable impressions (`active_view_impressions`). */
            activeViewCpm?:
                number;
            /** Active view measurable clicks divided by active view viewable impressions. This metric is reported only for the Display Network. */
            activeViewCtr?:
                number;
            /** A measurement of how often your ad has become viewable on a Display Network site. */
            activeViewImpressions?:
                string;
            /** The ratio of impressions that could be measured by Active View over the number of served impressions. */
            activeViewMeasurability?:
                number;
            /** The cost of the impressions you received that were measurable by Active View. */
            activeViewMeasurableCostMicros?:
                string;
            /** The number of times your ads are appearing on placements in positions where they can be seen. */
            activeViewMeasurableImpressions?:
                string;
            /** The percentage of time when your ad appeared on an Active View enabled site (measurable impressions) and was viewable (viewable impressions). */
            activeViewViewability?:
                number;
            /** The total number of conversions. This includes all conversions regardless of the value of include_in_conversions_metric. */
            allConversions?:
                number;
            /**
             * The total number of conversions. This includes all conversions regardless of the value of include_in_conversions_metric. When this column is selected with date, the values in date
             * column means the conversion date. Details for the by_conversion_date columns are available at https://support.google.com/google-ads/answer/9549009.
             */
            allConversionsByConversionDate?:
                number;
            /**
             * The number of times people clicked the "Call" button to call a store during or after clicking an ad. This number doesn't include whether or not calls were connected, or the duration
             * of any calls. This metric applies to feed items only.
             */
            allConversionsFromClickToCall?:
                number;
            /** The number of times people clicked a "Get directions" button to navigate to a store after clicking an ad. This metric applies to feed items only. */
            allConversionsFromDirections?:
                number;
            /** All conversions from interactions (as oppose to view through conversions) divided by the number of ad interactions. */
            allConversionsFromInteractionsRate?:
                number;
            /** The value of all conversions from interactions divided by the total number of interactions. */
            allConversionsFromInteractionsValuePerInteraction?:
                number;
            /** Number of call button clicks on any location surface after a chargeable ad event (click or impression). This measure is coming from Asset based location. */
            allConversionsFromLocationAssetClickToCall?:
                number;
            /** Number of driving directions clicks on any location surface after a chargeable ad event (click or impression). This measure is coming from Asset based location. */
            allConversionsFromLocationAssetDirections?:
                number;
            /** Number of menu link clicks on any location surface after a chargeable ad event (click or impression). This measure is coming from Asset based location. */
            allConversionsFromLocationAssetMenu?:
                number;
            /** Number of order clicks on any location surface after a chargeable ad event (click or impression). This measure is coming from Asset based location. */
            allConversionsFromLocationAssetOrder?:
                number;
            /** Number of other types of local action clicks on any location surface after a chargeable ad event (click or impression). This measure is coming from Asset based location. */
            allConversionsFromLocationAssetOtherEngagement?:
                number;
            /** Estimated number of visits to the store after a chargeable ad event (click or impression). This measure is coming from Asset based location. */
            allConversionsFromLocationAssetStoreVisits?:
                number;
            /** Number of website URL clicks on any location surface after a chargeable ad event (click or impression). This measure is coming from Asset based location. */
            allConversionsFromLocationAssetWebsite?:
                number;
            /** The number of times people clicked a link to view a store's menu after clicking an ad. This metric applies to feed items only. */
            allConversionsFromMenu?:
                number;
            /** The number of times people placed an order at a store after clicking an ad. This metric applies to feed items only. */
            allConversionsFromOrder?:
                number;
            /** The number of other conversions (for example, posting a review or saving a location for a store) that occurred after people clicked an ad. This metric applies to feed items only. */
            allConversionsFromOtherEngagement?:
                number;
            /** Estimated number of times people visited a store after clicking an ad. This metric applies to feed items only. */
            allConversionsFromStoreVisit?:
                number;
            /** The number of times that people were taken to a store's URL after clicking an ad. This metric applies to feed items only. */
            allConversionsFromStoreWebsite?:
                number;
            /** The value of all conversions. */
            allConversionsValue?:
                number;
            /**
             * The value of all conversions. When this column is selected with date, the values in date column means the conversion date. Details for the by_conversion_date columns are available
             * at https://support.google.com/google-ads/answer/9549009.
             */
            allConversionsValueByConversionDate?:
                number;
            /** The value of all conversions divided by the total cost of ad interactions (such as clicks for text ads or views for video ads). */
            allConversionsValuePerCost?:
                number;
            /**
             * This metric is part of the Auction Insights report, and tells how often the ads of another participant showed as the very first ad above the organic search results. This percentage
             * is computed only over the auctions that you appeared in the page. This metric is not publicly available.
             */
            auctionInsightSearchAbsoluteTopImpressionPercentage?:
                number;
            /**
             * This metric is part of the Auction Insights report, and tells the percentage of impressions that another participant obtained, over the total number of impressions that your ads
             * were eligible for. Any value below 0.1 is reported as 0.0999. This metric is not publicly available.
             */
            auctionInsightSearchImpressionShare?:
                number;
            /**
             * This metric is part of the Auction Insights report, and tells the percentage of impressions that your ads outranked (showed above) another participant in the auction, compared to
             * the total number of impressions that your ads were eligible for. Any value below 0.1 is reported as 0.0999. This metric is not publicly available.
             */
            auctionInsightSearchOutrankingShare?:
                number;
            /**
             * This metric is part of the Auction Insights report, and tells how often another participant's ad received an impression when your ad also received an impression. This metric is not
             * publicly available.
             */
            auctionInsightSearchOverlapRate?:
                number;
            /**
             * This metric is part of the Auction Insights report, and tells how often another participant's ad was shown in a higher position than yours, when both of your ads were shown at the
             * same page. This metric is not publicly available.
             */
            auctionInsightSearchPositionAboveRate?:
                number;
            /**
             * This metric is part of the Auction Insights report, and tells how often the ads of another participant showed above the organic search results. This percentage is computed only over
             * the auctions that you appeared in the page. This metric is not publicly available.
             */
            auctionInsightSearchTopImpressionPercentage?:
                number;
            /** The average amount you pay per interaction. This amount is the total cost of your ads divided by the total number of interactions. */
            averageCost?:
                number;
            /** The total cost of all clicks divided by the total number of clicks received. */
            averageCpc?:
                number;
            /** The average amount that you've been charged for an ad engagement. This amount is the total cost of all ad engagements divided by the total number of ad engagements. */
            averageCpe?:
                number;
            /** Average cost-per-thousand impressions (CPM). */
            averageCpm?:
                number;
            /** The average amount you pay each time someone views your ad. The average CPV is defined by the total cost of all ad views divided by the number of views. */
            averageCpv?:
                number;
            /** Average number of pages viewed per session. */
            averagePageViews?:
                number;
            /** Total duration of all sessions (in seconds) / number of sessions. Imported from Google Analytics. */
            averageTimeOnSite?:
                number;
            /** An indication of how other advertisers are bidding on similar products. */
            benchmarkAverageMaxCpc?:
                number;
            /** An indication on how other advertisers' Shopping ads for similar products are performing based on how often people who see their ad click on it. */
            benchmarkCtr?:
                number;
            /** Number of app installs. */
            biddableAppInstallConversions?:
                number;
            /** Number of in-app actions. */
            biddableAppPostInstallConversions?:
                number;
            /** Percentage of clicks where the user only visited a single page on your site. Imported from Google Analytics. */
            bounceRate?:
                number;
            /** The number of clicks. */
            clicks?:
                string;
            /** The number of times your ad or your site's listing in the unpaid results was clicked. See the help page at https://support.google.com/google-ads/answer/3097241 for details. */
            combinedClicks?:
                string;
            /**
             * The number of times your ad or your site's listing in the unpaid results was clicked (combined_clicks) divided by combined_queries. See the help page at
             * https://support.google.com/google-ads/answer/3097241 for details.
             */
            combinedClicksPerQuery?:
                number;
            /**
             * The number of searches that returned pages from your site in the unpaid results or showed one of your text ads. See the help page at
             * https://support.google.com/google-ads/answer/3097241 for details.
             */
            combinedQueries?:
                string;
            /**
             * The estimated percent of times that your ad was eligible to show on the Display Network but didn't because your budget was too low. Note: Content budget lost impression share is
             * reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
             */
            contentBudgetLostImpressionShare?:
                number;
            /**
             * The impressions you've received on the Display Network divided by the estimated number of impressions you were eligible to receive. Note: Content impression share is reported in the
             * range of 0.1 to 1. Any value below 0.1 is reported as 0.0999.
             */
            contentImpressionShare?:
                number;
            /**
             * The estimated percentage of impressions on the Display Network that your ads didn't receive due to poor Ad Rank. Note: Content rank lost impression share is reported in the range of
             * 0 to 0.9. Any value above 0.9 is reported as 0.9001.
             */
            contentRankLostImpressionShare?:
                number;
            /** The date of the most recent conversion for this conversion action. The date is in the customer's time zone. */
            conversionLastConversionDate?:
                string;
            /**
             * The last date/time a conversion tag for this conversion action successfully fired and was seen by Google Ads. This firing event may not have been the result of an attributable
             * conversion (for example, because the tag was fired from a browser that did not previously click an ad from an appropriate advertiser). The date/time is in the customer's time zone.
             */
            conversionLastReceivedRequestDateTime?:
                string;
            /**
             * The number of conversions. This only includes conversion actions which include_in_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid
             * strategies will optimize for these conversions.
             */
            conversions?:
                number;
            /**
             * The number of conversions. This only includes conversion actions which include_in_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid
             * strategies will optimize for these conversions. When this column is selected with date, the values in date column means the conversion date. Details for the by_conversion_date
             * columns are available at https://support.google.com/google-ads/answer/9549009.
             */
            conversionsByConversionDate?:
                number;
            /**
             * Conversions from interactions divided by the number of ad interactions (such as clicks for text ads or views for video ads). This only includes conversion actions which
             * include_in_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.
             */
            conversionsFromInteractionsRate?:
                number;
            /**
             * The value of conversions from interactions divided by the number of ad interactions. This only includes conversion actions which include_in_conversions_metric attribute is set to
             * true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.
             */
            conversionsFromInteractionsValuePerInteraction?:
                number;
            /**
             * The value of conversions. This only includes conversion actions which include_in_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid
             * strategies will optimize for these conversions.
             */
            conversionsValue?:
                number;
            /**
             * The value of conversions. This only includes conversion actions which include_in_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid
             * strategies will optimize for these conversions. When this column is selected with date, the values in date column means the conversion date. Details for the by_conversion_date
             * columns are available at https://support.google.com/google-ads/answer/9549009.
             */
            conversionsValueByConversionDate?:
                number;
            /**
             * The value of conversions divided by the cost of ad interactions. This only includes conversion actions which include_in_conversions_metric attribute is set to true. If you use
             * conversion-based bidding, your bid strategies will optimize for these conversions.
             */
            conversionsValuePerCost?:
                number;
            /** The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period. */
            costMicros?:
                string;
            /** The cost of ad interactions divided by all conversions. */
            costPerAllConversions?:
                number;
            /**
             * The cost of ad interactions divided by conversions. This only includes conversion actions which include_in_conversions_metric attribute is set to true. If you use conversion-based
             * bidding, your bid strategies will optimize for these conversions.
             */
            costPerConversion?:
                number;
            /**
             * The cost of ad interactions divided by current model attributed conversions. This only includes conversion actions which include_in_conversions_metric attribute is set to true. If
             * you use conversion-based bidding, your bid strategies will optimize for these conversions.
             */
            costPerCurrentModelAttributedConversion?:
                number;
            /**
             * Conversions from when a customer clicks on a Google Ads ad on one device, then converts on a different device or browser. Cross-device conversions are already included in
             * all_conversions.
             */
            crossDeviceConversions?:
                number;
            /** The number of clicks your ad receives (Clicks) divided by the number of times your ad is shown (Impressions). */
            ctr?:
                number;
            /**
             * Shows how your historic conversions data would look under the attribution model you've currently selected. This only includes conversion actions which include_in_conversions_metric
             * attribute is set to true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.
             */
            currentModelAttributedConversions?:
                number;
            /**
             * Current model attributed conversions from interactions divided by the number of ad interactions (such as clicks for text ads or views for video ads). This only includes conversion
             * actions which include_in_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.
             */
            currentModelAttributedConversionsFromInteractionsRate?:
                number;
            /**
             * The value of current model attributed conversions from interactions divided by the number of ad interactions. This only includes conversion actions which
             * include_in_conversions_metric attribute is set to true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.
             */
            currentModelAttributedConversionsFromInteractionsValuePerInteraction?:
                number;
            /**
             * The value of current model attributed conversions. This only includes conversion actions which include_in_conversions_metric attribute is set to true. If you use conversion-based
             * bidding, your bid strategies will optimize for these conversions.
             */
            currentModelAttributedConversionsValue?:
                number;
            /**
             * The value of current model attributed conversions divided by the cost of ad interactions. This only includes conversion actions which include_in_conversions_metric attribute is set
             * to true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.
             */
            currentModelAttributedConversionsValuePerCost?:
                number;
            /** Number of impressions in which the store location was shown or the location was used for targeting. This measure is coming from Asset based location. */
            eligibleImpressionsFromLocationAssetStoreReach?:
                string;
            /** How often people engage with your ad after it's shown to them. This is the number of ad expansions divided by the number of times your ad is shown. */
            engagementRate?:
                number;
            /** The number of engagements. An engagement occurs when a viewer expands your Lightbox ad. Also, in the future, other ad types may support engagement metrics. */
            engagements?:
                string;
            /** The number of times the ad was forwarded to someone else as a message. */
            gmailForwards?:
                string;
            /** The number of times someone has saved your Gmail ad to their inbox as a message. */
            gmailSaves?:
                string;
            /** The number of clicks to the landing page on the expanded state of Gmail ads. */
            gmailSecondaryClicks?:
                string;
            /** The creative historical quality score. */
            historicalCreativeQualityScore?:
                string;
            /** The quality of historical landing page experience. */
            historicalLandingPageQualityScore?:
                string;
            /** The historical quality score. */
            historicalQualityScore?:
                string;
            /** The historical search predicted click through rate (CTR). */
            historicalSearchPredictedCtr?:
                string;
            /** Average lead value based on clicks. */
            hotelAverageLeadValueMicros?:
                number;
            /** Commission bid rate in micros. A 20% commission is represented as 200,000. */
            hotelCommissionRateMicros?:
                string;
            /** The number of impressions that hotel partners could have had given their feed performance. */
            hotelEligibleImpressions?:
                string;
            /** Expected commission cost. The result of multiplying the commission value times the hotel_commission_rate in advertiser currency. */
            hotelExpectedCommissionCost?:
                number;
            /** The average price difference between the price offered by reporting hotel advertiser and the cheapest price offered by the competing advertiser. */
            hotelPriceDifferencePercentage?:
                number;
            /** Count of how often your ad has appeared on a search results page or website on the Google Network. */
            impressions?:
                string;
            /** The number of times a store's location-based ad was shown. This metric applies to feed items only. */
            impressionsFromStoreReach?:
                string;
            /** The types of payable and free interactions. */
            interactionEventTypes?:
                string[];
            /** How often people interact with your ad after it is shown to them. This is the number of interactions divided by the number of times your ad is shown. */
            interactionRate?:
                number;
            /** The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on. */
            interactions?:
                string;
            /** The percentage of clicks filtered out of your total number of clicks (filtered + non-filtered clicks) during the reporting period. */
            invalidClickRate?:
                number;
            /** Number of clicks Google considers illegitimate and doesn't charge you for. */
            invalidClicks?:
                string;
            /**
             * Number of message chats initiated (message_chats) divided by the number of message impressions (message_impressions). Rate at which a user initiates a message chat from an ad
             * impression with a messaging option and message tracking enabled. Note that this rate can be more than 1.0 for a given message impression.
             */
            messageChatRate?:
                number;
            /** Number of message chats initiated for Click To Message impressions that were message tracking eligible. */
            messageChats?:
                string;
            /** Number of Click To Message impressions that were message tracking eligible. */
            messageImpressions?:
                string;
            /** The percentage of mobile clicks that go to a mobile-friendly page. */
            mobileFriendlyClicksPercentage?:
                number;
            /** Total optimization score uplift of all recommendations. */
            optimizationScoreUplift?:
                number;
            /**
             * URL for the optimization score page in the Google Ads web interface. This metric can be selected from `customer` or `campaign`, and can be segmented by
             * `segments.recommendation_type`. For example, `SELECT metrics.optimization_score_url, segments.recommendation_type FROM customer` will return a URL for each unique (customer,
             * recommendation_type) combination.
             */
            optimizationScoreUrl?:
                string;
            /**
             * The number of times someone clicked your site's listing in the unpaid results for a particular query. See the help page at https://support.google.com/google-ads/answer/3097241 for
             * details.
             */
            organicClicks?:
                string;
            /**
             * The number of times someone clicked your site's listing in the unpaid results (organic_clicks) divided by the total number of searches that returned pages from your site
             * (organic_queries). See the help page at https://support.google.com/google-ads/answer/3097241 for details.
             */
            organicClicksPerQuery?:
                number;
            /** The number of listings for your site in the unpaid search results. See the help page at https://support.google.com/google-ads/answer/3097241 for details. */
            organicImpressions?:
                string;
            /**
             * The number of times a page from your site was listed in the unpaid search results (organic_impressions) divided by the number of searches returning your site's listing in the unpaid
             * results (organic_queries). See the help page at https://support.google.com/google-ads/answer/3097241 for details.
             */
            organicImpressionsPerQuery?:
                number;
            /** The total number of searches that returned your site's listing in the unpaid results. See the help page at https://support.google.com/google-ads/answer/3097241 for details. */
            organicQueries?:
                string;
            /** Percentage of first-time sessions (from people who had never visited your site before). Imported from Google Analytics. */
            percentNewVisitors?:
                number;
            /** Number of offline phone calls. */
            phoneCalls?:
                string;
            /** Number of offline phone impressions. */
            phoneImpressions?:
                string;
            /** Number of phone calls received (phone_calls) divided by the number of times your phone number is shown (phone_impressions). */
            phoneThroughRate?:
                number;
            /** Clicks from properties for which the traffic the publisher has not paid for or acquired through incentivized activity */
            publisherOrganicClicks?:
                string;
            /** Clicks from properties not owned by the publisher for which the traffic the publisher has paid for or acquired through incentivized activity */
            publisherPurchasedClicks?:
                string;
            /** Clicks from traffic which is not identified as "Publisher Purchased" or "Publisher Organic" */
            publisherUnknownClicks?:
                string;
            /**
             * Your clickthrough rate (Ctr) divided by the average clickthrough rate of all advertisers on the websites that show your ads. Measures how your ads perform on Display Network sites
             * compared to other ads on the same sites.
             */
            relativeCtr?:
                number;
            /**
             * The percentage of the customer's Shopping or Search ad impressions that are shown in the most prominent Shopping position. See https://support.google.com/google-ads/answer/7501826
             * for details. Any value below 0.1 is reported as 0.0999.
             */
            searchAbsoluteTopImpressionShare?:
                number;
            /**
             * The number estimating how often your ad wasn't the very first ad above the organic search results due to a low budget. Note: Search budget lost absolute top impression share is
             * reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
             */
            searchBudgetLostAbsoluteTopImpressionShare?:
                number;
            /**
             * The estimated percent of times that your ad was eligible to show on the Search Network but didn't because your budget was too low. Note: Search budget lost impression share is
             * reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
             */
            searchBudgetLostImpressionShare?:
                number;
            /**
             * The number estimating how often your ad didn't show anywhere above the organic search results due to a low budget. Note: Search budget lost top impression share is reported in the
             * range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
             */
            searchBudgetLostTopImpressionShare?:
                number;
            /**
             * The number of clicks you've received on the Search Network divided by the estimated number of clicks you were eligible to receive. Note: Search click share is reported in the range
             * of 0.1 to 1. Any value below 0.1 is reported as 0.0999.
             */
            searchClickShare?:
                number;
            /**
             * The impressions you've received divided by the estimated number of impressions you were eligible to receive on the Search Network for search terms that matched your keywords exactly
             * (or were close variants of your keyword), regardless of your keyword match types. Note: Search exact match impression share is reported in the range of 0.1 to 1. Any value below 0.1
             * is reported as 0.0999.
             */
            searchExactMatchImpressionShare?:
                number;
            /**
             * The impressions you've received on the Search Network divided by the estimated number of impressions you were eligible to receive. Note: Search impression share is reported in the
             * range of 0.1 to 1. Any value below 0.1 is reported as 0.0999.
             */
            searchImpressionShare?:
                number;
            /**
             * The number estimating how often your ad wasn't the very first ad above the organic search results due to poor Ad Rank. Note: Search rank lost absolute top impression share is
             * reported in the range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
             */
            searchRankLostAbsoluteTopImpressionShare?:
                number;
            /**
             * The estimated percentage of impressions on the Search Network that your ads didn't receive due to poor Ad Rank. Note: Search rank lost impression share is reported in the range of 0
             * to 0.9. Any value above 0.9 is reported as 0.9001.
             */
            searchRankLostImpressionShare?:
                number;
            /**
             * The number estimating how often your ad didn't show anywhere above the organic search results due to poor Ad Rank. Note: Search rank lost top impression share is reported in the
             * range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
             */
            searchRankLostTopImpressionShare?:
                number;
            /**
             * The impressions you've received in the top location (anywhere above the organic search results) compared to the estimated number of impressions you were eligible to receive in the
             * top location. Note: Search top impression share is reported in the range of 0.1 to 1. Any value below 0.1 is reported as 0.0999.
             */
            searchTopImpressionShare?:
                number;
            /** The number of iOS Store Kit Ad Network conversions. */
            skAdNetworkConversions?:
                string;
            /** A measure of how quickly your page loads after clicks on your mobile ads. The score is a range from 1 to 10, 10 being the fastest. */
            speedScore?:
                string;
            /** The percent of your ad impressions that are shown anywhere above the organic search results. */
            topImpressionPercentage?:
                number;
            /** The percentage of ad clicks to Accelerated Mobile Pages (AMP) landing pages that reach a valid AMP page. */
            validAcceleratedMobilePagesClicksPercentage?:
                number;
            /** The value of all conversions divided by the number of all conversions. */
            valuePerAllConversions?:
                number;
            /**
             * The value of all conversions divided by the number of all conversions. When this column is selected with date, the values in date column means the conversion date. Details for the
             * by_conversion_date columns are available at https://support.google.com/google-ads/answer/9549009.
             */
            valuePerAllConversionsByConversionDate?:
                number;
            /**
             * The value of conversions divided by the number of conversions. This only includes conversion actions which include_in_conversions_metric attribute is set to true. If you use
             * conversion-based bidding, your bid strategies will optimize for these conversions.
             */
            valuePerConversion?:
                number;
            /**
             * The value of conversions divided by the number of conversions. This only includes conversion actions which include_in_conversions_metric attribute is set to true. If you use
             * conversion-based bidding, your bid strategies will optimize for these conversions. When this column is selected with date, the values in date column means the conversion date.
             * Details for the by_conversion_date columns are available at https://support.google.com/google-ads/answer/9549009.
             */
            valuePerConversionsByConversionDate?:
                number;
            /**
             * The value of current model attributed conversions divided by the number of the conversions. This only includes conversion actions which include_in_conversions_metric attribute is
             * set to true. If you use conversion-based bidding, your bid strategies will optimize for these conversions.
             */
            valuePerCurrentModelAttributedConversion?:
                number;
            /** Percentage of impressions where the viewer watched all of your video. */
            videoQuartileP100Rate?:
                number;
            /** Percentage of impressions where the viewer watched 25% of your video. */
            videoQuartileP25Rate?:
                number;
            /** Percentage of impressions where the viewer watched 50% of your video. */
            videoQuartileP50Rate?:
                number;
            /** Percentage of impressions where the viewer watched 75% of your video. */
            videoQuartileP75Rate?:
                number;
            /** The number of views your TrueView video ad receives divided by its number of impressions, including thumbnail impressions for TrueView in-display ads. */
            videoViewRate?:
                number;
            /** The number of times your video ads were viewed. */
            videoViews?:
                string;
            /**
             * The total number of view-through conversions. These happen when a customer sees an image or rich media ad, then later completes a conversion on your site without interacting with
             * (for example, clicking on) another ad.
             */
            viewThroughConversions?:
                string;
            /** Number of call button clicks on any location surface after an impression. This measure is coming from Asset based location. */
            viewThroughConversionsFromLocationAssetClickToCall?:
                number;
            /** Number of driving directions clicks on any location surface after an impression. This measure is coming from Asset based location. */
            viewThroughConversionsFromLocationAssetDirections?:
                number;
            /** Number of menu link clicks on any location surface after an impression. This measure is coming from Asset based location. */
            viewThroughConversionsFromLocationAssetMenu?:
                number;
            /** Number of order clicks on any location surface after an impression. This measure is coming from Asset based location. */
            viewThroughConversionsFromLocationAssetOrder?:
                number;
            /** Number of other types of local action clicks on any location surface after an impression. This measure is coming from Asset based location. */
            viewThroughConversionsFromLocationAssetOtherEngagement?:
                number;
            /** Estimated number of visits to the store after an impression. This measure is coming from Asset based location. */
            viewThroughConversionsFromLocationAssetStoreVisits?:
                number;
            /** Number of website URL clicks on any location surface after an impression. This measure is coming from Asset based location. */
            viewThroughConversionsFromLocationAssetWebsite?:
                number;
        }
        interface GoogleAdsGoogleadsV12Common__MobileAppAsset {
            /** Required. A string that uniquely identifies a mobile application. It should just contain the platform native id, like "com.android.ebay" for Android or "12345689" for iOS. */
            appId?:
                string;
            /** Required. The application store that distributes this specific app. */
            appStore?:
                string;
            /** Last date of when this asset is effective and still serving, in yyyy-MM-dd format. */
            endDate?:
                string;
            /** Required. The visible text displayed when the link is rendered in an ad. The length of this string should be between 1 and 25, inclusive. */
            linkText?:
                string;
            /** Start date of when this asset is effective and can begin serving, in yyyy-MM-dd format. */
            startDate?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__MobileAppCategoryInfo {
            /** The mobile app category constant resource name. */
            mobileAppCategoryConstant?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__MobileApplicationInfo {
            /**
             * A string that uniquely identifies a mobile application to Google Ads API. The format of this string is "{platform}-{platform_native_id}", where platform is "1" for iOS apps and "2"
             * for Android apps, and where platform_native_id is the mobile application identifier native to the corresponding platform. For iOS, this native identifier is the 9 digit string that
             * appears at the end of an App Store URL (for example, "476943146" for "Flood-It! 2" whose App Store link is "http://itunes.apple.com/us/app/flood-it!-2/id476943146"). For Android,
             * this native identifier is the application's package name (for example, "com.labpixies.colordrips" for "Color Drips" given Google Play link
             * "https://play.google.com/store/apps/details?id=com.labpixies.colordrips"). A well formed app id for Google Ads API would thus be "1-476943146" for iOS and
             * "2-com.labpixies.colordrips" for Android. This field is required and must be set in CREATE operations.
             */
            appId?:
                string;
            /** Name of this mobile application. */
            name?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__MobileDeviceInfo {
            /** The mobile device constant resource name. */
            mobileDeviceConstant?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__Money {
            /** Amount in micros. One million is equivalent to one unit. */
            amountMicros?:
                string;
            /** Three-character ISO 4217 currency code. */
            currencyCode?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__MonthlySearchVolume {
            /** The month of the search volume. */
            month?:
                string;
            /** Approximate number of searches for the month. A null value indicates the search volume is unavailable for that month. */
            monthlySearches?:
                string;
            /** The year of the search volume (for example, 2020). */
            year?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__OfflineUserAddressInfo {
            /** City of the address. Only accepted for Store Sales and ConversionAdjustmentUploadService. */
            city?:
                string;
            /** 2-letter country code in ISO-3166-1 alpha-2 of the user's address. */
            countryCode?:
                string;
            /** First name of the user, which is hashed as SHA-256 after normalized (Lowercase all characters; Remove any extra spaces before, after, and in between). */
            hashedFirstName?:
                string;
            /** Last name of the user, which is hashed as SHA-256 after normalized (lower case only and no punctuation). */
            hashedLastName?:
                string;
            /** The street address of the user hashed using SHA-256 hash function after normalization (lower case only). Only accepted for ConversionAdjustmentUploadService. */
            hashedStreetAddress?:
                string;
            /** Postal code of the user's address. */
            postalCode?:
                string;
            /** State code of the address. Only accepted for Store Sales and ConversionAdjustmentUploadService. */
            state?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__Operand {
            /** A constant operand in a matching function. */
            constantOperand?:
                GoogleAdsGoogleadsV12Common_Operand_ConstantOperand;
            /** This operand specifies a feed attribute in feed. */
            feedAttributeOperand?:
                GoogleAdsGoogleadsV12Common_Operand_FeedAttributeOperand;
            /** A function operand in a matching function. Used to represent nested functions. */
            functionOperand?:
                GoogleAdsGoogleadsV12Common_Operand_FunctionOperand;
            /** An operand in a function referring to a value in the request context. */
            requestContextOperand?:
                GoogleAdsGoogleadsV12Common_Operand_RequestContextOperand;
        }
        interface GoogleAdsGoogleadsV12Common__OperatingSystemVersionInfo {
            /** The operating system version constant resource name. */
            operatingSystemVersionConstant?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__PageFeedAsset {
            /** Labels used to group the page urls. */
            labels?:
                string[];
            /** Required. The webpage that advertisers want to target. */
            pageUrl?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ParentalStatusDimension {
            /** Include users whose parental status is undetermined. */
            includeUndetermined?:
                boolean;
            /** Included parental status demographic segments. */
            parentalStatuses?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__ParentalStatusInfo {
            /** Type of the parental status. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__PercentCpc {
            /**
             * Maximum bid limit that can be set by the bid strategy. This is an optional field entered by the advertiser and specified in local micros. Note: A zero value is interpreted in the
             * same way as having bid_ceiling undefined.
             */
            cpcBidCeilingMicros?:
                string;
            /**
             * Adjusts the bid for each auction upward or downward, depending on the likelihood of a conversion. Individual bids may exceed cpc_bid_ceiling_micros, but the average bid amount for a
             * campaign should not.
             */
            enhancedCpcEnabled?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Common__PercentCpcBidSimulationPoint {
            /** Projected number of biddable conversions. */
            biddableConversions?:
                number;
            /** Projected total value of biddable conversions in local currency. */
            biddableConversionsValue?:
                number;
            /** Projected number of clicks. */
            clicks?:
                string;
            /** Projected cost in micros. */
            costMicros?:
                string;
            /** Projected number of impressions. */
            impressions?:
                string;
            /**
             * The simulated percent CPC upon which projected metrics are based. Percent CPC expressed as fraction of the advertised price for some good or service. The value stored here is
             * 1,000,000 * [fraction].
             */
            percentCpcBidMicros?:
                string;
            /** Projected number of top slot impressions. */
            topSlotImpressions?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__PercentCpcBidSimulationPointList {
            /** Projected metrics for a series of percent CPC bid amounts. */
            points?:
                GoogleAdsGoogleadsV12Common__PercentCpcBidSimulationPoint[];
        }
        interface GoogleAdsGoogleadsV12Common__PlacementInfo {
            /** URL of the placement. For example, "http://www.domain.com". */
            url?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__PolicySummary {
            /** The overall approval status, which is calculated based on the status of its individual policy topic entries. */
            approvalStatus?:
                string;
            /** The list of policy findings. */
            policyTopicEntries?:
                GoogleAdsGoogleadsV12Common__PolicyTopicEntry[];
            /** Where in the review process the resource is. */
            reviewStatus?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__PolicyTopicConstraint {
            /** Countries where the resource's domain is not covered by the certificates associated with it. */
            certificateDomainMismatchInCountryList?:
                GoogleAdsGoogleadsV12Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where a certificate is required for serving. */
            certificateMissingInCountryList?:
                GoogleAdsGoogleadsV12Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where the resource cannot serve. */
            countryConstraintList?:
                GoogleAdsGoogleadsV12Common_PolicyTopicConstraint_CountryConstraintList;
            /** Reseller constraint. */
            resellerConstraint?:
                any;
        }
        interface GoogleAdsGoogleadsV12Common__PolicyTopicEntry {
            /** Indicates how serving of this resource may be affected (for example, not serving in a country). */
            constraints?:
                GoogleAdsGoogleadsV12Common__PolicyTopicConstraint[];
            /** Additional information that explains policy finding (for example, the brand name for a trademark finding). */
            evidences?:
                GoogleAdsGoogleadsV12Common__PolicyTopicEvidence[];
            /**
             * Policy topic this finding refers to. For example, "ALCOHOL", "TRADEMARKS_IN_AD_TEXT", or "DESTINATION_NOT_WORKING". The set of possible policy topics is not fixed for a particular
             * API version and may change at any time.
             */
            topic?:
                string;
            /** Describes the negative or positive effect this policy will have on serving. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__PolicyTopicEvidence {
            /** Mismatch between the destinations of a resource's URLs. */
            destinationMismatch?:
                GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_DestinationMismatch;
            /** Details when the destination is returning an HTTP error code or isn't functional in all locations for commonly used devices. */
            destinationNotWorking?:
                GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_DestinationNotWorking;
            /** The text in the destination of the resource that is causing a policy finding. */
            destinationTextList?:
                GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_DestinationTextList;
            /** The language the resource was detected to be written in. This is an IETF language tag such as "en-US". */
            languageCode?:
                string;
            /** List of evidence found in the text of a resource. */
            textList?:
                GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_TextList;
            /** List of websites linked with this resource. */
            websiteList?:
                GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_WebsiteList;
        }
        interface GoogleAdsGoogleadsV12Common__PolicyValidationParameter {
            /**
             * The list of policy violation keys that should not cause a PolicyViolationError to be reported. Not all policy violations are exemptable, refer to the is_exemptible field in the
             * returned PolicyViolationError. Resources violating these polices will be saved, but will not be eligible to serve. They may begin serving at a later time due to a change in
             * policies, re-review of the resource, or a change in advertiser certificates.
             */
            exemptPolicyViolationKeys?:
                GoogleAdsGoogleadsV12Common__PolicyViolationKey[];
            /**
             * The list of policy topics that should not cause a PolicyFindingError to be reported. This field is currently only compatible with Enhanced Text Ad. It corresponds to the
             * PolicyTopicEntry.topic field. Resources violating these policies will be saved, but will not be eligible to serve. They may begin serving at a later time due to a change in
             * policies, re-review of the resource, or a change in advertiser certificates.
             */
            ignorablePolicyTopics?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__PolicyViolationKey {
            /** Unique ID of the violated policy. */
            policyName?:
                string;
            /**
             * The text that violates the policy if specified. Otherwise, refers to the policy in general (for example, when requesting to be exempt from the whole policy). If not specified for
             * criterion exemptions, the whole policy is implied. Must be specified for ad exemptions.
             */
            violatingText?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__PreferredContentInfo {
            /** Type of the preferred content. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__PriceAsset {
            /** Required. The language of the price asset. Represented as BCP 47 language tag. */
            languageCode?:
                string;
            /** The price offerings of the price asset. The size of this collection should be between 3 and 8, inclusive. */
            priceOfferings?:
                GoogleAdsGoogleadsV12Common__PriceOffering[];
            /** The price qualifier of the price asset. */
            priceQualifier?:
                string;
            /** Required. The type of the price asset. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__PriceFeedItem {
            /** Tracking URL template for all offers of this price extension. */
            finalUrlSuffix?:
                string;
            /** The code of the language used for this price extension. */
            languageCode?:
                string;
            /** The price offerings in this price extension. */
            priceOfferings?:
                GoogleAdsGoogleadsV12Common__PriceOffer[];
            /** Price qualifier for all offers of this price extension. */
            priceQualifier?:
                string;
            /** Tracking URL template for all offers of this price extension. */
            trackingUrlTemplate?:
                string;
            /** Price extension type of this extension. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__PriceOffer {
            /** Description text of this offer. */
            description?:
                string;
            /** A list of possible final mobile URLs after all cross domain redirects. */
            finalMobileUrls?:
                string[];
            /** A list of possible final URLs after all cross domain redirects. */
            finalUrls?:
                string[];
            /** Header text of this offer. */
            header?:
                string;
            /** Price value of this offer. */
            price?:
                GoogleAdsGoogleadsV12Common__Money;
            /** Price unit for this offer. */
            unit?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__PriceOffering {
            /** Required. The description of the price offering. The length of this string should be between 1 and 25, inclusive. */
            description?:
                string;
            /** The final mobile URL after all cross domain redirects. */
            finalMobileUrl?:
                string;
            /** Required. The final URL after all cross domain redirects. */
            finalUrl?:
                string;
            /** Required. The header of the price offering. The length of this string should be between 1 and 25, inclusive. */
            header?:
                string;
            /** Required. The price value of the price offering. */
            price?:
                GoogleAdsGoogleadsV12Common__Money;
            /** The price unit of the price offering. */
            unit?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ProductBiddingCategoryInfo {
            /** Two-letter upper-case country code of the product bidding category. It must match the campaign.shopping_setting.sales_country field. */
            countryCode?:
                string;
            /** ID of the product bidding category. This ID is equivalent to the google_product_category ID as described in this article: https://support.google.com/merchants/answer/6324436 */
            id?:
                string;
            /** Level of the product bidding category. */
            level?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ProductBrandInfo {
            /** String value of the product brand. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ProductChannelExclusivityInfo {
            /** Value of the availability. */
            channelExclusivity?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ProductChannelInfo {
            /** Value of the locality. */
            channel?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ProductConditionInfo {
            /** Value of the condition. */
            condition?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ProductCustomAttributeInfo {
            /** Indicates the index of the custom attribute. */
            index?:
                string;
            /** String value of the product custom attribute. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ProductGroupingInfo {
            /** String value of the product grouping. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ProductItemIdInfo {
            /** Value of the id. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ProductLabelsInfo {
            /** String value of the product labels. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ProductLegacyConditionInfo {
            /** String value of the product legacy condition. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ProductTypeFullInfo {
            /** String value of the product full type. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ProductTypeInfo {
            /** Level of the type. */
            level?:
                string;
            /** Value of the type. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__PromotionAsset {
            /** List of non-overlapping schedules specifying all time intervals for which the asset may serve. There can be a maximum of 6 schedules per day, 42 in total. */
            adScheduleTargets?:
                GoogleAdsGoogleadsV12Common__AdScheduleInfo[];
            /** A modifier for qualification of the discount. */
            discountModifier?:
                string;
            /** Last date of when this asset is effective and still serving, in yyyy-MM-dd format. */
            endDate?:
                string;
            /** The language of the promotion. Represented as BCP 47 language tag. */
            languageCode?:
                string;
            /** Money amount off for discount in the promotion. Either this or percent_off is required. */
            moneyAmountOff?:
                GoogleAdsGoogleadsV12Common__Money;
            /** The occasion the promotion was intended for. If an occasion is set, the redemption window will need to fall within the date range associated with the occasion. */
            occasion?:
                string;
            /** The amount the total order needs to be for the user to be eligible for the promotion. */
            ordersOverAmount?:
                GoogleAdsGoogleadsV12Common__Money;
            /** Percentage off discount in the promotion. 1,000,000 = 100%. Either this or money_amount_off is required. */
            percentOff?:
                string;
            /** A code the user should use in order to be eligible for the promotion. */
            promotionCode?:
                string;
            /** Required. A freeform description of what the promotion is targeting. */
            promotionTarget?:
                string;
            /** Last date of when the promotion is eligible to be redeemed, in yyyy-MM-dd format. */
            redemptionEndDate?:
                string;
            /** Start date of when the promotion is eligible to be redeemed, in yyyy-MM-dd format. */
            redemptionStartDate?:
                string;
            /** Start date of when this asset is effective and can begin serving, in yyyy-MM-dd format. */
            startDate?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__PromotionFeedItem {
            /** Enum that modifies the qualification of the discount. */
            discountModifier?:
                string;
            /** A list of possible final mobile URLs after all cross domain redirects. */
            finalMobileUrls?:
                string[];
            /** A list of possible final URLs after all cross domain redirects. This field is required. */
            finalUrls?:
                string[];
            /** URL template for appending params to landing page URLs served with parallel tracking. */
            finalUrlSuffix?:
                string;
            /** The language of the promotion. Represented as BCP 47 language tag. */
            languageCode?:
                string;
            /** Money amount off for discount in the promotion. Either this or percent_off is required. */
            moneyAmountOff?:
                GoogleAdsGoogleadsV12Common__Money;
            /** The occasion the promotion was intended for. If an occasion is set, the redemption window will need to fall within the date range associated with the occasion. */
            occasion?:
                string;
            /** The amount the total order needs to be for the user to be eligible for the promotion. */
            ordersOverAmount?:
                GoogleAdsGoogleadsV12Common__Money;
            /** Percentage off discount in the promotion in micros. One million is equivalent to one percent. Either this or money_off_amount is required. */
            percentOff?:
                string;
            /** A code the user should use in order to be eligible for the promotion. */
            promotionCode?:
                string;
            /** Last date when the promotion is eligible to be redeemed. */
            promotionEndDate?:
                string;
            /** Start date of when the promotion is eligible to be redeemed. */
            promotionStartDate?:
                string;
            /** A freeform description of what the promotion is targeting. This field is required. */
            promotionTarget?:
                string;
            /** URL template for constructing a tracking URL. */
            trackingUrlTemplate?:
                string;
            /** A list of mappings to be used for substituting URL custom parameter tags in the tracking_url_template, final_urls, and/or final_mobile_urls. */
            urlCustomParameters?:
                GoogleAdsGoogleadsV12Common__CustomParameter[];
        }
        interface GoogleAdsGoogleadsV12Common__ProximityInfo {
            /** Full address. */
            address?:
                GoogleAdsGoogleadsV12Common__AddressInfo;
            /** Latitude and longitude. */
            geoPoint?:
                GoogleAdsGoogleadsV12Common__GeoPointInfo;
            /** The radius of the proximity. */
            radius?:
                number;
            /** The unit of measurement of the radius. Default is KILOMETERS. */
            radiusUnits?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__RealTimeBiddingSetting {
            /** Whether the campaign is opted in to real-time bidding. */
            optIn?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Common__ResponsiveDisplayAdControlSpec {
            /** Whether the advertiser has opted into the asset enhancements feature. */
            enableAssetEnhancements?:
                boolean;
            /** Whether the advertiser has opted into auto-gen video feature. */
            enableAutogenVideo?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Common__ResponsiveDisplayAdInfo {
            /** The accent color of the ad in hexadecimal, for example, #ffffff for white. If one of `main_color` and `accent_color` is set, the other is required as well. */
            accentColor?:
                string;
            /**
             * Advertiser's consent to allow flexible color. When true, the ad may be served with different color if necessary. When false, the ad will be served with the specified colors or a
             * neutral color. The default value is `true`. Must be true if `main_color` and `accent_color` are not set.
             */
            allowFlexibleColor?:
                boolean;
            /** The advertiser/brand name. Maximum display width is 25. */
            businessName?:
                string;
            /** The call-to-action text for the ad. Maximum display width is 30. */
            callToActionText?:
                string;
            /** Specification for various creative controls. */
            controlSpec?:
                GoogleAdsGoogleadsV12Common__ResponsiveDisplayAdControlSpec;
            /** Descriptive texts for the ad. The maximum length is 90 characters. At least 1 and max 5 headlines can be specified. */
            descriptions?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** Specifies which format the ad will be served in. Default is ALL_FORMATS. */
            formatSetting?:
                string;
            /** Short format headlines for the ad. The maximum length is 30 characters. At least 1 and max 5 headlines can be specified. */
            headlines?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /**
             * Logo images to be used in the ad. Valid image types are GIF, JPEG, and PNG. The minimum size is 512x128 and the aspect ratio must be 4:1 (+-1%). Combined with `square_logo_images`,
             * the maximum is 5.
             */
            logoImages?:
                GoogleAdsGoogleadsV12Common__AdImageAsset[];
            /** A required long format headline. The maximum length is 90 characters. */
            longHeadline?:
                GoogleAdsGoogleadsV12Common__AdTextAsset;
            /** The main color of the ad in hexadecimal, for example, #ffffff for white. If one of `main_color` and `accent_color` is set, the other is required as well. */
            mainColor?:
                string;
            /**
             * Marketing images to be used in the ad. Valid image types are GIF, JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must be 1.91:1 (+-1%). At least one
             * `marketing_image` is required. Combined with `square_marketing_images`, the maximum is 15.
             */
            marketingImages?:
                GoogleAdsGoogleadsV12Common__AdImageAsset[];
            /** Prefix before price. For example, 'as low as'. */
            pricePrefix?:
                string;
            /** Promotion text used for dynamic formats of responsive ads. For example 'Free two-day shipping'. */
            promoText?:
                string;
            /**
             * Square logo images to be used in the ad. Valid image types are GIF, JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be 1:1 (+-1%). Combined with `logo_images`,
             * the maximum is 5.
             */
            squareLogoImages?:
                GoogleAdsGoogleadsV12Common__AdImageAsset[];
            /**
             * Square marketing images to be used in the ad. Valid image types are GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must be 1:1 (+-1%). At least one square
             * `marketing_image` is required. Combined with `marketing_images`, the maximum is 15.
             */
            squareMarketingImages?:
                GoogleAdsGoogleadsV12Common__AdImageAsset[];
            /** Optional YouTube videos for the ad. A maximum of 5 videos can be specified. */
            youtubeVideos?:
                GoogleAdsGoogleadsV12Common__AdVideoAsset[];
        }
        interface GoogleAdsGoogleadsV12Common__ResponsiveSearchAdInfo {
            /** List of text assets for descriptions. When the ad serves the descriptions will be selected from this list. */
            descriptions?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** List of text assets for headlines. When the ad serves the headlines will be selected from this list. */
            headlines?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** First part of text that can be appended to the URL in the ad. */
            path1?:
                string;
            /** Second part of text that can be appended to the URL in the ad. This field can only be set when `path1` is also set. */
            path2?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__RuleBasedUserListInfo {
            /**
             * User lists defined by combining two rules. There are two operators: AND, where the left and right operands have to be true; AND_NOT where left operand is true but right operand is
             * false.
             */
            combinedRuleUserList?:
                GoogleAdsGoogleadsV12Common__CombinedRuleUserListInfo;
            /** Visitors of a page. The page visit is defined by one boolean rule expression. */
            expressionRuleUserList?:
                GoogleAdsGoogleadsV12Common__ExpressionRuleUserListInfo;
            /**
             * Flexible rule representation of visitors with one or multiple actions. The flexible user list is defined by two lists of operands – inclusive_operands and exclusive_operands; each
             * operand represents a set of users based on actions they took in a given timeframe. These lists of operands are combined with the AND_NOT operator, so that users represented by the
             * inclusive operands are included in the user list, minus the users represented by the exclusive operands.
             */
            flexibleRuleUserList?:
                GoogleAdsGoogleadsV12Common__FlexibleRuleUserListInfo;
            /**
             * The status of pre-population. The field is default to NONE if not set which means the previous users will not be considered. If set to REQUESTED, past site visitors or app users who
             * match the list definition will be included in the list (works on the Display Network only). This will only add past users from within the last 30 days, depending on the list's
             * membership duration and the date when the remarketing tag is added. The status will be updated to FINISHED once request is processed, or FAILED if the request fails.
             */
            prepopulationStatus?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__Segments {
            /** Ad Destination type. */
            adDestinationType?:
                string;
            /** Ad network type. */
            adNetworkType?:
                string;
            /**
             * Only used with CustomerAsset, CampaignAsset and AdGroupAsset metrics. Indicates whether the interaction metrics occurred on the asset itself or a different asset or ad unit.
             * Interactions (for example, clicks) are counted across all the parts of the served ad (for example, Ad itself and other components like Sitelinks) when they are served together. When
             * interaction_on_this_asset is true, it means the interactions are on this specific asset and when interaction_on_this_asset is false, it means the interactions is not on this
             * specific asset but on other parts of the served ad this asset is served with.
             */
            assetInteractionTarget?:
                GoogleAdsGoogleadsV12Common__AssetInteractionTarget;
            /** Domain (visible URL) of a participant in the Auction Insights report. */
            auctionInsightDomain?:
                string;
            /** Budget campaign association status. */
            budgetCampaignAssociationStatus?:
                GoogleAdsGoogleadsV12Common__BudgetCampaignAssociationStatus;
            /** Click type. */
            clickType?:
                string;
            /** Resource name of the conversion action. */
            conversionAction?:
                string;
            /** Conversion action category. */
            conversionActionCategory?:
                string;
            /** Conversion action name. */
            conversionActionName?:
                string;
            /**
             * This segments your conversion columns by the original conversion and conversion value versus the delta if conversions were adjusted. False row has the data as originally stated;
             * While true row has the delta between data now and the data as originally stated. Summing the two together results post-adjustment data.
             */
            conversionAdjustment?:
                boolean;
            /** Conversion attribution event type. */
            conversionAttributionEventType?:
                string;
            /** An enum value representing the number of days between the impression and the conversion. */
            conversionLagBucket?:
                string;
            /** An enum value representing the number of days between the impression and the conversion or between the impression and adjustments to the conversion. */
            conversionOrAdjustmentLagBucket?:
                string;
            /**
             * Primary dimension of applied conversion value rules. NO_RULE_APPLIED shows the total recorded value of conversions that do not have a value rule applied. ORIGINAL shows the original
             * value of conversions to which a value rule has been applied. GEO_LOCATION, DEVICE, AUDIENCE show the net adjustment after value rules were applied.
             */
            conversionValueRulePrimaryDimension?:
                string;
            /** Date to which metrics apply. yyyy-MM-dd format, for example, 2018-04-17. */
            date?:
                string;
            /** Day of the week, for example, MONDAY. */
            dayOfWeek?:
                string;
            /** Device to which metrics apply. */
            device?:
                string;
            /** External conversion source. */
            externalConversionSource?:
                string;
            /** Resource name of the geo target constant that represents an airport. */
            geoTargetAirport?:
                string;
            /** Resource name of the geo target constant that represents a canton. */
            geoTargetCanton?:
                string;
            /** Resource name of the geo target constant that represents a city. */
            geoTargetCity?:
                string;
            /** Resource name of the geo target constant that represents a country. */
            geoTargetCountry?:
                string;
            /** Resource name of the geo target constant that represents a county. */
            geoTargetCounty?:
                string;
            /** Resource name of the geo target constant that represents a district. */
            geoTargetDistrict?:
                string;
            /** Resource name of the geo target constant that represents a metro. */
            geoTargetMetro?:
                string;
            /** Resource name of the geo target constant that represents the most specific location. */
            geoTargetMostSpecificLocation?:
                string;
            /** Resource name of the geo target constant that represents a postal code. */
            geoTargetPostalCode?:
                string;
            /** Resource name of the geo target constant that represents a province. */
            geoTargetProvince?:
                string;
            /** Resource name of the geo target constant that represents a region. */
            geoTargetRegion?:
                string;
            /** Resource name of the geo target constant that represents a state. */
            geoTargetState?:
                string;
            /** Hotel booking window in days. */
            hotelBookingWindowDays?:
                string;
            /** Hotel center ID. */
            hotelCenterId?:
                string;
            /** Hotel check-in date. Formatted as yyyy-MM-dd. */
            hotelCheckInDate?:
                string;
            /** Hotel check-in day of week. */
            hotelCheckInDayOfWeek?:
                string;
            /** Hotel city. */
            hotelCity?:
                string;
            /** Hotel class. */
            hotelClass?:
                number;
            /** Hotel country. */
            hotelCountry?:
                string;
            /** Hotel date selection type. */
            hotelDateSelectionType?:
                string;
            /** Hotel length of stay. */
            hotelLengthOfStay?:
                number;
            /** Hotel price bucket. */
            hotelPriceBucket?:
                string;
            /** Hotel rate rule ID. */
            hotelRateRuleId?:
                string;
            /** Hotel rate type. */
            hotelRateType?:
                string;
            /** Hotel state. */
            hotelState?:
                string;
            /** Hour of day as a number between 0 and 23, inclusive. */
            hour?:
                number;
            /** Only used with feed item metrics. Indicates whether the interaction metrics occurred on the feed item itself or a different extension or ad unit. */
            interactionOnThisExtension?:
                boolean;
            /** Keyword criterion. */
            keyword?:
                GoogleAdsGoogleadsV12Common__Keyword;
            /** Month as represented by the date of the first day of a month. Formatted as yyyy-MM-dd. */
            month?:
                string;
            /** Month of the year, for example, January. */
            monthOfYear?:
                string;
            /** Partner hotel ID. */
            partnerHotelId?:
                string;
            /** Placeholder type. This is only used with feed item metrics. */
            placeholderType?:
                string;
            /** Aggregator ID of the product. */
            productAggregatorId?:
                string;
            /** Bidding category (level 1) of the product. */
            productBiddingCategoryLevel1?:
                string;
            /** Bidding category (level 2) of the product. */
            productBiddingCategoryLevel2?:
                string;
            /** Bidding category (level 3) of the product. */
            productBiddingCategoryLevel3?:
                string;
            /** Bidding category (level 4) of the product. */
            productBiddingCategoryLevel4?:
                string;
            /** Bidding category (level 5) of the product. */
            productBiddingCategoryLevel5?:
                string;
            /** Brand of the product. */
            productBrand?:
                string;
            /** Channel of the product. */
            productChannel?:
                string;
            /** Channel exclusivity of the product. */
            productChannelExclusivity?:
                string;
            /** Condition of the product. */
            productCondition?:
                string;
            /** Resource name of the geo target constant for the country of sale of the product. */
            productCountry?:
                string;
            /** Custom attribute 0 of the product. */
            productCustomAttribute0?:
                string;
            /** Custom attribute 1 of the product. */
            productCustomAttribute1?:
                string;
            /** Custom attribute 2 of the product. */
            productCustomAttribute2?:
                string;
            /** Custom attribute 3 of the product. */
            productCustomAttribute3?:
                string;
            /** Custom attribute 4 of the product. */
            productCustomAttribute4?:
                string;
            /** Item ID of the product. */
            productItemId?:
                string;
            /** Resource name of the language constant for the language of the product. */
            productLanguage?:
                string;
            /** Merchant ID of the product. */
            productMerchantId?:
                string;
            /** Store ID of the product. */
            productStoreId?:
                string;
            /** Title of the product. */
            productTitle?:
                string;
            /** Type (level 1) of the product. */
            productTypeL1?:
                string;
            /** Type (level 2) of the product. */
            productTypeL2?:
                string;
            /** Type (level 3) of the product. */
            productTypeL3?:
                string;
            /** Type (level 4) of the product. */
            productTypeL4?:
                string;
            /** Type (level 5) of the product. */
            productTypeL5?:
                string;
            /**
             * Quarter as represented by the date of the first day of a quarter. Uses the calendar year for quarters, for example, the second quarter of 2018 starts on 2018-04-01. Formatted as
             * yyyy-MM-dd.
             */
            quarter?:
                string;
            /** Recommendation type. */
            recommendationType?:
                string;
            /** Type of the search engine results page. */
            searchEngineResultsPageType?:
                string;
            /** Match type of the keyword that triggered the ad, including variants. */
            searchTermMatchType?:
                string;
            /** iOS Store Kit Ad Network ad event type. */
            skAdNetworkAdEventType?:
                string;
            /** iOS Store Kit Ad Network attribution credit */
            skAdNetworkAttributionCredit?:
                string;
            /** iOS Store Kit Ad Network conversion value. Null value means this segment is not applicable, for example, non-iOS campaign. */
            skAdNetworkConversionValue?:
                string;
            /**
             * App where the ad that drove the iOS Store Kit Ad Network install was shown. Null value means this segment is not applicable, for example, non-iOS campaign, or was not present in any
             * postbacks sent by Apple.
             */
            skAdNetworkSourceApp?:
                GoogleAdsGoogleadsV12Common__SkAdNetworkSourceApp;
            /** iOS Store Kit Ad Network user type. */
            skAdNetworkUserType?:
                string;
            /** Position of the ad. */
            slot?:
                string;
            /** Resource name of the ad group criterion that represents webpage criterion. */
            webpage?:
                string;
            /** Week as defined as Monday through Sunday, and represented by the date of Monday. Formatted as yyyy-MM-dd. */
            week?:
                string;
            /** Year, formatted as yyyy. */
            year?:
                number;
        }
        interface GoogleAdsGoogleadsV12Common__ShoppingComparisonListingAdInfo {
            /** Headline of the ad. This field is required. Allowed length is between 25 and 45 characters. */
            headline?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__ShoppingLoyalty {
            /**
             * The membership tier. It is a free-form string as each merchant may have their own loyalty system. For example, it could be a number from 1 to 10, or a string such as "Golden" or
             * "Silver", or even empty string "".
             */
            loyaltyTier?:
                string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Common__ShoppingProductAdInfo {
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Common__ShoppingSmartAdInfo {
        }
        interface GoogleAdsGoogleadsV12Common__SimilarUserListInfo {
            /** Seed UserList from which this list is derived. */
            seedUserList?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__SitelinkAsset {
            /** List of non-overlapping schedules specifying all time intervals for which the asset may serve. There can be a maximum of 6 schedules per day, 42 in total. */
            adScheduleTargets?:
                GoogleAdsGoogleadsV12Common__AdScheduleInfo[];
            /** First line of the description for the sitelink. If set, the length should be between 1 and 35, inclusive, and description2 must also be set. */
            description1?:
                string;
            /** Second line of the description for the sitelink. If set, the length should be between 1 and 35, inclusive, and description1 must also be set. */
            description2?:
                string;
            /** Last date of when this asset is effective and still serving, in yyyy-MM-dd format. */
            endDate?:
                string;
            /** Required. URL display text for the sitelink. The length of this string should be between 1 and 25, inclusive. */
            linkText?:
                string;
            /** Start date of when this asset is effective and can begin serving, in yyyy-MM-dd format. */
            startDate?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__SitelinkFeedItem {
            /** A list of possible final mobile URLs after all cross domain redirects. */
            finalMobileUrls?:
                string[];
            /** A list of possible final URLs after all cross domain redirects. */
            finalUrls?:
                string[];
            /** Final URL suffix to be appended to landing page URLs served with parallel tracking. */
            finalUrlSuffix?:
                string;
            /** First line of the description for the sitelink. If this value is set, line2 must also be set. The length of this string should be between 0 and 35, inclusive. */
            line1?:
                string;
            /** Second line of the description for the sitelink. If this value is set, line1 must also be set. The length of this string should be between 0 and 35, inclusive. */
            line2?:
                string;
            /** URL display text for the sitelink. The length of this string should be between 1 and 25, inclusive. */
            linkText?:
                string;
            /** URL template for constructing a tracking URL. */
            trackingUrlTemplate?:
                string;
            /** A list of mappings to be used for substituting URL custom parameter tags in the tracking_url_template, final_urls, and/or final_mobile_urls. */
            urlCustomParameters?:
                GoogleAdsGoogleadsV12Common__CustomParameter[];
        }
        interface GoogleAdsGoogleadsV12Common__SkAdNetworkSourceApp {
            /** App id where the ad that drove the iOS Store Kit Ad Network install was shown. */
            skAdNetworkSourceAppId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__SmartCampaignAdInfo {
            /** List of text assets, each of which corresponds to a description when the ad serves. This list consists of a minimum of 2 and up to 4 text assets. */
            descriptions?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** List of text assets, each of which corresponds to a headline when the ad serves. This list consists of a minimum of 3 and up to 15 text assets. */
            headlines?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
        }
        interface GoogleAdsGoogleadsV12Common__StoreAttribute {
            /** Store code from https://support.google.com/business/answer/3370250#storecode */
            storeCode?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__StoreSalesMetadata {
            /**
             * Name of the store sales custom variable key. A predefined key that can be applied to the transaction and then later used for custom segmentation in reporting. Accessible only to
             * customers on the allow-list.
             */
            customKey?:
                string;
            /**
             * This is the fraction of all transactions that are identifiable (for example, associated with any form of customer information). Required. The fraction needs to be between 0 and 1
             * (excluding 0).
             */
            loyaltyFraction?:
                number;
            /** Metadata for a third party Store Sales upload. */
            thirdPartyMetadata?:
                GoogleAdsGoogleadsV12Common__StoreSalesThirdPartyMetadata;
            /**
             * This is the ratio of sales being uploaded compared to the overall sales that can be associated with a customer. Required. The fraction needs to be between 0 and 1 (excluding 0). For
             * example, if you upload half the sales that you are able to associate with a customer, this would be 0.5.
             */
            transactionUploadFraction?:
                number;
        }
        interface GoogleAdsGoogleadsV12Common__StoreSalesThirdPartyMetadata {
            /** Time the advertiser uploaded the data to the partner. Required. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30" */
            advertiserUploadDateTime?:
                string;
            /** Version of partner IDs to be used for uploads. Required. */
            bridgeMapVersionId?:
                string;
            /** ID of the third party partner updating the transaction feed. */
            partnerId?:
                string;
            /** The fraction of valid transactions that are matched to a third party assigned user ID on the partner side. Required. The fraction needs to be between 0 and 1 (excluding 0). */
            partnerMatchFraction?:
                number;
            /** The fraction of valid transactions that are uploaded by the partner to Google. Required. The fraction needs to be between 0 and 1 (excluding 0). */
            partnerUploadFraction?:
                number;
            /** The fraction of transactions that are valid. Invalid transactions may include invalid formats or values. Required. The fraction needs to be between 0 and 1 (excluding 0). */
            validTransactionFraction?:
                number;
        }
        interface GoogleAdsGoogleadsV12Common__StructuredSnippetAsset {
            /** Required. The header of the snippet. This string should be one of the predefined values at https://developers.google.com/google-ads/api/reference/data/structured-snippet-headers */
            header?:
                string;
            /** Required. The values in the snippet. The size of this collection should be between 3 and 10, inclusive. The length of each value should be between 1 and 25 characters, inclusive. */
            values?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__StructuredSnippetFeedItem {
            /** The header of the snippet. This string must not be empty. */
            header?:
                string;
            /** The values in the snippet. The maximum size of this collection is 10. */
            values?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__TagSnippet {
            /** The event snippet that works with the site tag to track actions that should be counted as conversions. */
            eventSnippet?:
                string;
            /** The site tag that adds visitors to your basic remarketing lists and sets new cookies on your domain. */
            globalSiteTag?:
                string;
            /** The format of the web page where the tracking tag and snippet will be installed, for example, HTML. */
            pageFormat?:
                string;
            /** The type of the generated tag snippets for tracking conversions. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__TargetCpa {
            /** Maximum bid limit that can be set by the bid strategy. The limit applies to all keywords managed by the strategy. This should only be set for portfolio bid strategies. */
            cpcBidCeilingMicros?:
                string;
            /** Minimum bid limit that can be set by the bid strategy. The limit applies to all keywords managed by the strategy. This should only be set for portfolio bid strategies. */
            cpcBidFloorMicros?:
                string;
            /** Average CPA target. This target should be greater than or equal to minimum billable unit based on the currency for the account. */
            targetCpaMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__TargetCpaSimulationPoint {
            /** Projected number of app installs. */
            appInstalls?:
                number;
            /** Projected number of biddable conversions. */
            biddableConversions?:
                number;
            /** Projected total value of biddable conversions. */
            biddableConversionsValue?:
                number;
            /** Projected number of clicks. */
            clicks?:
                string;
            /** Projected cost in micros. */
            costMicros?:
                string;
            /** Projected number of impressions. */
            impressions?:
                string;
            /** Projected number of in-app actions. */
            inAppActions?:
                number;
            /** Projected required daily budget that the advertiser must set in order to receive the estimated traffic, in micros of advertiser currency. */
            requiredBudgetAmountMicros?:
                string;
            /** The simulated target CPA upon which projected metrics are based. */
            targetCpaMicros?:
                string;
            /** The simulated scaling modifier upon which projected metrics are based. All CPA targets relevant to the simulated entity are scaled by this modifier. */
            targetCpaScalingModifier?:
                number;
            /** Projected number of top slot impressions. Only search advertising channel type supports this field. */
            topSlotImpressions?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__TargetCpaSimulationPointList {
            /** Projected metrics for a series of target CPA amounts. */
            points?:
                GoogleAdsGoogleadsV12Common__TargetCpaSimulationPoint[];
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Common__TargetCpm {
        }
        interface GoogleAdsGoogleadsV12Common__TargetImpressionShare {
            /** The highest CPC bid the automated bidding system is permitted to specify. This is a required field entered by the advertiser that sets the ceiling and specified in local micros. */
            cpcBidCeilingMicros?:
                string;
            /** The targeted location on the search results page. */
            location?:
                string;
            /** The chosen fraction of ads to be shown in the targeted location in micros. For example, 1% equals 10,000. */
            locationFractionMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__TargetImpressionShareSimulationPoint {
            /** Projected number of absolute top impressions. Only search advertising channel type supports this field. */
            absoluteTopImpressions?:
                string;
            /** Projected number of biddable conversions. */
            biddableConversions?:
                number;
            /** Projected total value of biddable conversions. */
            biddableConversionsValue?:
                number;
            /** Projected number of clicks. */
            clicks?:
                string;
            /** Projected cost in micros. */
            costMicros?:
                string;
            /** Projected number of impressions. */
            impressions?:
                string;
            /** Projected required daily budget that the advertiser must set in order to receive the estimated traffic, in micros of advertiser currency. */
            requiredBudgetAmountMicros?:
                string;
            /** Projected required daily cpc bid ceiling that the advertiser must set to realize this simulation, in micros of the advertiser currency. */
            requiredCpcBidCeilingMicros?:
                string;
            /**
             * The simulated target impression share value (in micros) upon which projected metrics are based. For example, 10% impression share, which is equal to 0.1, is stored as 100_000. This
             * value is validated and will not exceed 1M (100%).
             */
            targetImpressionShareMicros?:
                string;
            /** Projected number of top slot impressions. Only search advertising channel type supports this field. */
            topSlotImpressions?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__TargetImpressionShareSimulationPointList {
            /** Projected metrics for a specific target impression share value. */
            points?:
                GoogleAdsGoogleadsV12Common__TargetImpressionShareSimulationPoint[];
        }
        interface GoogleAdsGoogleadsV12Common__TargetingSetting {
            /**
             * The list of operations changing the target restrictions. Adding a target restriction with a targeting dimension that already exists causes the existing target restriction to be
             * replaced with the new value.
             */
            targetRestrictionOperations?:
                GoogleAdsGoogleadsV12Common__TargetRestrictionOperation[];
            /** The per-targeting-dimension setting to restrict the reach of your campaign or ad group. */
            targetRestrictions?:
                GoogleAdsGoogleadsV12Common__TargetRestriction[];
        }
        interface GoogleAdsGoogleadsV12Common__TargetRestriction {
            /**
             * Indicates whether to restrict your ads to show only for the criteria you have selected for this targeting_dimension, or to target all values for this targeting_dimension and show
             * ads based on your targeting in other TargetingDimensions. A value of `true` means that these criteria will only apply bid modifiers, and not affect targeting. A value of `false`
             * means that these criteria will restrict targeting as well as applying bid modifiers.
             */
            bidOnly?:
                boolean;
            /** The targeting dimension that these settings apply to. */
            targetingDimension?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__TargetRestrictionOperation {
            /** Type of list operation to perform. */
            operator?:
                string;
            /** The target restriction being added to or removed from the list. */
            value?:
                GoogleAdsGoogleadsV12Common__TargetRestriction;
        }
        interface GoogleAdsGoogleadsV12Common__TargetRoas {
            /** Maximum bid limit that can be set by the bid strategy. The limit applies to all keywords managed by the strategy. This should only be set for portfolio bid strategies. */
            cpcBidCeilingMicros?:
                string;
            /** Minimum bid limit that can be set by the bid strategy. The limit applies to all keywords managed by the strategy. This should only be set for portfolio bid strategies. */
            cpcBidFloorMicros?:
                string;
            /** Required. The chosen revenue (based on conversion data) per unit of spend. Value must be between 0.01 and 1000.0, inclusive. */
            targetRoas?:
                number;
        }
        interface GoogleAdsGoogleadsV12Common__TargetRoasSimulationPoint {
            /** Projected number of biddable conversions. */
            biddableConversions?:
                number;
            /** Projected total value of biddable conversions. */
            biddableConversionsValue?:
                number;
            /** Projected number of clicks. */
            clicks?:
                string;
            /** Projected cost in micros. */
            costMicros?:
                string;
            /** Projected number of impressions. */
            impressions?:
                string;
            /** Projected required daily budget that the advertiser must set in order to receive the estimated traffic, in micros of advertiser currency. */
            requiredBudgetAmountMicros?:
                string;
            /** The simulated target ROAS upon which projected metrics are based. */
            targetRoas?:
                number;
            /** Projected number of top slot impressions. Only Search advertising channel type supports this field. */
            topSlotImpressions?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__TargetRoasSimulationPointList {
            /** Projected metrics for a series of target ROAS amounts. */
            points?:
                GoogleAdsGoogleadsV12Common__TargetRoasSimulationPoint[];
        }
        interface GoogleAdsGoogleadsV12Common__TargetSpend {
            /** Maximum bid limit that can be set by the bid strategy. The limit applies to all keywords managed by the strategy. */
            cpcBidCeilingMicros?:
                string;
            /**
             * The spend target under which to maximize clicks. A TargetSpend bidder will attempt to spend the smaller of this value or the natural throttling spend amount. If not specified, the
             * budget is used as the spend target. This field is deprecated and should no longer be used. See https://ads-developers.googleblog.com/2020/05/reminder-about-sunset-creation-of.html
             * for details.
             */
            targetSpendMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__TextAdInfo {
            /** The first line of the ad's description. */
            description1?:
                string;
            /** The second line of the ad's description. */
            description2?:
                string;
            /** The headline of the ad. */
            headline?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__TextAsset {
            /** Text content of the text asset. */
            text?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__TextLabel {
            /**
             * Background color of the label in RGB format. This string must match the regular expression '^\#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$'. Note: The background color may not be visible for
             * manager accounts.
             */
            backgroundColor?:
                string;
            /** A short description of the label. The length must be no more than 200 characters. */
            description?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__TextMessageFeedItem {
            /** The business name to prepend to the message text. This field is required. */
            businessName?:
                string;
            /** Uppercase two-letter country code of the advertiser's phone number. This field is required. */
            countryCode?:
                string;
            /** The message extension_text populated in the messaging app. */
            extensionText?:
                string;
            /** The advertiser's phone number the message will be sent to. Required. */
            phoneNumber?:
                string;
            /** The text to show in the ad. This field is required. */
            text?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__TopicInfo {
            /**
             * The category to target or exclude. Each subsequent element in the array describes a more specific sub-category. For example, "Pets & Animals", "Pets", "Dogs" represents the "Pets &
             * Animals/Pets/Dogs" category.
             */
            path?:
                string[];
            /** The Topic Constant resource name. */
            topicConstant?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__TransactionAttribute {
            /** The resource name of conversion action to report conversions to. Required. */
            conversionAction?:
                string;
            /** Transaction currency code. ISO 4217 three-letter code is used. Required. */
            currencyCode?:
                string;
            /** Value of the custom variable for each transaction. Accessible only to customers on the allow-list. */
            customValue?:
                string;
            /** Item attributes of the transaction. */
            itemAttribute?:
                GoogleAdsGoogleadsV12Common__ItemAttribute;
            /** Transaction order id. Accessible only to customers on the allow-list. */
            orderId?:
                string;
            /** Store attributes of the transaction. Accessible only to customers on the allow-list. */
            storeAttribute?:
                GoogleAdsGoogleadsV12Common__StoreAttribute;
            /**
             * Transaction amount in micros. Required. Transaction amount in micros needs to be greater than 1000. If item Attributes are provided, it represents the total value of the items,
             * after multiplying the unit price per item by the quantity provided in the ItemAttributes.
             */
            transactionAmountMicros?:
                number;
            /**
             * Timestamp when transaction occurred. Required. The format is "YYYY-MM-DD HH:MM:SS[+/-HH:MM]", where [+/-HH:MM] is an optional timezone offset from UTC. If the offset is absent, the
             * API will use the account's timezone as default. Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30+03:00"
             */
            transactionDateTime?:
                string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Common__UnknownListingDimensionInfo {
        }
        interface GoogleAdsGoogleadsV12Common__UrlCollection {
            /** A list of possible final mobile URLs. */
            finalMobileUrls?:
                string[];
            /** A list of possible final URLs. */
            finalUrls?:
                string[];
            /** URL template for constructing a tracking URL. */
            trackingUrlTemplate?:
                string;
            /** Unique identifier for this UrlCollection instance. */
            urlCollectionId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__UserAttribute {
            /**
             * Timestamp when the user was acquired. The format is YYYY-MM-DD HH:MM:SS[+/-HH:MM], where [+/-HH:MM] is an optional timezone offset from UTC. If the offset is absent, the API will
             * use the account's timezone as default.
             */
            acquisitionDateTime?:
                string;
            /** Advertiser defined average number of purchases that are made by the user in a 30 day period. */
            averagePurchaseCount?:
                number;
            /** Advertiser defined average purchase value in micros for the user. */
            averagePurchaseValueMicros?:
                string;
            /** Optional. Advertiser defined events and their attributes. All the values in the nested fields are required. Currently this field is in beta. */
            eventAttribute?:
                GoogleAdsGoogleadsV12Common__EventAttribute[];
            /**
             * Optional. Timestamp of the first purchase made by the user. The format is YYYY-MM-DD HH:MM:SS[+/-HH:MM], where [+/-HH:MM] is an optional timezone offset from UTC. If the offset is
             * absent, the API will use the account's timezone as default.
             */
            firstPurchaseDateTime?:
                string;
            /**
             * Timestamp of the last purchase made by the user. The format is YYYY-MM-DD HH:MM:SS[+/-HH:MM], where [+/-HH:MM] is an optional timezone offset from UTC. If the offset is absent, the
             * API will use the account's timezone as default.
             */
            lastPurchaseDateTime?:
                string;
            /** Optional. Advertiser defined lifecycle stage for the user. The accepted values are "Lead", "Active" and "Churned". */
            lifecycleStage?:
                string;
            /**
             * Advertiser defined lifetime value bucket for the user. The valid range for a lifetime value bucket is from 1 (low) to 10 (high), except for remove operation where 0 will also be
             * accepted.
             */
            lifetimeValueBucket?:
                number;
            /** Advertiser defined lifetime value for the user. */
            lifetimeValueMicros?:
                string;
            /** The shopping loyalty related data. Shopping utilizes this data to provide users with a better experience. Accessible only to merchants on the allow-list with the user's consent. */
            shoppingLoyalty?:
                GoogleAdsGoogleadsV12Common__ShoppingLoyalty;
        }
        interface GoogleAdsGoogleadsV12Common__UserData {
            /** Additional transactions/attributes associated with the user. Required when updating store sales data. */
            transactionAttribute?:
                GoogleAdsGoogleadsV12Common__TransactionAttribute;
            /** Additional attributes associated with the user. Required when updating customer match attributes. These have an expiration of 540 days. */
            userAttribute?:
                GoogleAdsGoogleadsV12Common__UserAttribute;
            /** User identification info. Required. */
            userIdentifiers?:
                GoogleAdsGoogleadsV12Common__UserIdentifier[];
        }
        interface GoogleAdsGoogleadsV12Common__UserIdentifier {
            /** Address information. Accepted only for Customer Match, Store Sales, and ConversionAdjustmentUploadService. */
            addressInfo?:
                GoogleAdsGoogleadsV12Common__OfflineUserAddressInfo;
            /** Hashed email address using SHA-256 hash function after normalization. Accepted for Customer Match, Store Sales, ConversionUploadService, and ConversionAdjustmentUploadService. */
            hashedEmail?:
                string;
            /**
             * Hashed phone number using SHA-256 hash function after normalization (E164 standard). Accepted for Customer Match, Store Sales, ConversionUploadService, and
             * ConversionAdjustmentUploadService.
             */
            hashedPhoneNumber?:
                string;
            /** Mobile device ID (advertising ID/IDFA). Accepted only for Customer Match. */
            mobileId?:
                string;
            /** Advertiser-assigned user ID for Customer Match upload, or third-party-assigned user ID for Store Sales. Accepted only for Customer Match and Store Sales. */
            thirdPartyUserId?:
                string;
            /** Source of the user identifier when the upload is from Store Sales, ConversionUploadService, or ConversionAdjustmentUploadService. */
            userIdentifierSource?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__UserInterestInfo {
            /** The UserInterest resource name. */
            userInterestCategory?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__UserInterestSegment {
            /** The user interest resource. */
            userInterestCategory?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__UserListActionInfo {
            /** A conversion action that's not generated from remarketing. */
            conversionAction?:
                string;
            /** A remarketing action. */
            remarketingAction?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__UserListDateRuleItemInfo {
            /** The relative date value of the right hand side denoted by number of days offset from now. The value field will override this field when both are present. */
            offsetInDays?:
                string;
            /** Date comparison operator. This field is required and must be populated when creating new date rule item. */
            operator?:
                string;
            /** String representing date value to be compared with the rule variable. Supported date format is YYYY-MM-DD. Times are reported in the customer's time zone. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__UserListInfo {
            /** The User List resource name. */
            userList?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__UserListLogicalRuleInfo {
            /** The logical operator of the rule. */
            operator?:
                string;
            /** The list of operands of the rule. */
            ruleOperands?:
                GoogleAdsGoogleadsV12Common__LogicalUserListOperandInfo[];
        }
        interface GoogleAdsGoogleadsV12Common__UserListNumberRuleItemInfo {
            /** Number comparison operator. This field is required and must be populated when creating a new number rule item. */
            operator?:
                string;
            /** Number value to be compared with the variable. This field is required and must be populated when creating a new number rule item. */
            value?:
                number;
        }
        interface GoogleAdsGoogleadsV12Common__UserListRuleInfo {
            /** List of rule item groups that defines this rule. Rule item groups are grouped together based on rule_type. */
            ruleItemGroups?:
                GoogleAdsGoogleadsV12Common__UserListRuleItemGroupInfo[];
            /**
             * Rule type is used to determine how to group rule items. The default is OR of ANDs (disjunctive normal form). That is, rule items will be ANDed together within rule item groups and
             * the groups themselves will be ORed together. OR of ANDs is the only supported type for FlexibleRuleUserList.
             */
            ruleType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__UserListRuleItemGroupInfo {
            /** Rule items that will be grouped together based on rule_type. */
            ruleItems?:
                GoogleAdsGoogleadsV12Common__UserListRuleItemInfo[];
        }
        interface GoogleAdsGoogleadsV12Common__UserListRuleItemInfo {
            /** An atomic rule item composed of a date operation. */
            dateRuleItem?:
                GoogleAdsGoogleadsV12Common__UserListDateRuleItemInfo;
            /**
             * Rule variable name. It should match the corresponding key name fired by the pixel. A name must begin with US-ascii letters or underscore or UTF8 code that is greater than 127 and
             * consist of US-ascii letters or digits or underscore or UTF8 code that is greater than 127. For websites, there are two built-in variable URL (name = 'url__') and referrer URL (name
             * = 'ref_url__'). This field must be populated when creating a new rule item.
             */
            name?:
                string;
            /** An atomic rule item composed of a number operation. */
            numberRuleItem?:
                GoogleAdsGoogleadsV12Common__UserListNumberRuleItemInfo;
            /** An atomic rule item composed of a string operation. */
            stringRuleItem?:
                GoogleAdsGoogleadsV12Common__UserListStringRuleItemInfo;
        }
        interface GoogleAdsGoogleadsV12Common__UserListSegment {
            /** The user list resource. */
            userList?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__UserListStringRuleItemInfo {
            /** String comparison operator. This field is required and must be populated when creating a new string rule item. */
            operator?:
                string;
            /**
             * The right hand side of the string rule item. For URLs or referrer URLs, the value can not contain illegal URL chars such as newlines, quotes, tabs, or parentheses. This field is
             * required and must be populated when creating a new string rule item.
             */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__Value {
            /** A boolean. */
            booleanValue?:
                boolean;
            /** A double. */
            doubleValue?:
                number;
            /** A float. */
            floatValue?:
                number;
            /** An int64. */
            int64Value?:
                string;
            /** A string. */
            stringValue?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__VideoAdInfo {
            /** Video bumper in-stream ad format. */
            bumper?:
                GoogleAdsGoogleadsV12Common__VideoBumperInStreamAdInfo;
            /** In-feed video ad format. */
            inFeed?:
                GoogleAdsGoogleadsV12Common__InFeedVideoAdInfo;
            /** Video TrueView in-stream ad format. */
            inStream?:
                GoogleAdsGoogleadsV12Common__VideoTrueViewInStreamAdInfo;
            /** Video non-skippable in-stream ad format. */
            nonSkippable?:
                GoogleAdsGoogleadsV12Common__VideoNonSkippableInStreamAdInfo;
            /** Video out-stream ad format. */
            outStream?:
                GoogleAdsGoogleadsV12Common__VideoOutstreamAdInfo;
            /** The YouTube video assets used for the ad. */
            video?:
                GoogleAdsGoogleadsV12Common__AdVideoAsset;
        }
        interface GoogleAdsGoogleadsV12Common__VideoBumperInStreamAdInfo {
            /** The image assets of the companion banner used with the ad. */
            companionBanner?:
                GoogleAdsGoogleadsV12Common__AdImageAsset;
        }
        interface GoogleAdsGoogleadsV12Common__VideoNonSkippableInStreamAdInfo {
            /** Label on the "Call To Action" button taking the user to the video ad's final URL. */
            actionButtonLabel?:
                string;
            /** Additional text displayed with the "Call To Action" button to give context and encourage clicking on the button. */
            actionHeadline?:
                string;
            /** The image assets of the companion banner used with the ad. */
            companionBanner?:
                GoogleAdsGoogleadsV12Common__AdImageAsset;
        }
        interface GoogleAdsGoogleadsV12Common__VideoOutstreamAdInfo {
            /** The description line. */
            description?:
                string;
            /** The headline of the ad. */
            headline?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__VideoResponsiveAdInfo {
            /** First part of text that appears in the ad with the displayed URL. */
            breadcrumb1?:
                string;
            /** Second part of text that appears in the ad with the displayed URL. */
            breadcrumb2?:
                string;
            /** List of text assets used for the button, for example, the "Call To Action" button. Currently, only a single value for the button is supported. */
            callToActions?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** List of image assets used for the companion banner. Currently, only a single value for the companion banner asset is supported. */
            companionBanners?:
                GoogleAdsGoogleadsV12Common__AdImageAsset[];
            /** List of text assets used for the description. Currently, only a single value for the description is supported. */
            descriptions?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** List of text assets used for the short headline, for example, the "Call To Action" banner. Currently, only a single value for the short headline is supported. */
            headlines?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** List of text assets used for the long headline. Currently, only a single value for the long headline is supported. */
            longHeadlines?:
                GoogleAdsGoogleadsV12Common__AdTextAsset[];
            /** List of YouTube video assets used for the ad. Currently, only a single value for the YouTube video asset is supported. */
            videos?:
                GoogleAdsGoogleadsV12Common__AdVideoAsset[];
        }
        interface GoogleAdsGoogleadsV12Common__VideoTrueViewInStreamAdInfo {
            /** Label on the CTA (call-to-action) button taking the user to the video ad's final URL. Required for TrueView for action campaigns, optional otherwise. */
            actionButtonLabel?:
                string;
            /** Additional text displayed with the CTA (call-to-action) button to give context and encourage clicking on the button. */
            actionHeadline?:
                string;
            /** The image assets of the companion banner used with the ad. */
            companionBanner?:
                GoogleAdsGoogleadsV12Common__AdImageAsset;
        }
        interface GoogleAdsGoogleadsV12Common__WebhookDelivery {
            /** Webhook url specified by advertiser to send the lead. */
            advertiserWebhookUrl?:
                string;
            /** Anti-spoofing secret set by the advertiser as part of the webhook payload. */
            googleSecret?:
                string;
            /** The schema version that this delivery instance will use. */
            payloadSchemaVersion?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__WebpageConditionInfo {
            /** Argument of webpage targeting condition. */
            argument?:
                string;
            /** Operand of webpage targeting condition. */
            operand?:
                string;
            /** Operator of webpage targeting condition. */
            operator?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__WebpageInfo {
            /**
             * Conditions, or logical expressions, for webpage targeting. The list of webpage targeting conditions are and-ed together when evaluated for targeting. An empty list of conditions
             * indicates all pages of the campaign's website are targeted. This field is required for CREATE operations and is prohibited on UPDATE operations.
             */
            conditions?:
                GoogleAdsGoogleadsV12Common__WebpageConditionInfo[];
            /**
             * Website criteria coverage percentage. This is the computed percentage of website coverage based on the website target, negative website target and negative keywords in the ad group
             * and campaign. For instance, when coverage returns as 1, it indicates it has 100% coverage. This field is read-only.
             */
            coveragePercentage?:
                number;
            /**
             * The name of the criterion that is defined by this parameter. The name value will be used for identifying, sorting and filtering criteria with this type of parameters. This field is
             * required for CREATE operations and is prohibited on UPDATE operations.
             */
            criterionName?:
                string;
            /** List of sample urls that match the website target. This field is read-only. */
            sample?:
                GoogleAdsGoogleadsV12Common__WebpageSampleInfo;
        }
        interface GoogleAdsGoogleadsV12Common__WebpageSampleInfo {
            /** Webpage sample urls */
            sampleUrls?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common__YearMonth {
            /** The month of the year. (for example, FEBRUARY). */
            month?:
                string;
            /** The year (for example, 2020). */
            year?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__YearMonthRange {
            /** The inclusive end year month. */
            end?:
                GoogleAdsGoogleadsV12Common__YearMonth;
            /** The inclusive start year month. */
            start?:
                GoogleAdsGoogleadsV12Common__YearMonth;
        }
        interface GoogleAdsGoogleadsV12Common__YouTubeChannelInfo {
            /** The YouTube uploader channel id or the channel code of a YouTube channel. */
            channelId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__YoutubeVideoAsset {
            /** YouTube video id. This is the 11 character string value used in the YouTube video URL. */
            youtubeVideoId?:
                string;
            /** YouTube video title. */
            youtubeVideoTitle?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__YouTubeVideoInfo {
            /** YouTube video id as it appears on the YouTube watch page. */
            videoId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common_Operand_ConstantOperand {
            /** Boolean value of the operand if it is a boolean type. */
            booleanValue?:
                boolean;
            /** Double value of the operand if it is a double type. */
            doubleValue?:
                number;
            /** Int64 value of the operand if it is a int64 type. */
            longValue?:
                string;
            /** String value of the operand if it is a string type. */
            stringValue?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common_Operand_FeedAttributeOperand {
            /** Id of the referenced feed attribute. Required. */
            feedAttributeId?:
                string;
            /** The associated feed. Required. */
            feedId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common_Operand_FunctionOperand {
            /** The matching function held in this operand. */
            matchingFunction?:
                GoogleAdsGoogleadsV12Common__MatchingFunction;
        }
        interface GoogleAdsGoogleadsV12Common_Operand_RequestContextOperand {
            /** Type of value to be referred in the request context. */
            contextType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common_PolicyTopicConstraint_CountryConstraint {
            /** Geo target constant resource name of the country in which serving is constrained. */
            countryCriterion?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common_PolicyTopicConstraint_CountryConstraintList {
            /** Countries in which serving is restricted. */
            countries?:
                GoogleAdsGoogleadsV12Common_PolicyTopicConstraint_CountryConstraint[];
            /** Total number of countries targeted by the resource. */
            totalTargetedCountries?:
                number;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Common_PolicyTopicConstraint_ResellerConstraint {
        }
        interface GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_DestinationMismatch {
            /** The set of URLs that did not match each other. */
            urlTypes?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_DestinationNotWorking {
            /** The type of device that failed to load the URL. */
            device?:
                string;
            /** The type of DNS error. */
            dnsErrorType?:
                string;
            /** The full URL that didn't work. */
            expandedUrl?:
                string;
            /** The HTTP error code. */
            httpErrorCode?:
                string;
            /** The time the URL was last checked. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30" */
            lastCheckedDateTime?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_DestinationTextList {
            /** List of text found in the resource's destination page. */
            destinationTexts?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_TextList {
            /** The fragments of text from the resource that caused the policy finding. */
            texts?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_WebsiteList {
            /** Websites that caused the policy finding. */
            websites?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Errors__ErrorCode {
            /** The reasons for the access invitation error */
            accessInvitationError?:
                string;
            /** The reasons for account budget proposal errors. */
            accountBudgetProposalError?:
                string;
            /** The reasons for the account link status change error */
            accountLinkError?:
                string;
            /** The reasons for the ad customizer error */
            adCustomizerError?:
                string;
            /** An error with an Ad Group Ad mutate. */
            adError?:
                string;
            /** The reasons for the ad group ad error */
            adGroupAdError?:
                string;
            /** The reasons for the ad group bid modifier error */
            adGroupBidModifierError?:
                string;
            /** The reasons for the ad group criterion customizer error. */
            adGroupCriterionCustomizerError?:
                string;
            /** Indicates failure to properly authenticate user. */
            adGroupCriterionError?:
                string;
            /** The reasons for the ad group customizer error. */
            adGroupCustomizerError?:
                string;
            /** An error with an Ad Group mutate. */
            adGroupError?:
                string;
            /** The reasons for the ad group feed error */
            adGroupFeedError?:
                string;
            /** The reasons for the ad parameter error */
            adParameterError?:
                string;
            /** The reasons for the ad sharing error */
            adSharingError?:
                string;
            /** The reasons for the adx error */
            adxError?:
                string;
            /** The reasons for the asset error */
            assetError?:
                string;
            /** The reasons for the asset group asset error */
            assetGroupAssetError?:
                string;
            /** The reasons for the asset group error */
            assetGroupError?:
                string;
            /** The reasons for the asset group listing group filter error */
            assetGroupListingGroupFilterError?:
                string;
            /** The reasons for the asset link error */
            assetLinkError?:
                string;
            /** The reasons for the asset set asset error */
            assetSetAssetError?:
                string;
            /** The reasons for the asset set error */
            assetSetError?:
                string;
            /** The reasons for the asset set link error */
            assetSetLinkError?:
                string;
            /** The reasons for the audience error */
            audienceError?:
                string;
            /** The reasons for the Audience Insights error */
            audienceInsightsError?:
                string;
            /** Indicates failure to properly authenticate user. */
            authenticationError?:
                string;
            /** An error encountered when trying to authorize a user. */
            authorizationError?:
                string;
            /** The reasons for the batch job error */
            batchJobError?:
                string;
            /** The reasons for the bidding errors */
            biddingError?:
                string;
            /** An error with a Bidding Strategy mutate. */
            biddingStrategyError?:
                string;
            /** The reasons for the billing setup error */
            billingSetupError?:
                string;
            /** An error with a Campaign Budget mutate. */
            campaignBudgetError?:
                string;
            /** The reasons for the campaign conversion goal error */
            campaignConversionGoalError?:
                string;
            /** The reasons for the campaign criterion error */
            campaignCriterionError?:
                string;
            /** The reasons for the campaign customizer error. */
            campaignCustomizerError?:
                string;
            /** The reasons for the campaign draft error */
            campaignDraftError?:
                string;
            /** An error with a Campaign mutate. */
            campaignError?:
                string;
            /** The reasons for the campaign experiment error */
            campaignExperimentError?:
                string;
            /** The reasons for the campaign feed error */
            campaignFeedError?:
                string;
            /** The reasons for the campaign shared set error */
            campaignSharedSetError?:
                string;
            /** The reasons for the change event error */
            changeEventError?:
                string;
            /** The reasons for the change status error */
            changeStatusError?:
                string;
            /** The reasons for the collection size error */
            collectionSizeError?:
                string;
            /** The reasons for the context error */
            contextError?:
                string;
            /** The reasons for the conversion action error */
            conversionActionError?:
                string;
            /** The reasons for the conversion adjustment upload error */
            conversionAdjustmentUploadError?:
                string;
            /** The reasons for the conversion custom variable error */
            conversionCustomVariableError?:
                string;
            /** The reasons for the conversion goal campaign config error */
            conversionGoalCampaignConfigError?:
                string;
            /** The reasons for the conversion upload error */
            conversionUploadError?:
                string;
            /** The reasons for the conversion value rule error */
            conversionValueRuleError?:
                string;
            /** The reasons for the conversion value rule set error */
            conversionValueRuleSetError?:
                string;
            /** The reasons for the country code error */
            countryCodeError?:
                string;
            /** The reasons for the criterion error */
            criterionError?:
                string;
            /** The reasons for the currency code error */
            currencyCodeError?:
                string;
            /** The reasons for the custom audience error */
            customAudienceError?:
                string;
            /** The reasons for the custom conversion goal error */
            customConversionGoalError?:
                string;
            /** The reasons for the customer client link error */
            customerClientLinkError?:
                string;
            /** The reasons for the customer customizer error. */
            customerCustomizerError?:
                string;
            /** The reasons for the customer error */
            customerError?:
                string;
            /** The reasons for the customer feed error */
            customerFeedError?:
                string;
            /** The reasons for the customer manager link error */
            customerManagerLinkError?:
                string;
            /** The reasons for the customer user access mutate error */
            customerUserAccessError?:
                string;
            /** The reasons for the custom interest error */
            customInterestError?:
                string;
            /** The reasons for the customizer attribute error. */
            customizerAttributeError?:
                string;
            /** The reasons for the database error. */
            databaseError?:
                string;
            /** The reasons for the date error */
            dateError?:
                string;
            /** The reasons for the date range error */
            dateRangeError?:
                string;
            /** The reasons for the distinct error */
            distinctError?:
                string;
            /** The reason for enum error. */
            enumError?:
                string;
            /** The reasons for the experiment arm error */
            experimentArmError?:
                string;
            /** The reasons for the experiment error */
            experimentError?:
                string;
            /** The reasons for the extension feed item error */
            extensionFeedItemError?:
                string;
            /** The reasons for the extension setting error */
            extensionSettingError?:
                string;
            /** The reasons for the feed attribute reference error */
            feedAttributeReferenceError?:
                string;
            /** The reasons for the feed error */
            feedError?:
                string;
            /** The reasons for the feed item error */
            feedItemError?:
                string;
            /** The reasons for the feed item set error */
            feedItemSetError?:
                string;
            /** The reasons for the feed item set link error */
            feedItemSetLinkError?:
                string;
            /** The reasons for the feed item target error */
            feedItemTargetError?:
                string;
            /** The reasons for the feed item validation error */
            feedItemValidationError?:
                string;
            /** The reasons for the feed mapping error */
            feedMappingError?:
                string;
            /** The reasons for the field error */
            fieldError?:
                string;
            /** An error with a field mask */
            fieldMaskError?:
                string;
            /** The reasons for the function error */
            functionError?:
                string;
            /** The reasons for the function parsing error */
            functionParsingError?:
                string;
            /** The reasons for the geo target constant suggestion error. */
            geoTargetConstantSuggestionError?:
                string;
            /** The reasons for the header error. */
            headerError?:
                string;
            /** The reasons for the id error */
            idError?:
                string;
            /** The reasons for the image error */
            imageError?:
                string;
            /** An unexpected server-side error. */
            internalError?:
                string;
            /** The reasons for the invoice error */
            invoiceError?:
                string;
            /** The reason for keyword plan ad group error. */
            keywordPlanAdGroupError?:
                string;
            /** The reason for keyword plan ad group keyword error. */
            keywordPlanAdGroupKeywordError?:
                string;
            /** The reason for keyword plan campaign error. */
            keywordPlanCampaignError?:
                string;
            /** The reason for keyword plan campaign keyword error. */
            keywordPlanCampaignKeywordError?:
                string;
            /** The reason for keyword plan error. */
            keywordPlanError?:
                string;
            /** The reason for keyword idea error. */
            keywordPlanIdeaError?:
                string;
            /** The reason for the label error. */
            labelError?:
                string;
            /** The reasons for the language code error */
            languageCodeError?:
                string;
            /** An error with a list operation. */
            listOperationError?:
                string;
            /** The reasons for the manager link error */
            managerLinkError?:
                string;
            /** The reasons for the media bundle error */
            mediaBundleError?:
                string;
            /** The reasons for the media file error */
            mediaFileError?:
                string;
            /** The reasons for media uploading errors. */
            mediaUploadError?:
                string;
            /** Container for enum describing possible merchant center errors. */
            merchantCenterError?:
                string;
            /** The reasons for the multiplier error */
            multiplierError?:
                string;
            /** An error with a mutate */
            mutateError?:
                string;
            /** The reasons for the new resource creation error */
            newResourceCreationError?:
                string;
            /** The reasons for the not allowlisted error */
            notAllowlistedError?:
                string;
            /** The reasons for the not empty error */
            notEmptyError?:
                string;
            /** The reasons for the null error */
            nullError?:
                string;
            /** The reasons for the offline user data job error. */
            offlineUserDataJobError?:
                string;
            /** The reasons for the operation access denied error */
            operationAccessDeniedError?:
                string;
            /** The reasons for the operator error */
            operatorError?:
                string;
            /** The reasons for the mutate job error */
            partialFailureError?:
                string;
            /** The reasons for errors in payments accounts service */
            paymentsAccountError?:
                string;
            /** The reasons for the policy finding error. */
            policyFindingError?:
                string;
            /** The reasons for the policy validation parameter error */
            policyValidationParameterError?:
                string;
            /** The reasons for the policy violation error */
            policyViolationError?:
                string;
            /** An error with an AWQL query */
            queryError?:
                string;
            /** An error with the amount of quota remaining. */
            quotaError?:
                string;
            /** The reasons for the range error */
            rangeError?:
                string;
            /** The reasons for the reach plan error */
            reachPlanError?:
                string;
            /** The reasons for error in applying a recommendation */
            recommendationError?:
                string;
            /** The reasons for the region code error */
            regionCodeError?:
                string;
            /** An error caused by the request */
            requestError?:
                string;
            /** The reasons for the resource access denied error */
            resourceAccessDeniedError?:
                string;
            /** The reasons for the resource count limit exceeded error */
            resourceCountLimitExceededError?:
                string;
            /** The reasons for the setting error */
            settingError?:
                string;
            /** The reasons for the shared criterion error */
            sharedCriterionError?:
                string;
            /** The reasons for the shared set error */
            sharedSetError?:
                string;
            /** The reasons for the size limit error */
            sizeLimitError?:
                string;
            /** The reasons for the Smart campaign error */
            smartCampaignError?:
                string;
            /** The reasons for the string format error */
            stringFormatError?:
                string;
            /** The reasons for the string length error */
            stringLengthError?:
                string;
            /** The reasons for the third party app analytics link mutate error */
            thirdPartyAppAnalyticsLinkError?:
                string;
            /** The reasons for the time zone error */
            timeZoneError?:
                string;
            /** An error with a URL field mutate. */
            urlFieldError?:
                string;
            /** The reasons for the user data error. */
            userDataError?:
                string;
            /** The reasons for the user list error */
            userListError?:
                string;
            /** The reasons for YouTube video registration errors. */
            youtubeVideoRegistrationError?:
                string;
        }
        interface GoogleAdsGoogleadsV12Errors__ErrorDetails {
            /** Describes policy violation findings. */
            policyFindingDetails?:
                GoogleAdsGoogleadsV12Errors__PolicyFindingDetails;
            /** Describes an ad policy violation. */
            policyViolationDetails?:
                GoogleAdsGoogleadsV12Errors__PolicyViolationDetails;
            /** Details on the quota error, including the scope (account or developer), the rate bucket name and the retry delay. */
            quotaErrorDetails?:
                GoogleAdsGoogleadsV12Errors__QuotaErrorDetails;
            /** Details for a resource count limit exceeded error. */
            resourceCountDetails?:
                GoogleAdsGoogleadsV12Errors__ResourceCountDetails;
            /** The error code that should have been returned, but wasn't. This is used when the error code is not published in the client specified version. */
            unpublishedErrorCode?:
                string;
        }
        interface GoogleAdsGoogleadsV12Errors__ErrorLocation {
            /** A field path that indicates which field was invalid in the request. */
            fieldPathElements?:
                GoogleAdsGoogleadsV12Errors_ErrorLocation_FieldPathElement[];
        }
        interface GoogleAdsGoogleadsV12Errors__GoogleAdsError {
            /** Additional error details, which are returned by certain error codes. Most error codes do not include details. */
            details?:
                GoogleAdsGoogleadsV12Errors__ErrorDetails;
            /** An enum value that indicates which error occurred. */
            errorCode?:
                GoogleAdsGoogleadsV12Errors__ErrorCode;
            /** Describes the part of the request proto that caused the error. */
            location?:
                GoogleAdsGoogleadsV12Errors__ErrorLocation;
            /** A human-readable description of the error. */
            message?:
                string;
            /** The value that triggered the error. */
            trigger?:
                GoogleAdsGoogleadsV12Common__Value;
        }
        interface GoogleAdsGoogleadsV12Errors__GoogleAdsFailure {
            /** The list of errors that occurred. */
            errors?:
                GoogleAdsGoogleadsV12Errors__GoogleAdsError[];
            /** The unique ID of the request that is used for debugging purposes. */
            requestId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Errors__PolicyFindingDetails {
            /**
             * The list of policy topics for the resource. Contains the PROHIBITED or FULLY_LIMITED policy topic entries that prevented the resource from being saved (among any other entries the
             * resource may also have).
             */
            policyTopicEntries?:
                GoogleAdsGoogleadsV12Common__PolicyTopicEntry[];
        }
        interface GoogleAdsGoogleadsV12Errors__PolicyViolationDetails {
            /** Human readable description of policy violation. */
            externalPolicyDescription?:
                string;
            /** Human readable name of the policy. */
            externalPolicyName?:
                string;
            /** Whether user can file an exemption request for this violation. */
            isExemptible?:
                boolean;
            /** Unique identifier for this violation. If policy is exemptible, this key may be used to request exemption. */
            key?:
                GoogleAdsGoogleadsV12Common__PolicyViolationKey;
        }
        interface GoogleAdsGoogleadsV12Errors__QuotaErrorDetails {
            /** The high level description of the quota bucket. Examples are "Get requests for standard access" or "Requests per account". */
            rateName?:
                string;
            /** The rate scope of the quota limit. */
            rateScope?:
                string;
            /** Backoff period that customers should wait before sending next request. */
            retryDelay?:
                string;
        }
        interface GoogleAdsGoogleadsV12Errors__ResourceCountDetails {
            /** The ID of the resource whose limit was exceeded. External customer ID if the limit is for a customer. */
            enclosingId?:
                string;
            /** The name of the resource (Customer, Campaign etc.) whose limit was exceeded. */
            enclosingResource?:
                string;
            /** The count of existing entities. */
            existingCount?:
                number;
            /** The limit which was exceeded. */
            limit?:
                number;
            /** The resource limit type which was exceeded. */
            limitType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Errors_ErrorLocation_FieldPathElement {
            /** The name of a field or a oneof */
            fieldName?:
                string;
            /** If field_name is a repeated field, this is the element that failed */
            index?:
                number;
        }
        interface GoogleAdsGoogleadsV12Resources__AccessibleBiddingStrategy {
            /** Output only. The ID of the bidding strategy. */
            id?:
                string;
            /** Output only. An automated bidding strategy to help get the most conversions for your campaigns while spending your budget. */
            maximizeConversions?:
                GoogleAdsGoogleadsV12Resources_AccessibleBiddingStrategy_MaximizeConversions;
            /** Output only. An automated bidding strategy to help get the most conversion value for your campaigns while spending your budget. */
            maximizeConversionValue?:
                GoogleAdsGoogleadsV12Resources_AccessibleBiddingStrategy_MaximizeConversionValue;
            /** Output only. The name of the bidding strategy. */
            name?:
                string;
            /** Output only. The ID of the Customer which owns the bidding strategy. */
            ownerCustomerId?:
                string;
            /** Output only. descriptive_name of the Customer which owns the bidding strategy. */
            ownerDescriptiveName?:
                string;
            /**
             * Output only. The resource name of the accessible bidding strategy. AccessibleBiddingStrategy resource names have the form:
             * `customers/{customer_id}/accessibleBiddingStrategies/{bidding_strategy_id}`
             */
            resourceName?:
                string;
            /** Output only. A bidding strategy that sets bids to help get as many conversions as possible at the target cost-per-acquisition (CPA) you set. */
            targetCpa?:
                GoogleAdsGoogleadsV12Resources_AccessibleBiddingStrategy_TargetCpa;
            /** Output only. A bidding strategy that automatically optimizes towards a chosen percentage of impressions. */
            targetImpressionShare?:
                GoogleAdsGoogleadsV12Resources_AccessibleBiddingStrategy_TargetImpressionShare;
            /** Output only. A bidding strategy that helps you maximize revenue while averaging a specific target Return On Ad Spend (ROAS). */
            targetRoas?:
                GoogleAdsGoogleadsV12Resources_AccessibleBiddingStrategy_TargetRoas;
            /** Output only. A bid strategy that sets your bids to help get as many clicks as possible within your budget. */
            targetSpend?:
                GoogleAdsGoogleadsV12Resources_AccessibleBiddingStrategy_TargetSpend;
            /** Output only. The type of the bidding strategy. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AccountBudget {
            /**
             * Output only. The adjusted spending limit in micros. One million is equivalent to one unit. If the approved spending limit is finite, the adjusted spending limit may vary depending
             * on the types of adjustments applied to this budget, if applicable. The different kinds of adjustments are described here: https://support.google.com/google-ads/answer/1704323 For
             * example, a debit adjustment reduces how much the account is allowed to spend.
             */
            adjustedSpendingLimitMicros?:
                string;
            /**
             * Output only. The adjusted spending limit as a well-defined type, for example, INFINITE. This will only be populated if the adjusted spending limit is INFINITE, which is guaranteed
             * to be true if the approved spending limit is INFINITE.
             */
            adjustedSpendingLimitType?:
                string;
            /**
             * Output only. The value of Ads that have been served, in micros. This includes overdelivery costs, in which case a credit might be automatically applied to the budget (see
             * total_adjustments_micros).
             */
            amountServedMicros?:
                string;
            /** Output only. The approved end time in yyyy-MM-dd HH:mm:ss format. */
            approvedEndDateTime?:
                string;
            /** Output only. The approved end time as a well-defined type, for example, FOREVER. */
            approvedEndTimeType?:
                string;
            /**
             * Output only. The approved spending limit in micros. One million is equivalent to one unit. This will only be populated if the proposed spending limit is finite, and will always be
             * greater than or equal to the proposed spending limit.
             */
            approvedSpendingLimitMicros?:
                string;
            /** Output only. The approved spending limit as a well-defined type, for example, INFINITE. This will only be populated if the approved spending limit is INFINITE. */
            approvedSpendingLimitType?:
                string;
            /**
             * Output only. The approved start time of the account-level budget in yyyy-MM-dd HH:mm:ss format. For example, if a new budget is approved after the proposed start time, the approved
             * start time is the time of approval.
             */
            approvedStartDateTime?:
                string;
            /**
             * Output only. The resource name of the billing setup associated with this account-level budget. BillingSetup resource names have the form:
             * `customers/{customer_id}/billingSetups/{billing_setup_id}`
             */
            billingSetup?:
                string;
            /** Output only. The ID of the account-level budget. */
            id?:
                string;
            /** Output only. The name of the account-level budget. */
            name?:
                string;
            /** Output only. Notes associated with the budget. */
            notes?:
                string;
            /** Output only. The pending proposal to modify this budget, if applicable. */
            pendingProposal?:
                GoogleAdsGoogleadsV12Resources_AccountBudget_PendingAccountBudgetProposal;
            /** Output only. The proposed end time in yyyy-MM-dd HH:mm:ss format. */
            proposedEndDateTime?:
                string;
            /** Output only. The proposed end time as a well-defined type, for example, FOREVER. */
            proposedEndTimeType?:
                string;
            /** Output only. The proposed spending limit in micros. One million is equivalent to one unit. */
            proposedSpendingLimitMicros?:
                string;
            /** Output only. The proposed spending limit as a well-defined type, for example, INFINITE. */
            proposedSpendingLimitType?:
                string;
            /** Output only. The proposed start time of the account-level budget in yyyy-MM-dd HH:mm:ss format. If a start time type of NOW was proposed, this is the time of request. */
            proposedStartDateTime?:
                string;
            /** Output only. A purchase order number is a value that helps users reference this budget in their monthly invoices. */
            purchaseOrderNumber?:
                string;
            /** Output only. The resource name of the account-level budget. AccountBudget resource names have the form: `customers/{customer_id}/accountBudgets/{account_budget_id}` */
            resourceName?:
                string;
            /** Output only. The status of this account-level budget. */
            status?:
                string;
            /** Output only. The total adjustments amount. An example of an adjustment is courtesy credits. */
            totalAdjustmentsMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AccountBudgetProposal {
            /** Immutable. The resource name of the account-level budget associated with this proposal. */
            accountBudget?:
                string;
            /** Output only. The date time when this account-level budget was approved, if applicable. */
            approvalDateTime?:
                string;
            /** Output only. The approved end date time in yyyy-mm-dd hh:mm:ss format. */
            approvedEndDateTime?:
                string;
            /** Output only. The approved end date time as a well-defined type, for example, FOREVER. */
            approvedEndTimeType?:
                string;
            /** Output only. The approved spending limit in micros. One million is equivalent to one unit. */
            approvedSpendingLimitMicros?:
                string;
            /** Output only. The approved spending limit as a well-defined type, for example, INFINITE. */
            approvedSpendingLimitType?:
                string;
            /** Output only. The approved start date time in yyyy-mm-dd hh:mm:ss format. */
            approvedStartDateTime?:
                string;
            /** Immutable. The resource name of the billing setup associated with this proposal. */
            billingSetup?:
                string;
            /** Output only. The date time when this account-level budget proposal was created, which is not the same as its approval date time, if applicable. */
            creationDateTime?:
                string;
            /** Output only. The ID of the proposal. */
            id?:
                string;
            /** Immutable. The type of this proposal, for example, END to end the budget associated with this proposal. */
            proposalType?:
                string;
            /** Immutable. The proposed end date time in yyyy-mm-dd hh:mm:ss format. */
            proposedEndDateTime?:
                string;
            /** Immutable. The proposed end date time as a well-defined type, for example, FOREVER. */
            proposedEndTimeType?:
                string;
            /** Immutable. The name to assign to the account-level budget. */
            proposedName?:
                string;
            /** Immutable. Notes associated with this budget. */
            proposedNotes?:
                string;
            /** Immutable. A purchase order number is a value that enables the user to help them reference this budget in their monthly invoices. */
            proposedPurchaseOrderNumber?:
                string;
            /** Immutable. The proposed spending limit in micros. One million is equivalent to one unit. */
            proposedSpendingLimitMicros?:
                string;
            /** Immutable. The proposed spending limit as a well-defined type, for example, INFINITE. */
            proposedSpendingLimitType?:
                string;
            /** Immutable. The proposed start date time in yyyy-mm-dd hh:mm:ss format. */
            proposedStartDateTime?:
                string;
            /** Immutable. The proposed start date time as a well-defined type, for example, NOW. */
            proposedStartTimeType?:
                string;
            /** Immutable. The resource name of the proposal. AccountBudgetProposal resource names have the form: `customers/{customer_id}/accountBudgetProposals/{account_budget_proposal_id}` */
            resourceName?:
                string;
            /** Output only. The status of this proposal. When a new proposal is created, the status defaults to PENDING. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AccountLink {
            /** Output only. The ID of the link. This field is read only. */
            accountLinkId?:
                string;
            /** Output only. Advertising Partner link */
            advertisingPartner?:
                GoogleAdsGoogleadsV12Resources__AdvertisingPartnerLinkIdentifier;
            /** Output only. Data partner link. */
            dataPartner?:
                GoogleAdsGoogleadsV12Resources__DataPartnerLinkIdentifier;
            /** Output only. Google Ads link. */
            googleAds?:
                GoogleAdsGoogleadsV12Resources__GoogleAdsLinkIdentifier;
            /** Output only. Hotel link */
            hotelCenter?:
                GoogleAdsGoogleadsV12Resources__HotelCenterLinkIdentifier;
            /** Immutable. Resource name of the account link. AccountLink resource names have the form: `customers/{customer_id}/accountLinks/{account_link_id}` */
            resourceName?:
                string;
            /** The status of the link. */
            status?:
                string;
            /** Immutable. A third party app analytics link. */
            thirdPartyAppAnalytics?:
                GoogleAdsGoogleadsV12Resources__ThirdPartyAppAnalyticsLinkIdentifier;
            /** Output only. The type of the linked account. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__Ad {
            /**
             * Output only. Indicates if this ad was automatically added by Google Ads and not by a user. For example, this could happen when ads are automatically created as suggestions for new
             * ads based on knowledge of how existing ads are performing.
             */
            addedByGoogleAds?:
                boolean;
            /** Details pertaining to an app ad. */
            appAd?:
                GoogleAdsGoogleadsV12Common__AppAdInfo;
            /** Details pertaining to an app engagement ad. */
            appEngagementAd?:
                GoogleAdsGoogleadsV12Common__AppEngagementAdInfo;
            /** Details pertaining to an app pre-registration ad. */
            appPreRegistrationAd?:
                GoogleAdsGoogleadsV12Common__AppPreRegistrationAdInfo;
            /** Details pertaining to a call ad. */
            callAd?:
                GoogleAdsGoogleadsV12Common__CallAdInfo;
            /**
             * The device preference for the ad. You can only specify a preference for mobile devices. When this preference is set the ad will be preferred over other ads when being displayed on a
             * mobile device. The ad can still be displayed on other device types, for example, if no other ads are available. If unspecified (no device preference), all devices are targeted. This
             * is only supported by some ad types.
             */
            devicePreference?:
                string;
            /** Details pertaining to a discovery carousel ad. */
            discoveryCarouselAd?:
                GoogleAdsGoogleadsV12Common__DiscoveryCarouselAdInfo;
            /** Details pertaining to a discovery multi asset ad. */
            discoveryMultiAssetAd?:
                GoogleAdsGoogleadsV12Common__DiscoveryMultiAssetAdInfo;
            /** Details pertaining to a display upload ad. */
            displayUploadAd?:
                GoogleAdsGoogleadsV12Common__DisplayUploadAdInfo;
            /** The URL that appears in the ad description for some ad formats. */
            displayUrl?:
                string;
            /**
             * Immutable. Details pertaining to an Expanded Dynamic Search Ad. This type of ad has its headline, final URLs, and display URL auto-generated at serving time according to domain name
             * specific information provided by `dynamic_search_ads_setting` linked at the campaign level.
             */
            expandedDynamicSearchAd?:
                GoogleAdsGoogleadsV12Common__ExpandedDynamicSearchAdInfo;
            /** Details pertaining to an expanded text ad. */
            expandedTextAd?:
                GoogleAdsGoogleadsV12Common__ExpandedTextAdInfo;
            /** A list of final app URLs that will be used on mobile if the user has the specific app installed. */
            finalAppUrls?:
                GoogleAdsGoogleadsV12Common__FinalAppUrl[];
            /** The list of possible final mobile URLs after all cross-domain redirects for the ad. */
            finalMobileUrls?:
                string[];
            /** The list of possible final URLs after all cross-domain redirects for the ad. */
            finalUrls?:
                string[];
            /** The suffix to use when constructing a final URL. */
            finalUrlSuffix?:
                string;
            /** Details pertaining to a hotel ad. */
            hotelAd?:
                any;
            /** Output only. The ID of the ad. */
            id?:
                string;
            /** Immutable. Details pertaining to an Image ad. */
            imageAd?:
                GoogleAdsGoogleadsV12Common__ImageAdInfo;
            /** Immutable. Details pertaining to a legacy app install ad. */
            legacyAppInstallAd?:
                GoogleAdsGoogleadsV12Common__LegacyAppInstallAdInfo;
            /** Details pertaining to a legacy responsive display ad. */
            legacyResponsiveDisplayAd?:
                GoogleAdsGoogleadsV12Common__LegacyResponsiveDisplayAdInfo;
            /** Details pertaining to a local ad. */
            localAd?:
                GoogleAdsGoogleadsV12Common__LocalAdInfo;
            /**
             * Immutable. The name of the ad. This is only used to be able to identify the ad. It does not need to be unique and does not affect the served ad. The name field is currently only
             * supported for DisplayUploadAd, ImageAd, ShoppingComparisonListingAd and VideoAd.
             */
            name?:
                string;
            /** Immutable. The resource name of the ad. Ad resource names have the form: `customers/{customer_id}/ads/{ad_id}` */
            resourceName?:
                string;
            /** Details pertaining to a responsive display ad. */
            responsiveDisplayAd?:
                GoogleAdsGoogleadsV12Common__ResponsiveDisplayAdInfo;
            /** Details pertaining to a responsive search ad. */
            responsiveSearchAd?:
                GoogleAdsGoogleadsV12Common__ResponsiveSearchAdInfo;
            /** Details pertaining to a Shopping Comparison Listing ad. */
            shoppingComparisonListingAd?:
                GoogleAdsGoogleadsV12Common__ShoppingComparisonListingAdInfo;
            /** Details pertaining to a Shopping product ad. */
            shoppingProductAd?:
                any;
            /** Details pertaining to a Smart Shopping ad. */
            shoppingSmartAd?:
                any;
            /** Details pertaining to a Smart campaign ad. */
            smartCampaignAd?:
                GoogleAdsGoogleadsV12Common__SmartCampaignAdInfo;
            /** Output only. If this ad is system managed, then this field will indicate the source. This field is read-only. */
            systemManagedResourceSource?:
                string;
            /** Immutable. Details pertaining to a text ad. */
            textAd?:
                GoogleAdsGoogleadsV12Common__TextAdInfo;
            /** The URL template for constructing a tracking URL. */
            trackingUrlTemplate?:
                string;
            /** Output only. The type of ad. */
            type?:
                string;
            /** Additional URLs for the ad that are tagged with a unique identifier that can be referenced from other fields in the ad. */
            urlCollections?:
                GoogleAdsGoogleadsV12Common__UrlCollection[];
            /**
             * The list of mappings that can be used to substitute custom parameter tags in a `tracking_url_template`, `final_urls`, or `mobile_final_urls`. For mutates, use url custom parameter
             * operations.
             */
            urlCustomParameters?:
                GoogleAdsGoogleadsV12Common__CustomParameter[];
            /** Details pertaining to a Video ad. */
            videoAd?:
                GoogleAdsGoogleadsV12Common__VideoAdInfo;
            /** Details pertaining to a Video responsive ad. */
            videoResponsiveAd?:
                GoogleAdsGoogleadsV12Common__VideoResponsiveAdInfo;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroup {
            /** The ad rotation mode of the ad group. */
            adRotationMode?:
                string;
            /** Immutable. Setting for audience related features. */
            audienceSetting?:
                GoogleAdsGoogleadsV12Resources_AdGroup_AudienceSetting;
            /**
             * Output only. For draft or experiment ad groups, this field is the resource name of the base ad group from which this ad group was created. If a draft or experiment ad group does not
             * have a base ad group, then this field is null. For base ad groups, this field equals the ad group resource name. This field is read-only.
             */
            baseAdGroup?:
                string;
            /** Immutable. The campaign to which the ad group belongs. */
            campaign?:
                string;
            /** The maximum CPC (cost-per-click) bid. */
            cpcBidMicros?:
                string;
            /** The maximum CPM (cost-per-thousand viewable impressions) bid. */
            cpmBidMicros?:
                string;
            /** The CPV (cost-per-view) bid. */
            cpvBidMicros?:
                string;
            /** Allows advertisers to specify a targeting dimension on which to place absolute bids. This is only applicable for campaigns that target only the display network and not search. */
            displayCustomBidDimension?:
                string;
            /**
             * Output only. Value will be same as that of the CPC (cost-per-click) bid value when the bidding strategy is one of manual cpc, enhanced cpc, page one promoted or target outrank
             * share, otherwise the value will be null.
             */
            effectiveCpcBidMicros?:
                string;
            /** Output only. The effective target CPA (cost-per-acquisition). This field is read-only. */
            effectiveTargetCpaMicros?:
                string;
            /** Output only. Source of the effective target CPA. This field is read-only. */
            effectiveTargetCpaSource?:
                string;
            /** Output only. The effective target ROAS (return-on-ad-spend). This field is read-only. */
            effectiveTargetRoas?:
                number;
            /** Output only. Source of the effective target ROAS. This field is read-only. */
            effectiveTargetRoasSource?:
                string;
            /** The asset field types that should be excluded from this ad group. Asset links with these field types will not be inherited by this ad group from the upper levels. */
            excludedParentAssetFieldTypes?:
                string[];
            /**
             * The asset set types that should be excluded from this ad group. Asset set links with these types will not be inherited by this ad group from the upper levels. Location group types
             * (GMB_DYNAMIC_LOCATION_GROUP, CHAIN_DYNAMIC_LOCATION_GROUP, and STATIC_LOCATION_GROUP) are child types of LOCATION_SYNC. Therefore, if LOCATION_SYNC is set for this field, all
             * location group asset sets are not allowed to be linked to this ad group, and all Location Extension (LE) and Affiliate Location Extensions (ALE) will not be served under this ad
             * group. Only LOCATION_SYNC is currently supported.
             */
            excludedParentAssetSetTypes?:
                string[];
            /** Settings for the Display Campaign Optimizer, initially termed "Explorer". */
            explorerAutoOptimizerSetting?:
                GoogleAdsGoogleadsV12Common__ExplorerAutoOptimizerSetting;
            /** URL template for appending params to Final URL. */
            finalUrlSuffix?:
                string;
            /** Output only. The ID of the ad group. */
            id?:
                string;
            /** Output only. The resource names of labels attached to this ad group. */
            labels?:
                string[];
            /**
             * The name of the ad group. This field is required and should not be empty when creating new ad groups. It must contain fewer than 255 UTF-8 full-width characters. It must not contain
             * any null (code point 0x0), NL line feed (code point 0xA) or carriage return (code point 0xD) characters.
             */
            name?:
                string;
            /**
             * The percent cpc bid amount, expressed as a fraction of the advertised price for some good or service. The valid range for the fraction is [0,1) and the value stored here is
             * 1,000,000 * [fraction].
             */
            percentCpcBidMicros?:
                string;
            /** Immutable. The resource name of the ad group. Ad group resource names have the form: `customers/{customer_id}/adGroups/{ad_group_id}` */
            resourceName?:
                string;
            /** The status of the ad group. */
            status?:
                string;
            /**
             * The target CPA (cost-per-acquisition). If the ad group's campaign bidding strategy is TargetCpa or MaximizeConversions (with its target_cpa field set), then this field overrides the
             * target CPA specified in the campaign's bidding strategy. Otherwise, this value is ignored.
             */
            targetCpaMicros?:
                string;
            /** Average amount in micros that the advertiser is willing to pay for every thousand times the ad is shown. */
            targetCpmMicros?:
                string;
            /** Setting for targeting related features. */
            targetingSetting?:
                GoogleAdsGoogleadsV12Common__TargetingSetting;
            /**
             * The target ROAS (return-on-ad-spend) override. If the ad group's campaign bidding strategy is TargetRoas or MaximizeConversionValue (with its target_roas field set), then this field
             * overrides the target ROAS specified in the campaign's bidding strategy. Otherwise, this value is ignored.
             */
            targetRoas?:
                number;
            /** The URL template for constructing a tracking URL. */
            trackingUrlTemplate?:
                string;
            /** Immutable. The type of the ad group. */
            type?:
                string;
            /** The list of mappings used to substitute custom parameter tags in a `tracking_url_template`, `final_urls`, or `mobile_final_urls`. */
            urlCustomParameters?:
                GoogleAdsGoogleadsV12Common__CustomParameter[];
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupAd {
            /** Output only. A list of recommendations to improve the ad strength. For example, a recommendation could be "Try adding a few more unique headlines or unpinning some assets.". */
            actionItems?:
                string[];
            /** Immutable. The ad. */
            ad?:
                GoogleAdsGoogleadsV12Resources__Ad;
            /** Immutable. The ad group to which the ad belongs. */
            adGroup?:
                string;
            /** Output only. Overall ad strength for this ad group ad. */
            adStrength?:
                string;
            /** Output only. The resource names of labels attached to this ad group ad. */
            labels?:
                string[];
            /** Output only. Policy information for the ad. */
            policySummary?:
                GoogleAdsGoogleadsV12Resources__AdGroupAdPolicySummary;
            /** Immutable. The resource name of the ad. Ad group ad resource names have the form: `customers/{customer_id}/adGroupAds/{ad_group_id}~{ad_id}` */
            resourceName?:
                string;
            /** The status of the ad. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupAdAssetCombinationView {
            /**
             * Output only. The status between the asset combination and the latest version of the ad. If true, the asset combination is linked to the latest version of the ad. If false, it means
             * the link once existed but has been removed and is no longer present in the latest version of the ad.
             */
            enabled?:
                boolean;
            // tslint:disable:max-line-length
            /**
             * Output only. The resource name of the ad group ad asset combination view. The combination ID is 128 bits long, where the upper 64 bits are stored in asset_combination_id_high, and
             * the lower 64 bits are stored in asset_combination_id_low. AdGroupAd Asset Combination view resource names have the form:
             * `customers/{customer_id}/adGroupAdAssetCombinationViews/{AdGroupAd.ad_group_id}~{AdGroupAd.ad.ad_id}~{AssetCombination.asset_combination_id_low}~{AssetCombination.asset_combination_id_high}`
             */
            // tslint:enable:max-line-length
            resourceName?:
                string;
            /** Output only. Served assets. */
            servedAssets?:
                GoogleAdsGoogleadsV12Common__AssetUsage[];
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupAdAssetPolicySummary {
            /** Output only. The overall approval status of this ad group ad asset, calculated based on the status of its individual policy topic entries. */
            approvalStatus?:
                string;
            /** Output only. The list of policy findings for the ad group ad asset. */
            policyTopicEntries?:
                GoogleAdsGoogleadsV12Common__PolicyTopicEntry[];
            /** Output only. Where in the review process this ad group ad asset is. */
            reviewStatus?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupAdAssetView {
            /** Output only. The ad group ad to which the asset is linked. */
            adGroupAd?:
                string;
            /** Output only. The asset which is linked to the ad group ad. */
            asset?:
                string;
            /**
             * Output only. The status between the asset and the latest version of the ad. If true, the asset is linked to the latest version of the ad. If false, it means the link once existed
             * but has been removed and is no longer present in the latest version of the ad.
             */
            enabled?:
                boolean;
            /** Output only. Role that the asset takes in the ad. */
            fieldType?:
                string;
            /** Output only. Performance of an asset linkage. */
            performanceLabel?:
                string;
            /** Output only. Pinned field. */
            pinnedField?:
                string;
            /** Output only. Policy information for the ad group ad asset. */
            policySummary?:
                GoogleAdsGoogleadsV12Resources__AdGroupAdAssetPolicySummary;
            /**
             * Output only. The resource name of the ad group ad asset view. Ad group ad asset view resource names have the form (Before V4):
             * `customers/{customer_id}/adGroupAdAssets/{AdGroupAdAsset.ad_group_id}~{AdGroupAdAsset.ad.ad_id}~{AdGroupAdAsset.asset_id}~{AdGroupAdAsset.field_type}` Ad group ad asset view
             * resource names have the form (Beginning from V4):
             * `customers/{customer_id}/adGroupAdAssetViews/{AdGroupAdAsset.ad_group_id}~{AdGroupAdAsset.ad_id}~{AdGroupAdAsset.asset_id}~{AdGroupAdAsset.field_type}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupAdLabel {
            /** Immutable. The ad group ad to which the label is attached. */
            adGroupAd?:
                string;
            /** Immutable. The label assigned to the ad group ad. */
            label?:
                string;
            /** Immutable. The resource name of the ad group ad label. Ad group ad label resource names have the form: `customers/{customer_id}/adGroupAdLabels/{ad_group_id}~{ad_id}~{label_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupAdPolicySummary {
            /** Output only. The overall approval status of this ad, calculated based on the status of its individual policy topic entries. */
            approvalStatus?:
                string;
            /** Output only. The list of policy findings for this ad. */
            policyTopicEntries?:
                GoogleAdsGoogleadsV12Common__PolicyTopicEntry[];
            /** Output only. Where in the review process this ad is. */
            reviewStatus?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupAsset {
            /** Required. Immutable. The ad group to which the asset is linked. */
            adGroup?:
                string;
            /** Required. Immutable. The asset which is linked to the ad group. */
            asset?:
                string;
            /** Required. Immutable. Role that the asset takes under the linked ad group. */
            fieldType?:
                string;
            /** Immutable. The resource name of the ad group asset. AdGroupAsset resource names have the form: `customers/{customer_id}/adGroupAssets/{ad_group_id}~{asset_id}~{field_type}` */
            resourceName?:
                string;
            /** Output only. Source of the adgroup asset link. */
            source?:
                string;
            /** Status of the ad group asset. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupAssetSet {
            /** Immutable. The ad group to which this asset set is linked. */
            adGroup?:
                string;
            /** Immutable. The asset set which is linked to the ad group. */
            assetSet?:
                string;
            /** Immutable. The resource name of the ad group asset set. Ad group asset set resource names have the form: `customers/{customer_id}/adGroupAssetSets/{ad_group_id}~{asset_set_id}` */
            resourceName?:
                string;
            /** Output only. The status of the ad group asset set. Read-only. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupAudienceView {
            /**
             * Output only. The resource name of the ad group audience view. Ad group audience view resource names have the form:
             * `customers/{customer_id}/adGroupAudienceViews/{ad_group_id}~{criterion_id}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupBidModifier {
            /** Immutable. The ad group to which this criterion belongs. */
            adGroup?:
                string;
            /**
             * Output only. The base ad group from which this draft/trial adgroup bid modifier was created. If ad_group is a base ad group then this field will be equal to ad_group. If the ad
             * group was created in the draft or trial and has no corresponding base ad group, then this field will be null. This field is readonly.
             */
            baseAdGroup?:
                string;
            /** The modifier for the bid when the criterion matches. The modifier must be in the range: 0.1 - 10.0. The range is 1.0 - 6.0 for PreferredContent. Use 0 to opt out of a Device type. */
            bidModifier?:
                number;
            /** Output only. Bid modifier source. */
            bidModifierSource?:
                string;
            /** Output only. The ID of the criterion to bid modify. This field is ignored for mutates. */
            criterionId?:
                string;
            /** Immutable. A device criterion. */
            device?:
                GoogleAdsGoogleadsV12Common__DeviceInfo;
            /** Immutable. Criterion for number of days prior to the stay the booking is being made. */
            hotelAdvanceBookingWindow?:
                GoogleAdsGoogleadsV12Common__HotelAdvanceBookingWindowInfo;
            /** Immutable. Criterion for a hotel check-in date range. */
            hotelCheckInDateRange?:
                GoogleAdsGoogleadsV12Common__HotelCheckInDateRangeInfo;
            /** Immutable. Criterion for day of the week the booking is for. */
            hotelCheckInDay?:
                GoogleAdsGoogleadsV12Common__HotelCheckInDayInfo;
            /** Immutable. Criterion for hotel date selection (default dates versus user selected). */
            hotelDateSelectionType?:
                GoogleAdsGoogleadsV12Common__HotelDateSelectionTypeInfo;
            /** Immutable. Criterion for length of hotel stay in nights. */
            hotelLengthOfStay?:
                GoogleAdsGoogleadsV12Common__HotelLengthOfStayInfo;
            /** Immutable. A preferred content criterion. */
            preferredContent?:
                GoogleAdsGoogleadsV12Common__PreferredContentInfo;
            /**
             * Immutable. The resource name of the ad group bid modifier. Ad group bid modifier resource names have the form:
             * `customers/{customer_id}/adGroupBidModifiers/{ad_group_id}~{criterion_id}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupCriterion {
            /** Immutable. The ad group to which the criterion belongs. */
            adGroup?:
                string;
            /** Immutable. Age range. */
            ageRange?:
                GoogleAdsGoogleadsV12Common__AgeRangeInfo;
            /** Immutable. App Payment Model. */
            appPaymentModel?:
                GoogleAdsGoogleadsV12Common__AppPaymentModelInfo;
            /** Output only. Approval status of the criterion. */
            approvalStatus?:
                string;
            /** Immutable. Audience. */
            audience?:
                GoogleAdsGoogleadsV12Common__AudienceInfo;
            /** The modifier for the bid when the criterion matches. The modifier must be in the range: 0.1 - 10.0. Most targetable criteria types support modifiers. */
            bidModifier?:
                number;
            /** Immutable. Combined Audience. */
            combinedAudience?:
                GoogleAdsGoogleadsV12Common__CombinedAudienceInfo;
            /** The CPC (cost-per-click) bid. */
            cpcBidMicros?:
                string;
            /** The CPM (cost-per-thousand viewable impressions) bid. */
            cpmBidMicros?:
                string;
            /** The CPV (cost-per-view) bid. */
            cpvBidMicros?:
                string;
            /** Output only. The ID of the criterion. This field is ignored for mutates. */
            criterionId?:
                string;
            /** Immutable. Custom Affinity. */
            customAffinity?:
                GoogleAdsGoogleadsV12Common__CustomAffinityInfo;
            /** Immutable. Custom Audience. */
            customAudience?:
                GoogleAdsGoogleadsV12Common__CustomAudienceInfo;
            /** Immutable. Custom Intent. */
            customIntent?:
                GoogleAdsGoogleadsV12Common__CustomIntentInfo;
            /**
             * Output only. List of disapproval reasons of the criterion. The different reasons for disapproving a criterion can be found here: https://support.google.com/adspolicy/answer/6008942
             * This field is read-only.
             */
            disapprovalReasons?:
                string[];
            /** Output only. The display name of the criterion. This field is ignored for mutates. */
            displayName?:
                string;
            /** Output only. The effective CPC (cost-per-click) bid. */
            effectiveCpcBidMicros?:
                string;
            /** Output only. Source of the effective CPC bid. */
            effectiveCpcBidSource?:
                string;
            /** Output only. The effective CPM (cost-per-thousand viewable impressions) bid. */
            effectiveCpmBidMicros?:
                string;
            /** Output only. Source of the effective CPM bid. */
            effectiveCpmBidSource?:
                string;
            /** Output only. The effective CPV (cost-per-view) bid. */
            effectiveCpvBidMicros?:
                string;
            /** Output only. Source of the effective CPV bid. */
            effectiveCpvBidSource?:
                string;
            /** Output only. The effective Percent CPC bid amount. */
            effectivePercentCpcBidMicros?:
                string;
            /** Output only. Source of the effective Percent CPC bid. */
            effectivePercentCpcBidSource?:
                string;
            /** The list of possible final mobile URLs after all cross-domain redirects. */
            finalMobileUrls?:
                string[];
            /** The list of possible final URLs after all cross-domain redirects for the ad. */
            finalUrls?:
                string[];
            /** URL template for appending params to final URL. */
            finalUrlSuffix?:
                string;
            /** Immutable. Gender. */
            gender?:
                GoogleAdsGoogleadsV12Common__GenderInfo;
            /** Immutable. Income range. */
            incomeRange?:
                GoogleAdsGoogleadsV12Common__IncomeRangeInfo;
            /** Immutable. Keyword. */
            keyword?:
                GoogleAdsGoogleadsV12Common__KeywordInfo;
            /** Output only. The resource names of labels attached to this ad group criterion. */
            labels?:
                string[];
            /** Immutable. Listing group. */
            listingGroup?:
                GoogleAdsGoogleadsV12Common__ListingGroupInfo;
            /** Immutable. Mobile app category. */
            mobileAppCategory?:
                GoogleAdsGoogleadsV12Common__MobileAppCategoryInfo;
            /** Immutable. Mobile application. */
            mobileApplication?:
                GoogleAdsGoogleadsV12Common__MobileApplicationInfo;
            /** Immutable. Whether to target (`false`) or exclude (`true`) the criterion. This field is immutable. To switch a criterion from positive to negative, remove then re-add it. */
            negative?:
                boolean;
            /** Immutable. Parental status. */
            parentalStatus?:
                GoogleAdsGoogleadsV12Common__ParentalStatusInfo;
            /**
             * The CPC bid amount, expressed as a fraction of the advertised price for some good or service. The valid range for the fraction is [0,1) and the value stored here is 1,000,000 *
             * [fraction].
             */
            percentCpcBidMicros?:
                string;
            /** Immutable. Placement. */
            placement?:
                GoogleAdsGoogleadsV12Common__PlacementInfo;
            /** Output only. Estimates for criterion bids at various positions. */
            positionEstimates?:
                GoogleAdsGoogleadsV12Resources_AdGroupCriterion_PositionEstimates;
            /** Output only. Information regarding the quality of the criterion. */
            qualityInfo?:
                GoogleAdsGoogleadsV12Resources_AdGroupCriterion_QualityInfo;
            /** Immutable. The resource name of the ad group criterion. Ad group criterion resource names have the form: `customers/{customer_id}/adGroupCriteria/{ad_group_id}~{criterion_id}` */
            resourceName?:
                string;
            /**
             * The status of the criterion. This is the status of the ad group criterion entity, set by the client. Note: UI reports may incorporate additional information that affects whether a
             * criterion is eligible to run. In some cases a criterion that's REMOVED in the API can still show as enabled in the UI. For example, campaigns by default show to users of all age
             * ranges unless excluded. The UI will show each age range as "enabled", since they're eligible to see the ads; but AdGroupCriterion.status will show "removed", since no positive
             * criterion was added.
             */
            status?:
                string;
            /** Output only. Serving status of the criterion. */
            systemServingStatus?:
                string;
            /** Immutable. Topic. */
            topic?:
                GoogleAdsGoogleadsV12Common__TopicInfo;
            /** The URL template for constructing a tracking URL. */
            trackingUrlTemplate?:
                string;
            /** Output only. The type of the criterion. */
            type?:
                string;
            /** The list of mappings used to substitute custom parameter tags in a `tracking_url_template`, `final_urls`, or `mobile_final_urls`. */
            urlCustomParameters?:
                GoogleAdsGoogleadsV12Common__CustomParameter[];
            /** Immutable. User Interest. */
            userInterest?:
                GoogleAdsGoogleadsV12Common__UserInterestInfo;
            /**
             * Immutable. User List. The Similar Audiences sunset starts May 2023. Refer to https://ads-developers.googleblog.com/2022/11/announcing-deprecation-and-sunset-of.html for other
             * options.
             */
            userList?:
                GoogleAdsGoogleadsV12Common__UserListInfo;
            /** Immutable. Webpage */
            webpage?:
                GoogleAdsGoogleadsV12Common__WebpageInfo;
            /** Immutable. YouTube Channel. */
            youtubeChannel?:
                GoogleAdsGoogleadsV12Common__YouTubeChannelInfo;
            /** Immutable. YouTube Video. */
            youtubeVideo?:
                GoogleAdsGoogleadsV12Common__YouTubeVideoInfo;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupCriterionCustomizer {
            /** Immutable. The ad group criterion to which the customizer attribute is linked. It must be a keyword criterion. */
            adGroupCriterion?:
                string;
            /** Required. Immutable. The customizer attribute which is linked to the ad group criterion. */
            customizerAttribute?:
                string;
            /**
             * Immutable. The resource name of the ad group criterion customizer. Ad group criterion customizer resource names have the form:
             * `customers/{customer_id}/adGroupCriterionCustomizers/{ad_group_id}~{criterion_id}~{customizer_attribute_id}`
             */
            resourceName?:
                string;
            /** Output only. The status of the ad group criterion customizer. */
            status?:
                string;
            /** Required. The value to associate with the customizer attribute at this level. The value must be of the type specified for the CustomizerAttribute. */
            value?:
                GoogleAdsGoogleadsV12Common__CustomizerValue;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupCriterionLabel {
            /** Immutable. The ad group criterion to which the label is attached. */
            adGroupCriterion?:
                string;
            /** Immutable. The label assigned to the ad group criterion. */
            label?:
                string;
            /**
             * Immutable. The resource name of the ad group criterion label. Ad group criterion label resource names have the form:
             * `customers/{customer_id}/adGroupCriterionLabels/{ad_group_id}~{criterion_id}~{label_id}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupCriterionSimulation {
            /** Output only. AdGroup ID of the simulation. */
            adGroupId?:
                string;
            /** Output only. Simulation points if the simulation type is CPC_BID. */
            cpcBidPointList?:
                GoogleAdsGoogleadsV12Common__CpcBidSimulationPointList;
            /** Output only. Criterion ID of the simulation. */
            criterionId?:
                string;
            /** Output only. Last day on which the simulation is based, in YYYY-MM-DD format. */
            endDate?:
                string;
            /** Output only. How the simulation modifies the field. */
            modificationMethod?:
                string;
            /** Output only. Simulation points if the simulation type is PERCENT_CPC_BID. */
            percentCpcBidPointList?:
                GoogleAdsGoogleadsV12Common__PercentCpcBidSimulationPointList;
            /**
             * Output only. The resource name of the ad group criterion simulation. Ad group criterion simulation resource names have the form:
             * `customers/{customer_id}/adGroupCriterionSimulations/{ad_group_id}~{criterion_id}~{type}~{modification_method}~{start_date}~{end_date}`
             */
            resourceName?:
                string;
            /** Output only. First day on which the simulation is based, in YYYY-MM-DD format. */
            startDate?:
                string;
            /** Output only. The field that the simulation modifies. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupCustomizer {
            /** Immutable. The ad group to which the customizer attribute is linked. */
            adGroup?:
                string;
            /** Required. Immutable. The customizer attribute which is linked to the ad group. */
            customizerAttribute?:
                string;
            /**
             * Immutable. The resource name of the ad group customizer. Ad group customizer resource names have the form:
             * `customers/{customer_id}/adGroupCustomizers/{ad_group_id}~{customizer_attribute_id}`
             */
            resourceName?:
                string;
            /** Output only. The status of the ad group customizer. */
            status?:
                string;
            /** Required. The value to associate with the customizer attribute at this level. The value must be of the type specified for the CustomizerAttribute. */
            value?:
                GoogleAdsGoogleadsV12Common__CustomizerValue;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupExtensionSetting {
            /**
             * Immutable. The resource name of the ad group. The linked extension feed items will serve under this ad group. AdGroup resource names have the form:
             * `customers/{customer_id}/adGroups/{ad_group_id}`
             */
            adGroup?:
                string;
            /** The device for which the extensions will serve. Optional. */
            device?:
                string;
            /**
             * The resource names of the extension feed items to serve under the ad group. ExtensionFeedItem resource names have the form:
             * `customers/{customer_id}/extensionFeedItems/{feed_item_id}`
             */
            extensionFeedItems?:
                string[];
            /** Immutable. The extension type of the ad group extension setting. */
            extensionType?:
                string;
            /**
             * Immutable. The resource name of the ad group extension setting. AdGroupExtensionSetting resource names have the form:
             * `customers/{customer_id}/adGroupExtensionSettings/{ad_group_id}~{extension_type}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupFeed {
            /** Immutable. The ad group being linked to the feed. */
            adGroup?:
                string;
            /** Immutable. The feed being linked to the ad group. */
            feed?:
                string;
            /** Matching function associated with the AdGroupFeed. The matching function is used to filter the set of feed items selected. Required. */
            matchingFunction?:
                GoogleAdsGoogleadsV12Common__MatchingFunction;
            /** Indicates which placeholder types the feed may populate under the connected ad group. Required. */
            placeholderTypes?:
                string[];
            /** Immutable. The resource name of the ad group feed. Ad group feed resource names have the form: `customers/{customer_id}/adGroupFeeds/{ad_group_id}~{feed_id} */
            resourceName?:
                string;
            /** Output only. Status of the ad group feed. This field is read-only. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupLabel {
            /** Immutable. The ad group to which the label is attached. */
            adGroup?:
                string;
            /** Immutable. The label assigned to the ad group. */
            label?:
                string;
            /** Immutable. The resource name of the ad group label. Ad group label resource names have the form: `customers/{customer_id}/adGroupLabels/{ad_group_id}~{label_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdGroupSimulation {
            /** Output only. Ad group id of the simulation. */
            adGroupId?:
                string;
            /** Output only. Simulation points if the simulation type is CPC_BID. */
            cpcBidPointList?:
                GoogleAdsGoogleadsV12Common__CpcBidSimulationPointList;
            /** Output only. Simulation points if the simulation type is CPV_BID. */
            cpvBidPointList?:
                GoogleAdsGoogleadsV12Common__CpvBidSimulationPointList;
            /** Output only. Last day on which the simulation is based, in YYYY-MM-DD format */
            endDate?:
                string;
            /** Output only. How the simulation modifies the field. */
            modificationMethod?:
                string;
            /**
             * Output only. The resource name of the ad group simulation. Ad group simulation resource names have the form:
             * `customers/{customer_id}/adGroupSimulations/{ad_group_id}~{type}~{modification_method}~{start_date}~{end_date}`
             */
            resourceName?:
                string;
            /** Output only. First day on which the simulation is based, in YYYY-MM-DD format. */
            startDate?:
                string;
            /** Output only. Simulation points if the simulation type is TARGET_CPA. */
            targetCpaPointList?:
                GoogleAdsGoogleadsV12Common__TargetCpaSimulationPointList;
            /** Output only. Simulation points if the simulation type is TARGET_ROAS. */
            targetRoasPointList?:
                GoogleAdsGoogleadsV12Common__TargetRoasSimulationPointList;
            /** Output only. The field that the simulation modifies. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdParameter {
            /** Immutable. The ad group criterion that this ad parameter belongs to. */
            adGroupCriterion?:
                string;
            /**
             * Numeric value to insert into the ad text. The following restrictions apply: - Can use comma or period as a separator, with an optional period or comma (respectively) for fractional
             * values. For example, 1,000,000.00 and 2.000.000,10 are valid. - Can be prepended or appended with a currency symbol. For example, $99.99 is valid. - Can be prepended or appended
             * with a currency code. For example, 99.99USD and EUR200 are valid. - Can use '%'. For example, 1.0% and 1,0% are valid. - Can use plus or minus. For example, -10.99 and 25+ are
             * valid. - Can use '/' between two numbers. For example 4/1 and 0.95/0.45 are valid.
             */
            insertionText?:
                string;
            /** Immutable. The unique index of this ad parameter. Must be either 1 or 2. */
            parameterIndex?:
                string;
            /** Immutable. The resource name of the ad parameter. Ad parameter resource names have the form: `customers/{customer_id}/adParameters/{ad_group_id}~{criterion_id}~{parameter_index}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdScheduleView {
            /** Output only. The resource name of the ad schedule view. AdSchedule view resource names have the form: `customers/{customer_id}/adScheduleViews/{campaign_id}~{criterion_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AdvertisingPartnerLinkIdentifier {
            /**
             * Immutable. The resource name of the advertising partner Google Ads account. This field is required and should not be empty when creating a new Advertising Partner link. It is unable
             * to be modified after the creation of the link.
             */
            customer?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AgeRangeView {
            /** Output only. The resource name of the age range view. Age range view resource names have the form: `customers/{customer_id}/ageRangeViews/{ad_group_id}~{criterion_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__Asset {
            /** A book on google asset. */
            bookOnGoogleAsset?:
                any;
            /** A call asset. */
            callAsset?:
                GoogleAdsGoogleadsV12Common__CallAsset;
            /** A callout asset. */
            calloutAsset?:
                GoogleAdsGoogleadsV12Common__CalloutAsset;
            /** Immutable. A call to action asset. */
            callToActionAsset?:
                GoogleAdsGoogleadsV12Common__CallToActionAsset;
            /** Immutable. A discovery carousel card asset. */
            discoveryCarouselCardAsset?:
                GoogleAdsGoogleadsV12Common__DiscoveryCarouselCardAsset;
            /** A dynamic custom asset. */
            dynamicCustomAsset?:
                GoogleAdsGoogleadsV12Common__DynamicCustomAsset;
            /** A dynamic education asset. */
            dynamicEducationAsset?:
                GoogleAdsGoogleadsV12Common__DynamicEducationAsset;
            /** A dynamic flights asset. */
            dynamicFlightsAsset?:
                GoogleAdsGoogleadsV12Common__DynamicFlightsAsset;
            /** A dynamic hotels and rentals asset. */
            dynamicHotelsAndRentalsAsset?:
                GoogleAdsGoogleadsV12Common__DynamicHotelsAndRentalsAsset;
            /** A dynamic jobs asset. */
            dynamicJobsAsset?:
                GoogleAdsGoogleadsV12Common__DynamicJobsAsset;
            /** A dynamic local asset. */
            dynamicLocalAsset?:
                GoogleAdsGoogleadsV12Common__DynamicLocalAsset;
            /** A dynamic real estate asset. */
            dynamicRealEstateAsset?:
                GoogleAdsGoogleadsV12Common__DynamicRealEstateAsset;
            /** A dynamic travel asset. */
            dynamicTravelAsset?:
                GoogleAdsGoogleadsV12Common__DynamicTravelAsset;
            /** A list of possible final mobile URLs after all cross domain redirects. */
            finalMobileUrls?:
                string[];
            /** A list of possible final URLs after all cross domain redirects. */
            finalUrls?:
                string[];
            /** URL template for appending params to landing page URLs served with parallel tracking. */
            finalUrlSuffix?:
                string;
            /** A hotel callout asset. */
            hotelCalloutAsset?:
                GoogleAdsGoogleadsV12Common__HotelCalloutAsset;
            /** Output only. The ID of the asset. */
            id?:
                string;
            /** Output only. An image asset. */
            imageAsset?:
                GoogleAdsGoogleadsV12Common__ImageAsset;
            /** A lead form asset. */
            leadFormAsset?:
                GoogleAdsGoogleadsV12Common__LeadFormAsset;
            /** Output only. A location asset. */
            locationAsset?:
                GoogleAdsGoogleadsV12Common__LocationAsset;
            /** Immutable. A media bundle asset. */
            mediaBundleAsset?:
                GoogleAdsGoogleadsV12Common__MediaBundleAsset;
            /** A mobile app asset. */
            mobileAppAsset?:
                GoogleAdsGoogleadsV12Common__MobileAppAsset;
            /** Optional name of the asset. */
            name?:
                string;
            /** A page feed asset. */
            pageFeedAsset?:
                GoogleAdsGoogleadsV12Common__PageFeedAsset;
            /** Output only. Policy information for the asset. */
            policySummary?:
                GoogleAdsGoogleadsV12Resources__AssetPolicySummary;
            /** A price asset. */
            priceAsset?:
                GoogleAdsGoogleadsV12Common__PriceAsset;
            /** A promotion asset. */
            promotionAsset?:
                GoogleAdsGoogleadsV12Common__PromotionAsset;
            /** Immutable. The resource name of the asset. Asset resource names have the form: `customers/{customer_id}/assets/{asset_id}` */
            resourceName?:
                string;
            /** A sitelink asset. */
            sitelinkAsset?:
                GoogleAdsGoogleadsV12Common__SitelinkAsset;
            /** Output only. Source of the asset. */
            source?:
                string;
            /** A structured snippet asset. */
            structuredSnippetAsset?:
                GoogleAdsGoogleadsV12Common__StructuredSnippetAsset;
            /** Immutable. A text asset. */
            textAsset?:
                GoogleAdsGoogleadsV12Common__TextAsset;
            /** URL template for constructing a tracking URL. */
            trackingUrlTemplate?:
                string;
            /** Output only. Type of the asset. */
            type?:
                string;
            /** A list of mappings to be used for substituting URL custom parameter tags in the tracking_url_template, final_urls, and/or final_mobile_urls. */
            urlCustomParameters?:
                GoogleAdsGoogleadsV12Common__CustomParameter[];
            /** Immutable. A YouTube video asset. */
            youtubeVideoAsset?:
                GoogleAdsGoogleadsV12Common__YoutubeVideoAsset;
        }
        interface GoogleAdsGoogleadsV12Resources__AssetFieldTypeView {
            /** Output only. The asset field type of the asset field type view. */
            fieldType?:
                string;
            /** Output only. The resource name of the asset field type view. Asset field type view resource names have the form: `customers/{customer_id}/assetFieldTypeViews/{field_type}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AssetGroup {
            /** Output only. Overall ad strength of this asset group. */
            adStrength?:
                string;
            /** Immutable. The campaign with which this asset group is associated. The asset which is linked to the asset group. */
            campaign?:
                string;
            /** A list of final mobile URLs after all cross domain redirects. In performance max, by default, the urls are eligible for expansion unless opted out. */
            finalMobileUrls?:
                string[];
            /** A list of final URLs after all cross domain redirects. In performance max, by default, the urls are eligible for expansion unless opted out. */
            finalUrls?:
                string[];
            /** Output only. The ID of the asset group. */
            id?:
                string;
            /** Required. Name of the asset group. Required. It must have a minimum length of 1 and maximum length of 128. It must be unique under a campaign. */
            name?:
                string;
            /** First part of text that may appear appended to the url displayed in the ad. */
            path1?:
                string;
            /** Second part of text that may appear appended to the url displayed in the ad. This field can only be set when path1 is set. */
            path2?:
                string;
            /** Immutable. The resource name of the asset group. Asset group resource names have the form: `customers/{customer_id}/assetGroups/{asset_group_id}` */
            resourceName?:
                string;
            /** The status of the asset group. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AssetGroupAsset {
            /** Immutable. The asset which this asset group asset is linking. */
            asset?:
                string;
            /** Immutable. The asset group which this asset group asset is linking. */
            assetGroup?:
                string;
            /** The description of the placement of the asset within the asset group. For example: HEADLINE, YOUTUBE_VIDEO etc */
            fieldType?:
                string;
            /** Output only. The performance of this asset group asset. */
            performanceLabel?:
                string;
            /** Output only. The policy information for this asset group asset. */
            policySummary?:
                GoogleAdsGoogleadsV12Common__PolicySummary;
            /**
             * Immutable. The resource name of the asset group asset. Asset group asset resource name have the form:
             * `customers/{customer_id}/assetGroupAssets/{asset_group_id}~{asset_id}~{field_type}`
             */
            resourceName?:
                string;
            /** The status of the link between an asset and asset group. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AssetGroupListingGroupFilter {
            /** Immutable. The asset group which this asset group listing group filter is part of. */
            assetGroup?:
                string;
            /** Dimension value with which this listing group is refining its parent. Undefined for the root group. */
            caseValue?:
                GoogleAdsGoogleadsV12Resources__ListingGroupFilterDimension;
            /** Output only. The ID of the ListingGroupFilter. */
            id?:
                string;
            /** Immutable. Resource name of the parent listing group subdivision. Null for the root listing group filter node. */
            parentListingGroupFilter?:
                string;
            /**
             * Immutable. The resource name of the asset group listing group filter. Asset group listing group filter resource name have the form:
             * `customers/{customer_id}/assetGroupListingGroupFilters/{asset_group_id}~{listing_group_filter_id}`
             */
            resourceName?:
                string;
            /** Immutable. Type of a listing group filter node. */
            type?:
                string;
            /** Immutable. The vertical the current node tree represents. All nodes in the same tree must belong to the same vertical. */
            vertical?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AssetGroupProductGroupView {
            /** Output only. The asset group associated with the listing group filter. */
            assetGroup?:
                string;
            /** Output only. The resource name of the asset group listing group filter. */
            assetGroupListingGroupFilter?:
                string;
            /**
             * Output only. The resource name of the asset group product group view. Asset group product group view resource names have the form:
             * `customers/{customer_id}/assetGroupProductGroupViews/{asset_group_id}~{listing_group_filter_id}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AssetGroupSignal {
            /** Immutable. The asset group which this asset group signal belongs to. */
            assetGroup?:
                string;
            /** Immutable. The signal(audience criterion) to be used by the performance max campaign. */
            audience?:
                GoogleAdsGoogleadsV12Common__AudienceInfo;
            /** Immutable. The resource name of the asset group signal. Asset group signal resource name have the form: `customers/{customer_id}/assetGroupSignals/{asset_group_id}~{signal_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AssetPolicySummary {
            /** Output only. The overall approval status of this asset, calculated based on the status of its individual policy topic entries. */
            approvalStatus?:
                string;
            /** Output only. The list of policy findings for this asset. */
            policyTopicEntries?:
                GoogleAdsGoogleadsV12Common__PolicyTopicEntry[];
            /** Output only. Where in the review process this asset is. */
            reviewStatus?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AssetSet {
            /** Business Profile location group asset set data. */
            businessProfileLocationGroup?:
                GoogleAdsGoogleadsV12Common__BusinessProfileLocationGroup;
            /** Represents information about a Chain dynamic location group. Only applicable if the sync level AssetSet's type is LOCATION_SYNC and sync source is chain. */
            chainLocationGroup?:
                GoogleAdsGoogleadsV12Common__ChainLocationGroup;
            /** Output only. The ID of the asset set. */
            id?:
                string;
            /**
             * Immutable. Parent asset set id for the asset set where the elements of this asset set come from. For example: the sync level location AssetSet id where the the elements in
             * LocationGroup AssetSet come from. This field is required and only applicable for Location Group typed AssetSet.
             */
            locationGroupParentAssetSetId?:
                string;
            /** Location asset set data. This will be used for sync level location set. This can only be set if AssetSet's type is LOCATION_SYNC. */
            locationSet?:
                GoogleAdsGoogleadsV12Common__LocationSet;
            /** Merchant ID and Feed Label from Google Merchant Center. */
            merchantCenterFeed?:
                GoogleAdsGoogleadsV12Resources_AssetSet_MerchantCenterFeed;
            /** Required. Name of the asset set. Required. It must have a minimum length of 1 and maximum length of 128. */
            name?:
                string;
            /** Immutable. The resource name of the asset set. Asset set resource names have the form: `customers/{customer_id}/assetSets/{asset_set_id}` */
            resourceName?:
                string;
            /** Output only. The status of the asset set. Read-only. */
            status?:
                string;
            /** Required. Immutable. The type of the asset set. Required. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AssetSetAsset {
            /** Immutable. The asset which this asset set asset is linking to. */
            asset?:
                string;
            /** Immutable. The asset set which this asset set asset is linking to. */
            assetSet?:
                string;
            /** Immutable. The resource name of the asset set asset. Asset set asset resource names have the form: `customers/{customer_id}/assetSetAssets/{asset_set_id}~{asset_id}` */
            resourceName?:
                string;
            /** Output only. The status of the asset set asset. Read-only. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AssetSetTypeView {
            /** Output only. The asset set type of the asset set type view. */
            assetSetType?:
                string;
            /** Output only. The resource name of the asset set type view. Asset set type view resource names have the form: `customers/{customer_id}/assetSetTypeViews/{asset_set_type}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__AttributeFieldMapping {
            /** Immutable. Ad Customizer Placeholder Fields */
            adCustomizerField?:
                string;
            /** Output only. Affiliate Location Placeholder Fields. This field is read-only. */
            affiliateLocationField?:
                string;
            /** Immutable. App Placeholder Fields. */
            appField?:
                string;
            /** Immutable. Call Placeholder Fields. */
            callField?:
                string;
            /** Immutable. Callout Placeholder Fields. */
            calloutField?:
                string;
            /** Immutable. Custom Placeholder Fields */
            customField?:
                string;
            /** Immutable. Dynamic Search Ad Page Feed Fields. */
            dsaPageFeedField?:
                string;
            /** Immutable. Education Placeholder Fields */
            educationField?:
                string;
            /** Immutable. Feed attribute from which to map. */
            feedAttributeId?:
                string;
            /**
             * Output only. The placeholder field ID. If a placeholder field enum is not published in the current API version, then this field will be populated and the field oneof will be empty.
             * This field is read-only.
             */
            fieldId?:
                string;
            /** Immutable. Flight Placeholder Fields */
            flightField?:
                string;
            /** Immutable. Hotel Placeholder Fields */
            hotelField?:
                string;
            /** Immutable. Image Placeholder Fields */
            imageField?:
                string;
            /** Immutable. Job Placeholder Fields */
            jobField?:
                string;
            /** Immutable. Local Placeholder Fields */
            localField?:
                string;
            /** Immutable. Location Target Fields. */
            locationExtensionTargetingField?:
                string;
            /** Output only. Location Placeholder Fields. This field is read-only. */
            locationField?:
                string;
            /** Immutable. Message Placeholder Fields. */
            messageField?:
                string;
            /** Immutable. Price Placeholder Fields. */
            priceField?:
                string;
            /** Immutable. Promotion Placeholder Fields. */
            promotionField?:
                string;
            /** Immutable. Real Estate Placeholder Fields */
            realEstateField?:
                string;
            /** Immutable. Sitelink Placeholder Fields. */
            sitelinkField?:
                string;
            /** Immutable. Structured Snippet Placeholder Fields. */
            structuredSnippetField?:
                string;
            /** Immutable. Travel Placeholder Fields */
            travelField?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__Audience {
            /** Description of this audience. */
            description?:
                string;
            /** Positive dimensions specifying the audience composition. */
            dimensions?:
                GoogleAdsGoogleadsV12Common__AudienceDimension[];
            /** Negative dimension specifying the audience composition. */
            exclusionDimension?:
                GoogleAdsGoogleadsV12Common__AudienceExclusionDimension;
            /** Output only. ID of the audience. */
            id?:
                string;
            /** Required. Name of the audience. It should be unique across all audiences. It must have a minimum length of 1 and maximum length of 255. */
            name?:
                string;
            /** Immutable. The resource name of the audience. Audience names have the form: `customers/{customer_id}/audiences/{audience_id}` */
            resourceName?:
                string;
            /** Output only. Status of this audience. Indicates whether the audience is enabled or removed. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__BatchJob {
            /** Output only. ID of this batch job. */
            id?:
                string;
            /** Output only. The resource name of the long-running operation that can be used to poll for completion. Only set when the batch job status is RUNNING or DONE. */
            longRunningOperation?:
                string;
            /** Output only. Contains additional information about this batch job. */
            metadata?:
                GoogleAdsGoogleadsV12Resources_BatchJob_BatchJobMetadata;
            /** Output only. The next sequence token to use when adding operations. Only set when the batch job status is PENDING. */
            nextAddSequenceToken?:
                string;
            /** Immutable. The resource name of the batch job. Batch job resource names have the form: `customers/{customer_id}/batchJobs/{batch_job_id}` */
            resourceName?:
                string;
            /** Output only. Status of this batch job. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__BiddingDataExclusion {
            /**
             * The data_exclusion will apply to all the campaigns under the listed channels retroactively as well as going forward when the scope of this exclusion is CHANNEL. The supported
             * advertising channel types are DISPLAY, SEARCH and SHOPPING. Note: a data exclusion with both advertising_channel_types and campaign_ids is not supported.
             */
            advertisingChannelTypes?:
                string[];
            /**
             * The data exclusion will apply to the campaigns listed when the scope of this exclusion is CAMPAIGN. The maximum number of campaigns per event is 2000. Note: a data exclusion with
             * both advertising_channel_types and campaign_ids is not supported.
             */
            campaigns?:
                string[];
            /** Output only. The ID of the data exclusion. */
            dataExclusionId?:
                string;
            /** The description of the data exclusion. The description can be at most 2048 characters. */
            description?:
                string;
            /** If not specified, all devices will be included in this exclusion. Otherwise, only the specified targeted devices will be included in this exclusion. */
            devices?:
                string[];
            /** Required. The exclusive end time of the data exclusion in yyyy-MM-dd HH:mm:ss format. The length of [start_date_time, end_date_time) interval must be within (0, 14 days]. */
            endDateTime?:
                string;
            /** The name of the data exclusion. The name can be at most 255 characters. */
            name?:
                string;
            /** Immutable. The resource name of the data exclusion. Data exclusion resource names have the form: `customers/{customer_id}/biddingDataExclusions/{data_exclusion_id}` */
            resourceName?:
                string;
            /** The scope of the data exclusion. */
            scope?:
                string;
            /**
             * Required. The inclusive start time of the data exclusion in yyyy-MM-dd HH:mm:ss format. A data exclusion is backward looking and should be used for events that start in the past and
             * end either in the past or future.
             */
            startDateTime?:
                string;
            /** Output only. The status of the data exclusion. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__BiddingSeasonalityAdjustment {
            /**
             * The seasonality adjustment will apply to all the campaigns under the listed channels retroactively as well as going forward when the scope of this adjustment is CHANNEL. The
             * supported advertising channel types are DISPLAY, SEARCH and SHOPPING. Note: a seasonality adjustment with both advertising_channel_types and campaign_ids is not supported.
             */
            advertisingChannelTypes?:
                string[];
            /**
             * The seasonality adjustment will apply to the campaigns listed when the scope of this adjustment is CAMPAIGN. The maximum number of campaigns per event is 2000. Note: a seasonality
             * adjustment with both advertising_channel_types and campaign_ids is not supported.
             */
            campaigns?:
                string[];
            /**
             * Conversion rate modifier estimated based on expected conversion rate changes. When this field is unset or set to 1.0 no adjustment will be applied to traffic. The allowed range is
             * 0.1 to 10.0.
             */
            conversionRateModifier?:
                number;
            /** The description of the seasonality adjustment. The description can be at most 2048 characters. */
            description?:
                string;
            /** If not specified, all devices will be included in this adjustment. Otherwise, only the specified targeted devices will be included in this adjustment. */
            devices?:
                string[];
            /** Required. The exclusive end time of the seasonality adjustment in yyyy-MM-dd HH:mm:ss format. The length of [start_date_time, end_date_time) interval must be within (0, 14 days]. */
            endDateTime?:
                string;
            /** The name of the seasonality adjustment. The name can be at most 255 characters. */
            name?:
                string;
            /**
             * Immutable. The resource name of the seasonality adjustment. Seasonality adjustment resource names have the form:
             * `customers/{customer_id}/biddingSeasonalityAdjustments/{seasonality_adjustment_id}`
             */
            resourceName?:
                string;
            /** The scope of the seasonality adjustment. */
            scope?:
                string;
            /** Output only. The ID of the seasonality adjustment. */
            seasonalityAdjustmentId?:
                string;
            /**
             * Required. The inclusive start time of the seasonality adjustment in yyyy-MM-dd HH:mm:ss format. A seasonality adjustment is forward looking and should be used for events that start
             * and end in the future.
             */
            startDateTime?:
                string;
            /** Output only. The status of the seasonality adjustment. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__BiddingStrategy {
            /**
             * ID of the campaign budget that this portfolio bidding strategy is aligned with. When a portfolio and a campaign budget are aligned, that means that they are attached to the same set
             * of campaigns. After a bidding strategy is aligned with a campaign budget, campaigns that are added to the bidding strategy must also use the aligned campaign budget.
             */
            alignedCampaignBudgetId?:
                string;
            /** Output only. The number of campaigns attached to this bidding strategy. This field is read-only. */
            campaignCount?:
                string;
            /**
             * Immutable. The currency used by the bidding strategy (ISO 4217 three-letter code). For bidding strategies in manager customers, this currency can be set on creation and defaults to
             * the manager customer's currency. For serving customers, this field cannot be set; all strategies in a serving customer implicitly use the serving customer's currency. In all cases
             * the effective_currency_code field returns the currency used by the strategy.
             */
            currencyCode?:
                string;
            /**
             * Output only. The currency used by the bidding strategy (ISO 4217 three-letter code). For bidding strategies in manager customers, this is the currency set by the advertiser when
             * creating the strategy. For serving customers, this is the customer's currency_code. Bidding strategy metrics are reported in this currency. This field is read-only.
             */
            effectiveCurrencyCode?:
                string;
            /** A bidding strategy that raises bids for clicks that seem more likely to lead to a conversion and lowers them for clicks where they seem less likely. */
            enhancedCpc?:
                any;
            /** Output only. The ID of the bidding strategy. */
            id?:
                string;
            /** An automated bidding strategy to help get the most conversions for your campaigns while spending your budget. */
            maximizeConversions?:
                GoogleAdsGoogleadsV12Common__MaximizeConversions;
            /** An automated bidding strategy to help get the most conversion value for your campaigns while spending your budget. */
            maximizeConversionValue?:
                GoogleAdsGoogleadsV12Common__MaximizeConversionValue;
            /**
             * The name of the bidding strategy. All bidding strategies within an account must be named distinctly. The length of this string should be between 1 and 255, inclusive, in UTF-8
             * bytes, (trimmed).
             */
            name?:
                string;
            /** Output only. The number of non-removed campaigns attached to this bidding strategy. This field is read-only. */
            nonRemovedCampaignCount?:
                string;
            /** Immutable. The resource name of the bidding strategy. Bidding strategy resource names have the form: `customers/{customer_id}/biddingStrategies/{bidding_strategy_id}` */
            resourceName?:
                string;
            /** Output only. The status of the bidding strategy. This field is read-only. */
            status?:
                string;
            /** A bidding strategy that sets bids to help get as many conversions as possible at the target cost-per-acquisition (CPA) you set. */
            targetCpa?:
                GoogleAdsGoogleadsV12Common__TargetCpa;
            /** A bidding strategy that automatically optimizes towards a chosen percentage of impressions. */
            targetImpressionShare?:
                GoogleAdsGoogleadsV12Common__TargetImpressionShare;
            /** A bidding strategy that helps you maximize revenue while averaging a specific target Return On Ad Spend (ROAS). */
            targetRoas?:
                GoogleAdsGoogleadsV12Common__TargetRoas;
            /** A bid strategy that sets your bids to help get as many clicks as possible within your budget. */
            targetSpend?:
                GoogleAdsGoogleadsV12Common__TargetSpend;
            /** Output only. The type of the bidding strategy. Create a bidding strategy by setting the bidding scheme. This field is read-only. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__BiddingStrategySimulation {
            /** Output only. Bidding strategy shared set id of the simulation. */
            biddingStrategyId?:
                string;
            /** Output only. Last day on which the simulation is based, in YYYY-MM-DD format */
            endDate?:
                string;
            /** Output only. How the simulation modifies the field. */
            modificationMethod?:
                string;
            /**
             * Output only. The resource name of the bidding strategy simulation. Bidding strategy simulation resource names have the form:
             * `customers/{customer_id}/biddingStrategySimulations/{bidding_strategy_id}~{type}~{modification_method}~{start_date}~{end_date}`
             */
            resourceName?:
                string;
            /** Output only. First day on which the simulation is based, in YYYY-MM-DD format. */
            startDate?:
                string;
            /** Output only. Simulation points if the simulation type is TARGET_CPA. */
            targetCpaPointList?:
                GoogleAdsGoogleadsV12Common__TargetCpaSimulationPointList;
            /** Output only. Simulation points if the simulation type is TARGET_ROAS. */
            targetRoasPointList?:
                GoogleAdsGoogleadsV12Common__TargetRoasSimulationPointList;
            /** Output only. The field that the simulation modifies. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__BillingSetup {
            /** Output only. The end date time in yyyy-MM-dd or yyyy-MM-dd HH:mm:ss format. */
            endDateTime?:
                string;
            /** Output only. The end time as a type. The only possible value is FOREVER. */
            endTimeType?:
                string;
            /** Output only. The ID of the billing setup. */
            id?:
                string;
            /**
             * Immutable. The resource name of the payments account associated with this billing setup. Payments resource names have the form:
             * `customers/{customer_id}/paymentsAccounts/{payments_account_id}` When setting up billing, this is used to signup with an existing payments account (and then payments_account_info
             * should not be set). When getting a billing setup, this and payments_account_info will be populated.
             */
            paymentsAccount?:
                string;
            /**
             * Immutable. The payments account information associated with this billing setup. When setting up billing, this is used to signup with a new payments account (and then
             * payments_account should not be set). When getting a billing setup, this and payments_account will be populated.
             */
            paymentsAccountInfo?:
                GoogleAdsGoogleadsV12Resources_BillingSetup_PaymentsAccountInfo;
            /** Immutable. The resource name of the billing setup. BillingSetup resource names have the form: `customers/{customer_id}/billingSetups/{billing_setup_id}` */
            resourceName?:
                string;
            /** Immutable. The start date time in yyyy-MM-dd or yyyy-MM-dd HH:mm:ss format. Only a future time is allowed. */
            startDateTime?:
                string;
            /** Immutable. The start time as a type. Only NOW is allowed. */
            startTimeType?:
                string;
            /** Output only. The status of the billing setup. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CallReportingSetting {
            /**
             * Customer-level call conversion action to attribute a call conversion to. If not set a default conversion action is used. Only in effect when call_conversion_reporting_enabled is set
             * to true.
             */
            callConversionAction?:
                string;
            /** Whether to enable call conversion reporting. */
            callConversionReportingEnabled?:
                boolean;
            /** Enable reporting of phone call events by redirecting them through Google System. */
            callReportingEnabled?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Resources__CallView {
            /** Output only. The advertiser-provided call duration in seconds. */
            callDurationSeconds?:
                string;
            /** Output only. Area code of the caller. Null if the call duration is shorter than 15 seconds. */
            callerAreaCode?:
                string;
            /** Output only. Country code of the caller. */
            callerCountryCode?:
                string;
            /** Output only. The status of the call. */
            callStatus?:
                string;
            /** Output only. The call tracking display location. */
            callTrackingDisplayLocation?:
                string;
            /** Output only. The advertiser-provided call end date time. */
            endCallDateTime?:
                string;
            /** Output only. The resource name of the call view. Call view resource names have the form: `customers/{customer_id}/callViews/{call_detail_id}` */
            resourceName?:
                string;
            /** Output only. The advertiser-provided call start date time. */
            startCallDateTime?:
                string;
            /** Output only. The type of the call. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__Campaign {
            /**
             * Output only. Resource name of AccessibleBiddingStrategy, a read-only view of the unrestricted attributes of the attached portfolio bidding strategy identified by 'bidding_strategy'.
             * Empty, if the campaign does not use a portfolio strategy. Unrestricted strategy attributes are available to all customers with whom the strategy is shared and are read from the
             * AccessibleBiddingStrategy resource. In contrast, restricted attributes are only available to the owner customer of the strategy and their managers. Restricted attributes can only be
             * read from the BiddingStrategy resource.
             */
            accessibleBiddingStrategy?:
                string;
            /** The ad serving optimization status of the campaign. */
            adServingOptimizationStatus?:
                string;
            /**
             * Immutable. Optional refinement to `advertising_channel_type`. Must be a valid sub-type of the parent channel type. Can be set only when creating campaigns. After campaign is
             * created, the field can not be changed.
             */
            advertisingChannelSubType?:
                string;
            /**
             * Immutable. The primary serving target for ads within the campaign. The targeting options can be refined in `network_settings`. This field is required and should not be empty when
             * creating new campaigns. Can be set only when creating campaigns. After the campaign is created, the field can not be changed.
             */
            advertisingChannelType?:
                string;
            /** The setting related to App Campaign. */
            appCampaignSetting?:
                GoogleAdsGoogleadsV12Resources_Campaign_AppCampaignSetting;
            /** Immutable. Setting for audience related features. */
            audienceSetting?:
                GoogleAdsGoogleadsV12Resources_Campaign_AudienceSetting;
            /** Output only. The resource name of the base campaign of a draft or experiment campaign. For base campaigns, this is equal to `resource_name`. This field is read-only. */
            baseCampaign?:
                string;
            /** Portfolio bidding strategy used by campaign. */
            biddingStrategy?:
                string;
            /** Output only. The system status of the campaign's bidding strategy. */
            biddingStrategySystemStatus?:
                string;
            /**
             * Output only. The type of bidding strategy. A bidding strategy can be created by setting either the bidding scheme to create a standard bidding strategy or the `bidding_strategy`
             * field to create a portfolio bidding strategy. This field is read-only.
             */
            biddingStrategyType?:
                string;
            /** The budget of the campaign. */
            campaignBudget?:
                string;
            /** The campaign group this campaign belongs to. */
            campaignGroup?:
                string;
            /** Commission is an automatic bidding strategy in which the advertiser pays a certain portion of the conversion value. */
            commission?:
                GoogleAdsGoogleadsV12Common__Commission;
            /** The setting for controlling Dynamic Search Ads (DSA). */
            dynamicSearchAdsSetting?:
                GoogleAdsGoogleadsV12Resources_Campaign_DynamicSearchAdsSetting;
            /**
             * The last day of the campaign in serving customer's timezone in YYYY-MM-DD format. On create, defaults to 2037-12-30, which means the campaign will run indefinitely. To set an
             * existing campaign to run indefinitely, set this field to 2037-12-30.
             */
            endDate?:
                string;
            /** The asset field types that should be excluded from this campaign. Asset links with these field types will not be inherited by this campaign from the upper level. */
            excludedParentAssetFieldTypes?:
                string[];
            /**
             * The asset set types that should be excluded from this campaign. Asset set links with these types will not be inherited by this campaign from the upper level. Location group types
             * (GMB_DYNAMIC_LOCATION_GROUP, CHAIN_DYNAMIC_LOCATION_GROUP, and STATIC_LOCATION_GROUP) are child types of LOCATION_SYNC. Therefore, if LOCATION_SYNC is set for this field, all
             * location group asset sets are not allowed to be linked to this campaign, and all Location Extension (LE) and Affiliate Location Extensions (ALE) will not be served under this
             * campaign. Only LOCATION_SYNC is currently supported.
             */
            excludedParentAssetSetTypes?:
                string[];
            /** Output only. The type of campaign: normal, draft, or experiment. */
            experimentType?:
                string;
            /** Suffix used to append query parameters to landing pages that are served with parallel tracking. */
            finalUrlSuffix?:
                string;
            /** A list that limits how often each user will see this campaign's ads. */
            frequencyCaps?:
                GoogleAdsGoogleadsV12Common__FrequencyCapEntry[];
            /** The setting for ads geotargeting. */
            geoTargetTypeSetting?:
                GoogleAdsGoogleadsV12Resources_Campaign_GeoTargetTypeSetting;
            /** Immutable. The hotel setting for the campaign. */
            hotelSetting?:
                GoogleAdsGoogleadsV12Resources_Campaign_HotelSettingInfo;
            /** Output only. The ID of the campaign. */
            id?:
                string;
            /** Output only. The resource names of labels attached to this campaign. */
            labels?:
                string[];
            /** The setting for local campaign. */
            localCampaignSetting?:
                GoogleAdsGoogleadsV12Resources_Campaign_LocalCampaignSetting;
            /** The Local Services Campaign related settings. */
            localServicesCampaignSettings?:
                GoogleAdsGoogleadsV12Resources_Campaign_LocalServicesCampaignSettings;
            /** Standard Manual CPA bidding strategy. Manual bidding strategy that allows advertiser to set the bid per advertiser-specified action. Supported only for Local Services campaigns. */
            manualCpa?:
                any;
            /** Standard Manual CPC bidding strategy. Manual click-based bidding where user pays per click. */
            manualCpc?:
                GoogleAdsGoogleadsV12Common__ManualCpc;
            /** Standard Manual CPM bidding strategy. Manual impression-based bidding where user pays per thousand impressions. */
            manualCpm?:
                any;
            /** Output only. A bidding strategy that pays a configurable amount per video view. */
            manualCpv?:
                any;
            /** Standard Maximize Conversions bidding strategy that automatically maximizes number of conversions while spending your budget. */
            maximizeConversions?:
                GoogleAdsGoogleadsV12Common__MaximizeConversions;
            /** Standard Maximize Conversion Value bidding strategy that automatically sets bids to maximize revenue while spending your budget. */
            maximizeConversionValue?:
                GoogleAdsGoogleadsV12Common__MaximizeConversionValue;
            /**
             * The name of the campaign. This field is required and should not be empty when creating new campaigns. It must not contain any null (code point 0x0), NL line feed (code point 0xA) or
             * carriage return (code point 0xD) characters.
             */
            name?:
                string;
            /** The network settings for the campaign. */
            networkSettings?:
                GoogleAdsGoogleadsV12Resources_Campaign_NetworkSettings;
            /** Optimization goal setting for this campaign, which includes a set of optimization goal types. */
            optimizationGoalSetting?:
                GoogleAdsGoogleadsV12Resources_Campaign_OptimizationGoalSetting;
            /**
             * Output only. Optimization score of the campaign. Optimization score is an estimate of how well a campaign is set to perform. It ranges from 0% (0.0) to 100% (1.0), with 100%
             * indicating that the campaign is performing at full potential. This field is null for unscored campaigns. See "About optimization score" at
             * https://support.google.com/google-ads/answer/9061546. This field is read-only.
             */
            optimizationScore?:
                number;
            /** Payment mode for the campaign. */
            paymentMode?:
                string;
            /** Standard Percent Cpc bidding strategy where bids are a fraction of the advertised price for some good or service. */
            percentCpc?:
                GoogleAdsGoogleadsV12Common__PercentCpc;
            /** Output only. Information about campaigns being upgraded to Performance Max. */
            performanceMaxUpgrade?:
                GoogleAdsGoogleadsV12Resources_Campaign_PerformanceMaxUpgrade;
            /**
             * Output only. The primary status of the campaign. Provides insight into why a campaign is not serving or not serving optimally. Modification to the campaign and its related entities
             * might take a while to be reflected in this status.
             */
            primaryStatus?:
                string;
            /**
             * Output only. The primary status reasons of the campaign. Provides insight into why a campaign is not serving or not serving optimally. These reasons are aggregated to determine an
             * overall CampaignPrimaryStatus.
             */
            primaryStatusReasons?:
                string[];
            /** Settings for Real-Time Bidding, a feature only available for campaigns targeting the Ad Exchange network. */
            realTimeBiddingSetting?:
                GoogleAdsGoogleadsV12Common__RealTimeBiddingSetting;
            /** Immutable. The resource name of the campaign. Campaign resource names have the form: `customers/{customer_id}/campaigns/{campaign_id}` */
            resourceName?:
                string;
            /**
             * Selective optimization setting for this campaign, which includes a set of conversion actions to optimize this campaign towards. This feature only applies to app campaigns that use
             * MULTI_CHANNEL as AdvertisingChannelType and APP_CAMPAIGN or APP_CAMPAIGN_FOR_ENGAGEMENT as AdvertisingChannelSubType.
             */
            selectiveOptimization?:
                GoogleAdsGoogleadsV12Resources_Campaign_SelectiveOptimization;
            /** Output only. The ad serving status of the campaign. */
            servingStatus?:
                string;
            /** The setting for controlling Shopping campaigns. */
            shoppingSetting?:
                GoogleAdsGoogleadsV12Resources_Campaign_ShoppingSetting;
            /** The date when campaign started in serving customer's timezone in YYYY-MM-DD format. */
            startDate?:
                string;
            /** The status of the campaign. When a new campaign is added, the status defaults to ENABLED. */
            status?:
                string;
            /** Standard Target CPA bidding strategy that automatically sets bids to help get as many conversions as possible at the target cost-per-acquisition (CPA) you set. */
            targetCpa?:
                GoogleAdsGoogleadsV12Common__TargetCpa;
            /** A bidding strategy that automatically optimizes cost per thousand impressions. */
            targetCpm?:
                any;
            /** Target Impression Share bidding strategy. An automated bidding strategy that sets bids to achieve a chosen percentage of impressions. */
            targetImpressionShare?:
                GoogleAdsGoogleadsV12Common__TargetImpressionShare;
            /** Setting for targeting related features. */
            targetingSetting?:
                GoogleAdsGoogleadsV12Common__TargetingSetting;
            /** Standard Target ROAS bidding strategy that automatically maximizes revenue while averaging a specific target return on ad spend (ROAS). */
            targetRoas?:
                GoogleAdsGoogleadsV12Common__TargetRoas;
            /** Standard Target Spend bidding strategy that automatically sets your bids to help get as many clicks as possible within your budget. */
            targetSpend?:
                GoogleAdsGoogleadsV12Common__TargetSpend;
            /** Output only. Campaign-level settings for tracking information. */
            trackingSetting?:
                GoogleAdsGoogleadsV12Resources_Campaign_TrackingSetting;
            /** The URL template for constructing a tracking URL. */
            trackingUrlTemplate?:
                string;
            /** The list of mappings used to substitute custom parameter tags in a `tracking_url_template`, `final_urls`, or `mobile_final_urls`. */
            urlCustomParameters?:
                GoogleAdsGoogleadsV12Common__CustomParameter[];
            /**
             * Represents opting out of URL expansion to more targeted URLs. If opted out (true), only the final URLs in the asset group or URLs specified in the advertiser's Google Merchant
             * Center or business data feeds are targeted. If opted in (false), the entire domain will be targeted. This field can only be set for Performance Max campaigns, where the default
             * value is false.
             */
            urlExpansionOptOut?:
                boolean;
            /** Describes how unbranded pharma ads will be displayed. */
            vanityPharma?:
                GoogleAdsGoogleadsV12Resources_Campaign_VanityPharma;
            /** Output only. 3-Tier Brand Safety setting for the campaign. */
            videoBrandSafetySuitability?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CampaignAsset {
            /** Immutable. The asset which is linked to the campaign. */
            asset?:
                string;
            /** Immutable. The campaign to which the asset is linked. */
            campaign?:
                string;
            /** Immutable. Role that the asset takes under the linked campaign. Required. */
            fieldType?:
                string;
            /** Immutable. The resource name of the campaign asset. CampaignAsset resource names have the form: `customers/{customer_id}/campaignAssets/{campaign_id}~{asset_id}~{field_type}` */
            resourceName?:
                string;
            /** Output only. Source of the campaign asset link. */
            source?:
                string;
            /** Status of the campaign asset. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CampaignAssetSet {
            /** Immutable. The asset set which is linked to the campaign. */
            assetSet?:
                string;
            /** Immutable. The campaign to which this asset set is linked. */
            campaign?:
                string;
            /** Immutable. The resource name of the campaign asset set. Asset set asset resource names have the form: `customers/{customer_id}/campaignAssetSets/{campaign_id}~{asset_set_id}` */
            resourceName?:
                string;
            /** Output only. The status of the campaign asset set asset. Read-only. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CampaignAudienceView {
            /**
             * Output only. The resource name of the campaign audience view. Campaign audience view resource names have the form:
             * `customers/{customer_id}/campaignAudienceViews/{campaign_id}~{criterion_id}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CampaignBidModifier {
            /** The modifier for the bid when the criterion matches. */
            bidModifier?:
                number;
            /** Output only. The campaign to which this criterion belongs. */
            campaign?:
                string;
            /** Output only. The ID of the criterion to bid modify. This field is ignored for mutates. */
            criterionId?:
                string;
            /** Immutable. Criterion for interaction type. Only supported for search campaigns. */
            interactionType?:
                GoogleAdsGoogleadsV12Common__InteractionTypeInfo;
            /**
             * Immutable. The resource name of the campaign bid modifier. Campaign bid modifier resource names have the form:
             * `customers/{customer_id}/campaignBidModifiers/{campaign_id}~{criterion_id}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CampaignBudget {
            /**
             * ID of the portfolio bidding strategy that this shared campaign budget is aligned with. When a bidding strategy and a campaign budget are aligned, they are attached to the same set
             * of campaigns. After a campaign budget is aligned with a bidding strategy, campaigns that are added to the campaign budget must also use the aligned bidding strategy.
             */
            alignedBiddingStrategyId?:
                string;
            /**
             * The amount of the budget, in the local currency for the account. Amount is specified in micros, where one million is equivalent to one currency unit. Monthly spend is capped at 30.4
             * times this amount.
             */
            amountMicros?:
                string;
            /** The delivery method that determines the rate at which the campaign budget is spent. Defaults to STANDARD if unspecified in a create operation. */
            deliveryMethod?:
                string;
            /**
             * Specifies whether the budget is explicitly shared. Defaults to true if unspecified in a create operation. If true, the budget was created with the purpose of sharing across one or
             * more campaigns. If false, the budget was created with the intention of only being used with a single campaign. The budget's name and status will stay in sync with the campaign's
             * name and status. Attempting to share the budget with a second campaign will result in an error. A non-shared budget can become an explicitly shared. The same operation must also
             * assign the budget a name. A shared campaign budget can never become non-shared.
             */
            explicitlyShared?:
                boolean;
            /** Output only. Indicates whether there is a recommended budget for this campaign budget. This field is read-only. */
            hasRecommendedBudget?:
                boolean;
            /**
             * Output only. The ID of the campaign budget. A campaign budget is created using the CampaignBudgetService create operation and is assigned a budget ID. A budget ID can be shared
             * across different campaigns; the system will then allocate the campaign budget among different campaigns to get optimum results.
             */
            id?:
                string;
            /**
             * The name of the campaign budget. When creating a campaign budget through CampaignBudgetService, every explicitly shared campaign budget must have a non-null, non-empty name.
             * Campaign budgets that are not explicitly shared derive their name from the attached campaign's name. The length of this string must be between 1 and 255, inclusive, in UTF-8 bytes,
             * (trimmed).
             */
            name?:
                string;
            /** Immutable. Period over which to spend the budget. Defaults to DAILY if not specified. */
            period?:
                string;
            /**
             * Output only. The recommended budget amount. If no recommendation is available, this will be set to the budget amount. Amount is specified in micros, where one million is equivalent
             * to one currency unit. This field is read-only.
             */
            recommendedBudgetAmountMicros?:
                string;
            /** Output only. The estimated change in weekly clicks if the recommended budget is applied. This field is read-only. */
            recommendedBudgetEstimatedChangeWeeklyClicks?:
                string;
            /** Output only. The estimated change in weekly cost in micros if the recommended budget is applied. One million is equivalent to one currency unit. This field is read-only. */
            recommendedBudgetEstimatedChangeWeeklyCostMicros?:
                string;
            /** Output only. The estimated change in weekly interactions if the recommended budget is applied. This field is read-only. */
            recommendedBudgetEstimatedChangeWeeklyInteractions?:
                string;
            /** Output only. The estimated change in weekly views if the recommended budget is applied. This field is read-only. */
            recommendedBudgetEstimatedChangeWeeklyViews?:
                string;
            /** Output only. The number of campaigns actively using the budget. This field is read-only. */
            referenceCount?:
                string;
            /** Immutable. The resource name of the campaign budget. Campaign budget resource names have the form: `customers/{customer_id}/campaignBudgets/{campaign_budget_id}` */
            resourceName?:
                string;
            /** Output only. The status of this campaign budget. This field is read-only. */
            status?:
                string;
            /** The lifetime amount of the budget, in the local currency for the account. Amount is specified in micros, where one million is equivalent to one currency unit. */
            totalAmountMicros?:
                string;
            /** Immutable. The type of the campaign budget. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CampaignConversionGoal {
            /** The biddability of the campaign conversion goal. */
            biddable?:
                boolean;
            /** Immutable. The campaign with which this campaign conversion goal is associated. */
            campaign?:
                string;
            /** The conversion category of this campaign conversion goal. */
            category?:
                string;
            /** The conversion origin of this campaign conversion goal. */
            origin?:
                string;
            /**
             * Immutable. The resource name of the campaign conversion goal. Campaign conversion goal resource names have the form:
             * `customers/{customer_id}/campaignConversionGoals/{campaign_id}~{category}~{origin}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CampaignCriterion {
            /** Immutable. Ad Schedule. */
            adSchedule?:
                GoogleAdsGoogleadsV12Common__AdScheduleInfo;
            /** Immutable. Age range. */
            ageRange?:
                GoogleAdsGoogleadsV12Common__AgeRangeInfo;
            /**
             * The modifier for the bids when the criterion matches. The modifier must be in the range: 0.1 - 10.0. Most targetable criteria types support modifiers. Use 0 to opt out of a Device
             * type.
             */
            bidModifier?:
                number;
            /** Immutable. The campaign to which the criterion belongs. */
            campaign?:
                string;
            /** Immutable. Carrier. */
            carrier?:
                GoogleAdsGoogleadsV12Common__CarrierInfo;
            /** Immutable. Combined Audience. */
            combinedAudience?:
                GoogleAdsGoogleadsV12Common__CombinedAudienceInfo;
            /** Immutable. ContentLabel. */
            contentLabel?:
                GoogleAdsGoogleadsV12Common__ContentLabelInfo;
            /** Output only. The ID of the criterion. This field is ignored during mutate. */
            criterionId?:
                string;
            /** Immutable. Custom Affinity. */
            customAffinity?:
                GoogleAdsGoogleadsV12Common__CustomAffinityInfo;
            /** Immutable. Custom Audience */
            customAudience?:
                GoogleAdsGoogleadsV12Common__CustomAudienceInfo;
            /** Immutable. Device. */
            device?:
                GoogleAdsGoogleadsV12Common__DeviceInfo;
            /** Output only. The display name of the criterion. This field is ignored for mutates. */
            displayName?:
                string;
            /** Immutable. Gender. */
            gender?:
                GoogleAdsGoogleadsV12Common__GenderInfo;
            /** Immutable. Income range. */
            incomeRange?:
                GoogleAdsGoogleadsV12Common__IncomeRangeInfo;
            /** Immutable. IpBlock. */
            ipBlock?:
                GoogleAdsGoogleadsV12Common__IpBlockInfo;
            /** Immutable. Keyword. */
            keyword?:
                GoogleAdsGoogleadsV12Common__KeywordInfo;
            /** Immutable. Smart Campaign Keyword Theme. */
            keywordTheme?:
                GoogleAdsGoogleadsV12Common__KeywordThemeInfo;
            /** Immutable. Language. */
            language?:
                GoogleAdsGoogleadsV12Common__LanguageInfo;
            /** Immutable. Listing scope. */
            listingScope?:
                GoogleAdsGoogleadsV12Common__ListingScopeInfo;
            /** Immutable. Location. */
            location?:
                GoogleAdsGoogleadsV12Common__LocationInfo;
            /** Immutable. Location Group */
            locationGroup?:
                GoogleAdsGoogleadsV12Common__LocationGroupInfo;
            /** Immutable. Mobile app category. */
            mobileAppCategory?:
                GoogleAdsGoogleadsV12Common__MobileAppCategoryInfo;
            /** Immutable. Mobile application. */
            mobileApplication?:
                GoogleAdsGoogleadsV12Common__MobileApplicationInfo;
            /** Immutable. Mobile Device. */
            mobileDevice?:
                GoogleAdsGoogleadsV12Common__MobileDeviceInfo;
            /** Immutable. Whether to target (`false`) or exclude (`true`) the criterion. */
            negative?:
                boolean;
            /** Immutable. Operating system version. */
            operatingSystemVersion?:
                GoogleAdsGoogleadsV12Common__OperatingSystemVersionInfo;
            /** Immutable. Parental status. */
            parentalStatus?:
                GoogleAdsGoogleadsV12Common__ParentalStatusInfo;
            /** Immutable. Placement. */
            placement?:
                GoogleAdsGoogleadsV12Common__PlacementInfo;
            /** Immutable. Proximity. */
            proximity?:
                GoogleAdsGoogleadsV12Common__ProximityInfo;
            /** Immutable. The resource name of the campaign criterion. Campaign criterion resource names have the form: `customers/{customer_id}/campaignCriteria/{campaign_id}~{criterion_id}` */
            resourceName?:
                string;
            /** The status of the criterion. */
            status?:
                string;
            /** Immutable. Topic. */
            topic?:
                GoogleAdsGoogleadsV12Common__TopicInfo;
            /** Output only. The type of the criterion. */
            type?:
                string;
            /** Immutable. User Interest. */
            userInterest?:
                GoogleAdsGoogleadsV12Common__UserInterestInfo;
            /**
             * Immutable. User List. The Similar Audiences sunset starts May 2023. Refer to https://ads-developers.googleblog.com/2022/11/announcing-deprecation-and-sunset-of.html for other
             * options.
             */
            userList?:
                GoogleAdsGoogleadsV12Common__UserListInfo;
            /** Immutable. Webpage. */
            webpage?:
                GoogleAdsGoogleadsV12Common__WebpageInfo;
            /** Immutable. YouTube Channel. */
            youtubeChannel?:
                GoogleAdsGoogleadsV12Common__YouTubeChannelInfo;
            /** Immutable. YouTube Video. */
            youtubeVideo?:
                GoogleAdsGoogleadsV12Common__YouTubeVideoInfo;
        }
        interface GoogleAdsGoogleadsV12Resources__CampaignCriterionSimulation {
            /** Output only. Simulation points if the simulation type is BID_MODIFIER. */
            bidModifierPointList?:
                GoogleAdsGoogleadsV12Common__BidModifierSimulationPointList;
            /** Output only. Campaign ID of the simulation. */
            campaignId?:
                string;
            /** Output only. Criterion ID of the simulation. */
            criterionId?:
                string;
            /** Output only. Last day on which the simulation is based, in YYYY-MM-DD format. */
            endDate?:
                string;
            /** Output only. How the simulation modifies the field. */
            modificationMethod?:
                string;
            /**
             * Output only. The resource name of the campaign criterion simulation. Campaign criterion simulation resource names have the form:
             * `customers/{customer_id}/campaignCriterionSimulations/{campaign_id}~{criterion_id}~{type}~{modification_method}~{start_date}~{end_date}`
             */
            resourceName?:
                string;
            /** Output only. First day on which the simulation is based, in YYYY-MM-DD format. */
            startDate?:
                string;
            /** Output only. The field that the simulation modifies. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CampaignCustomizer {
            /** Immutable. The campaign to which the customizer attribute is linked. */
            campaign?:
                string;
            /** Required. Immutable. The customizer attribute which is linked to the campaign. */
            customizerAttribute?:
                string;
            /**
             * Immutable. The resource name of the campaign customizer. Campaign customizer resource names have the form:
             * `customers/{customer_id}/campaignCustomizers/{campaign_id}~{customizer_attribute_id}`
             */
            resourceName?:
                string;
            /** Output only. The status of the campaign customizer. */
            status?:
                string;
            /** Required. The value to associate with the customizer attribute at this level. The value must be of the type specified for the CustomizerAttribute. */
            value?:
                GoogleAdsGoogleadsV12Common__CustomizerValue;
        }
        interface GoogleAdsGoogleadsV12Resources__CampaignDraft {
            /** Immutable. The base campaign to which the draft belongs. */
            baseCampaign?:
                string;
            /** Output only. Resource name of the Campaign that results from overlaying the draft changes onto the base campaign. This field is read-only. */
            draftCampaign?:
                string;
            /** Output only. The ID of the draft. This field is read-only. */
            draftId?:
                string;
            /** Output only. Whether there is an experiment based on this draft currently serving. */
            hasExperimentRunning?:
                boolean;
            /**
             * Output only. The resource name of the long-running operation that can be used to poll for completion of draft promotion. This is only set if the draft promotion is in progress or
             * finished.
             */
            longRunningOperation?:
                string;
            /**
             * The name of the campaign draft. This field is required and should not be empty when creating new campaign drafts. It must not contain any null (code point 0x0), NL line feed (code
             * point 0xA) or carriage return (code point 0xD) characters.
             */
            name?:
                string;
            /** Immutable. The resource name of the campaign draft. Campaign draft resource names have the form: `customers/{customer_id}/campaignDrafts/{base_campaign_id}~{draft_id}` */
            resourceName?:
                string;
            /** Output only. The status of the campaign draft. This field is read-only. When a new campaign draft is added, the status defaults to PROPOSED. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CampaignExtensionSetting {
            /**
             * Immutable. The resource name of the campaign. The linked extension feed items will serve under this campaign. Campaign resource names have the form:
             * `customers/{customer_id}/campaigns/{campaign_id}`
             */
            campaign?:
                string;
            /** The device for which the extensions will serve. Optional. */
            device?:
                string;
            /**
             * The resource names of the extension feed items to serve under the campaign. ExtensionFeedItem resource names have the form:
             * `customers/{customer_id}/extensionFeedItems/{feed_item_id}`
             */
            extensionFeedItems?:
                string[];
            /** Immutable. The extension type of the customer extension setting. */
            extensionType?:
                string;
            /**
             * Immutable. The resource name of the campaign extension setting. CampaignExtensionSetting resource names have the form:
             * `customers/{customer_id}/campaignExtensionSettings/{campaign_id}~{extension_type}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CampaignFeed {
            /** Immutable. The campaign to which the CampaignFeed belongs. */
            campaign?:
                string;
            /** Immutable. The feed to which the CampaignFeed belongs. */
            feed?:
                string;
            /** Matching function associated with the CampaignFeed. The matching function is used to filter the set of feed items selected. Required. */
            matchingFunction?:
                GoogleAdsGoogleadsV12Common__MatchingFunction;
            /** Indicates which placeholder types the feed may populate under the connected campaign. Required. */
            placeholderTypes?:
                string[];
            /** Immutable. The resource name of the campaign feed. Campaign feed resource names have the form: `customers/{customer_id}/campaignFeeds/{campaign_id}~{feed_id} */
            resourceName?:
                string;
            /** Output only. Status of the campaign feed. This field is read-only. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CampaignGroup {
            /** Output only. The ID of the campaign group. */
            id?:
                string;
            /**
             * The name of the campaign group. This field is required and should not be empty when creating new campaign groups. It must not contain any null (code point 0x0), NL line feed (code
             * point 0xA) or carriage return (code point 0xD) characters.
             */
            name?:
                string;
            /** Immutable. The resource name of the campaign group. Campaign group resource names have the form: `customers/{customer_id}/campaignGroups/{campaign_group_id}` */
            resourceName?:
                string;
            /** The status of the campaign group. When a new campaign group is added, the status defaults to ENABLED. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CampaignLabel {
            /** Immutable. The campaign to which the label is attached. */
            campaign?:
                string;
            /** Immutable. The label assigned to the campaign. */
            label?:
                string;
            /** Immutable. Name of the resource. Campaign label resource names have the form: `customers/{customer_id}/campaignLabels/{campaign_id}~{label_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CampaignSharedSet {
            /** Immutable. The campaign to which the campaign shared set belongs. */
            campaign?:
                string;
            /** Immutable. The resource name of the campaign shared set. Campaign shared set resource names have the form: `customers/{customer_id}/campaignSharedSets/{campaign_id}~{shared_set_id}` */
            resourceName?:
                string;
            /**
             * Immutable. The shared set associated with the campaign. This may be a negative keyword shared set of another customer. This customer should be a manager of the other customer,
             * otherwise the campaign shared set will exist but have no serving effect. Only negative keyword shared sets can be associated with Shopping campaigns. Only negative placement shared
             * sets can be associated with Display mobile app campaigns.
             */
            sharedSet?:
                string;
            /** Output only. The status of this campaign shared set. Read only. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CampaignSimulation {
            /** Output only. Simulation points if the simulation type is BUDGET. */
            budgetPointList?:
                GoogleAdsGoogleadsV12Common__BudgetSimulationPointList;
            /** Output only. Campaign id of the simulation. */
            campaignId?:
                string;
            /** Output only. Simulation points if the simulation type is CPC_BID. */
            cpcBidPointList?:
                GoogleAdsGoogleadsV12Common__CpcBidSimulationPointList;
            /** Output only. Last day on which the simulation is based, in YYYY-MM-DD format */
            endDate?:
                string;
            /** Output only. How the simulation modifies the field. */
            modificationMethod?:
                string;
            /**
             * Output only. The resource name of the campaign simulation. Campaign simulation resource names have the form:
             * `customers/{customer_id}/campaignSimulations/{campaign_id}~{type}~{modification_method}~{start_date}~{end_date}`
             */
            resourceName?:
                string;
            /** Output only. First day on which the simulation is based, in YYYY-MM-DD format. */
            startDate?:
                string;
            /** Output only. Simulation points if the simulation type is TARGET_CPA. */
            targetCpaPointList?:
                GoogleAdsGoogleadsV12Common__TargetCpaSimulationPointList;
            /** Output only. Simulation points if the simulation type is TARGET_IMPRESSION_SHARE. */
            targetImpressionSharePointList?:
                GoogleAdsGoogleadsV12Common__TargetImpressionShareSimulationPointList;
            /** Output only. Simulation points if the simulation type is TARGET_ROAS. */
            targetRoasPointList?:
                GoogleAdsGoogleadsV12Common__TargetRoasSimulationPointList;
            /** Output only. The field that the simulation modifies. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CarrierConstant {
            /** Output only. The country code of the country where the carrier is located, for example, "AR", "FR", etc. */
            countryCode?:
                string;
            /** Output only. The ID of the carrier criterion. */
            id?:
                string;
            /** Output only. The full name of the carrier in English. */
            name?:
                string;
            /** Output only. The resource name of the carrier criterion. Carrier criterion resource names have the form: `carrierConstants/{criterion_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ChangeEvent {
            /** Output only. The AdGroup affected by this change. */
            adGroup?:
                string;
            /** Output only. The Asset affected by this change. */
            asset?:
                string;
            /** Output only. The Campaign affected by this change. */
            campaign?:
                string;
            /** Output only. Time at which the change was committed on this resource. */
            changeDateTime?:
                string;
            /** Output only. A list of fields that are changed in the returned resource. */
            changedFields?:
                string;
            /** Output only. The Simply resource this change occurred on. */
            changeResourceName?:
                string;
            /** Output only. The type of the changed resource. This dictates what resource will be set in old_resource and new_resource. */
            changeResourceType?:
                string;
            /** Output only. Where the change was made through. */
            clientType?:
                string;
            /** Output only. The Feed affected by this change. */
            feed?:
                string;
            /** Output only. The FeedItem affected by this change. */
            feedItem?:
                string;
            /** Output only. The new resource after the change. Only changed fields will be populated. */
            newResource?:
                GoogleAdsGoogleadsV12Resources_ChangeEvent_ChangedResource;
            /** Output only. The old resource before the change. Only changed fields will be populated. */
            oldResource?:
                GoogleAdsGoogleadsV12Resources_ChangeEvent_ChangedResource;
            /** Output only. The operation on the changed resource. */
            resourceChangeOperation?:
                string;
            /**
             * Output only. The resource name of the change event. Change event resource names have the form:
             * `customers/{customer_id}/changeEvents/{timestamp_micros}~{command_index}~{mutate_index}`
             */
            resourceName?:
                string;
            /** Output only. The email of the user who made this change. */
            userEmail?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ChangeStatus {
            /** Output only. The AdGroup affected by this change. */
            adGroup?:
                string;
            /** Output only. The AdGroupAd affected by this change. */
            adGroupAd?:
                string;
            /** Output only. The AdGroupAsset affected by this change. */
            adGroupAsset?:
                string;
            /** Output only. The AdGroupBidModifier affected by this change. */
            adGroupBidModifier?:
                string;
            /** Output only. The AdGroupCriterion affected by this change. */
            adGroupCriterion?:
                string;
            /** Output only. The AdGroupFeed affected by this change. */
            adGroupFeed?:
                string;
            /** Output only. The Asset affected by this change. */
            asset?:
                string;
            /** Output only. The Campaign affected by this change. */
            campaign?:
                string;
            /** Output only. The CampaignAsset affected by this change. */
            campaignAsset?:
                string;
            /** Output only. The CampaignCriterion affected by this change. */
            campaignCriterion?:
                string;
            /** Output only. The CampaignFeed affected by this change. */
            campaignFeed?:
                string;
            /** Output only. The CampaignSharedSet affected by this change. */
            campaignSharedSet?:
                string;
            /** Output only. The CustomerAsset affected by this change. */
            customerAsset?:
                string;
            /** Output only. The Feed affected by this change. */
            feed?:
                string;
            /** Output only. The FeedItem affected by this change. */
            feedItem?:
                string;
            /** Output only. Time at which the most recent change has occurred on this resource. */
            lastChangeDateTime?:
                string;
            /** Output only. The resource name of the change status. Change status resource names have the form: `customers/{customer_id}/changeStatus/{change_status_id}` */
            resourceName?:
                string;
            /** Output only. Represents the status of the changed resource. */
            resourceStatus?:
                string;
            /** Output only. Represents the type of the changed resource. This dictates what fields will be set. For example, for AD_GROUP, campaign and ad_group fields will be set. */
            resourceType?:
                string;
            /** Output only. The SharedSet affected by this change. */
            sharedSet?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ClickView {
            /** Output only. The associated ad. */
            adGroupAd?:
                string;
            /** Output only. The location criteria matching the area of interest associated with the impression. */
            areaOfInterest?:
                GoogleAdsGoogleadsV12Common__ClickLocation;
            /** Output only. The associated campaign location target, if one exists. */
            campaignLocationTarget?:
                string;
            /** Output only. The Google Click ID. */
            gclid?:
                string;
            /** Output only. The associated keyword, if one exists and the click corresponds to the SEARCH channel. */
            keyword?:
                string;
            /** Output only. Basic information about the associated keyword, if it exists. */
            keywordInfo?:
                GoogleAdsGoogleadsV12Common__KeywordInfo;
            /** Output only. The location criteria matching the location of presence associated with the impression. */
            locationOfPresence?:
                GoogleAdsGoogleadsV12Common__ClickLocation;
            /** Output only. Page number in search results where the ad was shown. */
            pageNumber?:
                string;
            /** Output only. The resource name of the click view. Click view resource names have the form: `customers/{customer_id}/clickViews/{date (yyyy-MM-dd)}~{gclid}` */
            resourceName?:
                string;
            /** Output only. The associated user list, if one exists. */
            userList?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CombinedAudience {
            /** Output only. Description of this combined audience. */
            description?:
                string;
            /** Output only. ID of the combined audience. */
            id?:
                string;
            /** Output only. Name of the combined audience. It should be unique across all combined audiences. */
            name?:
                string;
            /** Immutable. The resource name of the combined audience. Combined audience names have the form: `customers/{customer_id}/combinedAudience/{combined_audience_id}` */
            resourceName?:
                string;
            /** Output only. Status of this combined audience. Indicates whether the combined audience is enabled or removed. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ConversionAction {
            /** App ID for an app conversion action. */
            appId?:
                string;
            /** Settings related to this conversion action's attribution model. */
            attributionModelSettings?:
                GoogleAdsGoogleadsV12Resources_ConversionAction_AttributionModelSettings;
            /** The category of conversions reported for this conversion action. */
            category?:
                string;
            /** The maximum number of days that may elapse between an interaction (for example, a click) and a conversion event. */
            clickThroughLookbackWindowDays?:
                string;
            /** How to count conversion events for the conversion action. */
            countingType?:
                string;
            /** Output only. Firebase settings for Firebase conversion types. */
            firebaseSettings?:
                GoogleAdsGoogleadsV12Resources_ConversionAction_FirebaseSettings;
            /** Output only. The ID of the conversion action. */
            id?:
                string;
            /** Whether this conversion action should be included in the "conversions" metric. */
            includeInConversionsMetric?:
                boolean;
            /** Output only. Mobile app vendor for an app conversion action. */
            mobileAppVendor?:
                string;
            /** The name of the conversion action. This field is required and should not be empty when creating new conversion actions. */
            name?:
                string;
            /** Output only. The conversion origin of this conversion action. */
            origin?:
                string;
            /** Output only. The resource name of the conversion action owner customer, or null if this is a system-defined conversion action. */
            ownerCustomer?:
                string;
            /** The phone call duration in seconds after which a conversion should be reported for this conversion action. The value must be between 0 and 10000, inclusive. */
            phoneCallDurationSeconds?:
                string;
            /**
             * If a conversion action's primary_for_goal bit is false, the conversion action is non-biddable for all campaigns regardless of their customer conversion goal or campaign conversion
             * goal. However, custom conversion goals do not respect primary_for_goal, so if a campaign has a custom conversion goal configured with a primary_for_goal = false conversion action,
             * that conversion action is still biddable. By default, primary_for_goal will be true if not set. In V9, primary_for_goal can only be set to false after creation through an 'update'
             * operation because it's not declared as optional.
             */
            primaryForGoal?:
                boolean;
            /** Immutable. The resource name of the conversion action. Conversion action resource names have the form: `customers/{customer_id}/conversionActions/{conversion_action_id}` */
            resourceName?:
                string;
            /** The status of this conversion action for conversion event accrual. */
            status?:
                string;
            /** Output only. The snippets used for tracking conversions. */
            tagSnippets?:
                GoogleAdsGoogleadsV12Common__TagSnippet[];
            /** Output only. Third Party App Analytics settings for third party conversion types. */
            thirdPartyAppAnalyticsSettings?:
                GoogleAdsGoogleadsV12Resources_ConversionAction_ThirdPartyAppAnalyticsSettings;
            /** Immutable. The type of this conversion action. */
            type?:
                string;
            /** Settings related to the value for conversion events associated with this conversion action. */
            valueSettings?:
                GoogleAdsGoogleadsV12Resources_ConversionAction_ValueSettings;
            /** The maximum number of days which may elapse between an impression and a conversion without an interaction. */
            viewThroughLookbackWindowDays?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ConversionCustomVariable {
            /** Output only. The ID of the conversion custom variable. */
            id?:
                string;
            /** Required. The name of the conversion custom variable. Name should be unique. The maximum length of name is 100 characters. There should not be any extra spaces before and after. */
            name?:
                string;
            /** Output only. The resource name of the customer that owns the conversion custom variable. */
            ownerCustomer?:
                string;
            /**
             * Immutable. The resource name of the conversion custom variable. Conversion custom variable resource names have the form:
             * `customers/{customer_id}/conversionCustomVariables/{conversion_custom_variable_id}`
             */
            resourceName?:
                string;
            /** The status of the conversion custom variable for conversion event accrual. */
            status?:
                string;
            /**
             * Required. Immutable. The tag of the conversion custom variable. It is used in the event snippet and sent to Google Ads along with conversion pings. For conversion uploads in Google
             * Ads API, the resource name of the conversion custom variable is used. Tag should be unique. The maximum size of tag is 100 bytes. There should not be any extra spaces before and
             * after. Currently only lowercase letters, numbers and underscores are allowed in the tag.
             */
            tag?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ConversionGoalCampaignConfig {
            /** Immutable. The campaign with which this conversion goal campaign config is associated. */
            campaign?:
                string;
            /** The custom conversion goal the campaign is using for optimization. */
            customConversionGoal?:
                string;
            /** The level of goal config the campaign is using. */
            goalConfigLevel?:
                string;
            /**
             * Immutable. The resource name of the conversion goal campaign config. Conversion goal campaign config resource names have the form:
             * `customers/{customer_id}/conversionGoalCampaignConfigs/{campaign_id}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ConversionTrackingSetting {
            /**
             * Output only. Whether the customer has accepted customer data terms. If using cross-account conversion tracking, this value is inherited from the manager. This field is read-only.
             * For more information, see https://support.google.com/adspolicy/answer/7475709.
             */
            acceptedCustomerDataTerms?:
                boolean;
            /**
             * Output only. The conversion tracking id used for this account. This id doesn't indicate whether the customer uses conversion tracking (conversion_tracking_status does). This field
             * is read-only.
             */
            conversionTrackingId?:
                string;
            /**
             * Output only. Conversion tracking status. It indicates whether the customer is using conversion tracking, and who is the conversion tracking owner of this customer. If this customer
             * is using cross-account conversion tracking, the value returned will differ based on the `login-customer-id` of the request.
             */
            conversionTrackingStatus?:
                string;
            /**
             * Output only. The conversion tracking id of the customer's manager. This is set when the customer is opted into cross account conversion tracking, and it overrides
             * conversion_tracking_id. This field can only be managed through the Google Ads UI. This field is read-only.
             */
            crossAccountConversionTrackingId?:
                string;
            /**
             * Output only. Whether the customer is opted-in for enhanced conversions for leads. If using cross-account conversion tracking, this value is inherited from the manager. This field is
             * read-only.
             */
            enhancedConversionsForLeadsEnabled?:
                boolean;
            /** Output only. The resource name of the customer where conversions are created and managed. This field is read-only. */
            googleAdsConversionCustomer?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ConversionValueRule {
            /** Action applied when the rule is triggered. */
            action?:
                GoogleAdsGoogleadsV12Resources_ConversionValueRule_ValueRuleAction;
            /** Condition for audience that must be satisfied for the value rule to apply. */
            audienceCondition?:
                GoogleAdsGoogleadsV12Resources_ConversionValueRule_ValueRuleAudienceCondition;
            /** Condition for device type that must be satisfied for the value rule to apply. */
            deviceCondition?:
                GoogleAdsGoogleadsV12Resources_ConversionValueRule_ValueRuleDeviceCondition;
            /** Condition for Geo location that must be satisfied for the value rule to apply. */
            geoLocationCondition?:
                GoogleAdsGoogleadsV12Resources_ConversionValueRule_ValueRuleGeoLocationCondition;
            /** Output only. The ID of the conversion value rule. */
            id?:
                string;
            /**
             * Output only. The resource name of the conversion value rule's owner customer. When the value rule is inherited from a manager customer, owner_customer will be the resource name of
             * the manager whereas the customer in the resource_name will be of the requesting serving customer. ** Read-only **
             */
            ownerCustomer?:
                string;
            /**
             * Immutable. The resource name of the conversion value rule. Conversion value rule resource names have the form:
             * `customers/{customer_id}/conversionValueRules/{conversion_value_rule_id}`
             */
            resourceName?:
                string;
            /** The status of the conversion value rule. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ConversionValueRuleSet {
            /** Immutable. Defines the scope where the conversion value rule set is attached. */
            attachmentType?:
                string;
            /** The resource name of the campaign when the conversion value rule set is attached to a campaign. */
            campaign?:
                string;
            /** Immutable. The conversion action categories of the conversion value rule set. */
            conversionActionCategories?:
                string[];
            /** Resource names of rules within the rule set. */
            conversionValueRules?:
                string[];
            /**
             * Defines dimensions for Value Rule conditions. The condition types of value rules within this value rule set must be of these dimensions. The first entry in this list is the primary
             * dimension of the included value rules. When using value rule primary dimension segmentation, conversion values will be segmented into the values adjusted by value rules and the
             * original values, if some value rules apply.
             */
            dimensions?:
                string[];
            /** Output only. The ID of the conversion value rule set. */
            id?:
                string;
            /**
             * Output only. The resource name of the conversion value rule set's owner customer. When the value rule set is inherited from a manager customer, owner_customer will be the resource
             * name of the manager whereas the customer in the resource_name will be of the requesting serving customer. ** Read-only **
             */
            ownerCustomer?:
                string;
            /**
             * Immutable. The resource name of the conversion value rule set. Conversion value rule set resource names have the form:
             * `customers/{customer_id}/conversionValueRuleSets/{conversion_value_rule_set_id}`
             */
            resourceName?:
                string;
            /** Output only. The status of the conversion value rule set. ** Read-only ** */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CurrencyConstant {
            /** Output only. The billable unit for this currency. Billed amounts should be multiples of this value. */
            billableUnitMicros?:
                string;
            /** Output only. ISO 4217 three-letter currency code, for example, "USD" */
            code?:
                string;
            /** Output only. Full English name of the currency. */
            name?:
                string;
            /** Output only. The resource name of the currency constant. Currency constant resource names have the form: `currencyConstants/{code}` */
            resourceName?:
                string;
            /** Output only. Standard symbol for describing this currency, for example, '$' for US Dollars. */
            symbol?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomAudience {
            /** Description of this custom audience. */
            description?:
                string;
            /** Output only. ID of the custom audience. */
            id?:
                string;
            /**
             * List of custom audience members that this custom audience is composed of. Members can be added during CustomAudience creation. If members are presented in UPDATE operation, existing
             * members will be overridden.
             */
            members?:
                GoogleAdsGoogleadsV12Resources__CustomAudienceMember[];
            /** Name of the custom audience. It should be unique for all custom audiences created by a customer. This field is required for creating operations. */
            name?:
                string;
            /** Immutable. The resource name of the custom audience. Custom audience resource names have the form: `customers/{customer_id}/customAudiences/{custom_audience_id}` */
            resourceName?:
                string;
            /** Output only. Status of this custom audience. Indicates whether the custom audience is enabled or removed. */
            status?:
                string;
            /** Type of the custom audience. ("INTEREST" OR "PURCHASE_INTENT" is not allowed for newly created custom audience but kept for existing audiences) */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomAudienceMember {
            /** A package name of Android apps which users installed such as com.google.example. */
            app?:
                string;
            /**
             * A keyword or keyword phrase — at most 10 words and 80 characters. Languages with double-width characters such as Chinese, Japanese, or Korean, are allowed 40 characters, which
             * describes the user's interests or actions.
             */
            keyword?:
                string;
            /** The type of custom audience member, KEYWORD, URL, PLACE_CATEGORY or APP. */
            memberType?:
                string;
            /** A place type described by a place category users visit. */
            placeCategory?:
                string;
            /** An HTTP URL, protocol-included — at most 2048 characters, which includes contents users have interests in. */
            url?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomConversionGoal {
            /** Conversion actions that the custom conversion goal makes biddable. */
            conversionActions?:
                string[];
            /** Immutable. The ID for this custom conversion goal. */
            id?:
                string;
            /** The name for this custom conversion goal. */
            name?:
                string;
            /** Immutable. The resource name of the custom conversion goal. Custom conversion goal resource names have the form: `customers/{customer_id}/customConversionGoals/{goal_id}` */
            resourceName?:
                string;
            /** The status of the custom conversion goal. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__Customer {
            /** Whether auto-tagging is enabled for the customer. */
            autoTaggingEnabled?:
                boolean;
            /** Call reporting setting for a customer. Only mutable in an `update` operation. */
            callReportingSetting?:
                GoogleAdsGoogleadsV12Resources__CallReportingSetting;
            /** Output only. Conversion tracking setting for a customer. */
            conversionTrackingSetting?:
                GoogleAdsGoogleadsV12Resources__ConversionTrackingSetting;
            /** Immutable. The currency in which the account operates. A subset of the currency codes from the ISO 4217 standard is supported. */
            currencyCode?:
                string;
            /** Optional, non-unique descriptive name of the customer. */
            descriptiveName?:
                string;
            /** The URL template for appending params to the final URL. Only mutable in an `update` operation. */
            finalUrlSuffix?:
                string;
            /**
             * Output only. Whether the Customer has a Partners program badge. If the Customer is not associated with the Partners program, this will be false. For more information, see
             * https://support.google.com/partners/answer/3125774.
             */
            hasPartnersBadge?:
                boolean;
            /** Output only. The ID of the customer. */
            id?:
                string;
            /** Output only. Whether the customer is a manager. */
            manager?:
                boolean;
            /**
             * Output only. Optimization score of the customer. Optimization score is an estimate of how well a customer's campaigns are set to perform. It ranges from 0% (0.0) to 100% (1.0). This
             * field is null for all manager customers, and for unscored non-manager customers. See "About optimization score" at https://support.google.com/google-ads/answer/9061546. This field
             * is read-only.
             */
            optimizationScore?:
                number;
            /**
             * Output only. Optimization score weight of the customer. Optimization score weight can be used to compare/aggregate optimization scores across multiple non-manager customers. The
             * aggregate optimization score of a manager is computed as the sum over all of their customers of `Customer.optimization_score * Customer.optimization_score_weight`. This field is 0
             * for all manager customers, and for unscored non-manager customers. This field is read-only.
             */
            optimizationScoreWeight?:
                number;
            /** Output only. Reasons why the customer is not eligible to use PaymentMode.CONVERSIONS. If the list is empty, the customer is eligible. This field is read-only. */
            payPerConversionEligibilityFailureReasons?:
                string[];
            /** Output only. Remarketing setting for a customer. */
            remarketingSetting?:
                GoogleAdsGoogleadsV12Resources__RemarketingSetting;
            /** Immutable. The resource name of the customer. Customer resource names have the form: `customers/{customer_id}` */
            resourceName?:
                string;
            /** Output only. The status of the customer. */
            status?:
                string;
            /** Output only. Whether the customer is a test account. */
            testAccount?:
                boolean;
            /** Immutable. The local timezone ID of the customer. */
            timeZone?:
                string;
            /** The URL template for constructing a tracking URL out of parameters. Only mutable in an `update` operation. */
            trackingUrlTemplate?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomerAsset {
            /** Required. Immutable. The asset which is linked to the customer. */
            asset?:
                string;
            /** Required. Immutable. Role that the asset takes for the customer link. */
            fieldType?:
                string;
            /** Immutable. The resource name of the customer asset. CustomerAsset resource names have the form: `customers/{customer_id}/customerAssets/{asset_id}~{field_type}` */
            resourceName?:
                string;
            /** Output only. Source of the customer asset link. */
            source?:
                string;
            /** Status of the customer asset. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomerAssetSet {
            /** Immutable. The asset set which is linked to the customer. */
            assetSet?:
                string;
            /** Immutable. The customer to which this asset set is linked. */
            customer?:
                string;
            /** Immutable. The resource name of the customer asset set. Asset set asset resource names have the form: `customers/{customer_id}/customerAssetSets/{asset_set_id}` */
            resourceName?:
                string;
            /** Output only. The status of the customer asset set asset. Read-only. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomerClient {
            /**
             * Output only. The resource names of the labels owned by the requesting customer that are applied to the client customer. Label resource names have the form:
             * `customers/{customer_id}/labels/{label_id}`
             */
            appliedLabels?:
                string[];
            /** Output only. The resource name of the client-customer which is linked to the given customer. Read only. */
            clientCustomer?:
                string;
            /** Output only. Currency code (for example, 'USD', 'EUR') for the client. Read only. */
            currencyCode?:
                string;
            /** Output only. Descriptive name for the client. Read only. */
            descriptiveName?:
                string;
            /** Output only. Specifies whether this is a [hidden account](https://support.google.com/google-ads/answer/7519830). Read only. */
            hidden?:
                boolean;
            /** Output only. The ID of the client customer. Read only. */
            id?:
                string;
            /** Output only. Distance between given customer and client. For self link, the level value will be 0. Read only. */
            level?:
                string;
            /** Output only. Identifies if the client is a manager. Read only. */
            manager?:
                boolean;
            /** Output only. The resource name of the customer client. CustomerClient resource names have the form: `customers/{customer_id}/customerClients/{client_customer_id}` */
            resourceName?:
                string;
            /** Output only. The status of the client customer. Read only. */
            status?:
                string;
            /** Output only. Identifies if the client is a test account. Read only. */
            testAccount?:
                boolean;
            /** Output only. Common Locale Data Repository (CLDR) string representation of the time zone of the client, for example, America/Los_Angeles. Read only. */
            timeZone?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomerClientLink {
            /** Immutable. The client customer linked to this customer. */
            clientCustomer?:
                string;
            /** The visibility of the link. Users can choose whether or not to see hidden links in the Google Ads UI. Default value is false */
            hidden?:
                boolean;
            /** Output only. This is uniquely identifies a customer client link. Read only. */
            managerLinkId?:
                string;
            /** Immutable. Name of the resource. CustomerClientLink resource names have the form: `customers/{customer_id}/customerClientLinks/{client_customer_id}~{manager_link_id}` */
            resourceName?:
                string;
            /** This is the status of the link between client and manager. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomerConversionGoal {
            /** The biddability of the customer conversion goal. */
            biddable?:
                boolean;
            /** The conversion category of this customer conversion goal. Only conversion actions that have this category will be included in this goal. */
            category?:
                string;
            /** The conversion origin of this customer conversion goal. Only conversion actions that have this conversion origin will be included in this goal. */
            origin?:
                string;
            /**
             * Immutable. The resource name of the customer conversion goal. Customer conversion goal resource names have the form:
             * `customers/{customer_id}/customerConversionGoals/{category}~{origin}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomerCustomizer {
            /** Required. Immutable. The customizer attribute which is linked to the customer. */
            customizerAttribute?:
                string;
            /** Immutable. The resource name of the customer customizer. Customer customizer resource names have the form: `customers/{customer_id}/customerCustomizers/{customizer_attribute_id}` */
            resourceName?:
                string;
            /** Output only. The status of the customer customizer attribute. */
            status?:
                string;
            /** Required. The value to associate with the customizer attribute at this level. The value must be of the type specified for the CustomizerAttribute. */
            value?:
                GoogleAdsGoogleadsV12Common__CustomizerValue;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomerExtensionSetting {
            /** The device for which the extensions will serve. Optional. */
            device?:
                string;
            /**
             * The resource names of the extension feed items to serve under the customer. ExtensionFeedItem resource names have the form:
             * `customers/{customer_id}/extensionFeedItems/{feed_item_id}`
             */
            extensionFeedItems?:
                string[];
            /** Immutable. The extension type of the customer extension setting. */
            extensionType?:
                string;
            /**
             * Immutable. The resource name of the customer extension setting. CustomerExtensionSetting resource names have the form:
             * `customers/{customer_id}/customerExtensionSettings/{extension_type}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomerFeed {
            /** Immutable. The feed being linked to the customer. */
            feed?:
                string;
            /** Matching function associated with the CustomerFeed. The matching function is used to filter the set of feed items selected. Required. */
            matchingFunction?:
                GoogleAdsGoogleadsV12Common__MatchingFunction;
            /** Indicates which placeholder types the feed may populate under the connected customer. Required. */
            placeholderTypes?:
                string[];
            /** Immutable. The resource name of the customer feed. Customer feed resource names have the form: `customers/{customer_id}/customerFeeds/{feed_id}` */
            resourceName?:
                string;
            /** Output only. Status of the customer feed. This field is read-only. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomerLabel {
            /** Output only. The resource name of the customer to which the label is attached. Read only. */
            customer?:
                string;
            /** Output only. The resource name of the label assigned to the customer. Note: the Customer ID portion of the label resource name is not validated when creating a new CustomerLabel. */
            label?:
                string;
            /** Immutable. Name of the resource. Customer label resource names have the form: `customers/{customer_id}/customerLabels/{label_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomerManagerLink {
            /** Output only. The manager customer linked to the customer. */
            managerCustomer?:
                string;
            /** Output only. ID of the customer-manager link. This field is read only. */
            managerLinkId?:
                string;
            /** Immutable. Name of the resource. CustomerManagerLink resource names have the form: `customers/{customer_id}/customerManagerLinks/{manager_customer_id}~{manager_link_id}` */
            resourceName?:
                string;
            /** Status of the link between the customer and the manager. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomerNegativeCriterion {
            /** Immutable. ContentLabel. */
            contentLabel?:
                GoogleAdsGoogleadsV12Common__ContentLabelInfo;
            /** Output only. The ID of the criterion. */
            id?:
                string;
            /** Immutable. MobileAppCategory. */
            mobileAppCategory?:
                GoogleAdsGoogleadsV12Common__MobileAppCategoryInfo;
            /** Immutable. MobileApplication. */
            mobileApplication?:
                GoogleAdsGoogleadsV12Common__MobileApplicationInfo;
            /** Immutable. Placement. */
            placement?:
                GoogleAdsGoogleadsV12Common__PlacementInfo;
            /**
             * Immutable. The resource name of the customer negative criterion. Customer negative criterion resource names have the form:
             * `customers/{customer_id}/customerNegativeCriteria/{criterion_id}`
             */
            resourceName?:
                string;
            /** Output only. The type of the criterion. */
            type?:
                string;
            /** Immutable. YouTube Channel. */
            youtubeChannel?:
                GoogleAdsGoogleadsV12Common__YouTubeChannelInfo;
            /** Immutable. YouTube Video. */
            youtubeVideo?:
                GoogleAdsGoogleadsV12Common__YouTubeVideoInfo;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomerUserAccess {
            /** Output only. The customer user access creation time. Read only field The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30" */
            accessCreationDateTime?:
                string;
            /** Access role of the user. */
            accessRole?:
                string;
            /** Output only. Email address of the user. Read only field */
            emailAddress?:
                string;
            /** Output only. The email address of the inviter user. Read only field */
            inviterUserEmailAddress?:
                string;
            /** Immutable. Name of the resource. Resource names have the form: `customers/{customer_id}/customerUserAccesses/{user_id}` */
            resourceName?:
                string;
            /** Output only. User id of the user with the customer access. Read only field */
            userId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomerUserAccessInvitation {
            /** Immutable. Access role of the user. */
            accessRole?:
                string;
            /** Output only. Time invitation was created. This field is read-only. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30" */
            creationDateTime?:
                string;
            /** Immutable. Email address the invitation was sent to. This can differ from the email address of the account that accepts the invite. */
            emailAddress?:
                string;
            /** Output only. The ID of the invitation. This field is read-only. */
            invitationId?:
                string;
            /** Output only. Invitation status of the user. */
            invitationStatus?:
                string;
            /** Immutable. Name of the resource. Resource names have the form: `customers/{customer_id}/customerUserAccessInvitations/{invitation_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomInterest {
            /** Description of this custom interest audience. */
            description?:
                string;
            /** Output only. Id of the custom interest. */
            id?:
                string;
            /**
             * List of custom interest members that this custom interest is composed of. Members can be added during CustomInterest creation. If members are presented in UPDATE operation, existing
             * members will be overridden.
             */
            members?:
                GoogleAdsGoogleadsV12Resources__CustomInterestMember[];
            /** Name of the custom interest. It should be unique across the same custom affinity audience. This field is required for create operations. */
            name?:
                string;
            /** Immutable. The resource name of the custom interest. Custom interest resource names have the form: `customers/{customer_id}/customInterests/{custom_interest_id}` */
            resourceName?:
                string;
            /** Status of this custom interest. Indicates whether the custom interest is enabled or removed. */
            status?:
                string;
            /** Type of the custom interest, CUSTOM_AFFINITY or CUSTOM_INTENT. By default the type is set to CUSTOM_AFFINITY. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomInterestMember {
            /** The type of custom interest member, KEYWORD or URL. */
            memberType?:
                string;
            /** Keyword text when member_type is KEYWORD or URL string when member_type is URL. */
            parameter?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomizerAttribute {
            /** Output only. The ID of the customizer attribute. */
            id?:
                string;
            /**
             * Required. Immutable. Name of the customizer attribute. Required. It must have a minimum length of 1 and maximum length of 40. Name of an enabled customizer attribute must be unique
             * (case insensitive).
             */
            name?:
                string;
            /** Immutable. The resource name of the customizer attribute. Customizer Attribute resource names have the form: `customers/{customer_id}/customizerAttributes/{customizer_attribute_id}` */
            resourceName?:
                string;
            /** Output only. The status of the customizer attribute. */
            status?:
                string;
            /** Immutable. The type of the customizer attribute. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__CustomLeadFormSubmissionField {
            /** Output only. Field value for custom question response, maximum number of characters is 70. */
            fieldValue?:
                string;
            /** Output only. Question text for custom question, maximum number of characters is 300. */
            questionText?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__DataPartnerLinkIdentifier {
            /**
             * Immutable. The customer ID of the Data partner account. This field is required and should not be empty when creating a new data partner link. It is unable to be modified after the
             * creation of the link.
             */
            dataPartnerId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__DetailedDemographic {
            /** Output only. Availability information of the detailed demographic. */
            availabilities?:
                GoogleAdsGoogleadsV12Common__CriterionCategoryAvailability[];
            /** Output only. The ID of the detailed demographic. */
            id?:
                string;
            /** Output only. True if the detailed demographic is launched to all channels and locales. */
            launchedToAll?:
                boolean;
            /** Output only. The name of the detailed demographic. For example,"Highest Level of Educational Attainment" */
            name?:
                string;
            /** Output only. The parent of the detailed_demographic. */
            parent?:
                string;
            /**
             * Output only. The resource name of the detailed demographic. Detailed demographic resource names have the form:
             * `customers/{customer_id}/detailedDemographics/{detailed_demographic_id}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__DetailPlacementView {
            /** Output only. The display name is URL name for websites, YouTube video name for YouTube videos, and translated mobile app name for mobile apps. */
            displayName?:
                string;
            /** Output only. URL of the group placement, for example, domain, link to the mobile application in app store, or a YouTube channel URL. */
            groupPlacementTargetUrl?:
                string;
            /** Output only. The automatic placement string at detail level, e. g. website URL, mobile application ID, or a YouTube video ID. */
            placement?:
                string;
            /** Output only. Type of the placement, for example, Website, YouTube Video, and Mobile Application. */
            placementType?:
                string;
            /**
             * Output only. The resource name of the detail placement view. Detail placement view resource names have the form:
             * `customers/{customer_id}/detailPlacementViews/{ad_group_id}~{base64_placement}`
             */
            resourceName?:
                string;
            /** Output only. URL of the placement, for example, website, link to the mobile application in app store, or a YouTube video URL. */
            targetUrl?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__DisplayKeywordView {
            /**
             * Output only. The resource name of the display keyword view. Display Keyword view resource names have the form:
             * `customers/{customer_id}/displayKeywordViews/{ad_group_id}~{criterion_id}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__DistanceView {
            /** Output only. Grouping of user distance from location extensions. */
            distanceBucket?:
                string;
            /** Output only. True if the DistanceBucket is using the metric system, false otherwise. */
            metricSystem?:
                boolean;
            /** Output only. The resource name of the distance view. Distance view resource names have the form: `customers/{customer_id}/distanceViews/1~{distance_bucket}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__DomainCategory {
            /** Output only. The campaign this category is recommended for. */
            campaign?:
                string;
            /** Output only. Recommended category for the website domain, for example, if you have a website about electronics, the categories could be "cameras", "televisions", etc. */
            category?:
                string;
            /** Output only. The position of this category in the set of categories. Lower numbers indicate a better match for the domain. null indicates not recommended. */
            categoryRank?:
                string;
            /** Output only. Fraction of pages on your site that this category matches. */
            coverageFraction?:
                number;
            /** Output only. The domain for the website. The domain can be specified in the DynamicSearchAdsSetting required for dynamic search ads. */
            domain?:
                string;
            /** Output only. Indicates whether this category has sub-categories. */
            hasChildren?:
                boolean;
            /**
             * Output only. The language code specifying the language of the website, for example, "en" for English. The language can be specified in the DynamicSearchAdsSetting required for
             * dynamic search ads. This is the language of the pages from your website that you want Google Ads to find, create ads for, and match searches with.
             */
            languageCode?:
                string;
            /** Output only. The recommended cost per click for the category. */
            recommendedCpcBidMicros?:
                string;
            /**
             * Output only. The resource name of the domain category. Domain category resource names have the form:
             * `customers/{customer_id}/domainCategories/{campaign_id}~{category_base64}~{language_code}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__DynamicSearchAdsSearchTermView {
            /** Output only. True if query is added to targeted keywords. This field is read-only. */
            hasMatchingKeyword?:
                boolean;
            /** Output only. True if query matches a negative keyword. This field is read-only. */
            hasNegativeKeyword?:
                boolean;
            /** Output only. True if query matches a negative url. This field is read-only. */
            hasNegativeUrl?:
                boolean;
            /** Output only. The dynamically generated headline of the Dynamic Search Ad. This field is read-only. */
            headline?:
                string;
            /** Output only. The dynamically selected landing page URL of the impression. This field is read-only. */
            landingPage?:
                string;
            /** Output only. The URL of page feed item served for the impression. This field is read-only. */
            pageUrl?:
                string;
            /**
             * Output only. The resource name of the dynamic search ads search term view. Dynamic search ads search term view resource names have the form:
             * `customers/{customer_id}/dynamicSearchAdsSearchTermViews/{ad_group_id}~{search_term_fingerprint}~{headline_fingerprint}~{landing_page_fingerprint}~{page_url_fingerprint}`
             */
            resourceName?:
                string;
            /** Output only. Search term This field is read-only. */
            searchTerm?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ExpandedLandingPageView {
            /** Output only. The final URL that clicks are directed to. */
            expandedFinalUrl?:
                string;
            /**
             * Output only. The resource name of the expanded landing page view. Expanded landing page view resource names have the form:
             * `customers/{customer_id}/expandedLandingPageViews/{expanded_final_url_fingerprint}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__Experiment {
            /** The description of the experiment. It must have a minimum length of 1 and maximum length of 2048. */
            description?:
                string;
            /**
             * Date when the experiment ends. By default, the experiment ends on the campaign's end date. If this field is set, then the experiment ends at the end of the specified date in the
             * customer's time zone. Format: YYYY-MM-DD Example: 2019-04-18
             */
            endDate?:
                string;
            /** Output only. The ID of the experiment. Read only. */
            experimentId?:
                string;
            /** The goals of this experiment. */
            goals?:
                GoogleAdsGoogleadsV12Common__MetricGoal[];
            /**
             * Output only. The resource name of the long-running operation that can be used to poll for completion of experiment schedule or promote. The most recent long running operation is
             * returned.
             */
            longRunningOperation?:
                string;
            /** Required. The name of the experiment. It must have a minimum length of 1 and maximum length of 1024. It must be unique under a customer. */
            name?:
                string;
            /** Output only. The status of the experiment promotion process. */
            promoteStatus?:
                string;
            /** Immutable. The resource name of the experiment. Experiment resource names have the form: `customers/{customer_id}/experiments/{experiment_id}` */
            resourceName?:
                string;
            /**
             * Date when the experiment starts. By default, the experiment starts now or on the campaign's start date, whichever is later. If this field is set, then the experiment starts at the
             * beginning of the specified date in the customer's time zone. Format: YYYY-MM-DD Example: 2019-03-14
             */
            startDate?:
                string;
            /** The Advertiser-chosen status of this experiment. */
            status?:
                string;
            /**
             * For system managed experiments, the advertiser must provide a suffix during construction, in the setup stage before moving to initiated. The suffix will be appended to the in-design
             * and experiment campaign names so that the name is base campaign name + suffix.
             */
            suffix?:
                string;
            /** Required. The product/feature that uses this experiment. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ExperimentArm {
            /** List of campaigns in the trial arm. The max length is one. */
            campaigns?:
                string[];
            /** Whether this arm is a control arm. A control arm is the arm against which the other arms are compared. */
            control?:
                boolean;
            /** Immutable. The experiment to which the ExperimentArm belongs. */
            experiment?:
                string;
            /** Output only. The in design campaigns in the treatment experiment arm. */
            inDesignCampaigns?:
                string[];
            /** Required. The name of the experiment arm. It must have a minimum length of 1 and maximum length of 1024. It must be unique under an experiment. */
            name?:
                string;
            /** Immutable. The resource name of the experiment arm. Experiment arm resource names have the form: `customers/{customer_id}/experimentArms/{TrialArm.trial_id}~{TrialArm.trial_arm_id}` */
            resourceName?:
                string;
            /** Traffic split of the trial arm. The value should be between 1 and 100 and must total 100 between the two trial arms. */
            trafficSplit?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ExtensionFeedItem {
            /** List of non-overlapping schedules specifying all time intervals for which the feed item may serve. There can be a maximum of 6 schedules per day. */
            adSchedules?:
                GoogleAdsGoogleadsV12Common__AdScheduleInfo[];
            /** Output only. Affiliate location extension. Feed locations are populated by Google Ads based on a chain ID. This field is read-only. */
            affiliateLocationFeedItem?:
                GoogleAdsGoogleadsV12Common__AffiliateLocationFeedItem;
            /** App extension. */
            appFeedItem?:
                GoogleAdsGoogleadsV12Common__AppFeedItem;
            /** Call extension. */
            callFeedItem?:
                GoogleAdsGoogleadsV12Common__CallFeedItem;
            /** Callout extension. */
            calloutFeedItem?:
                GoogleAdsGoogleadsV12Common__CalloutFeedItem;
            /** The targeted device. */
            device?:
                string;
            /**
             * End time in which this feed item is no longer effective and will stop serving. The time is in the customer's time zone. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05
             * 09:15:00" or "2018-02-01 14:34:30"
             */
            endDateTime?:
                string;
            /** Output only. The extension type of the extension feed item. This field is read-only. */
            extensionType?:
                string;
            /** Hotel Callout extension. */
            hotelCalloutFeedItem?:
                GoogleAdsGoogleadsV12Common__HotelCalloutFeedItem;
            /** Output only. The ID of this feed item. Read-only. */
            id?:
                string;
            /** Immutable. Advertiser provided image extension. */
            imageFeedItem?:
                GoogleAdsGoogleadsV12Common__ImageFeedItem;
            /** Output only. Location extension. Locations are synced from a Business Profile into a feed. This field is read-only. */
            locationFeedItem?:
                GoogleAdsGoogleadsV12Common__LocationFeedItem;
            /** Price extension. */
            priceFeedItem?:
                GoogleAdsGoogleadsV12Common__PriceFeedItem;
            /** Promotion extension. */
            promotionFeedItem?:
                GoogleAdsGoogleadsV12Common__PromotionFeedItem;
            /** Immutable. The resource name of the extension feed item. Extension feed item resource names have the form: `customers/{customer_id}/extensionFeedItems/{feed_item_id}` */
            resourceName?:
                string;
            /** Sitelink. */
            sitelinkFeedItem?:
                GoogleAdsGoogleadsV12Common__SitelinkFeedItem;
            /**
             * Start time in which this feed item is effective and can begin serving. The time is in the customer's time zone. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05 09:15:00"
             * or "2018-02-01 14:34:30"
             */
            startDateTime?:
                string;
            /** Output only. Status of the feed item. This field is read-only. */
            status?:
                string;
            /** Structured snippet extension. */
            structuredSnippetFeedItem?:
                GoogleAdsGoogleadsV12Common__StructuredSnippetFeedItem;
            /** The targeted ad group. */
            targetedAdGroup?:
                string;
            /** The targeted campaign. */
            targetedCampaign?:
                string;
            /** The targeted geo target constant. */
            targetedGeoTargetConstant?:
                string;
            /** The targeted keyword. */
            targetedKeyword?:
                GoogleAdsGoogleadsV12Common__KeywordInfo;
            /** Text message extension. */
            textMessageFeedItem?:
                GoogleAdsGoogleadsV12Common__TextMessageFeedItem;
        }
        interface GoogleAdsGoogleadsV12Resources__Feed {
            /** Data used to configure an affiliate location feed populated with the specified chains. */
            affiliateLocationFeedData?:
                GoogleAdsGoogleadsV12Resources_Feed_AffiliateLocationFeedData;
            /** The list of operations changing the feed attributes. Attributes can only be added, not removed. */
            attributeOperations?:
                GoogleAdsGoogleadsV12Resources__FeedAttributeOperation[];
            /**
             * The Feed's attributes. Required on CREATE, unless system_feed_generation_data is provided, in which case Google Ads will update the feed with the correct attributes. Disallowed on
             * UPDATE. Use attribute_operations to add new attributes.
             */
            attributes?:
                GoogleAdsGoogleadsV12Resources__FeedAttribute[];
            /** Output only. The ID of the feed. This field is read-only. */
            id?:
                string;
            /** Immutable. Name of the feed. Required. */
            name?:
                string;
            /** Immutable. Specifies who manages the FeedAttributes for the Feed. */
            origin?:
                string;
            /** Data used to configure a location feed populated from Business Profile. */
            placesLocationFeedData?:
                GoogleAdsGoogleadsV12Resources_Feed_PlacesLocationFeedData;
            /** Immutable. The resource name of the feed. Feed resource names have the form: `customers/{customer_id}/feeds/{feed_id}` */
            resourceName?:
                string;
            /** Output only. Status of the feed. This field is read-only. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__FeedAttribute {
            /** ID of the attribute. */
            id?:
                string;
            /**
             * Indicates that data corresponding to this attribute is part of a FeedItem's unique key. It defaults to false if it is unspecified. Note that a unique key is not required in a Feed's
             * schema, in which case the FeedItems must be referenced by their feed_item_id.
             */
            isPartOfKey?:
                boolean;
            /** The name of the attribute. Required. */
            name?:
                string;
            /** Data type for feed attribute. Required. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__FeedAttributeOperation {
            /** Output only. Type of list operation to perform. */
            operator?:
                string;
            /** Output only. The feed attribute being added to the list. */
            value?:
                GoogleAdsGoogleadsV12Resources__FeedAttribute;
        }
        interface GoogleAdsGoogleadsV12Resources__FeedItem {
            /** The feed item's attribute values. */
            attributeValues?:
                GoogleAdsGoogleadsV12Resources__FeedItemAttributeValue[];
            /**
             * End time in which this feed item is no longer effective and will stop serving. The time is in the customer's time zone. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05
             * 09:15:00" or "2018-02-01 14:34:30"
             */
            endDateTime?:
                string;
            /** Immutable. The feed to which this feed item belongs. */
            feed?:
                string;
            /** Geo targeting restriction specifies the type of location that can be used for targeting. */
            geoTargetingRestriction?:
                string;
            /** Output only. The ID of this feed item. */
            id?:
                string;
            /**
             * Output only. List of info about a feed item's validation and approval state for active feed mappings. There will be an entry in the list for each type of feed mapping associated
             * with the feed, for example, a feed with a sitelink and a call feed mapping would cause every feed item associated with that feed to have an entry in this list for both sitelink and
             * call. This field is read-only.
             */
            policyInfos?:
                GoogleAdsGoogleadsV12Resources__FeedItemPlaceholderPolicyInfo[];
            /** Immutable. The resource name of the feed item. Feed item resource names have the form: `customers/{customer_id}/feedItems/{feed_id}~{feed_item_id}` */
            resourceName?:
                string;
            /**
             * Start time in which this feed item is effective and can begin serving. The time is in the customer's time zone. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05 09:15:00"
             * or "2018-02-01 14:34:30"
             */
            startDateTime?:
                string;
            /** Output only. Status of the feed item. This field is read-only. */
            status?:
                string;
            /** The list of mappings used to substitute custom parameter tags in a `tracking_url_template`, `final_urls`, or `mobile_final_urls`. */
            urlCustomParameters?:
                GoogleAdsGoogleadsV12Common__CustomParameter[];
        }
        interface GoogleAdsGoogleadsV12Resources__FeedItemAttributeValue {
            /** Bool value. Should be set if feed_attribute_id refers to a feed attribute of type BOOLEAN. */
            booleanValue?:
                boolean;
            /** Repeated bool value. Should be set if feed_attribute_id refers to a feed attribute of type BOOLEAN_LIST. */
            booleanValues?:
                boolean[];
            /** Double value. Should be set if feed_attribute_id refers to a feed attribute of type DOUBLE. */
            doubleValue?:
                number;
            /** Repeated double value. Should be set if feed_attribute_id refers to a feed attribute of type DOUBLE_LIST. */
            doubleValues?:
                number[];
            /** Id of the feed attribute for which the value is associated with. */
            feedAttributeId?:
                string;
            /** Int64 value. Should be set if feed_attribute_id refers to a feed attribute of type INT64. */
            integerValue?:
                string;
            /** Repeated int64 value. Should be set if feed_attribute_id refers to a feed attribute of type INT64_LIST. */
            integerValues?:
                string[];
            /** Price value. Should be set if feed_attribute_id refers to a feed attribute of type PRICE. */
            priceValue?:
                GoogleAdsGoogleadsV12Common__Money;
            /**
             * String value. Should be set if feed_attribute_id refers to a feed attribute of type STRING, URL or DATE_TIME. For STRING the maximum length is 1500 characters. For URL the maximum
             * length is 2076 characters. For DATE_TIME the string must be in the format "YYYYMMDD HHMMSS".
             */
            stringValue?:
                string;
            /**
             * Repeated string value. Should be set if feed_attribute_id refers to a feed attribute of type STRING_LIST, URL_LIST or DATE_TIME_LIST. For STRING_LIST and URL_LIST the total size of
             * the list in bytes may not exceed 3000. For DATE_TIME_LIST the number of elements may not exceed 200. For STRING_LIST the maximum length of each string element is 1500 characters.
             * For URL_LIST the maximum length is 2076 characters. For DATE_TIME the format of the string must be the same as start and end time for the feed item.
             */
            stringValues?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Resources__FeedItemPlaceholderPolicyInfo {
            /** Output only. The overall approval status of the placeholder type, calculated based on the status of its individual policy topic entries. */
            approvalStatus?:
                string;
            /** Output only. The FeedMapping that contains the placeholder type. */
            feedMappingResourceName?:
                string;
            /** Output only. The placeholder type. */
            placeholderTypeEnum?:
                string;
            /** Output only. The list of policy findings for the placeholder type. */
            policyTopicEntries?:
                GoogleAdsGoogleadsV12Common__PolicyTopicEntry[];
            /** Output only. Placeholder type quality evaluation approval status. */
            qualityApprovalStatus?:
                string;
            /** Output only. List of placeholder type quality evaluation disapproval reasons. */
            qualityDisapprovalReasons?:
                string[];
            /** Output only. Where the placeholder type is in the review process. */
            reviewStatus?:
                string;
            /** Output only. List of placeholder type validation errors. */
            validationErrors?:
                GoogleAdsGoogleadsV12Resources__FeedItemValidationError[];
            /** Output only. The validation status of the palceholder type. */
            validationStatus?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__FeedItemSet {
            /** Name of the set. Must be unique within the account. */
            displayName?:
                string;
            /** Filter for dynamic affiliate location set. This field doesn't apply generally to feed item sets. It is only used for sets of affiliate locations. */
            dynamicAffiliateLocationSetFilter?:
                GoogleAdsGoogleadsV12Common__DynamicAffiliateLocationSetFilter;
            /** Filter for dynamic location set. It is only used for sets of locations. */
            dynamicLocationSetFilter?:
                GoogleAdsGoogleadsV12Common__DynamicLocationSetFilter;
            /** Immutable. The resource name of the feed containing the feed items in the set. Immutable. Required. */
            feed?:
                string;
            /** Output only. ID of the set. */
            feedItemSetId?:
                string;
            /** Immutable. The resource name of the feed item set. Feed item set resource names have the form: `customers/{customer_id}/feedItemSets/{feed_id}~{feed_item_set_id}` */
            resourceName?:
                string;
            /** Output only. Status of the feed item set. This field is read-only. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__FeedItemSetLink {
            /** Immutable. The linked FeedItem. */
            feedItem?:
                string;
            /** Immutable. The linked FeedItemSet. */
            feedItemSet?:
                string;
            /**
             * Immutable. The resource name of the feed item set link. Feed item set link resource names have the form:
             * `customers/{customer_id}/feedItemSetLinks/{feed_id}~{feed_item_set_id}~{feed_item_id}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__FeedItemTarget {
            /** Immutable. The targeted ad group. */
            adGroup?:
                string;
            /** Immutable. The targeted schedule. */
            adSchedule?:
                GoogleAdsGoogleadsV12Common__AdScheduleInfo;
            /** Immutable. The targeted campaign. */
            campaign?:
                string;
            /** Immutable. The targeted device. */
            device?:
                string;
            /** Immutable. The feed item to which this feed item target belongs. */
            feedItem?:
                string;
            /** Output only. The ID of the targeted resource. This field is read-only. */
            feedItemTargetId?:
                string;
            /** Output only. The target type of this feed item target. This field is read-only. */
            feedItemTargetType?:
                string;
            /** Immutable. The targeted geo target constant resource name. */
            geoTargetConstant?:
                string;
            /** Immutable. The targeted keyword. */
            keyword?:
                GoogleAdsGoogleadsV12Common__KeywordInfo;
            /**
             * Immutable. The resource name of the feed item target. Feed item target resource names have the form:
             * `customers/{customer_id}/feedItemTargets/{feed_id}~{feed_item_id}~{feed_item_target_type}~{feed_item_target_id}`
             */
            resourceName?:
                string;
            /** Output only. Status of the feed item target. This field is read-only. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__FeedItemValidationError {
            /** Output only. The description of the validation error. */
            description?:
                string;
            /**
             * Output only. Any extra information related to this error which is not captured by validation_error and feed_attribute_id (for example, placeholder field IDs when feed_attribute_id
             * is not mapped). Note that extra_info is not localized.
             */
            extraInfo?:
                string;
            /**
             * Output only. Set of feed attributes in the feed item flagged during validation. If empty, no specific feed attributes can be associated with the error (for example, error across the
             * entire feed item).
             */
            feedAttributeIds?:
                string[];
            /** Output only. Error code indicating what validation error was triggered. The description of the error can be found in the 'description' field. */
            validationError?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__FeedMapping {
            /**
             * Immutable. Feed attributes to field mappings. These mappings are a one-to-many relationship meaning that 1 feed attribute can be used to populate multiple placeholder fields, but 1
             * placeholder field can only draw data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder field can be mapped to multiple feed attributes. Required.
             */
            attributeFieldMappings?:
                GoogleAdsGoogleadsV12Resources__AttributeFieldMapping[];
            /** Immutable. The criterion type of this mapping (for example, if the mapping maps feed attributes to criterion fields). */
            criterionType?:
                string;
            /** Immutable. The feed of this feed mapping. */
            feed?:
                string;
            /** Immutable. The placeholder type of this mapping (for example, if the mapping maps feed attributes to placeholder fields). */
            placeholderType?:
                string;
            /** Immutable. The resource name of the feed mapping. Feed mapping resource names have the form: `customers/{customer_id}/feedMappings/{feed_id}~{feed_mapping_id}` */
            resourceName?:
                string;
            /** Output only. Status of the feed mapping. This field is read-only. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__FeedPlaceholderView {
            /** Output only. The placeholder type of the feed placeholder view. */
            placeholderType?:
                string;
            /** Output only. The resource name of the feed placeholder view. Feed placeholder view resource names have the form: `customers/{customer_id}/feedPlaceholderViews/{placeholder_type}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__GenderView {
            /** Output only. The resource name of the gender view. Gender view resource names have the form: `customers/{customer_id}/genderViews/{ad_group_id}~{criterion_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__GeographicView {
            /** Output only. Criterion Id for the country. */
            countryCriterionId?:
                string;
            /** Output only. Type of the geo targeting of the campaign. */
            locationType?:
                string;
            /** Output only. The resource name of the geographic view. Geographic view resource names have the form: `customers/{customer_id}/geographicViews/{country_criterion_id}~{location_type}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__GeoTargetConstant {
            /** Output only. The fully qualified English name, consisting of the target's name and that of its parent and country. */
            canonicalName?:
                string;
            /** Output only. The ISO-3166-1 alpha-2 country code that is associated with the target. */
            countryCode?:
                string;
            /** Output only. The ID of the geo target constant. */
            id?:
                string;
            /** Output only. Geo target constant English name. */
            name?:
                string;
            /** Output only. The resource name of the parent geo target constant. Geo target constant resource names have the form: `geoTargetConstants/{parent_geo_target_constant_id}` */
            parentGeoTarget?:
                string;
            /** Output only. The resource name of the geo target constant. Geo target constant resource names have the form: `geoTargetConstants/{geo_target_constant_id}` */
            resourceName?:
                string;
            /** Output only. Geo target constant status. */
            status?:
                string;
            /** Output only. Geo target constant target type. */
            targetType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__GoogleAdsField {
            /**
             * Output only. The names of all resources that are selectable with the described artifact. Fields from these resources do not segment metrics when included in search queries. This
             * field is only set for artifacts whose category is RESOURCE.
             */
            attributeResources?:
                string[];
            /** Output only. The category of the artifact. */
            category?:
                string;
            /** Output only. This field determines the operators that can be used with the artifact in WHERE clauses. */
            dataType?:
                string;
            /** Output only. Values the artifact can assume if it is a field of type ENUM. This field is only set for artifacts of category SEGMENT or ATTRIBUTE. */
            enumValues?:
                string[];
            /** Output only. Whether the artifact can be used in a WHERE clause in search queries. */
            filterable?:
                boolean;
            /** Output only. Whether the field artifact is repeated. */
            isRepeated?:
                boolean;
            /**
             * Output only. This field lists the names of all metrics that are selectable with the described artifact when it is used in the FROM clause. It is only set for artifacts whose
             * category is RESOURCE.
             */
            metrics?:
                string[];
            /** Output only. The name of the artifact. */
            name?:
                string;
            /** Output only. The resource name of the artifact. Artifact resource names have the form: `googleAdsFields/{name}` */
            resourceName?:
                string;
            /**
             * Output only. This field lists the names of all artifacts, whether a segment or another resource, that segment metrics when included in search queries and when the described artifact
             * is used in the FROM clause. It is only set for artifacts whose category is RESOURCE.
             */
            segments?:
                string[];
            /** Output only. Whether the artifact can be used in a SELECT clause in search queries. */
            selectable?:
                boolean;
            /** Output only. The names of all resources, segments, and metrics that are selectable with the described artifact. */
            selectableWith?:
                string[];
            /** Output only. Whether the artifact can be used in a ORDER BY clause in search queries. */
            sortable?:
                boolean;
            /** Output only. The URL of proto describing the artifact's data type. */
            typeUrl?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__GoogleAdsLinkIdentifier {
            /**
             * Immutable. The resource name of the Google Ads account. This field is required and should not be empty when creating a new Google Ads link. It is unable to be modified after the
             * creation of the link.
             */
            customer?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__GroupPlacementView {
            /** Output only. Domain name for websites and YouTube channel name for YouTube channels. */
            displayName?:
                string;
            /** Output only. The automatic placement string at group level, e. g. web domain, mobile app ID, or a YouTube channel ID. */
            placement?:
                string;
            /** Output only. Type of the placement, for example, Website, YouTube Channel, Mobile Application. */
            placementType?:
                string;
            /**
             * Output only. The resource name of the group placement view. Group placement view resource names have the form:
             * `customers/{customer_id}/groupPlacementViews/{ad_group_id}~{base64_placement}`
             */
            resourceName?:
                string;
            /** Output only. URL of the group placement, for example, domain, link to the mobile application in app store, or a YouTube channel URL. */
            targetUrl?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__HotelCenterLinkIdentifier {
            /** Output only. The hotel center id of the hotel account. */
            hotelCenterId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__HotelGroupView {
            /** Output only. The resource name of the hotel group view. Hotel Group view resource names have the form: `customers/{customer_id}/hotelGroupViews/{ad_group_id}~{criterion_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__HotelPerformanceView {
            /** Output only. The resource name of the hotel performance view. Hotel performance view resource names have the form: `customers/{customer_id}/hotelPerformanceView` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__HotelReconciliation {
            /** Output only. Whether a given booking has been billed. Once billed, a booking can't be modified. */
            billed?:
                boolean;
            /** Output only. The resource name for the Campaign associated with the conversion. */
            campaign?:
                string;
            /**
             * Output only. Check-in date recorded when the booking is made. If the check-in date is modified at reconciliation, the revised date will then take the place of the original date in
             * this column. Format is YYYY-MM-DD.
             */
            checkInDate?:
                string;
            /**
             * Output only. Check-out date recorded when the booking is made. If the check-in date is modified at reconciliation, the revised date will then take the place of the original date in
             * this column. Format is YYYY-MM-DD.
             */
            checkOutDate?:
                string;
            /** Required. Output only. The commission ID is Google's ID for this booking. Every booking event is assigned a Commission ID to help you match it to a guest stay. */
            commissionId?:
                string;
            /** Output only. Identifier for the Hotel Center account which provides the rates for the Hotel campaign. */
            hotelCenterId?:
                string;
            /** Output only. Unique identifier for the booked property, as provided in the Hotel Center feed. The hotel ID comes from the 'ID' parameter of the conversion tracking tag. */
            hotelId?:
                string;
            /** Output only. The order ID is the identifier for this booking as provided in the 'transaction_id' parameter of the conversion tracking tag. */
            orderId?:
                string;
            /**
             * Required. Output only. Reconciled value is the final value of a booking as paid by the guest. If original booking value changes for any reason, such as itinerary changes or room
             * upsells, the reconciled value should be the full final amount collected. If a booking is canceled, the reconciled value should include the value of any cancellation fees or
             * non-refundable nights charged. Value is in millionths of the base unit currency. For example, $12.35 would be represented as 12350000. Currency unit is in the default customer
             * currency.
             */
            reconciledValueMicros?:
                string;
            /** Immutable. The resource name of the hotel reconciliation. Hotel reconciliation resource names have the form: `customers/{customer_id}/hotelReconciliations/{commission_id}` */
            resourceName?:
                string;
            /**
             * Required. Output only. Current status of a booking with regards to reconciliation and billing. Bookings should be reconciled within 45 days after the check-out date. Any booking not
             * reconciled within 45 days will be billed at its original value.
             */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__IncomeRangeView {
            /** Output only. The resource name of the income range view. Income range view resource names have the form: `customers/{customer_id}/incomeRangeViews/{ad_group_id}~{criterion_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__Invoice {
            /** Output only. The list of summarized account budget information associated with this invoice. */
            accountBudgetSummaries?:
                GoogleAdsGoogleadsV12Resources_Invoice_AccountBudgetSummary[];
            /** Output only. The list of summarized account information associated with this invoice. */
            accountSummaries?:
                GoogleAdsGoogleadsV12Resources_Invoice_AccountSummary[];
            /** Output only. The pretax subtotal amount of invoice level adjustments, in micros. */
            adjustmentsSubtotalAmountMicros?:
                string;
            /** Output only. The sum of taxes on the invoice level adjustments, in micros. */
            adjustmentsTaxAmountMicros?:
                string;
            /** Output only. The total amount of invoice level adjustments, in micros. */
            adjustmentsTotalAmountMicros?:
                string;
            /** Output only. The resource name of this invoice's billing setup. `customers/{customer_id}/billingSetups/{billing_setup_id}` */
            billingSetup?:
                string;
            /**
             * Output only. The resource name of the original invoice corrected, wrote off, or canceled by this invoice, if applicable. If `corrected_invoice` is set, `replaced_invoices` will not
             * be set. Invoice resource names have the form: `customers/{customer_id}/invoices/{invoice_id}`
             */
            correctedInvoice?:
                string;
            /** Output only. The currency code. All costs are returned in this currency. A subset of the currency codes derived from the ISO 4217 standard is supported. */
            currencyCode?:
                string;
            /** Output only. The due date in yyyy-mm-dd format. */
            dueDate?:
                string;
            /** Output only. The ID of the invoice. It appears on the invoice PDF as "Invoice number". */
            id?:
                string;
            /** Output only. The issue date in yyyy-mm-dd format. It appears on the invoice PDF as either "Issue date" or "Invoice date". */
            issueDate?:
                string;
            /**
             * Output only. A 16 digit ID used to identify the payments account associated with the billing setup, for example, "1234-5678-9012-3456". It appears on the invoice PDF as "Billing
             * Account Number".
             */
            paymentsAccountId?:
                string;
            /** Output only. A 12 digit ID used to identify the payments profile associated with the billing setup, for example, "1234-5678-9012". It appears on the invoice PDF as "Billing ID". */
            paymentsProfileId?:
                string;
            /** Output only. The URL to a PDF copy of the invoice. Users need to pass in their OAuth token to request the PDF with this URL. */
            pdfUrl?:
                string;
            /** Output only. The pretax subtotal amount of invoice level regulatory costs, in micros. */
            regulatoryCostsSubtotalAmountMicros?:
                string;
            /** Output only. The sum of taxes on the invoice level regulatory costs, in micros. */
            regulatoryCostsTaxAmountMicros?:
                string;
            /** Output only. The total amount of invoice level regulatory costs, in micros. */
            regulatoryCostsTotalAmountMicros?:
                string;
            /**
             * Output only. The resource name of the original invoice(s) being rebilled or replaced by this invoice, if applicable. There might be multiple replaced invoices due to invoice
             * consolidation. The replaced invoices may not belong to the same payments account. If `replaced_invoices` is set, `corrected_invoice` will not be set. Invoice resource names have the
             * form: `customers/{customer_id}/invoices/{invoice_id}`
             */
            replacedInvoices?:
                string[];
            /**
             * Output only. The resource name of the invoice. Multiple customers can share a given invoice, so multiple resource names may point to the same invoice. Invoice resource names have
             * the form: `customers/{customer_id}/invoices/{invoice_id}`
             */
            resourceName?:
                string;
            /** Output only. The service period date range of this invoice. The end date is inclusive. */
            serviceDateRange?:
                GoogleAdsGoogleadsV12Common__DateRange;
            /** Output only. The pretax subtotal amount, in micros. This is equal to the sum of the AccountBudgetSummary subtotal amounts and Invoice.adjustments_subtotal_amount_micros. */
            subtotalAmountMicros?:
                string;
            /** Output only. The sum of all taxes on the invoice, in micros. This equals the sum of the AccountBudgetSummary tax amounts, plus taxes not associated with a specific account budget. */
            taxAmountMicros?:
                string;
            /**
             * Output only. The total amount, in micros. This equals the sum of Invoice.subtotal_amount_micros, Invoice.tax_amount_micros, Invoice.regulatory_costs_subtotal_amount_micros, and
             * Invoice.export_charge_subtotal_amount_micros (which is separated into a separate line item starting with V14.1).
             */
            totalAmountMicros?:
                string;
            /** Output only. The type of invoice. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__KeywordPlan {
            /** The date period used for forecasting the plan. */
            forecastPeriod?:
                GoogleAdsGoogleadsV12Resources__KeywordPlanForecastPeriod;
            /** Output only. The ID of the keyword plan. */
            id?:
                string;
            /** The name of the keyword plan. This field is required and should not be empty when creating new keyword plans. */
            name?:
                string;
            /** Immutable. The resource name of the Keyword Planner plan. KeywordPlan resource names have the form: `customers/{customer_id}/keywordPlans/{kp_plan_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__KeywordPlanAdGroup {
            /** A default ad group max cpc bid in micros in account currency for all biddable keywords under the keyword plan ad group. If not set, will inherit from parent campaign. */
            cpcBidMicros?:
                string;
            /** Output only. The ID of the keyword plan ad group. */
            id?:
                string;
            /** The keyword plan campaign to which this ad group belongs. */
            keywordPlanCampaign?:
                string;
            /** The name of the keyword plan ad group. This field is required and should not be empty when creating keyword plan ad group. */
            name?:
                string;
            /** Immutable. The resource name of the Keyword Planner ad group. KeywordPlanAdGroup resource names have the form: `customers/{customer_id}/keywordPlanAdGroups/{kp_ad_group_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__KeywordPlanAdGroupKeyword {
            /**
             * A keyword level max cpc bid in micros (for example, $1 = 1mm). The currency is the same as the account currency code. This will override any CPC bid set at the keyword plan ad group
             * level. Not applicable for negative keywords. (negative = true) This field is Optional.
             */
            cpcBidMicros?:
                string;
            /** Output only. The ID of the Keyword Plan keyword. */
            id?:
                string;
            /** The Keyword Plan ad group to which this keyword belongs. */
            keywordPlanAdGroup?:
                string;
            /** The keyword match type. */
            matchType?:
                string;
            /** Immutable. If true, the keyword is negative. */
            negative?:
                boolean;
            /**
             * Immutable. The resource name of the Keyword Plan ad group keyword. KeywordPlanAdGroupKeyword resource names have the form:
             * `customers/{customer_id}/keywordPlanAdGroupKeywords/{kp_ad_group_keyword_id}`
             */
            resourceName?:
                string;
            /** The keyword text. */
            text?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__KeywordPlanCampaign {
            /**
             * A default max cpc bid in micros, and in the account currency, for all ad groups under the campaign. This field is required and should not be empty when creating Keyword Plan
             * campaigns.
             */
            cpcBidMicros?:
                string;
            /** The geo targets. Max number allowed: 20. */
            geoTargets?:
                GoogleAdsGoogleadsV12Resources__KeywordPlanGeoTarget[];
            /** Output only. The ID of the Keyword Plan campaign. */
            id?:
                string;
            /** The keyword plan this campaign belongs to. */
            keywordPlan?:
                string;
            /** Targeting network. This field is required and should not be empty when creating Keyword Plan campaigns. */
            keywordPlanNetwork?:
                string;
            /** The languages targeted for the Keyword Plan campaign. Max allowed: 1. */
            languageConstants?:
                string[];
            /** The name of the Keyword Plan campaign. This field is required and should not be empty when creating Keyword Plan campaigns. */
            name?:
                string;
            /** Immutable. The resource name of the Keyword Plan campaign. KeywordPlanCampaign resource names have the form: `customers/{customer_id}/keywordPlanCampaigns/{kp_campaign_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__KeywordPlanCampaignKeyword {
            /** Output only. The ID of the Keyword Plan negative keyword. */
            id?:
                string;
            /** The Keyword Plan campaign to which this negative keyword belongs. */
            keywordPlanCampaign?:
                string;
            /** The keyword match type. */
            matchType?:
                string;
            /** Immutable. If true, the keyword is negative. Must be set to true. Only negative campaign keywords are supported. */
            negative?:
                boolean;
            /**
             * Immutable. The resource name of the Keyword Plan Campaign keyword. KeywordPlanCampaignKeyword resource names have the form:
             * `customers/{customer_id}/keywordPlanCampaignKeywords/{kp_campaign_keyword_id}`
             */
            resourceName?:
                string;
            /** The keyword text. */
            text?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__KeywordPlanForecastPeriod {
            /** A future date range relative to the current date used for forecasting. */
            dateInterval?:
                string;
            /**
             * The custom date range used for forecasting. It cannot be greater than a year. The start and end dates must be in the future. Otherwise, an error will be returned when the
             * forecasting action is performed. The start and end dates are inclusive.
             */
            dateRange?:
                GoogleAdsGoogleadsV12Common__DateRange;
        }
        interface GoogleAdsGoogleadsV12Resources__KeywordPlanGeoTarget {
            /** Required. The resource name of the geo target. */
            geoTargetConstant?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__KeywordThemeConstant {
            /** Output only. The ISO-3166 Alpha-2 country code of the constant, eg. "US". To display and query matching purpose, the keyword theme needs to be localized. */
            countryCode?:
                string;
            /** Output only. The display name of the keyword theme or sub keyword theme. */
            displayName?:
                string;
            /** Output only. The ISO-639-1 language code with 2 letters of the constant, eg. "en". To display and query matching purpose, the keyword theme needs to be localized. */
            languageCode?:
                string;
            /** Output only. The resource name of the keyword theme constant. Keyword theme constant resource names have the form: `keywordThemeConstants/{keyword_theme_id}~{sub_keyword_theme_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__KeywordView {
            /** Output only. The resource name of the keyword view. Keyword view resource names have the form: `customers/{customer_id}/keywordViews/{ad_group_id}~{criterion_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__Label {
            /** Output only. ID of the label. Read only. */
            id?:
                string;
            /** The name of the label. This field is required and should not be empty when creating a new label. The length of this string should be between 1 and 80, inclusive. */
            name?:
                string;
            /** Immutable. Name of the resource. Label resource names have the form: `customers/{customer_id}/labels/{label_id}` */
            resourceName?:
                string;
            /** Output only. Status of the label. Read only. */
            status?:
                string;
            /** A type of label displaying text on a colored background. */
            textLabel?:
                GoogleAdsGoogleadsV12Common__TextLabel;
        }
        interface GoogleAdsGoogleadsV12Resources__LandingPageView {
            /**
             * Output only. The resource name of the landing page view. Landing page view resource names have the form:
             * `customers/{customer_id}/landingPageViews/{unexpanded_final_url_fingerprint}`
             */
            resourceName?:
                string;
            /** Output only. The advertiser-specified final URL. */
            unexpandedFinalUrl?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__LanguageConstant {
            /** Output only. The language code, for example, "en_US", "en_AU", "es", "fr", etc. */
            code?:
                string;
            /** Output only. The ID of the language constant. */
            id?:
                string;
            /** Output only. The full name of the language in English, for example, "English (US)", "Spanish", etc. */
            name?:
                string;
            /** Output only. The resource name of the language constant. Language constant resource names have the form: `languageConstants/{criterion_id}` */
            resourceName?:
                string;
            /** Output only. Whether the language is targetable. */
            targetable?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Resources__LeadFormSubmissionData {
            /** Output only. AdGroup associated with the submitted lead form. */
            adGroup?:
                string;
            /** Output only. AdGroupAd associated with the submitted lead form. */
            adGroupAd?:
                string;
            /** Output only. Asset associated with the submitted lead form. */
            asset?:
                string;
            /** Output only. Campaign associated with the submitted lead form. */
            campaign?:
                string;
            /** Output only. Submission data associated with a custom lead form. */
            customLeadFormSubmissionFields?:
                GoogleAdsGoogleadsV12Resources__CustomLeadFormSubmissionField[];
            /** Output only. Google Click Id associated with the submissed lead form. */
            gclid?:
                string;
            /** Output only. ID of this lead form submission. */
            id?:
                string;
            /** Output only. Submission data associated with a lead form. */
            leadFormSubmissionFields?:
                GoogleAdsGoogleadsV12Resources__LeadFormSubmissionField[];
            /**
             * Output only. The resource name of the lead form submission data. Lead form submission data resource names have the form:
             * `customers/{customer_id}/leadFormSubmissionData/{lead_form_submission_data_id}`
             */
            resourceName?:
                string;
            /** Output only. The date and time at which the lead form was submitted. The format is "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00". */
            submissionDateTime?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__LeadFormSubmissionField {
            /** Output only. Field type for lead form fields. */
            fieldType?:
                string;
            /** Output only. Field value for lead form fields. */
            fieldValue?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__LifeEvent {
            /** Output only. Availability information of the life event. */
            availabilities?:
                GoogleAdsGoogleadsV12Common__CriterionCategoryAvailability[];
            /** Output only. The ID of the life event. */
            id?:
                string;
            /** Output only. True if the life event is launched to all channels and locales. */
            launchedToAll?:
                boolean;
            /** Output only. The name of the life event, for example,"Recently Moved" */
            name?:
                string;
            /** Output only. The parent of the life_event. */
            parent?:
                string;
            /** Output only. The resource name of the life event. Life event resource names have the form: `customers/{customer_id}/lifeEvents/{life_event_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ListingGroupFilterDimension {
            /** Bidding category of a product offer. */
            productBiddingCategory?:
                GoogleAdsGoogleadsV12Resources_ListingGroupFilterDimension_ProductBiddingCategory;
            /** Brand of a product offer. */
            productBrand?:
                GoogleAdsGoogleadsV12Resources_ListingGroupFilterDimension_ProductBrand;
            /** Locality of a product offer. */
            productChannel?:
                GoogleAdsGoogleadsV12Resources_ListingGroupFilterDimension_ProductChannel;
            /** Condition of a product offer. */
            productCondition?:
                GoogleAdsGoogleadsV12Resources_ListingGroupFilterDimension_ProductCondition;
            /** Custom attribute of a product offer. */
            productCustomAttribute?:
                GoogleAdsGoogleadsV12Resources_ListingGroupFilterDimension_ProductCustomAttribute;
            /** Item id of a product offer. */
            productItemId?:
                GoogleAdsGoogleadsV12Resources_ListingGroupFilterDimension_ProductItemId;
            /** Type of a product offer. */
            productType?:
                GoogleAdsGoogleadsV12Resources_ListingGroupFilterDimension_ProductType;
        }
        interface GoogleAdsGoogleadsV12Resources__LocationView {
            /** Output only. The resource name of the location view. Location view resource names have the form: `customers/{customer_id}/locationViews/{campaign_id}~{criterion_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ManagedPlacementView {
            /**
             * Output only. The resource name of the Managed Placement view. Managed placement view resource names have the form:
             * `customers/{customer_id}/managedPlacementViews/{ad_group_id}~{criterion_id}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__MediaAudio {
            /** Output only. The duration of the Audio in milliseconds. */
            adDurationMillis?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__MediaBundle {
            /** Immutable. Raw zipped data. */
            data?:
                string;
            /** Output only. The url to access the uploaded zipped data. For example, https://tpc.googlesyndication.com/simgad/123 This field is read-only. */
            url?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__MediaFile {
            /** Output only. Encapsulates an Audio. */
            audio?:
                GoogleAdsGoogleadsV12Resources__MediaAudio;
            /** Output only. The size of the media file in bytes. */
            fileSize?:
                string;
            /** Output only. The ID of the media file. */
            id?:
                string;
            /** Immutable. Encapsulates an Image. */
            image?:
                GoogleAdsGoogleadsV12Resources__MediaImage;
            /** Immutable. A ZIP archive media the content of which contains HTML5 assets. */
            mediaBundle?:
                GoogleAdsGoogleadsV12Resources__MediaBundle;
            /** Output only. The mime type of the media file. */
            mimeType?:
                string;
            /** Immutable. The name of the media file. The name can be used by clients to help identify previously uploaded media. */
            name?:
                string;
            /** Immutable. The resource name of the media file. Media file resource names have the form: `customers/{customer_id}/mediaFiles/{media_file_id}` */
            resourceName?:
                string;
            /** Immutable. The URL of where the original media file was downloaded from (or a file name). Only used for media of type AUDIO and IMAGE. */
            sourceUrl?:
                string;
            /** Immutable. Type of the media file. */
            type?:
                string;
            /** Immutable. Encapsulates a Video. */
            video?:
                GoogleAdsGoogleadsV12Resources__MediaVideo;
        }
        interface GoogleAdsGoogleadsV12Resources__MediaImage {
            /** Immutable. Raw image data. */
            data?:
                string;
            /** Output only. The url to the full size version of the image. */
            fullSizeImageUrl?:
                string;
            /** Output only. The url to the preview size version of the image. */
            previewSizeImageUrl?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__MediaVideo {
            /** Output only. The duration of the Video in milliseconds. */
            adDurationMillis?:
                string;
            /** Output only. The Advertising Digital Identification code for this video, as defined by the American Association of Advertising Agencies, used mainly for television commercials. */
            advertisingIdCode?:
                string;
            /** Output only. The Industry Standard Commercial Identifier code for this video, used mainly for television commercials. */
            isciCode?:
                string;
            /** Immutable. The YouTube video ID (as seen in YouTube URLs). Adding prefix "https://www.youtube.com/watch?v=" to this ID will get the YouTube streaming URL for this video. */
            youtubeVideoId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__MerchantCenterLink {
            /** Output only. The ID of the Merchant Center account. This field is readonly. */
            id?:
                string;
            /** Output only. The name of the Merchant Center account. This field is readonly. */
            merchantCenterAccountName?:
                string;
            /** Immutable. The resource name of the merchant center link. Merchant center link resource names have the form: `customers/{customer_id}/merchantCenterLinks/{merchant_center_id}` */
            resourceName?:
                string;
            /** The status of the link. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__MobileAppCategoryConstant {
            /** Output only. The ID of the mobile app category constant. */
            id?:
                number;
            /** Output only. Mobile app category name. */
            name?:
                string;
            /** Output only. The resource name of the mobile app category constant. Mobile app category constant resource names have the form: `mobileAppCategoryConstants/{mobile_app_category_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__MobileDeviceConstant {
            /** Output only. The ID of the mobile device constant. */
            id?:
                string;
            /** Output only. The manufacturer of the mobile device. */
            manufacturerName?:
                string;
            /** Output only. The name of the mobile device. */
            name?:
                string;
            /** Output only. The operating system of the mobile device. */
            operatingSystemName?:
                string;
            /** Output only. The resource name of the mobile device constant. Mobile device constant resource names have the form: `mobileDeviceConstants/{criterion_id}` */
            resourceName?:
                string;
            /** Output only. The type of mobile device. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__OfflineUserDataJob {
            /** Immutable. Metadata for data updates to a CRM-based user list. */
            customerMatchUserListMetadata?:
                GoogleAdsGoogleadsV12Common__CustomerMatchUserListMetadata;
            /** Immutable. User specified job ID. */
            externalId?:
                string;
            /** Output only. Reason for the processing failure, if status is FAILED. */
            failureReason?:
                string;
            /** Output only. ID of this offline user data job. */
            id?:
                string;
            /** Output only. Metadata of offline user data job depicting match rate range. */
            operationMetadata?:
                GoogleAdsGoogleadsV12Resources__OfflineUserDataJobMetadata;
            /**
             * Immutable. The resource name of the offline user data job. Offline user data job resource names have the form:
             * `customers/{customer_id}/offlineUserDataJobs/{offline_user_data_job_id}`
             */
            resourceName?:
                string;
            /** Output only. Status of the job. */
            status?:
                string;
            /** Immutable. Metadata for store sales data update. */
            storeSalesMetadata?:
                GoogleAdsGoogleadsV12Common__StoreSalesMetadata;
            /** Immutable. Type of the job. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__OfflineUserDataJobMetadata {
            /**
             * Output only. Match rate of the Customer Match user list upload. Describes the estimated match rate when the status of the job is "RUNNING" and final match rate when the final match
             * rate is available after the status of the job is "SUCCESS/FAILED".
             */
            matchRateRange?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__OperatingSystemVersionConstant {
            /** Output only. The ID of the operating system version. */
            id?:
                string;
            /** Output only. Name of the operating system. */
            name?:
                string;
            /** Output only. Determines whether this constant represents a single version or a range of versions. */
            operatorType?:
                string;
            /** Output only. The OS Major Version number. */
            osMajorVersion?:
                number;
            /** Output only. The OS Minor Version number. */
            osMinorVersion?:
                number;
            /**
             * Output only. The resource name of the operating system version constant. Operating system version constant resource names have the form:
             * `operatingSystemVersionConstants/{criterion_id}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__PaidOrganicSearchTermView {
            /**
             * Output only. The resource name of the search term view. Search term view resource names have the form: `customers/{customer_id}/paidOrganicSearchTermViews/{campaign_id}~
             * {ad_group_id}~{URL-base64 search term}`
             */
            resourceName?:
                string;
            /** Output only. The search term. */
            searchTerm?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ParentalStatusView {
            /**
             * Output only. The resource name of the parental status view. Parental Status view resource names have the form:
             * `customers/{customer_id}/parentalStatusViews/{ad_group_id}~{criterion_id}`
             */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__PaymentsAccount {
            /** Output only. The currency code of the payments account. A subset of the currency codes derived from the ISO 4217 standard is supported. */
            currencyCode?:
                string;
            /** Output only. The name of the payments account. */
            name?:
                string;
            /** Output only. Paying manager of this payment account. */
            payingManagerCustomer?:
                string;
            /** Output only. A 16 digit ID used to identify a payments account. */
            paymentsAccountId?:
                string;
            /** Output only. A 12 digit ID used to identify the payments profile associated with the payments account. */
            paymentsProfileId?:
                string;
            /** Output only. The resource name of the payments account. PaymentsAccount resource names have the form: `customers/{customer_id}/paymentsAccounts/{payments_account_id}` */
            resourceName?:
                string;
            /** Output only. A secondary payments profile ID present in uncommon situations, for example, when a sequential liability agreement has been arranged. */
            secondaryPaymentsProfileId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__PerStoreView {
            /** Output only. The place ID of the per store view. */
            placeId?:
                string;
            /** Output only. The resource name of the per store view. Per Store view resource names have the form: `customers/{customer_id}/perStoreViews/{place_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ProductBiddingCategoryConstant {
            /** Output only. Two-letter upper-case country code of the product bidding category. */
            countryCode?:
                string;
            /**
             * Output only. ID of the product bidding category. This ID is equivalent to the google_product_category ID as described in this article:
             * https://support.google.com/merchants/answer/6324436.
             */
            id?:
                string;
            /** Output only. Language code of the product bidding category. */
            languageCode?:
                string;
            /** Output only. Level of the product bidding category. */
            level?:
                string;
            /** Output only. Display value of the product bidding category localized according to language_code. */
            localizedName?:
                string;
            /** Output only. Resource name of the parent product bidding category. */
            productBiddingCategoryConstantParent?:
                string;
            /** Output only. The resource name of the product bidding category. Product bidding category resource names have the form: `productBiddingCategoryConstants/{country_code}~{level}~{id}` */
            resourceName?:
                string;
            /** Output only. Status of the product bidding category. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ProductGroupView {
            /** Output only. The resource name of the product group view. Product group view resource names have the form: `customers/{customer_id}/productGroupViews/{ad_group_id}~{criterion_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__Recommendation {
            /**
             * Output only. The ad group targeted by this recommendation. This will be set only when the recommendation affects a single ad group. This field will be set for the following
             * recommendation types: KEYWORD, OPTIMIZE_AD_ROTATION, RESPONSIVE_SEARCH_AD, RESPONSIVE_SEARCH_AD_ASSET, TEXT_AD
             */
            adGroup?:
                string;
            /** Output only. The Call extension recommendation. */
            callExtensionRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_CallExtensionRecommendation;
            /** Output only. The Callout extension recommendation. */
            calloutExtensionRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_CalloutExtensionRecommendation;
            /**
             * Output only. The campaign targeted by this recommendation. This field will be set for the following recommendation types: CALL_EXTENSION, CALLOUT_EXTENSION, ENHANCED_CPC_OPT_IN,
             * USE_BROAD_MATCH_KEYWORD, KEYWORD, KEYWORD_MATCH_TYPE, UPGRADE_LOCAL_CAMPAIGN_TO_PERFORMANCE_MAX, MAXIMIZE_CLICKS_OPT_IN, MAXIMIZE_CONVERSIONS_OPT_IN, OPTIMIZE_AD_ROTATION,
             * RESPONSIVE_SEARCH_AD, RESPONSIVE_SEARCH_AD_ASSET, SEARCH_PARTNERS_OPT_IN, DISPLAY_EXPANSION_OPT_IN, SITELINK_EXTENSION, TARGET_CPA_OPT_IN, TARGET_ROAS_OPT_IN, TEXT_AD,
             * UPGRADE_SMART_SHOPPING_CAMPAIGN_TO_PERFORMANCE_MAX, RAISE_TARGET_CPA_BID_TOO_LOW, FORECASTING_SET_TARGET_ROAS,
             */
            campaign?:
                string;
            /**
             * Output only. The budget targeted by this recommendation. This will be set only when the recommendation affects a single campaign budget. This field will be set for the following
             * recommendation types: CAMPAIGN_BUDGET, FORECASTING_CAMPAIGN_BUDGET, MARGINAL_ROI_CAMPAIGN_BUDGET, MOVE_UNUSED_BUDGET
             */
            campaignBudget?:
                string;
            /** Output only. The campaign budget recommendation. */
            campaignBudgetRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_CampaignBudgetRecommendation;
            /** Output only. Whether the recommendation is dismissed or not. */
            dismissed?:
                boolean;
            /** Output only. The Display Expansion opt-in recommendation. */
            displayExpansionOptInRecommendation?:
                any;
            /** Output only. The Enhanced Cost-Per-Click Opt-In recommendation. */
            enhancedCpcOptInRecommendation?:
                any;
            /** Output only. The forecasting campaign budget recommendation. */
            forecastingCampaignBudgetRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_CampaignBudgetRecommendation;
            /** Output only. The forecasting set target ROAS recommendation. */
            forecastingSetTargetRoasRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_ForecastingSetTargetRoasRecommendation;
            /** Output only. The impact on account performance as a result of applying the recommendation. */
            impact?:
                GoogleAdsGoogleadsV12Resources_Recommendation_RecommendationImpact;
            /** Output only. The keyword match type recommendation. */
            keywordMatchTypeRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_KeywordMatchTypeRecommendation;
            /** Output only. The keyword recommendation. */
            keywordRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_KeywordRecommendation;
            /** Output only. The marginal ROI campaign budget recommendation. */
            marginalRoiCampaignBudgetRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_CampaignBudgetRecommendation;
            /** Output only. The MaximizeClicks Opt-In recommendation. */
            maximizeClicksOptInRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_MaximizeClicksOptInRecommendation;
            /** Output only. The MaximizeConversions Opt-In recommendation. */
            maximizeConversionsOptInRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_MaximizeConversionsOptInRecommendation;
            /** Output only. The move unused budget recommendation. */
            moveUnusedBudgetRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_MoveUnusedBudgetRecommendation;
            /** Output only. The Optimize Ad Rotation recommendation. */
            optimizeAdRotationRecommendation?:
                any;
            /** Output only. The raise target CPA bid too low recommendation. */
            raiseTargetCpaBidTooLowRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_RaiseTargetCpaBidTooLowRecommendation;
            /** Immutable. The resource name of the recommendation. `customers/{customer_id}/recommendations/{recommendation_id}` */
            resourceName?:
                string;
            /** Output only. The responsive search ad asset recommendation. */
            responsiveSearchAdAssetRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_ResponsiveSearchAdAssetRecommendation;
            /** Output only. The responsive search ad improve ad strength recommendation. */
            responsiveSearchAdImproveAdStrengthRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_ResponsiveSearchAdImproveAdStrengthRecommendation;
            /** Output only. The add responsive search ad recommendation. */
            responsiveSearchAdRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_ResponsiveSearchAdRecommendation;
            /** Output only. The Search Partners Opt-In recommendation. */
            searchPartnersOptInRecommendation?:
                any;
            /** Output only. The Sitelink recommendation. */
            sitelinkExtensionRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_SitelinkExtensionRecommendation;
            /** Output only. The TargetCPA opt-in recommendation. */
            targetCpaOptInRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_TargetCpaOptInRecommendation;
            /** Output only. The Target ROAS opt-in recommendation. */
            targetRoasOptInRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_TargetRoasOptInRecommendation;
            /** Output only. Add expanded text ad recommendation. */
            textAdRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_TextAdRecommendation;
            /** Output only. The type of recommendation. */
            type?:
                string;
            /** Output only. The upgrade a Local campaign to a Performance Max campaign recommendation. */
            upgradeLocalCampaignToPerformanceMaxRecommendation?:
                any;
            /** Output only. The upgrade a Smart Shopping campaign to a Performance Max campaign recommendation. */
            upgradeSmartShoppingCampaignToPerformanceMaxRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_UpgradeSmartShoppingCampaignToPerformanceMaxRecommendation;
            /** Output only. The use broad match keyword recommendation. */
            useBroadMatchKeywordRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_UseBroadMatchKeywordRecommendation;
        }
        interface GoogleAdsGoogleadsV12Resources__RemarketingAction {
            /** Output only. Id of the remarketing action. */
            id?:
                string;
            /** The name of the remarketing action. This field is required and should not be empty when creating new remarketing actions. */
            name?:
                string;
            /** Immutable. The resource name of the remarketing action. Remarketing action resource names have the form: `customers/{customer_id}/remarketingActions/{remarketing_action_id}` */
            resourceName?:
                string;
            /** Output only. The snippets used for tracking remarketing actions. */
            tagSnippets?:
                GoogleAdsGoogleadsV12Common__TagSnippet[];
        }
        interface GoogleAdsGoogleadsV12Resources__RemarketingSetting {
            /** Output only. The Google tag. */
            googleGlobalSiteTag?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__SearchTermView {
            /** Output only. The ad group the search term served in. */
            adGroup?:
                string;
            /**
             * Output only. The resource name of the search term view. Search term view resource names have the form:
             * `customers/{customer_id}/searchTermViews/{campaign_id}~{ad_group_id}~{URL-base64_search_term}`
             */
            resourceName?:
                string;
            /** Output only. The search term. */
            searchTerm?:
                string;
            /** Output only. Indicates whether the search term is currently one of your targeted or excluded keywords. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__SharedCriterion {
            /** Output only. The ID of the criterion. This field is ignored for mutates. */
            criterionId?:
                string;
            /** Immutable. Keyword. */
            keyword?:
                GoogleAdsGoogleadsV12Common__KeywordInfo;
            /** Immutable. Mobile App Category. */
            mobileAppCategory?:
                GoogleAdsGoogleadsV12Common__MobileAppCategoryInfo;
            /** Immutable. Mobile application. */
            mobileApplication?:
                GoogleAdsGoogleadsV12Common__MobileApplicationInfo;
            /** Immutable. Placement. */
            placement?:
                GoogleAdsGoogleadsV12Common__PlacementInfo;
            /** Immutable. The resource name of the shared criterion. Shared set resource names have the form: `customers/{customer_id}/sharedCriteria/{shared_set_id}~{criterion_id}` */
            resourceName?:
                string;
            /** Immutable. The shared set to which the shared criterion belongs. */
            sharedSet?:
                string;
            /** Output only. The type of the criterion. */
            type?:
                string;
            /** Immutable. YouTube Channel. */
            youtubeChannel?:
                GoogleAdsGoogleadsV12Common__YouTubeChannelInfo;
            /** Immutable. YouTube Video. */
            youtubeVideo?:
                GoogleAdsGoogleadsV12Common__YouTubeVideoInfo;
        }
        interface GoogleAdsGoogleadsV12Resources__SharedSet {
            /** Output only. The ID of this shared set. Read only. */
            id?:
                string;
            /** Output only. The number of shared criteria within this shared set. Read only. */
            memberCount?:
                string;
            /**
             * The name of this shared set. Required. Shared Sets must have names that are unique among active shared sets of the same type. The length of this string should be between 1 and 255
             * UTF-8 bytes, inclusive.
             */
            name?:
                string;
            /** Output only. The number of campaigns associated with this shared set. Read only. */
            referenceCount?:
                string;
            /** Immutable. The resource name of the shared set. Shared set resource names have the form: `customers/{customer_id}/sharedSets/{shared_set_id}` */
            resourceName?:
                string;
            /** Output only. The status of this shared set. Read only. */
            status?:
                string;
            /** Immutable. The type of this shared set: each shared set holds only a single kind of resource. Required. Immutable. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ShoppingPerformanceView {
            /** Output only. The resource name of the Shopping performance view. Shopping performance view resource names have the form: `customers/{customer_id}/shoppingPerformanceView` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__SmartCampaignSearchTermView {
            /** Output only. The Smart campaign the search term served in. */
            campaign?:
                string;
            /**
             * Output only. The resource name of the Smart campaign search term view. Smart campaign search term view resource names have the form:
             * `customers/{customer_id}/smartCampaignSearchTermViews/{campaign_id}~{URL-base64_search_term}`
             */
            resourceName?:
                string;
            /** Output only. The search term. */
            searchTerm?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__SmartCampaignSetting {
            /**
             * Settings for configuring a business profile optimized for ads as this campaign's landing page. This campaign must be linked to a business profile to use this option. For more
             * information on this feature, consult https://support.google.com/google-ads/answer/9827068.
             */
            adOptimizedBusinessProfileSetting?:
                GoogleAdsGoogleadsV12Resources_SmartCampaignSetting_AdOptimizedBusinessProfileSetting;
            /** The language code to advertise in from the set of [supported language codes] (https://developers.google.com/google-ads/api/reference/data/codes-formats#languages). */
            advertisingLanguageCode?:
                string;
            /** The name of the business. */
            businessName?:
                string;
            /**
             * The resource name of a Business Profile location. Business Profile location resource names can be fetched through the Business Profile API and adhere to the following format:
             * `locations/{locationId}`. See the [Business Profile API] (https://developers.google.com/my-business/reference/businessinformation/rest/v1/accounts.locations) for additional details.
             */
            businessProfileLocation?:
                string;
            /** Output only. The campaign to which these settings apply. */
            campaign?:
                string;
            /** The user-provided landing page URL for this Campaign. */
            finalUrl?:
                string;
            /** Phone number and country code. */
            phoneNumber?:
                GoogleAdsGoogleadsV12Resources_SmartCampaignSetting_PhoneNumber;
            /** Immutable. The resource name of the Smart campaign setting. Smart campaign setting resource names have the form: `customers/{customer_id}/smartCampaignSettings/{campaign_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ThirdPartyAppAnalyticsLink {
            /**
             * Immutable. The resource name of the third party app analytics link. Third party app analytics link resource names have the form:
             * `customers/{customer_id}/thirdPartyAppAnalyticsLinks/{account_link_id}`
             */
            resourceName?:
                string;
            /**
             * Output only. The shareable link ID that should be provided to the third party when setting up app analytics. This is able to be regenerated using regenerate method in the
             * ThirdPartyAppAnalyticsLinkService.
             */
            shareableLinkId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__ThirdPartyAppAnalyticsLinkIdentifier {
            /**
             * Immutable. The ID of the app analytics provider. This field should not be empty when creating a new third party app analytics link. It is unable to be modified after the creation of
             * the link.
             */
            appAnalyticsProviderId?:
                string;
            /**
             * Immutable. A string that uniquely identifies a mobile application from which the data was collected to the Google Ads API. For iOS, the ID string is the 9 digit string that appears
             * at the end of an App Store URL (for example, "422689480" for "Gmail" whose App Store link is https://apps.apple.com/us/app/gmail-email-by-google/id422689480). For Android, the ID
             * string is the application's package name (for example, "com.google.android.gm" for "Gmail" given Google Play link
             * https://play.google.com/store/apps/details?id=com.google.android.gm) This field should not be empty when creating a new third party app analytics link. It is unable to be modified
             * after the creation of the link.
             */
            appId?:
                string;
            /** Immutable. The vendor of the app. This field should not be empty when creating a new third party app analytics link. It is unable to be modified after the creation of the link. */
            appVendor?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__TopicConstant {
            /** Output only. The ID of the topic. */
            id?:
                string;
            /**
             * Output only. The category to target or exclude. Each subsequent element in the array describes a more specific sub-category. For example, {"Pets & Animals", "Pets", "Dogs"}
             * represents the "Pets & Animals/Pets/Dogs" category. List of available topic categories at https://developers.google.com/google-ads/api/reference/data/verticals
             */
            path?:
                string[];
            /** Output only. The resource name of the topic constant. topic constant resource names have the form: `topicConstants/{topic_id}` */
            resourceName?:
                string;
            /** Output only. Resource name of parent of the topic constant. */
            topicConstantParent?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__TopicView {
            /** Output only. The resource name of the topic view. Topic view resource names have the form: `customers/{customer_id}/topicViews/{ad_group_id}~{criterion_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__UserInterest {
            /** Output only. Availability information of the user interest. */
            availabilities?:
                GoogleAdsGoogleadsV12Common__CriterionCategoryAvailability[];
            /** Output only. True if the user interest is launched to all channels and locales. */
            launchedToAll?:
                boolean;
            /** Output only. The name of the user interest. */
            name?:
                string;
            /** Output only. The resource name of the user interest. User interest resource names have the form: `customers/{customer_id}/userInterests/{user_interest_id}` */
            resourceName?:
                string;
            /** Output only. Taxonomy type of the user interest. */
            taxonomyType?:
                string;
            /** Output only. The ID of the user interest. */
            userInterestId?:
                string;
            /** Output only. The parent of the user interest. */
            userInterestParent?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__UserList {
            /** Output only. Indicates the reason this account has been granted access to the list. The reason can be SHARED, OWNED, LICENSED or SUBSCRIBED. This field is read-only. */
            accessReason?:
                string;
            /**
             * Indicates if this share is still enabled. When a UserList is shared with the user this field is set to ENABLED. Later the userList owner can decide to revoke the share and make it
             * DISABLED. The default value of this field is set to ENABLED.
             */
            accountUserListStatus?:
                string;
            /** User list targeting as a collection of conversion or remarketing actions. */
            basicUserList?:
                GoogleAdsGoogleadsV12Common__BasicUserListInfo;
            /**
             * Indicating the reason why this user list membership status is closed. It is only populated on lists that were automatically closed due to inactivity, and will be cleared once the
             * list membership status becomes open.
             */
            closingReason?:
                string;
            /** User list of CRM users provided by the advertiser. */
            crmBasedUserList?:
                GoogleAdsGoogleadsV12Common__CrmBasedUserListInfo;
            /** Description of this user list. */
            description?:
                string;
            /** Output only. Indicates this user list is eligible for Google Display Network. This field is read-only. */
            eligibleForDisplay?:
                boolean;
            /** Indicates if this user list is eligible for Google Search Network. */
            eligibleForSearch?:
                boolean;
            /** Output only. Id of the user list. */
            id?:
                string;
            /** An ID from external system. It is used by user list sellers to correlate IDs on their systems. */
            integrationCode?:
                string;
            /** User list that is a custom combination of user lists and user interests. */
            logicalUserList?:
                GoogleAdsGoogleadsV12Common__LogicalUserListInfo;
            /**
             * Output only. Indicates match rate for Customer Match lists. The range of this field is [0-100]. This will be null for other list types or when it's not possible to calculate the
             * match rate. This field is read-only.
             */
            matchRatePercentage?:
                number;
            /**
             * Number of days a user's cookie stays on your list since its most recent addition to the list. This field must be between 0 and 540 inclusive. However, for CRM based userlists, this
             * field can be set to 10000 which means no expiration. It'll be ignored for logical_user_list.
             */
            membershipLifeSpan?:
                string;
            /** Membership status of this user list. Indicates whether a user list is open or active. Only open user lists can accumulate more users and can be targeted to. */
            membershipStatus?:
                string;
            /** Name of this user list. Depending on its access_reason, the user list name may not be unique (for example, if access_reason=SHARED) */
            name?:
                string;
            /**
             * Output only. An option that indicates if a user may edit a list. Depends on the list ownership and list type. For example, external remarketing user lists are not editable. This
             * field is read-only.
             */
            readOnly?:
                boolean;
            /** Immutable. The resource name of the user list. User list resource names have the form: `customers/{customer_id}/userLists/{user_list_id}` */
            resourceName?:
                string;
            /** User list generated by a rule. */
            ruleBasedUserList?:
                GoogleAdsGoogleadsV12Common__RuleBasedUserListInfo;
            /** Output only. User list which are similar to users from another UserList. These lists are readonly and automatically created by google. */
            similarUserList?:
                GoogleAdsGoogleadsV12Common__SimilarUserListInfo;
            /**
             * Output only. Estimated number of users in this user list, on the Google Display Network. This value is null if the number of users has not yet been determined. This field is
             * read-only.
             */
            sizeForDisplay?:
                string;
            /**
             * Output only. Estimated number of users in this user list in the google.com domain. These are the users available for targeting in Search campaigns. This value is null if the number
             * of users has not yet been determined. This field is read-only.
             */
            sizeForSearch?:
                string;
            /** Output only. Size range in terms of number of users of the UserList, on the Google Display Network. This field is read-only. */
            sizeRangeForDisplay?:
                string;
            /** Output only. Size range in terms of number of users of the UserList, for Search ads. This field is read-only. */
            sizeRangeForSearch?:
                string;
            /** Output only. Type of this list. This field is read-only. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__UserLocationView {
            /** Output only. Criterion Id for the country. */
            countryCriterionId?:
                string;
            /**
             * Output only. The resource name of the user location view. UserLocation view resource names have the form:
             * `customers/{customer_id}/userLocationViews/{country_criterion_id}~{targeting_location}`
             */
            resourceName?:
                string;
            /** Output only. Indicates whether location was targeted or not. */
            targetingLocation?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Resources__Video {
            /** Output only. The owner channel id of the video. */
            channelId?:
                string;
            /** Output only. The duration of the video in milliseconds. */
            durationMillis?:
                string;
            /** Output only. The ID of the video. */
            id?:
                string;
            /** Output only. The resource name of the video. Video resource names have the form: `customers/{customer_id}/videos/{video_id}` */
            resourceName?:
                string;
            /** Output only. The title of the video. */
            title?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources__WebpageView {
            /** Output only. The resource name of the webpage view. Webpage view resource names have the form: `customers/{customer_id}/webpageViews/{ad_group_id}~{criterion_id}` */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_AccessibleBiddingStrategy_MaximizeConversions {
            /** Output only. The target cost per acquisition (CPA) option. This is the average amount that you would like to spend per acquisition. */
            targetCpaMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_AccessibleBiddingStrategy_MaximizeConversionValue {
            /**
             * Output only. The target return on ad spend (ROAS) option. If set, the bid strategy will maximize revenue while averaging the target return on ad spend. If the target ROAS is high,
             * the bid strategy may not be able to spend the full budget. If the target ROAS is not set, the bid strategy will aim to achieve the highest possible ROAS for the budget.
             */
            targetRoas?:
                number;
        }
        interface GoogleAdsGoogleadsV12Resources_AccessibleBiddingStrategy_TargetCpa {
            /** Output only. Average CPA target. This target should be greater than or equal to minimum billable unit based on the currency for the account. */
            targetCpaMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_AccessibleBiddingStrategy_TargetImpressionShare {
            /**
             * Output only. The highest CPC bid the automated bidding system is permitted to specify. This is a required field entered by the advertiser that sets the ceiling and specified in
             * local micros.
             */
            cpcBidCeilingMicros?:
                string;
            /** Output only. The targeted location on the search results page. */
            location?:
                string;
            /** The chosen fraction of ads to be shown in the targeted location in micros. For example, 1% equals 10,000. */
            locationFractionMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_AccessibleBiddingStrategy_TargetRoas {
            /** Output only. The chosen revenue (based on conversion data) per unit of spend. */
            targetRoas?:
                number;
        }
        interface GoogleAdsGoogleadsV12Resources_AccessibleBiddingStrategy_TargetSpend {
            /** Output only. Maximum bid limit that can be set by the bid strategy. The limit applies to all keywords managed by the strategy. */
            cpcBidCeilingMicros?:
                string;
            /**
             * Output only. The spend target under which to maximize clicks. A TargetSpend bidder will attempt to spend the smaller of this value or the natural throttling spend amount. If not
             * specified, the budget is used as the spend target. This field is deprecated and should no longer be used. See
             * https://ads-developers.googleblog.com/2020/05/reminder-about-sunset-creation-of.html for details.
             */
            targetSpendMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_AccountBudget_PendingAccountBudgetProposal {
            /** Output only. The resource name of the proposal. AccountBudgetProposal resource names have the form: `customers/{customer_id}/accountBudgetProposals/{account_budget_proposal_id}` */
            accountBudgetProposal?:
                string;
            /** Output only. The time when this account-level budget proposal was created. Formatted as yyyy-MM-dd HH:mm:ss. */
            creationDateTime?:
                string;
            /** Output only. The end time in yyyy-MM-dd HH:mm:ss format. */
            endDateTime?:
                string;
            /** Output only. The end time as a well-defined type, for example, FOREVER. */
            endTimeType?:
                string;
            /** Output only. The name to assign to the account-level budget. */
            name?:
                string;
            /** Output only. Notes associated with this budget. */
            notes?:
                string;
            /** Output only. The type of this proposal, for example, END to end the budget associated with this proposal. */
            proposalType?:
                string;
            /** Output only. A purchase order number is a value that helps users reference this budget in their monthly invoices. */
            purchaseOrderNumber?:
                string;
            /** Output only. The spending limit in micros. One million is equivalent to one unit. */
            spendingLimitMicros?:
                string;
            /** Output only. The spending limit as a well-defined type, for example, INFINITE. */
            spendingLimitType?:
                string;
            /** Output only. The start time in yyyy-MM-dd HH:mm:ss format. */
            startDateTime?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_AdGroup_AudienceSetting {
            /** Immutable. If true, this ad group uses an Audience resource for audience targeting. If false, this ad group may use audience segment criteria instead. */
            useAudienceGrouped?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Resources_AdGroupCriterion_PositionEstimates {
            /** Output only. Estimate of how many clicks per week you might get by changing your keyword bid to the value in first_position_cpc_micros. */
            estimatedAddClicksAtFirstPositionCpc?:
                string;
            /** Output only. Estimate of how your cost per week might change when changing your keyword bid to the value in first_position_cpc_micros. */
            estimatedAddCostAtFirstPositionCpc?:
                string;
            /** Output only. The estimate of the CPC bid required for ad to be shown on first page of search results. */
            firstPageCpcMicros?:
                string;
            /** Output only. The estimate of the CPC bid required for ad to be displayed in first position, at the top of the first page of search results. */
            firstPositionCpcMicros?:
                string;
            /** Output only. The estimate of the CPC bid required for ad to be displayed at the top of the first page of search results. */
            topOfPageCpcMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_AdGroupCriterion_QualityInfo {
            /** Output only. The performance of the ad compared to other advertisers. */
            creativeQualityScore?:
                string;
            /** Output only. The quality score of the landing page. */
            postClickQualityScore?:
                string;
            /** Output only. The quality score. This field may not be populated if Google does not have enough information to determine a value. */
            qualityScore?:
                number;
            /** Output only. The click-through rate compared to that of other advertisers. */
            searchPredictedCtr?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_AssetSet_MerchantCenterFeed {
            /** Optional. Feed Label from Google Merchant Center. */
            feedLabel?:
                string;
            /** Required. Merchant ID from Google Merchant Center */
            merchantId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_BatchJob_BatchJobMetadata {
            /** Output only. The time when this batch job was completed. Formatted as yyyy-MM-dd HH:mm:ss. Example: "2018-03-05 09:16:00" */
            completionDateTime?:
                string;
            /** Output only. The time when this batch job was created. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:00" */
            creationDateTime?:
                string;
            /** Output only. The fraction (between 0.0 and 1.0) of mutates that have been processed. This is empty if the job hasn't started running yet. */
            estimatedCompletionRatio?:
                number;
            /** Output only. The number of mutate operations executed by the batch job. Present only if the job has started running. */
            executedOperationCount?:
                string;
            /** Output only. The number of mutate operations in the batch job. */
            operationCount?:
                string;
            /** Output only. The time when this batch job started running. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:30" */
            startDateTime?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_BillingSetup_PaymentsAccountInfo {
            /** Output only. A 16 digit id used to identify the payments account associated with the billing setup. This must be passed as a string with dashes, for example, "1234-5678-9012-3456". */
            paymentsAccountId?:
                string;
            /**
             * Immutable. The name of the payments account associated with the billing setup. This enables the user to specify a meaningful name for a payments account to aid in reconciling
             * monthly invoices. This name will be printed in the monthly invoices.
             */
            paymentsAccountName?:
                string;
            /** Immutable. A 12 digit id used to identify the payments profile associated with the billing setup. This must be passed in as a string with dashes, for example, "1234-5678-9012". */
            paymentsProfileId?:
                string;
            /** Output only. The name of the payments profile associated with the billing setup. */
            paymentsProfileName?:
                string;
            /** Output only. A secondary payments profile id present in uncommon situations, for example, when a sequential liability agreement has been arranged. */
            secondaryPaymentsProfileId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Campaign_AppCampaignSetting {
            /** Immutable. A string that uniquely identifies a mobile application. */
            appId?:
                string;
            /** Immutable. The application store that distributes this specific app. */
            appStore?:
                string;
            /** Represents the goal which the bidding strategy of this app campaign should optimize towards. */
            biddingStrategyGoalType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Campaign_AudienceSetting {
            /** Immutable. If true, this campaign uses an Audience resource for audience targeting. If false, this campaign may use audience segment criteria instead. */
            useAudienceGrouped?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Resources_Campaign_CategoryBid {
            /** Category for which the bid will be associated with. For example, xcat:service_area_business_plumber. */
            categoryId?:
                string;
            /** Manual CPA bid for the category. Bid must be greater than the reserve price associated for that category. Value is in micros and in the advertiser's currency. */
            manualCpaBidMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Campaign_DynamicSearchAdsSetting {
            /** Required. The Internet domain name that this setting represents, for example, "google.com" or "www.google.com". */
            domainName?:
                string;
            /** The list of page feeds associated with the campaign. */
            feeds?:
                string[];
            /** Required. The language code specifying the language of the domain, for example, "en". */
            languageCode?:
                string;
            /** Whether the campaign uses advertiser supplied URLs exclusively. */
            useSuppliedUrlsOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Resources_Campaign_GeoTargetTypeSetting {
            /** The setting used for negative geotargeting in this particular campaign. */
            negativeGeoTargetType?:
                string;
            /** The setting used for positive geotargeting in this particular campaign. */
            positiveGeoTargetType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Campaign_HotelSettingInfo {
            /** Immutable. The linked Hotel Center account. */
            hotelCenterId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Campaign_LocalCampaignSetting {
            /** The location source type for this local campaign. */
            locationSourceType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Campaign_LocalServicesCampaignSettings {
            /** Categorical level bids associated with MANUAL_CPA bidding strategy. */
            categoryBids?:
                GoogleAdsGoogleadsV12Resources_Campaign_CategoryBid[];
        }
        interface GoogleAdsGoogleadsV12Resources_Campaign_NetworkSettings {
            /** Whether ads will be served on specified placements in the Google Display Network. Placements are specified using the Placement criterion. */
            targetContentNetwork?:
                boolean;
            /** Whether ads will be served with google.com search results. */
            targetGoogleSearch?:
                boolean;
            /** Whether ads will be served on the Google Partner Network. This is available only to some select Google partner accounts. */
            targetPartnerSearchNetwork?:
                boolean;
            /** Whether ads will be served on partner sites in the Google Search Network (requires `target_google_search` to also be `true`). */
            targetSearchNetwork?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Resources_Campaign_OptimizationGoalSetting {
            /** The list of optimization goal types. */
            optimizationGoalTypes?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Resources_Campaign_PerformanceMaxUpgrade {
            /** Output only. Indicates which Performance Max campaign the campaign is upgraded to. */
            performanceMaxCampaign?:
                string;
            /** Output only. Indicates legacy campaign upgraded to Performance Max. */
            preUpgradeCampaign?:
                string;
            /** Output only. The upgrade status of a campaign requested to be upgraded to Performance Max. */
            status?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Campaign_SelectiveOptimization {
            /** The selected set of conversion actions for optimizing this campaign. */
            conversionActions?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Resources_Campaign_ShoppingSetting {
            /**
             * Priority of the campaign. Campaigns with numerically higher priorities take precedence over those with lower priorities. This field is required for Shopping campaigns, with values
             * between 0 and 2, inclusive. This field is optional for Smart Shopping campaigns, but must be equal to 3 if set.
             */
            campaignPriority?:
                number;
            /** Whether to include local products. */
            enableLocal?:
                boolean;
            /**
             * Feed label of products to include in the campaign. Only one of feed_label or sales_country can be set. If used instead of sales_country, the feed_label field accepts country codes
             * in the same format for example: 'XX'. Otherwise can be any string used for feed label in Google Merchant Center.
             */
            feedLabel?:
                string;
            /** Immutable. ID of the Merchant Center account. This field is required for create operations. This field is immutable for Shopping campaigns. */
            merchantId?:
                string;
            /**
             * Sales country of products to include in the campaign. Only one of feed_label or sales_country can be set. Field is immutable except for clearing. Once this field is cleared, you
             * must use feed_label if you want to set the sales country.
             */
            salesCountry?:
                string;
            /** Immutable. Whether to target Vehicle Listing inventory. */
            useVehicleInventory?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Resources_Campaign_TrackingSetting {
            /** Output only. The url used for dynamic tracking. */
            trackingUrl?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Campaign_VanityPharma {
            /** The display mode for vanity pharma URLs. */
            vanityPharmaDisplayUrlMode?:
                string;
            /** The text that will be displayed in display URL of the text ad when website description is the selected display mode for vanity pharma URLs. */
            vanityPharmaText?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_ChangeEvent_ChangedResource {
            /** Output only. Set if change_resource_type == AD. */
            ad?:
                GoogleAdsGoogleadsV12Resources__Ad;
            /** Output only. Set if change_resource_type == AD_GROUP. */
            adGroup?:
                GoogleAdsGoogleadsV12Resources__AdGroup;
            /** Output only. Set if change_resource_type == AD_GROUP_AD. */
            adGroupAd?:
                GoogleAdsGoogleadsV12Resources__AdGroupAd;
            /** Output only. Set if change_resource_type == AD_GROUP_ASSET. */
            adGroupAsset?:
                GoogleAdsGoogleadsV12Resources__AdGroupAsset;
            /** Output only. Set if change_resource_type == AD_GROUP_BID_MODIFIER. */
            adGroupBidModifier?:
                GoogleAdsGoogleadsV12Resources__AdGroupBidModifier;
            /** Output only. Set if change_resource_type == AD_GROUP_CRITERION. */
            adGroupCriterion?:
                GoogleAdsGoogleadsV12Resources__AdGroupCriterion;
            /** Output only. Set if change_resource_type == AD_GROUP_FEED. */
            adGroupFeed?:
                GoogleAdsGoogleadsV12Resources__AdGroupFeed;
            /** Output only. Set if change_resource_type == ASSET. */
            asset?:
                GoogleAdsGoogleadsV12Resources__Asset;
            /** Output only. Set if change_resource_type == ASSET_SET. */
            assetSet?:
                GoogleAdsGoogleadsV12Resources__AssetSet;
            /** Output only. Set if change_resource_type == ASSET_SET_ASSET. */
            assetSetAsset?:
                GoogleAdsGoogleadsV12Resources__AssetSetAsset;
            /** Output only. Set if change_resource_type == CAMPAIGN. */
            campaign?:
                GoogleAdsGoogleadsV12Resources__Campaign;
            /** Output only. Set if change_resource_type == CAMPAIGN_ASSET. */
            campaignAsset?:
                GoogleAdsGoogleadsV12Resources__CampaignAsset;
            /** Output only. Set if change_resource_type == CAMPAIGN_ASSET_SET. */
            campaignAssetSet?:
                GoogleAdsGoogleadsV12Resources__CampaignAssetSet;
            /** Output only. Set if change_resource_type == CAMPAIGN_BUDGET. */
            campaignBudget?:
                GoogleAdsGoogleadsV12Resources__CampaignBudget;
            /** Output only. Set if change_resource_type == CAMPAIGN_CRITERION. */
            campaignCriterion?:
                GoogleAdsGoogleadsV12Resources__CampaignCriterion;
            /** Output only. Set if change_resource_type == CAMPAIGN_FEED. */
            campaignFeed?:
                GoogleAdsGoogleadsV12Resources__CampaignFeed;
            /** Output only. Set if change_resource_type == CUSTOMER_ASSET. */
            customerAsset?:
                GoogleAdsGoogleadsV12Resources__CustomerAsset;
            /** Output only. Set if change_resource_type == FEED. */
            feed?:
                GoogleAdsGoogleadsV12Resources__Feed;
            /** Output only. Set if change_resource_type == FEED_ITEM. */
            feedItem?:
                GoogleAdsGoogleadsV12Resources__FeedItem;
        }
        interface GoogleAdsGoogleadsV12Resources_ConversionAction_AttributionModelSettings {
            /** The attribution model type of this conversion action. */
            attributionModel?:
                string;
            /** Output only. The status of the data-driven attribution model for the conversion action. */
            dataDrivenModelStatus?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_ConversionAction_FirebaseSettings {
            /** Output only. The event name of a Firebase conversion. */
            eventName?:
                string;
            /** Output only. The Firebase project ID of the conversion. */
            projectId?:
                string;
            /** Output only. The GA property ID of the conversion. */
            propertyId?:
                string;
            /** Output only. The GA property name of the conversion. */
            propertyName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_ConversionAction_ThirdPartyAppAnalyticsSettings {
            /** Output only. The event name of a third-party app analytics conversion. */
            eventName?:
                string;
            /** Output only. Name of the third-party app analytics provider. */
            providerName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_ConversionAction_ValueSettings {
            /** Controls whether the default value and default currency code are used in place of the value and currency code specified in conversion events for this conversion action. */
            alwaysUseDefaultValue?:
                boolean;
            /**
             * The currency code to use when conversion events for this conversion action are sent with an invalid or missing currency code, or when this conversion action is configured to always
             * use the default value.
             */
            defaultCurrencyCode?:
                string;
            /**
             * The value to use when conversion events for this conversion action are sent with an invalid, disallowed or missing value, or when this conversion action is configured to always use
             * the default value.
             */
            defaultValue?:
                number;
        }
        interface GoogleAdsGoogleadsV12Resources_ConversionValueRule_ValueRuleAction {
            /** Specifies applied operation. */
            operation?:
                string;
            /** Specifies applied value. */
            value?:
                number;
        }
        interface GoogleAdsGoogleadsV12Resources_ConversionValueRule_ValueRuleAudienceCondition {
            /** User Interests. */
            userInterests?:
                string[];
            /** User Lists. The Similar Audiences sunset starts May 2023. Refer to https://ads-developers.googleblog.com/2022/11/announcing-deprecation-and-sunset-of.html for other options. */
            userLists?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Resources_ConversionValueRule_ValueRuleDeviceCondition {
            /** Value for device type condition. */
            deviceTypes?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Resources_ConversionValueRule_ValueRuleGeoLocationCondition {
            /** Excluded Geo location match type. */
            excludedGeoMatchType?:
                string;
            /** Geo locations that advertisers want to exclude. */
            excludedGeoTargetConstants?:
                string[];
            /** Included Geo location match type. */
            geoMatchType?:
                string;
            /** Geo locations that advertisers want to include. */
            geoTargetConstants?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Resources_Feed_AffiliateLocationFeedData {
            /** The list of chains that the affiliate location feed will sync the locations from. */
            chainIds?:
                string[];
            /** The relationship the chains have with the advertiser. */
            relationshipType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Feed_PlacesLocationFeedData {
            /**
             * Plus page ID of the managed business whose locations should be used. If this field is not set, then all businesses accessible by the user (specified by email_address) are used. This
             * field is mutate-only and is not selectable.
             */
            businessAccountId?:
                string;
            /** Used to filter Business Profile listings by business name. If business_name_filter is set, only listings with a matching business name are candidates to be sync'd into FeedItems. */
            businessNameFilter?:
                string;
            /**
             * Used to filter Business Profile listings by categories. If entries exist in category_filters, only listings that belong to any of the categories are candidates to be sync'd into
             * FeedItems. If no entries exist in category_filters, then all listings are candidates for syncing.
             */
            categoryFilters?:
                string[];
            /** Email address of a Business Profile or email address of a manager of the Business Profile. Required. */
            emailAddress?:
                string;
            /**
             * Used to filter Business Profile listings by labels. If entries exist in label_filters, only listings that has any of the labels set are candidates to be synchronized into FeedItems.
             * If no entries exist in label_filters, then all listings are candidates for syncing.
             */
            labelFilters?:
                string[];
            /** Immutable. Required authentication token (from OAuth API) for the email. This field can only be specified in a create request. All its subfields are not selectable. */
            oauthInfo?:
                GoogleAdsGoogleadsV12Resources_FeedPlacesLocationFeedData_OAuthInfo;
        }
        interface GoogleAdsGoogleadsV12Resources_FeedPlacesLocationFeedData_OAuthInfo {
            /** The HTTP authorization header used to obtain authorization. */
            httpAuthorizationHeader?:
                string;
            /** The HTTP method used to obtain authorization. */
            httpMethod?:
                string;
            /** The HTTP request URL used to obtain authorization. */
            httpRequestUrl?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Invoice_AccountBudgetSummary {
            /**
             * Output only. The resource name of the account budget associated with this summarized billable cost. AccountBudget resource names have the form:
             * `customers/{customer_id}/accountBudgets/{account_budget_id}`
             */
            accountBudget?:
                string;
            /** Output only. The name of the account budget. It appears on the invoice PDF as "Account budget". */
            accountBudgetName?:
                string;
            /**
             * Output only. The billable activity date range of the account budget, within the service date range of this invoice. The end date is inclusive. This can be different from the account
             * budget's start and end time.
             */
            billableActivityDateRange?:
                GoogleAdsGoogleadsV12Common__DateRange;
            /** Output only. The pretax billed amount attributable to this budget during the service period, in micros. This does not account for any adjustments. */
            billedAmountMicros?:
                string;
            /**
             * Output only. The resource name of the customer associated with this account budget. This contains the customer ID, which appears on the invoice PDF as "Account ID". Customer
             * resource names have the form: `customers/{customer_id}`
             */
            customer?:
                string;
            /** Output only. The descriptive name of the account budget's customer. It appears on the invoice PDF as "Account". */
            customerDescriptiveName?:
                string;
            /** Output only. The pretax invalid activity amount attributable to this budget in previous months, in micros (negative value). */
            invalidActivityAmountMicros?:
                string;
            /** Output only. The pretax overdelivery amount attributable to this budget during the service period, in micros (negative value). */
            overdeliveryAmountMicros?:
                string;
            /** Output only. The purchase order number of the account budget. It appears on the invoice PDF as "Purchase order". */
            purchaseOrderNumber?:
                string;
            /** Output only. The pretax served amount attributable to this budget during the service period, in micros. This is only useful to reconcile invoice and delivery data. */
            servedAmountMicros?:
                string;
            /** Output only. The pretax subtotal amount attributable to this budget during the service period, in micros. */
            subtotalAmountMicros?:
                string;
            /** Output only. The tax amount attributable to this budget during the service period, in micros. */
            taxAmountMicros?:
                string;
            /**
             * Output only. The total amount attributable to this budget during the service period, in micros. This equals the sum of the account budget subtotal amount and the account budget tax
             * amount.
             */
            totalAmountMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Invoice_AccountSummary {
            /** Output only. Pretax billing correction subtotal amount, in micros. */
            billingCorrectionSubtotalAmountMicros?:
                string;
            /** Output only. Tax on billing correction, in micros. */
            billingCorrectionTaxAmountMicros?:
                string;
            /** Output only. Total billing correction amount, in micros. */
            billingCorrectionTotalAmountMicros?:
                string;
            /** Output only. Pretax coupon adjustment subtotal amount, in micros. */
            couponAdjustmentSubtotalAmountMicros?:
                string;
            /** Output only. Tax on coupon adjustment, in micros. */
            couponAdjustmentTaxAmountMicros?:
                string;
            /** Output only. Total coupon adjustment amount, in micros. */
            couponAdjustmentTotalAmountMicros?:
                string;
            /** Output only. The account associated with the account summary. */
            customer?:
                string;
            /** Output only. Pretax excess credit adjustment subtotal amount, in micros. */
            excessCreditAdjustmentSubtotalAmountMicros?:
                string;
            /** Output only. Tax on excess credit adjustment, in micros. */
            excessCreditAdjustmentTaxAmountMicros?:
                string;
            /** Output only. Total excess credit adjustment amount, in micros. */
            excessCreditAdjustmentTotalAmountMicros?:
                string;
            /** Output only. Pretax regulatory costs subtotal amount, in micros. */
            regulatoryCostsSubtotalAmountMicros?:
                string;
            /** Output only. Tax on regulatory costs, in micros. */
            regulatoryCostsTaxAmountMicros?:
                string;
            /** Output only. Total regulatory costs amount, in micros. */
            regulatoryCostsTotalAmountMicros?:
                string;
            /** Output only. Total pretax subtotal amount attributable to the account during the service period, in micros. */
            subtotalAmountMicros?:
                string;
            /** Output only. Total tax amount attributable to the account during the service period, in micros. */
            taxAmountMicros?:
                string;
            /** Output only. Total amount attributable to the account during the service period, in micros. This equals the sum of the subtotal_amount_micros and tax_amount_micros. */
            totalAmountMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_ListingGroupFilterDimension_ProductBiddingCategory {
            /** ID of the product bidding category. This ID is equivalent to the google_product_category ID as described in this article: https://support.google.com/merchants/answer/6324436 */
            id?:
                string;
            /** Indicates the level of the category in the taxonomy. */
            level?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_ListingGroupFilterDimension_ProductBrand {
            /** String value of the product brand. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_ListingGroupFilterDimension_ProductChannel {
            /** Value of the locality. */
            channel?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_ListingGroupFilterDimension_ProductCondition {
            /** Value of the condition. */
            condition?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_ListingGroupFilterDimension_ProductCustomAttribute {
            /** Indicates the index of the custom attribute. */
            index?:
                string;
            /** String value of the product custom attribute. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_ListingGroupFilterDimension_ProductItemId {
            /** Value of the id. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_ListingGroupFilterDimension_ProductType {
            /** Level of the type. */
            level?:
                string;
            /** Value of the type. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_CallExtensionRecommendation {
            /** Output only. Call extensions recommended to be added. */
            recommendedExtensions?:
                GoogleAdsGoogleadsV12Common__CallFeedItem[];
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_CalloutExtensionRecommendation {
            /** Output only. Callout extensions recommended to be added. */
            recommendedExtensions?:
                GoogleAdsGoogleadsV12Common__CalloutFeedItem[];
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_CampaignBudget {
            /** Output only. Current budget amount. */
            currentAmountMicros?:
                string;
            /**
             * Output only. The date when the new budget would start being used. This field will be set for the following recommendation types: FORECASTING_SET_TARGET_ROAS YYYY-MM-DD format, for
             * example, 2018-04-17.
             */
            newStartDate?:
                string;
            /** Output only. Recommended budget amount. */
            recommendedNewAmountMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_CampaignBudgetRecommendation {
            /** Output only. The budget amounts and associated impact estimates for some values of possible budget amounts. */
            budgetOptions?:
                GoogleAdsGoogleadsV12Resources_RecommendationCampaignBudgetRecommendation_CampaignBudgetRecommendationOption[];
            /** Output only. The current budget amount in micros. */
            currentBudgetAmountMicros?:
                string;
            /** Output only. The recommended budget amount in micros. */
            recommendedBudgetAmountMicros?:
                string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Resources_Recommendation_DisplayExpansionOptInRecommendation {
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Resources_Recommendation_EnhancedCpcOptInRecommendation {
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_ForecastingSetTargetRoasRecommendation {
            /** Output only. The campaign budget. */
            campaignBudget?:
                GoogleAdsGoogleadsV12Resources_Recommendation_CampaignBudget;
            /** Output only. The recommended target ROAS (revenue per unit of spend). The value is between 0.01 and 1000.0, inclusive. */
            recommendedTargetRoas?:
                number;
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_KeywordMatchTypeRecommendation {
            /** Output only. The existing keyword where the match type should be more broad. */
            keyword?:
                GoogleAdsGoogleadsV12Common__KeywordInfo;
            /** Output only. The recommended new match type. */
            recommendedMatchType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_KeywordRecommendation {
            /** Output only. The recommended keyword. */
            keyword?:
                GoogleAdsGoogleadsV12Common__KeywordInfo;
            /** Output only. The recommended CPC (cost-per-click) bid. */
            recommendedCpcBidMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_MaximizeClicksOptInRecommendation {
            /** Output only. The recommended new budget amount. Only set if the current budget is too high. */
            recommendedBudgetAmountMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_MaximizeConversionsOptInRecommendation {
            /** Output only. The recommended new budget amount. */
            recommendedBudgetAmountMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_MoveUnusedBudgetRecommendation {
            /** Output only. The recommendation for the constrained budget to increase. */
            budgetRecommendation?:
                GoogleAdsGoogleadsV12Resources_Recommendation_CampaignBudgetRecommendation;
            /** Output only. The excess budget's resource_name. */
            excessCampaignBudget?:
                string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Resources_Recommendation_OptimizeAdRotationRecommendation {
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_RaiseTargetCpaBidTooLowRecommendation {
            /** Output only. The current average target CPA of the campaign, in micros of customer local currency. */
            averageTargetCpaMicros?:
                string;
            /** Output only. A number greater than 1.0 indicating the factor by which we recommend the target CPA should be increased. */
            recommendedTargetMultiplier?:
                number;
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_RecommendationImpact {
            /** Output only. Base metrics at the time the recommendation was generated. */
            baseMetrics?:
                GoogleAdsGoogleadsV12Resources_Recommendation_RecommendationMetrics;
            /** Output only. Estimated metrics if the recommendation is applied. */
            potentialMetrics?:
                GoogleAdsGoogleadsV12Resources_Recommendation_RecommendationMetrics;
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_RecommendationMetrics {
            /** Output only. Number of ad clicks. */
            clicks?:
                number;
            /** Output only. Number of conversions. */
            conversions?:
                number;
            /** Output only. Cost (in micros) for advertising, in the local currency for the account. */
            costMicros?:
                string;
            /** Output only. Number of ad impressions. */
            impressions?:
                number;
            /** Output only. Number of video views for a video ad campaign. */
            videoViews?:
                number;
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_ResponsiveSearchAdAssetRecommendation {
            /** Output only. The current ad to be updated. */
            currentAd?:
                GoogleAdsGoogleadsV12Resources__Ad;
            /** Output only. The recommended assets. This is populated only with the new headlines and/or descriptions, and is otherwise empty. */
            recommendedAssets?:
                GoogleAdsGoogleadsV12Resources__Ad;
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_ResponsiveSearchAdImproveAdStrengthRecommendation {
            /** Output only. The current ad to be updated. */
            currentAd?:
                GoogleAdsGoogleadsV12Resources__Ad;
            /** Output only. The updated ad. */
            recommendedAd?:
                GoogleAdsGoogleadsV12Resources__Ad;
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_ResponsiveSearchAdRecommendation {
            /** Output only. Recommended ad. */
            ad?:
                GoogleAdsGoogleadsV12Resources__Ad;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Resources_Recommendation_SearchPartnersOptInRecommendation {
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_SitelinkExtensionRecommendation {
            /** Output only. Sitelinks recommended to be added. */
            recommendedExtensions?:
                GoogleAdsGoogleadsV12Common__SitelinkFeedItem[];
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_TargetCpaOptInRecommendation {
            /** Output only. The available goals and corresponding options for Target CPA strategy. */
            options?:
                GoogleAdsGoogleadsV12Resources_RecommendationTargetCpaOptInRecommendation_TargetCpaOptInRecommendationOption[];
            /** Output only. The recommended average CPA target. See required budget amount and impact of using this recommendation in options list. */
            recommendedTargetCpaMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_TargetRoasOptInRecommendation {
            /** Output only. The recommended target ROAS (revenue per unit of spend). The value is between 0.01 and 1000.0, inclusive. */
            recommendedTargetRoas?:
                number;
            /**
             * Output only. The minimum campaign budget, in local currency for the account, required to achieve the target ROAS. Amount is specified in micros, where one million is equivalent to
             * one currency unit.
             */
            requiredCampaignBudgetAmountMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_TextAdRecommendation {
            /** Output only. Recommended ad. */
            ad?:
                GoogleAdsGoogleadsV12Resources__Ad;
            /** Output only. Date, if present, is the earliest when the recommendation will be auto applied. YYYY-MM-DD format, for example, 2018-04-17. */
            autoApplyDate?:
                string;
            /** Output only. Creation date of the recommended ad. YYYY-MM-DD format, for example, 2018-04-17. */
            creationDate?:
                string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Resources_Recommendation_UpgradeLocalCampaignToPerformanceMaxRecommendation {
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_UpgradeSmartShoppingCampaignToPerformanceMaxRecommendation {
            /** Output only. ID of Merchant Center account. */
            merchantId?:
                string;
            /** Output only. Country whose products from merchant's inventory should be included. */
            salesCountryCode?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_Recommendation_UseBroadMatchKeywordRecommendation {
            /** Output only. Total number of keywords in the campaign. */
            campaignKeywordsCount?:
                string;
            /** Output only. Whether the associated campaign uses a shared budget. */
            campaignUsesSharedBudget?:
                boolean;
            /** Output only. Sample of keywords to be expanded to Broad Match. */
            keyword?:
                GoogleAdsGoogleadsV12Common__KeywordInfo[];
            /** Output only. The budget recommended to avoid becoming budget constrained after applying the recommendation. */
            requiredCampaignBudgetAmountMicros?:
                string;
            /** Output only. Total number of keywords to be expanded to Broad Match in the campaign. */
            suggestedKeywordsCount?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_RecommendationCampaignBudgetRecommendation_CampaignBudgetRecommendationOption {
            /** Output only. The budget amount for this option. */
            budgetAmountMicros?:
                string;
            /** Output only. The impact estimate if budget is changed to amount specified in this option. */
            impact?:
                GoogleAdsGoogleadsV12Resources_Recommendation_RecommendationImpact;
        }
        interface GoogleAdsGoogleadsV12Resources_RecommendationTargetCpaOptInRecommendation_TargetCpaOptInRecommendationOption {
            /** Output only. The goal achieved by this option. */
            goal?:
                string;
            /** Output only. The impact estimate if this option is selected. */
            impact?:
                GoogleAdsGoogleadsV12Resources_Recommendation_RecommendationImpact;
            /**
             * Output only. The minimum campaign budget, in local currency for the account, required to achieve the target CPA. Amount is specified in micros, where one million is equivalent to
             * one currency unit.
             */
            requiredCampaignBudgetAmountMicros?:
                string;
            /** Output only. Average CPA target. */
            targetCpaMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Resources_SmartCampaignSetting_AdOptimizedBusinessProfileSetting {
            /**
             * Enabling a lead form on your business profile enables prospective customers to contact your business by filling out a simple form, and you'll receive their information through
             * email.
             */
            includeLeadForm?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Resources_SmartCampaignSetting_PhoneNumber {
            /** Upper-case, two-letter country code as defined by ISO-3166. */
            countryCode?:
                string;
            /** Phone number of the smart campaign. */
            phoneNumber?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AccountBudgetProposalOperation {
            /**
             * Create operation: A new proposal to create a new budget, edit an existing budget, end an actively running budget, or remove an approved budget scheduled to start in the future. No
             * resource name is expected for the new proposal.
             */
            create?:
                GoogleAdsGoogleadsV12Resources__AccountBudgetProposal;
            /**
             * Remove operation: A resource name for the removed proposal is expected, in this format: `customers/{customer_id}/accountBudgetProposals/{account_budget_proposal_id}` A request may
             * be cancelled iff it is pending.
             */
            remove?:
                string;
            /**
             * FieldMask that determines which budget fields are modified. While budgets may be modified, proposals that propose such modifications are final. Therefore, update operations are not
             * supported for proposals. Proposals that modify budgets have the 'update' proposal type. Specifying a mask for any other proposal type is considered an error.
             */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AccountLinkOperation {
            /** Remove operation: A resource name for the account link to remove is expected, in this format: `customers/{customer_id}/accountLinks/{account_link_id}` */
            remove?:
                string;
            /** Update operation: The account link is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__AccountLink;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AddBatchJobOperationsRequest {
            /**
             * Required. The list of mutates being added. Operations can use negative integers as temp ids to signify dependencies between entities created in this batch job. For example, a
             * customer with id = 1234 can create a campaign and an ad group in that same campaign by creating a campaign in the first operation with the resource name explicitly set to
             * "customers/1234/campaigns/-1", and creating an ad group in the second operation with the campaign field also set to "customers/1234/campaigns/-1".
             */
            mutateOperations?:
                GoogleAdsGoogleadsV12Services__MutateOperation[];
            /**
             * A token used to enforce sequencing. The first AddBatchJobOperations request for a batch job should not set sequence_token. Subsequent requests must set sequence_token to the value
             * of next_sequence_token received in the previous AddBatchJobOperations response.
             */
            sequenceToken?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AddBatchJobOperationsResponse {
            /**
             * The sequence token to be used when calling AddBatchJobOperations again if more operations need to be added. The next AddBatchJobOperations request must set the sequence_token field
             * to the value of this field.
             */
            nextSequenceToken?:
                string;
            /** The total number of operations added so far for this batch job. */
            totalOperations?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AddOfflineUserDataJobOperationsRequest {
            /** True to enable partial failure for the offline user data job. */
            enablePartialFailure?:
                boolean;
            /**
             * True to enable warnings for the offline user data job. When enabled, a warning will not block the OfflineUserDataJobOperation, and will also return warning messages about malformed
             * field values.
             */
            enableWarnings?:
                boolean;
            /** Required. The list of operations to be done. */
            operations?:
                GoogleAdsGoogleadsV12Services__OfflineUserDataJobOperation[];
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__AddOfflineUserDataJobOperationsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** Non blocking errors that pertain to operation failures in the warnings mode. Returned only when enable_warnings = true. */
            warning?:
                GoogleRpc__Status;
        }
        interface GoogleAdsGoogleadsV12Services__AdGroupAdLabelOperation {
            /** Create operation: No resource name is expected for the new ad group ad label. */
            create?:
                GoogleAdsGoogleadsV12Resources__AdGroupAdLabel;
            /** Remove operation: A resource name for the ad group ad label being removed, in this format: `customers/{customer_id}/adGroupAdLabels/{ad_group_id}~{ad_id}~{label_id}` */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AdGroupAdOperation {
            /** Create operation: No resource name is expected for the new ad. */
            create?:
                GoogleAdsGoogleadsV12Resources__AdGroupAd;
            /** Configuration for how policies are validated. */
            policyValidationParameter?:
                GoogleAdsGoogleadsV12Common__PolicyValidationParameter;
            /** Remove operation: A resource name for the removed ad is expected, in this format: `customers/{customer_id}/adGroupAds/{ad_group_id}~{ad_id}` */
            remove?:
                string;
            /** Update operation: The ad is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__AdGroupAd;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AdGroupAssetOperation {
            /** Create operation: No resource name is expected for the new ad group asset. */
            create?:
                GoogleAdsGoogleadsV12Resources__AdGroupAsset;
            /** Remove operation: A resource name for the removed ad group asset is expected, in this format: `customers/{customer_id}/adGroupAssets/{ad_group_id}~{asset_id}~{field_type}` */
            remove?:
                string;
            /** Update operation: The ad group asset is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__AdGroupAsset;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AdGroupAssetSetOperation {
            /** Create operation: No resource name is expected for the new ad group asset set. */
            create?:
                GoogleAdsGoogleadsV12Resources__AdGroupAssetSet;
            /** Remove operation: A resource name for the removed ad group asset set is expected, in this format: `customers/{customer_id}/adGroupAssetSets/{ad_group_id}~{asset_set_id}` */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AdGroupBidModifierOperation {
            /** Create operation: No resource name is expected for the new ad group bid modifier. */
            create?:
                GoogleAdsGoogleadsV12Resources__AdGroupBidModifier;
            /** Remove operation: A resource name for the removed ad group bid modifier is expected, in this format: `customers/{customer_id}/adGroupBidModifiers/{ad_group_id}~{criterion_id}` */
            remove?:
                string;
            /** Update operation: The ad group bid modifier is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__AdGroupBidModifier;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AdGroupCriterionCustomizerOperation {
            /** Create operation: No resource name is expected for the new ad group criterion customizer. */
            create?:
                GoogleAdsGoogleadsV12Resources__AdGroupCriterionCustomizer;
            /**
             * Remove operation: A resource name for the removed ad group criterion customizer is expected, in this format:
             * `customers/{customer_id}/adGroupCriterionCustomizers/{ad_group_id}~{criterion_id}~{customizer_attribute_id}`
             */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AdGroupCriterionLabelOperation {
            /** Create operation: No resource name is expected for the new ad group label. */
            create?:
                GoogleAdsGoogleadsV12Resources__AdGroupCriterionLabel;
            /**
             * Remove operation: A resource name for the ad group criterion label being removed, in this format:
             * `customers/{customer_id}/adGroupCriterionLabels/{ad_group_id}~{criterion_id}~{label_id}`
             */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AdGroupCriterionOperation {
            /** Create operation: No resource name is expected for the new criterion. */
            create?:
                GoogleAdsGoogleadsV12Resources__AdGroupCriterion;
            /**
             * The list of policy violation keys that should not cause a PolicyViolationError to be reported. Not all policy violations are exemptable, refer to the is_exemptible field in the
             * returned PolicyViolationError. Resources violating these polices will be saved, but will not be eligible to serve. They may begin serving at a later time due to a change in
             * policies, re-review of the resource, or a change in advertiser certificates.
             */
            exemptPolicyViolationKeys?:
                GoogleAdsGoogleadsV12Common__PolicyViolationKey[];
            /** Remove operation: A resource name for the removed criterion is expected, in this format: `customers/{customer_id}/adGroupCriteria/{ad_group_id}~{criterion_id}` */
            remove?:
                string;
            /** Update operation: The criterion is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__AdGroupCriterion;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AdGroupCustomizerOperation {
            /** Create operation: No resource name is expected for the new ad group customizer */
            create?:
                GoogleAdsGoogleadsV12Resources__AdGroupCustomizer;
            /**
             * Remove operation: A resource name for the removed ad group customizer is expected, in this format:
             * `customers/{customer_id}/adGroupCustomizers/{ad_group_id}~{customizer_attribute_id}`
             */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AdGroupExtensionSettingOperation {
            /** Create operation: No resource name is expected for the new ad group extension setting. */
            create?:
                GoogleAdsGoogleadsV12Resources__AdGroupExtensionSetting;
            /**
             * Remove operation: A resource name for the removed ad group extension setting is expected, in this format:
             * `customers/{customer_id}/adGroupExtensionSettings/{ad_group_id}~{extension_type}`
             */
            remove?:
                string;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** Update operation: The ad group extension setting is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__AdGroupExtensionSetting;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AdGroupFeedOperation {
            /** Create operation: No resource name is expected for the new ad group feed. */
            create?:
                GoogleAdsGoogleadsV12Resources__AdGroupFeed;
            /** Remove operation: A resource name for the removed ad group feed is expected, in this format: `customers/{customer_id}/adGroupFeeds/{ad_group_id}~{feed_id}` */
            remove?:
                string;
            /** Update operation: The ad group feed is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__AdGroupFeed;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AdGroupKeywordSuggestion {
            /** The original keyword text. */
            keywordText?:
                string;
            /** The suggested AdGroup for the keyword. Resource name format: `customers/{customer_id}/adGroups/{ad_group_id}` */
            suggestedAdGroup?:
                string;
            /** The suggested Campaign for the keyword. Resource name format: `customers/{customer_id}/campaigns/{campaign_id}` */
            suggestedCampaign?:
                string;
            /** The normalized version of keyword_text for BROAD/EXACT/PHRASE suggestions. */
            suggestedKeywordText?:
                string;
            /** The suggested keyword match type. */
            suggestedMatchType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AdGroupLabelOperation {
            /** Create operation: No resource name is expected for the new ad group label. */
            create?:
                GoogleAdsGoogleadsV12Resources__AdGroupLabel;
            /** Remove operation: A resource name for the ad group label being removed, in this format: `customers/{customer_id}/adGroupLabels/{ad_group_id}~{label_id}` */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AdGroupOperation {
            /** Create operation: No resource name is expected for the new ad group. */
            create?:
                GoogleAdsGoogleadsV12Resources__AdGroup;
            /** Remove operation: A resource name for the removed ad group is expected, in this format: `customers/{customer_id}/adGroups/{ad_group_id}` */
            remove?:
                string;
            /** Update operation: The ad group is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__AdGroup;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AdOperation {
            /** Configuration for how policies are validated. */
            policyValidationParameter?:
                GoogleAdsGoogleadsV12Common__PolicyValidationParameter;
            /** Update operation: The ad is expected to have a valid resource name in this format: `customers/{customer_id}/ads/{ad_id}` */
            update?:
                GoogleAdsGoogleadsV12Resources__Ad;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AdParameterOperation {
            /** Create operation: No resource name is expected for the new ad parameter. */
            create?:
                GoogleAdsGoogleadsV12Resources__AdParameter;
            /** Remove operation: A resource name for the ad parameter to remove is expected in this format: `customers/{customer_id}/adParameters/{ad_group_id}~{criterion_id}~{parameter_index}` */
            remove?:
                string;
            /** Update operation: The ad parameter is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__AdParameter;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AdvancedProductTargeting {
            /** Settings for YouTube Select targeting. */
            youtubeSelectSettings?:
                GoogleAdsGoogleadsV12Services__YouTubeSelectSettings;
        }
        interface GoogleAdsGoogleadsV12Services__ApplyRecommendationOperation {
            /** Parameters to use when applying call extension recommendation. */
            callExtension?:
                GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_CallExtensionParameters;
            /** Parameters to use when applying callout extension recommendation. */
            calloutExtension?:
                GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_CalloutExtensionParameters;
            /** Optional parameters to use when applying a campaign budget recommendation. */
            campaignBudget?:
                GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_CampaignBudgetParameters;
            /** Parameters to use when applying a forecasting set target ROAS recommendation. */
            forecastingSetTargetRoas?:
                GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_ForecastingSetTargetRoasParameters;
            /** Optional parameters to use when applying keyword recommendation. */
            keyword?:
                GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_KeywordParameters;
            /** Parameters to use when applying move unused budget recommendation. */
            moveUnusedBudget?:
                GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_MoveUnusedBudgetParameters;
            /**
             * Parameters to use when applying a raise target CPA bid too low recommendation. The apply is asynchronous and can take minutes depending on the number of ad groups there is in the
             * related campaign.
             */
            raiseTargetCpaBidTooLow?:
                GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_RaiseTargetCpaBidTooLowParameters;
            /** The resource name of the recommendation to apply. */
            resourceName?:
                string;
            /** Parameters to use when applying a responsive search ad recommendation. */
            responsiveSearchAd?:
                GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_ResponsiveSearchAdParameters;
            /** Parameters to use when applying a responsive search ad asset recommendation. */
            responsiveSearchAdAsset?:
                GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_ResponsiveSearchAdAssetParameters;
            /** Parameters to use when applying a responsive search ad improve ad strength recommendation. */
            responsiveSearchAdImproveAdStrength?:
                GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_ResponsiveSearchAdImproveAdStrengthParameters;
            /** Parameters to use when applying sitelink recommendation. */
            sitelinkExtension?:
                GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_SitelinkExtensionParameters;
            /** Optional parameters to use when applying target CPA opt-in recommendation. */
            targetCpaOptIn?:
                GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_TargetCpaOptInParameters;
            /** Optional parameters to use when applying target ROAS opt-in recommendation. */
            targetRoasOptIn?:
                GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_TargetRoasOptInParameters;
            /** Optional parameters to use when applying a text ad recommendation. */
            textAd?:
                GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_TextAdParameters;
            /** Parameters to use when applying a use broad match keyword recommendation. */
            useBroadMatchKeyword?:
                GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_UseBroadMatchKeywordParameters;
        }
        interface GoogleAdsGoogleadsV12Services__ApplyRecommendationRequest {
            /** Required. The list of operations to apply recommendations. If partial_failure=false all recommendations should be of the same type There is a limit of 100 operations per request. */
            operations?:
                GoogleAdsGoogleadsV12Services__ApplyRecommendationOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, operations will be carried out as a transaction if and only if they are all
             * valid. Default is false.
             */
            partialFailure?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__ApplyRecommendationResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors) we return the RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** Results of operations to apply recommendations. */
            results?:
                GoogleAdsGoogleadsV12Services__ApplyRecommendationResult[];
        }
        interface GoogleAdsGoogleadsV12Services__ApplyRecommendationResult {
            /** Returned for successful applies. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AssetGroupAssetOperation {
            /** Create operation: No resource name is expected for the new asset group asset. */
            create?:
                GoogleAdsGoogleadsV12Resources__AssetGroupAsset;
            /** Remove operation: A resource name for the removed asset group asset is expected, in this format: `customers/{customer_id}/assetGroupAssets/{asset_group_id}~{asset_id}~{field_type}` */
            remove?:
                string;
            /** Update operation: The asset group asset is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__AssetGroupAsset;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AssetGroupListingGroupFilterOperation {
            /** Create operation: No resource name is expected for the new asset group listing group filter. */
            create?:
                GoogleAdsGoogleadsV12Resources__AssetGroupListingGroupFilter;
            /**
             * Remove operation: A resource name for the removed asset group listing group filter is expected, in this format:
             * `customers/{customer_id}/assetGroupListingGroupFilters/{asset_group_id}~{listing_group_filter_id}` An entity can be removed only if it's not referenced by other
             * parent_listing_group_id. If multiple entities are being deleted, the mutates must be in the correct order.
             */
            remove?:
                string;
            /** Update operation: The asset group listing group filter is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__AssetGroupListingGroupFilter;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AssetGroupOperation {
            /** Create operation: No resource name is expected for the new asset group */
            create?:
                GoogleAdsGoogleadsV12Resources__AssetGroup;
            /** Remove operation: A resource name for the removed asset group is expected, in this format: `customers/{customer_id}/assetGroups/{asset_group_id}` */
            remove?:
                string;
            /** Update operation: The asset group is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__AssetGroup;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AssetGroupSignalOperation {
            /** Create operation: No resource name is expected for the new asset group signal. */
            create?:
                GoogleAdsGoogleadsV12Resources__AssetGroupSignal;
            /** Remove operation: A resource name for the removed asset group signal is expected, in this format: `customers/{customer_id}/assetGroupSignals/{asset_group_id}~{criterion_id}` */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AssetOperation {
            /** Create operation: No resource name is expected for the new asset. */
            create?:
                GoogleAdsGoogleadsV12Resources__Asset;
            /** Update operation: The asset is expected to have a valid resource name in this format: `customers/{customer_id}/assets/{asset_id}` */
            update?:
                GoogleAdsGoogleadsV12Resources__Asset;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AssetSetAssetOperation {
            /** Create operation: No resource name is expected for the new asset set asset */
            create?:
                GoogleAdsGoogleadsV12Resources__AssetSetAsset;
            /** Remove operation: A resource name for the removed asset set asset is expected, in this format: `customers/{customer_id}/assetSetAssets/{asset_set_id}~{asset_id}` */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AssetSetOperation {
            /** Create operation: No resource name is expected for the new asset set */
            create?:
                GoogleAdsGoogleadsV12Resources__AssetSet;
            /** Remove operation: A resource name for the removed asset set is expected, in this format: `customers/{customer_id}/assetSets/{asset_set_id}` */
            remove?:
                string;
            /** Update operation: The asset set is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__AssetSet;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AudienceCompositionAttribute {
            /** The attribute with its metadata. */
            attributeMetadata?:
                GoogleAdsGoogleadsV12Services__AudienceInsightsAttributeMetadata;
            /** Share and index metrics for the attribute. */
            metrics?:
                GoogleAdsGoogleadsV12Services__AudienceCompositionMetrics;
        }
        interface GoogleAdsGoogleadsV12Services__AudienceCompositionAttributeCluster {
            /** The individual attributes that make up this cluster, with metadata and metrics. */
            attributes?:
                GoogleAdsGoogleadsV12Services__AudienceCompositionAttribute[];
            /** The name of this cluster of attributes */
            clusterDisplayName?:
                string;
            /** If the dimension associated with this cluster is YOUTUBE_CHANNEL, then cluster_metrics are metrics associated with the cluster as a whole. For other dimensions, this field is unset. */
            clusterMetrics?:
                GoogleAdsGoogleadsV12Services__AudienceCompositionMetrics;
        }
        interface GoogleAdsGoogleadsV12Services__AudienceCompositionMetrics {
            /** The fraction (from 0 to 1 inclusive) of the specific audience that match the attribute. */
            audienceShare?:
                number;
            /** The fraction (from 0 to 1 inclusive) of the baseline audience that match the attribute. */
            baselineAudienceShare?:
                number;
            /** The ratio of audience_share to baseline_audience_share, or zero if this ratio is undefined or is not meaningful. */
            index?:
                number;
            /** A relevance score from 0 to 1 inclusive. */
            score?:
                number;
        }
        interface GoogleAdsGoogleadsV12Services__AudienceCompositionSection {
            /** Additional attributes for this audience, grouped into clusters. Only populated if dimension is YOUTUBE_CHANNEL. */
            clusteredAttributes?:
                GoogleAdsGoogleadsV12Services__AudienceCompositionAttributeCluster[];
            /** The type of the attributes in this section. */
            dimension?:
                string;
            /** The most relevant segments for this audience. If dimension is GENDER, AGE_RANGE or PARENTAL_STATUS, then this list of attributes is exhaustive. */
            topAttributes?:
                GoogleAdsGoogleadsV12Services__AudienceCompositionAttribute[];
        }
        interface GoogleAdsGoogleadsV12Services__AudienceInsightsAttribute {
            /** An audience attribute defined by an age range. */
            ageRange?:
                GoogleAdsGoogleadsV12Common__AgeRangeInfo;
            /** An audience attribute defined by interest in a Product & Service category. */
            category?:
                GoogleAdsGoogleadsV12Services__AudienceInsightsCategory;
            /** A YouTube Dynamic Lineup */
            dynamicLineup?:
                GoogleAdsGoogleadsV12Services__AudienceInsightsDynamicLineup;
            /** An audience attribute defined by interest in a topic represented by a Knowledge Graph entity. */
            entity?:
                GoogleAdsGoogleadsV12Services__AudienceInsightsEntity;
            /** An audience attribute defined by a gender. */
            gender?:
                GoogleAdsGoogleadsV12Common__GenderInfo;
            /** A household income percentile range. */
            incomeRange?:
                GoogleAdsGoogleadsV12Common__IncomeRangeInfo;
            /** An audience attribute defined by a geographic location. */
            location?:
                GoogleAdsGoogleadsV12Common__LocationInfo;
            /** A Parental Status value (parent, or not a parent). */
            parentalStatus?:
                GoogleAdsGoogleadsV12Common__ParentalStatusInfo;
            /** An Affinity or In-Market audience. */
            userInterest?:
                GoogleAdsGoogleadsV12Common__UserInterestInfo;
            /** A YouTube channel. */
            youtubeChannel?:
                GoogleAdsGoogleadsV12Common__YouTubeChannelInfo;
        }
        interface GoogleAdsGoogleadsV12Services__AudienceInsightsAttributeMetadata {
            /** The attribute itself. */
            attribute?:
                GoogleAdsGoogleadsV12Services__AudienceInsightsAttribute;
            /** The type of the attribute. */
            dimension?:
                string;
            /**
             * A string that supplements the display_name to identify the attribute. If the dimension is TOPIC, this is a brief description of the Knowledge Graph entity, such as "American
             * singer-songwriter". If the dimension is CATEGORY, this is the complete path to the category in The Product & Service taxonomy, for example "/Apparel/Clothing/Outerwear".
             */
            displayInfo?:
                string;
            /** The human-readable name of the attribute. */
            displayName?:
                string;
            /** Special metadata for a YouTube Dynamic Lineup. */
            dynamicAttributeMetadata?:
                GoogleAdsGoogleadsV12Services__DynamicLineupAttributeMetadata;
            /** Special metadata for a Location. */
            locationAttributeMetadata?:
                GoogleAdsGoogleadsV12Services__LocationAttributeMetadata;
            /** A relevance score for this attribute, between 0 and 1. */
            score?:
                number;
            /** Special metadata for a YouTube channel. */
            youtubeChannelMetadata?:
                GoogleAdsGoogleadsV12Services__YouTubeChannelAttributeMetadata;
        }
        interface GoogleAdsGoogleadsV12Services__AudienceInsightsCategory {
            /** Required. The criterion id of the category. */
            categoryId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AudienceInsightsDynamicLineup {
            /** Required. The numeric ID of the dynamic lineup. */
            dynamicLineupId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AudienceInsightsEntity {
            /** Required. The machine id (mid) of the Knowledge Graph entity. */
            knowledgeGraphMachineId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AudienceInsightsTopic {
            /** A Product & Service category */
            category?:
                GoogleAdsGoogleadsV12Services__AudienceInsightsCategory;
            /** A Knowledge Graph entity */
            entity?:
                GoogleAdsGoogleadsV12Services__AudienceInsightsEntity;
        }
        interface GoogleAdsGoogleadsV12Services__AudienceOperation {
            /** Create operation: No resource name is expected for the new audience */
            create?:
                GoogleAdsGoogleadsV12Resources__Audience;
            /** Update operation: The audience is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__Audience;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__AudienceTargeting {
            /** List of audiences based on user interests to be targeted. */
            userInterest?:
                GoogleAdsGoogleadsV12Common__UserInterestInfo[];
        }
        interface GoogleAdsGoogleadsV12Services__BasicInsightsAudience {
            /** Age ranges for the audience. If absent, the audience represents all people over 18 that match the other attributes. */
            ageRanges?:
                GoogleAdsGoogleadsV12Common__AgeRangeInfo[];
            /** Required. The countries for this audience. */
            countryLocation?:
                GoogleAdsGoogleadsV12Common__LocationInfo[];
            /** Gender for the audience. If absent, the audience does not restrict by gender. */
            gender?:
                GoogleAdsGoogleadsV12Common__GenderInfo;
            /** Sub-country geographic location attributes. If present, each of these must be contained in one of the countries in this audience. */
            subCountryLocations?:
                GoogleAdsGoogleadsV12Common__LocationInfo[];
            /** Topics, represented by Knowledge Graph entities and/or Product & Service categories, that this audience is interested in. */
            topics?:
                GoogleAdsGoogleadsV12Services__AudienceInsightsTopic[];
            /** User interests defining this audience. Affinity and In-Market audiences are supported. */
            userInterests?:
                GoogleAdsGoogleadsV12Common__UserInterestInfo[];
        }
        interface GoogleAdsGoogleadsV12Services__BatchJobOperation {
            /** Create operation: No resource name is expected for the new batch job. */
            create?:
                GoogleAdsGoogleadsV12Resources__BatchJob;
            /** Remove operation: The batch job must not have been run. A resource name for the removed batch job is expected, in this format: `customers/{customer_id}/batchJobs/{batch_job_id}` */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__BatchJobResult {
            /** Response for the mutate. May be empty if errors occurred. */
            mutateOperationResponse?:
                GoogleAdsGoogleadsV12Services__MutateOperationResponse;
            /** Index of the mutate operation. */
            operationIndex?:
                string;
            /** Details of the errors when processing the operation. */
            status?:
                GoogleRpc__Status;
        }
        interface GoogleAdsGoogleadsV12Services__BiddingDataExclusionOperation {
            /** Create operation: No resource name is expected for the new data exclusion. */
            create?:
                GoogleAdsGoogleadsV12Resources__BiddingDataExclusion;
            /** Remove operation: A resource name for the removed data exclusion is expected, in this format: `customers/{customer_id}/biddingDataExclusions/{data_exclusion_id}` */
            remove?:
                string;
            /** Update operation: The data exclusion is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__BiddingDataExclusion;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__BiddingSeasonalityAdjustmentOperation {
            /** Create operation: No resource name is expected for the new seasonality adjustment. */
            create?:
                GoogleAdsGoogleadsV12Resources__BiddingSeasonalityAdjustment;
            /**
             * Remove operation: A resource name for the removed seasonality adjustment is expected, in this format:
             * `customers/{customer_id}/biddingSeasonalityAdjustments/{seasonality_adjustment_id}`
             */
            remove?:
                string;
            /** Update operation: The seasonality adjustment is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__BiddingSeasonalityAdjustment;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__BiddingStrategyOperation {
            /** Create operation: No resource name is expected for the new bidding strategy. */
            create?:
                GoogleAdsGoogleadsV12Resources__BiddingStrategy;
            /** Remove operation: A resource name for the removed bidding strategy is expected, in this format: `customers/{customer_id}/biddingStrategies/{bidding_strategy_id}` */
            remove?:
                string;
            /** Update operation: The bidding strategy is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__BiddingStrategy;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__BillingSetupOperation {
            /** Creates a billing setup. No resource name is expected for the new billing setup. */
            create?:
                GoogleAdsGoogleadsV12Resources__BillingSetup;
            /**
             * Resource name of the billing setup to remove. A setup cannot be removed unless it is in a pending state or its scheduled start time is in the future. The resource name looks like
             * `customers/{customer_id}/billingSetups/{billing_id}`.
             */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CallConversion {
            /** The caller id from which this call was placed. Caller id is expected to be in E.164 format with preceding '+' sign, for example, "+16502531234". */
            callerId?:
                string;
            /** The date time at which the call occurred. The timezone must be specified. The format is "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00". */
            callStartDateTime?:
                string;
            /**
             * Resource name of the conversion action associated with this conversion. Note: Although this resource name consists of a customer id and a conversion action id, validation will
             * ignore the customer id and use the conversion action id as the sole identifier of the conversion action.
             */
            conversionAction?:
                string;
            /**
             * The date time at which the conversion occurred. Must be after the call time. The timezone must be specified. The format is "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01
             * 12:32:45-08:00".
             */
            conversionDateTime?:
                string;
            /** The value of the conversion for the advertiser. */
            conversionValue?:
                number;
            /** Currency associated with the conversion value. This is the ISO 4217 3-character currency code. For example: USD, EUR. */
            currencyCode?:
                string;
            /** The custom variables associated with this conversion. */
            customVariables?:
                GoogleAdsGoogleadsV12Services__CustomVariable[];
        }
        interface GoogleAdsGoogleadsV12Services__CallConversionResult {
            /** The caller id from which this call was placed. Caller id is expected to be in E.164 format with preceding '+' sign. */
            callerId?:
                string;
            /** The date time at which the call occurred. The format is "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00". */
            callStartDateTime?:
                string;
            /** Resource name of the conversion action associated with this conversion. */
            conversionAction?:
                string;
            /** The date time at which the conversion occurred. The format is "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00". */
            conversionDateTime?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CampaignAssetOperation {
            /** Create operation: No resource name is expected for the new campaign asset. */
            create?:
                GoogleAdsGoogleadsV12Resources__CampaignAsset;
            /** Remove operation: A resource name for the removed campaign asset is expected, in this format: `customers/{customer_id}/campaignAssets/{campaign_id}~{asset_id}~{field_type}` */
            remove?:
                string;
            /** Update operation: The campaign asset is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CampaignAsset;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CampaignAssetSetOperation {
            /** Create operation: No resource name is expected for the new campaign asset set. */
            create?:
                GoogleAdsGoogleadsV12Resources__CampaignAssetSet;
            /** Remove operation: A resource name for the removed campaign asset set is expected, in this format: `customers/{customer_id}/campaignAssetSets/{campaign_id}~{asset_set_id}` */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CampaignBidModifierOperation {
            /** Create operation: No resource name is expected for the new campaign bid modifier. */
            create?:
                GoogleAdsGoogleadsV12Resources__CampaignBidModifier;
            /** Remove operation: A resource name for the removed campaign bid modifier is expected, in this format: `customers/{customer_id}/CampaignBidModifiers/{campaign_id}~{criterion_id}` */
            remove?:
                string;
            /** Update operation: The campaign bid modifier is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CampaignBidModifier;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CampaignBudgetMapping {
            /** Required. The budget that should be attached to the graduating experiment campaign. */
            campaignBudget?:
                string;
            /** Required. The experiment campaign to graduate. */
            experimentCampaign?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CampaignBudgetOperation {
            /** Create operation: No resource name is expected for the new budget. */
            create?:
                GoogleAdsGoogleadsV12Resources__CampaignBudget;
            /** Remove operation: A resource name for the removed budget is expected, in this format: `customers/{customer_id}/campaignBudgets/{budget_id}` */
            remove?:
                string;
            /** Update operation: The campaign budget is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CampaignBudget;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CampaignConversionGoalOperation {
            /** Update operation: The customer conversion goal is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CampaignConversionGoal;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CampaignCriterionOperation {
            /** Create operation: No resource name is expected for the new criterion. */
            create?:
                GoogleAdsGoogleadsV12Resources__CampaignCriterion;
            /** Remove operation: A resource name for the removed criterion is expected, in this format: `customers/{customer_id}/campaignCriteria/{campaign_id}~{criterion_id}` */
            remove?:
                string;
            /** Update operation: The criterion is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CampaignCriterion;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CampaignCustomizerOperation {
            /** Create operation: No resource name is expected for the new campaign customizer */
            create?:
                GoogleAdsGoogleadsV12Resources__CampaignCustomizer;
            /**
             * Remove operation: A resource name for the removed campaign customizer is expected, in this format:
             * `customers/{customer_id}/campaignCustomizers/{campaign_id}~{customizer_attribute_id}`
             */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CampaignDraftOperation {
            /** Create operation: No resource name is expected for the new campaign draft. */
            create?:
                GoogleAdsGoogleadsV12Resources__CampaignDraft;
            /** Remove operation: The campaign draft is expected to have a valid resource name, in this format: `customers/{customer_id}/campaignDrafts/{base_campaign_id}~{draft_id}` */
            remove?:
                string;
            /** Update operation: The campaign draft is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CampaignDraft;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CampaignDuration {
            /**
             * Date range of the campaign. Dates are in the yyyy-mm-dd format and inclusive. The end date must be < 1 year in the future and the date range must be <= 92 days long. This field
             * cannot be combined with the duration_in_days field.
             */
            dateRange?:
                GoogleAdsGoogleadsV12Common__DateRange;
            /** The duration value in days. This field cannot be combined with the date_range field. */
            durationInDays?:
                number;
        }
        interface GoogleAdsGoogleadsV12Services__CampaignExtensionSettingOperation {
            /** Create operation: No resource name is expected for the new campaign extension setting. */
            create?:
                GoogleAdsGoogleadsV12Resources__CampaignExtensionSetting;
            /**
             * Remove operation: A resource name for the removed campaign extension setting is expected, in this format:
             * `customers/{customer_id}/campaignExtensionSettings/{campaign_id}~{extension_type}`
             */
            remove?:
                string;
            /** Update operation: The campaign extension setting is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CampaignExtensionSetting;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CampaignFeedOperation {
            /** Create operation: No resource name is expected for the new campaign feed. */
            create?:
                GoogleAdsGoogleadsV12Resources__CampaignFeed;
            /** Remove operation: A resource name for the removed campaign feed is expected, in this format: `customers/{customer_id}/campaignFeeds/{campaign_id}~{feed_id}` */
            remove?:
                string;
            /** Update operation: The campaign feed is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CampaignFeed;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CampaignGroupOperation {
            /** Create operation: No resource name is expected for the new campaign group. */
            create?:
                GoogleAdsGoogleadsV12Resources__CampaignGroup;
            /** Remove operation: A resource name for the removed campaign group is expected, in this format: `customers/{customer_id}/campaignGroups/{campaign_group_id}` */
            remove?:
                string;
            /** Update operation: The campaign group is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CampaignGroup;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CampaignLabelOperation {
            /** Create operation: No resource name is expected for the new campaign-label relationship. */
            create?:
                GoogleAdsGoogleadsV12Resources__CampaignLabel;
            /** Remove operation: A resource name for the campaign-label relationship being removed, in this format: `customers/{customer_id}/campaignLabels/{campaign_id}~{label_id}` */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CampaignOperation {
            /** Create operation: No resource name is expected for the new campaign. */
            create?:
                GoogleAdsGoogleadsV12Resources__Campaign;
            /** Remove operation: A resource name for the removed campaign is expected, in this format: `customers/{customer_id}/campaigns/{campaign_id}` */
            remove?:
                string;
            /** Update operation: The campaign is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__Campaign;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CampaignSharedSetOperation {
            /** Create operation: No resource name is expected for the new campaign shared set. */
            create?:
                GoogleAdsGoogleadsV12Resources__CampaignSharedSet;
            /** Remove operation: A resource name for the removed campaign shared set is expected, in this format: `customers/{customer_id}/campaignSharedSets/{campaign_id}~{shared_set_id}` */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CartData {
            /** The country code associated with the feed where the items are uploaded. */
            feedCountryCode?:
                string;
            /** The language code associated with the feed where the items are uploaded. */
            feedLanguageCode?:
                string;
            /** Data of the items purchased. */
            items?:
                GoogleAdsGoogleadsV12Services_CartData_Item[];
            /** Sum of all transaction level discounts, such as free shipping and coupon discounts for the whole cart. The currency code is the same as that in the ClickConversion message. */
            localTransactionCost?:
                number;
            /** The Merchant Center ID where the items are uploaded. */
            merchantId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ClickConversion {
            /** The cart data associated with this conversion. */
            cartData?:
                GoogleAdsGoogleadsV12Services__CartData;
            /**
             * Resource name of the conversion action associated with this conversion. Note: Although this resource name consists of a customer id and a conversion action id, validation will
             * ignore the customer id and use the conversion action id as the sole identifier of the conversion action.
             */
            conversionAction?:
                string;
            /**
             * The date time at which the conversion occurred. Must be after the click time. The timezone must be specified. The format is "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01
             * 12:32:45-08:00".
             */
            conversionDateTime?:
                string;
            /** The environment this conversion was recorded on, for example, App or Web. */
            conversionEnvironment?:
                string;
            /** The value of the conversion for the advertiser. */
            conversionValue?:
                number;
            /** Currency associated with the conversion value. This is the ISO 4217 3-character currency code. For example: USD, EUR. */
            currencyCode?:
                string;
            /** The custom variables associated with this conversion. */
            customVariables?:
                GoogleAdsGoogleadsV12Services__CustomVariable[];
            /** Additional data about externally attributed conversions. This field is required for conversions with an externally attributed conversion action, but should not be set otherwise. */
            externalAttributionData?:
                GoogleAdsGoogleadsV12Services__ExternalAttributionData;
            /** The click identifier for clicks associated with app conversions and originating from iOS devices starting with iOS14. */
            gbraid?:
                string;
            /** The Google click ID (gclid) associated with this conversion. */
            gclid?:
                string;
            /** The order ID associated with the conversion. An order id can only be used for one conversion per conversion action. */
            orderId?:
                string;
            /**
             * The user identifiers associated with this conversion. Only hashed_email and hashed_phone_number are supported for conversion uploads. The maximum number of user identifiers for each
             * conversion is 5.
             */
            userIdentifiers?:
                GoogleAdsGoogleadsV12Common__UserIdentifier[];
            /** The click identifier for clicks associated with web conversions and originating from iOS devices starting with iOS14. */
            wbraid?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ClickConversionResult {
            /** Resource name of the conversion action associated with this conversion. */
            conversionAction?:
                string;
            /** The date time at which the conversion occurred. The format is "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00". */
            conversionDateTime?:
                string;
            /** The click identifier for clicks associated with app conversions and originating from iOS devices starting with iOS14. */
            gbraid?:
                string;
            /** The Google Click ID (gclid) associated with this conversion. */
            gclid?:
                string;
            /**
             * The user identifiers associated with this conversion. Only hashed_email and hashed_phone_number are supported for conversion uploads. The maximum number of user identifiers for each
             * conversion is 5.
             */
            userIdentifiers?:
                GoogleAdsGoogleadsV12Common__UserIdentifier[];
            /** The click identifier for clicks associated with web conversions and originating from iOS devices starting with iOS14. */
            wbraid?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ConversionActionOperation {
            /** Create operation: No resource name is expected for the new conversion action. */
            create?:
                GoogleAdsGoogleadsV12Resources__ConversionAction;
            /** Remove operation: A resource name for the removed conversion action is expected, in this format: `customers/{customer_id}/conversionActions/{conversion_action_id}` */
            remove?:
                string;
            /** Update operation: The conversion action is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__ConversionAction;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ConversionAdjustment {
            /**
             * The date time at which the adjustment occurred. Must be after the conversion_date_time. The timezone must be specified. The format is "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example,
             * "2019-01-01 12:32:45-08:00".
             */
            adjustmentDateTime?:
                string;
            /** The adjustment type. */
            adjustmentType?:
                string;
            /**
             * Resource name of the conversion action associated with this conversion adjustment. Note: Although this resource name consists of a customer id and a conversion action id, validation
             * will ignore the customer id and use the conversion action id as the sole identifier of the conversion action.
             */
            conversionAction?:
                string;
            /**
             * For adjustments, uniquely identifies a conversion that was reported without an order ID specified. If the adjustment_type is ENHANCEMENT, this value is optional but may be set in
             * addition to the order_id.
             */
            gclidDateTimePair?:
                GoogleAdsGoogleadsV12Services__GclidDateTimePair;
            /**
             * The order ID of the conversion to be adjusted. If the conversion was reported with an order ID specified, that order ID must be used as the identifier here. The order ID is required
             * for enhancements.
             */
            orderId?:
                string;
            /**
             * Information needed to restate the conversion's value. Required for restatements. Should not be supplied for retractions. An error will be returned if provided for a retraction.
             * NOTE: If you want to upload a second restatement with a different adjusted value, it must have a new, more recent, adjustment occurrence time. Otherwise, it will be treated as a
             * duplicate of the previous restatement and ignored.
             */
            restatementValue?:
                GoogleAdsGoogleadsV12Services__RestatementValue;
            /**
             * The user agent to enhance the original conversion. This can be found in your user's HTTP request header when they convert on your web page. Example, "Mozilla/5.0 (iPhone; CPU iPhone
             * OS 12_2 like Mac OS X)". User agent can only be specified in enhancements with user identifiers. This should match the user agent of the request that sent the original conversion so
             * the conversion and its enhancement are either both attributed as same-device or both attributed as cross-device.
             */
            userAgent?:
                string;
            /**
             * The user identifiers to enhance the original conversion. ConversionAdjustmentUploadService only accepts user identifiers in enhancements. The maximum number of user identifiers for
             * each enhancement is 5.
             */
            userIdentifiers?:
                GoogleAdsGoogleadsV12Common__UserIdentifier[];
        }
        interface GoogleAdsGoogleadsV12Services__ConversionAdjustmentResult {
            /** The date time at which the adjustment occurred. The format is "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00". */
            adjustmentDateTime?:
                string;
            /** The adjustment type. */
            adjustmentType?:
                string;
            /** Resource name of the conversion action associated with this conversion adjustment. */
            conversionAction?:
                string;
            /** The gclid and conversion date time of the conversion. */
            gclidDateTimePair?:
                GoogleAdsGoogleadsV12Services__GclidDateTimePair;
            /** The order ID of the conversion to be adjusted. */
            orderId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ConversionCustomVariableOperation {
            /** Create operation: No resource name is expected for the new conversion custom variable. */
            create?:
                GoogleAdsGoogleadsV12Resources__ConversionCustomVariable;
            /** Update operation: The conversion custom variable is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__ConversionCustomVariable;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ConversionGoalCampaignConfigOperation {
            /** Update operation: The conversion goal campaign config is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__ConversionGoalCampaignConfig;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ConversionValueRuleOperation {
            /** Create operation: No resource name is expected for the new conversion value rule. */
            create?:
                GoogleAdsGoogleadsV12Resources__ConversionValueRule;
            /** Remove operation: A resource name for the removed conversion value rule is expected, in this format: `customers/{customer_id}/conversionValueRules/{conversion_value_rule_id}` */
            remove?:
                string;
            /** Update operation: The conversion value rule is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__ConversionValueRule;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ConversionValueRuleSetOperation {
            /** Create operation: No resource name is expected for the new conversion value rule set. */
            create?:
                GoogleAdsGoogleadsV12Resources__ConversionValueRuleSet;
            /**
             * Remove operation: A resource name for the removed conversion value rule set is expected, in this format:
             * `customers/{customer_id}/conversionValueRuleSets/{conversion_value_rule_set_id}`
             */
            remove?:
                string;
            /** Update operation: The conversion value rule set is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__ConversionValueRuleSet;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CreateAccountLinkRequest {
            /** Required. The account link to be created. */
            accountLink?:
                GoogleAdsGoogleadsV12Resources__AccountLink;
        }
        interface GoogleAdsGoogleadsV12Services__CreateAccountLinkResponse {
            /** Returned for successful operations. Resource name of the account link. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CreateCustomerClientRequest {
            /** The proposed role of user on the created client customer. Accessible only to customers on the allow-list. */
            accessRole?:
                string;
            /** Required. The new client customer to create. The resource name on this customer will be ignored. */
            customerClient?:
                GoogleAdsGoogleadsV12Resources__Customer;
            /** Email address of the user who should be invited on the created client customer. Accessible only to customers on the allow-list. */
            emailAddress?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__CreateCustomerClientResponse {
            /** Link for inviting user to access the created customer. Accessible to allowlisted customers only. */
            invitationLink?:
                string;
            /** The resource name of the newly created customer. Customer resource names have the form: `customers/{customer_id}`. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CreateOfflineUserDataJobRequest {
            /** If true, match rate range for the offline user data job is calculated and made available in the resource. */
            enableMatchRateRangePreview?:
                boolean;
            /** Required. The offline user data job to be created. */
            job?:
                GoogleAdsGoogleadsV12Resources__OfflineUserDataJob;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__CreateOfflineUserDataJobResponse {
            /** The resource name of the OfflineUserDataJob. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomAudienceOperation {
            /** Create operation: No resource name is expected for the new custom audience. */
            create?:
                GoogleAdsGoogleadsV12Resources__CustomAudience;
            /** Remove operation: A resource name for the removed custom audience is expected, in this format: `customers/{customer_id}/customAudiences/{custom_audience_id}` */
            remove?:
                string;
            /** Update operation: The custom audience is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CustomAudience;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomConversionGoalOperation {
            /** Create operation: No resource name is expected for the new custom conversion goal */
            create?:
                GoogleAdsGoogleadsV12Resources__CustomConversionGoal;
            /**
             * Remove operation: A resource name for the removed custom conversion goal is expected, in this format:
             * 'customers/{customer_id}/conversionActions/{ConversionGoal.custom_goal_config.conversion_type_ids}'
             */
            remove?:
                string;
            /** Update operation: The custom conversion goal is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CustomConversionGoal;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomerAssetOperation {
            /** Create operation: No resource name is expected for the new customer asset. */
            create?:
                GoogleAdsGoogleadsV12Resources__CustomerAsset;
            /** Remove operation: A resource name for the removed customer asset is expected, in this format: `customers/{customer_id}/customerAssets/{asset_id}~{field_type}` */
            remove?:
                string;
            /** Update operation: The customer asset is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CustomerAsset;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomerAssetSetOperation {
            /** Create operation: No resource name is expected for the new customer asset set. */
            create?:
                GoogleAdsGoogleadsV12Resources__CustomerAssetSet;
            /** Remove operation: A resource name for the removed customer asset set is expected, in this format: `customers/{customer_id}/customerAssetSets/{asset_set_id}` */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomerClientLinkOperation {
            /** Create operation: No resource name is expected for the new link. */
            create?:
                GoogleAdsGoogleadsV12Resources__CustomerClientLink;
            /** Update operation: The link is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CustomerClientLink;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomerConversionGoalOperation {
            /** Update operation: The customer conversion goal is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CustomerConversionGoal;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomerCustomizerOperation {
            /** Create operation: No resource name is expected for the new customer customizer */
            create?:
                GoogleAdsGoogleadsV12Resources__CustomerCustomizer;
            /** Remove operation: A resource name for the removed customer customizer is expected, in this format: `customers/{customer_id}/customerCustomizers/{customizer_attribute_id}` */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomerExtensionSettingOperation {
            /** Create operation: No resource name is expected for the new customer extension setting. */
            create?:
                GoogleAdsGoogleadsV12Resources__CustomerExtensionSetting;
            /** Remove operation: A resource name for the removed customer extension setting is expected, in this format: `customers/{customer_id}/customerExtensionSettings/{extension_type}` */
            remove?:
                string;
            /** Update operation: The customer extension setting is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CustomerExtensionSetting;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomerFeedOperation {
            /** Create operation: No resource name is expected for the new customer feed. */
            create?:
                GoogleAdsGoogleadsV12Resources__CustomerFeed;
            /** Remove operation: A resource name for the removed customer feed is expected, in this format: `customers/{customer_id}/customerFeeds/{feed_id}` */
            remove?:
                string;
            /** Update operation: The customer feed is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CustomerFeed;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomerLabelOperation {
            /** Create operation: No resource name is expected for the new customer-label relationship. */
            create?:
                GoogleAdsGoogleadsV12Resources__CustomerLabel;
            /** Remove operation: A resource name for the customer-label relationship being removed, in this format: `customers/{customer_id}/customerLabels/{label_id}` */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomerManagerLinkOperation {
            /** Update operation: The link is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CustomerManagerLink;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomerNegativeCriterionOperation {
            /** Create operation: No resource name is expected for the new criterion. */
            create?:
                GoogleAdsGoogleadsV12Resources__CustomerNegativeCriterion;
            /** Remove operation: A resource name for the removed criterion is expected, in this format: `customers/{customer_id}/customerNegativeCriteria/{criterion_id}` */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomerOperation {
            /** Mutate operation. Only updates are supported for customer. */
            update?:
                GoogleAdsGoogleadsV12Resources__Customer;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomerUserAccessInvitationOperation {
            /** Create operation: No resource name is expected for the new access invitation. */
            create?:
                GoogleAdsGoogleadsV12Resources__CustomerUserAccessInvitation;
            /** Remove operation: A resource name for the revoke invitation is expected, in this format: `customers/{customer_id}/customerUserAccessInvitations/{invitation_id}` */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomerUserAccessOperation {
            /** Remove operation: A resource name for the removed access is expected, in this format: `customers/{customer_id}/customerUserAccesses/{CustomerUserAccess.user_id}` */
            remove?:
                string;
            /** Update operation: The customer user access is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CustomerUserAccess;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomInterestOperation {
            /** Create operation: No resource name is expected for the new custom interest. */
            create?:
                GoogleAdsGoogleadsV12Resources__CustomInterest;
            /** Update operation: The custom interest is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__CustomInterest;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomizerAttributeOperation {
            /** Create operation: No resource name is expected for the new customizer attribute */
            create?:
                GoogleAdsGoogleadsV12Resources__CustomizerAttribute;
            /** Remove operation: A resource name for the removed customizer attribute is expected, in this format: `customers/{customer_id}/customizerAttributes/{customizer_attribute_id}` */
            remove?:
                string;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__CustomVariable {
            /**
             * Resource name of the custom variable associated with this conversion. Note: Although this resource name consists of a customer id and a conversion custom variable id, validation
             * will ignore the customer id and use the conversion custom variable id as the sole identifier of the conversion custom variable.
             */
            conversionCustomVariable?:
                string;
            /** The value string of this custom variable. The value of the custom variable should not contain private customer data, such as email addresses or phone numbers. */
            value?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__DismissRecommendationRequest {
            /** Required. The list of operations to dismiss recommendations. If partial_failure=false all recommendations should be of the same type There is a limit of 100 operations per request. */
            operations?:
                GoogleAdsGoogleadsV12Services_DismissRecommendationRequest_DismissRecommendationOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, operations will be carried in a single transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__DismissRecommendationResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors) we return the RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** Results of operations to dismiss recommendations. */
            results?:
                GoogleAdsGoogleadsV12Services_DismissRecommendationResponse_DismissRecommendationResult[];
        }
        interface GoogleAdsGoogleadsV12Services__DynamicLineupAttributeMetadata {
            /** The lower end of a range containing the number of channels in the lineup. */
            channelCountLowerBound?:
                string;
            /** The upper end of a range containing the number of channels in the lineup. */
            channelCountUpperBound?:
                string;
            /** The national market associated with the lineup. */
            inventoryCountry?:
                GoogleAdsGoogleadsV12Common__LocationInfo;
            /** The median number of impressions per month on this lineup. */
            medianMonthlyInventory?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__EffectiveFrequencyBreakdown {
            /** The number of users (including co-viewing users) reached for the associated effective_frequency value. */
            effectiveCoviewReach?:
                string;
            /** The effective frequency [1-10]. */
            effectiveFrequency?:
                number;
            /** The number of users (including co-viewing users) reached for the associated effective_frequency value within the specified plan demographic. */
            onTargetEffectiveCoviewReach?:
                string;
            /**
             * The number of unique people reached at least effective_frequency times that exactly matches the Targeting. Note that a minimum number of unique people must be reached in order for
             * data to be reported. If the minimum number is not met, the on_target_reach value will be rounded to 0.
             */
            onTargetReach?:
                string;
            /**
             * Total number of unique people reached at least effective_frequency times. This includes people that may fall outside the specified Targeting. Note that a minimum number of unique
             * people must be reached in order for data to be reported. If the minimum number is not met, the total_reach value will be rounded to 0.
             */
            totalReach?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__EffectiveFrequencyLimit {
            /** The highest effective frequency value to include in Forecast.effective_frequency_breakdowns. This field supports frequencies 1-10, inclusive. */
            effectiveFrequencyBreakdownLimit?:
                number;
        }
        interface GoogleAdsGoogleadsV12Services__EndExperimentRequest {
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__ExperimentArmOperation {
            /** Create operation */
            create?:
                GoogleAdsGoogleadsV12Resources__ExperimentArm;
            /** Remove operation: The experiment arm is expected to have a valid resource name, in this format: `customers/{customer_id}/experiments/{campaign_experiment_id}` */
            remove?:
                string;
            /** Update operation: The experiment arm is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__ExperimentArm;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ExperimentOperation {
            /** Create operation */
            create?:
                GoogleAdsGoogleadsV12Resources__Experiment;
            /** Remove operation: The experiment is expected to have a valid resource name, in this format: `customers/{customer_id}/experiments/{campaign_experiment_id}` */
            remove?:
                string;
            /** Update operation: The experiment is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__Experiment;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ExtensionFeedItemOperation {
            /** Create operation: No resource name is expected for the new extension feed item. */
            create?:
                GoogleAdsGoogleadsV12Resources__ExtensionFeedItem;
            /** Remove operation: A resource name for the removed extension feed item is expected, in this format: `customers/{customer_id}/extensionFeedItems/{feed_item_id}` */
            remove?:
                string;
            /** Update operation: The extension feed item is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__ExtensionFeedItem;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ExternalAttributionData {
            /** Represents the fraction of the conversion that is attributed to the Google Ads click. */
            externalAttributionCredit?:
                number;
            /** Specifies the attribution model name. */
            externalAttributionModel?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__FeedItemOperation {
            /** Create operation: No resource name is expected for the new feed item. */
            create?:
                GoogleAdsGoogleadsV12Resources__FeedItem;
            /** Remove operation: A resource name for the removed feed item is expected, in this format: `customers/{customer_id}/feedItems/{feed_id}~{feed_item_id}` */
            remove?:
                string;
            /** Update operation: The feed item is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__FeedItem;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__FeedItemSetLinkOperation {
            /** Create operation: No resource name is expected for the new feed item set link. */
            create?:
                GoogleAdsGoogleadsV12Resources__FeedItemSetLink;
            /**
             * Remove operation: A resource name for the removed feed item set link is expected, in this format:
             * `customers/{customer_id}/feedItemSetLinks/{feed_id}_{feed_item_set_id}_{feed_item_id}`
             */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__FeedItemSetOperation {
            /** Create operation: No resource name is expected for the new feed item set */
            create?:
                GoogleAdsGoogleadsV12Resources__FeedItemSet;
            /** Remove operation: A resource name for the removed feed item is expected, in this format: `customers/{customer_id}/feedItems/{feed_id}~{feed_item_set_id}` */
            remove?:
                string;
            /** Update operation: The feed item set is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__FeedItemSet;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__FeedItemTargetOperation {
            /** Create operation: No resource name is expected for the new feed item target. */
            create?:
                GoogleAdsGoogleadsV12Resources__FeedItemTarget;
            /**
             * Remove operation: A resource name for the removed feed item target is expected, in this format:
             * `customers/{customer_id}/feedItemTargets/{feed_id}~{feed_item_id}~{feed_item_target_type}~{feed_item_target_id}`
             */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__FeedMappingOperation {
            /** Create operation: No resource name is expected for the new feed mapping. */
            create?:
                GoogleAdsGoogleadsV12Resources__FeedMapping;
            /** Remove operation: A resource name for the removed feed mapping is expected, in this format: `customers/{customer_id}/feedMappings/{feed_id}~{feed_mapping_id}` */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__FeedOperation {
            /** Create operation: No resource name is expected for the new feed. */
            create?:
                GoogleAdsGoogleadsV12Resources__Feed;
            /** Remove operation: A resource name for the removed feed is expected, in this format: `customers/{customer_id}/feeds/{feed_id}` */
            remove?:
                string;
            /** Update operation: The feed is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__Feed;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__Forecast {
            /**
             * A list of effective frequency forecasts. The list is ordered starting with 1+ and ending with the value set in GenerateReachForecastRequest.effective_frequency_limit. If no
             * effective_frequency_limit was set, this list will be empty.
             */
            effectiveFrequencyBreakdowns?:
                GoogleAdsGoogleadsV12Services__EffectiveFrequencyBreakdown[];
            /** Number of ad impressions that exactly matches the Targeting including co-viewers. */
            onTargetCoviewImpressions?:
                string;
            /** Number of unique people reached that exactly matches the Targeting including co-viewers. */
            onTargetCoviewReach?:
                string;
            /** Number of ad impressions that exactly matches the Targeting. */
            onTargetImpressions?:
                string;
            /**
             * Number of unique people reached at least GenerateReachForecastRequest.min_effective_frequency or GenerateReachForecastRequest.effective_frequency_limit times that exactly matches
             * the Targeting. Note that a minimum number of unique people must be reached in order for data to be reported. If the minimum number is not met, the on_target_reach value will be
             * rounded to 0.
             */
            onTargetReach?:
                string;
            /** Total number of ad impressions including co-viewers. This includes impressions that may fall outside the specified Targeting, due to insufficient information on signed-in users. */
            totalCoviewImpressions?:
                string;
            /** Number of unique people reached including co-viewers. This includes people that may fall outside the specified Targeting. */
            totalCoviewReach?:
                string;
            /** Total number of ad impressions. This includes impressions that may fall outside the specified Targeting, due to insufficient information on signed-in users. */
            totalImpressions?:
                string;
            /**
             * Total number of unique people reached at least GenerateReachForecastRequest.min_effective_frequency or GenerateReachForecastRequest.effective_frequency_limit times. This includes
             * people that may fall outside the specified Targeting. Note that a minimum number of unique people must be reached in order for data to be reported. If the minimum number is not met,
             * the total_reach value will be rounded to 0.
             */
            totalReach?:
                string;
            /**
             * Number of times the ad's impressions were considered viewable. See https://support.google.com/google-ads/answer/7029393 for more information about what makes an ad viewable and how
             * viewability is measured.
             */
            viewableImpressions?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ForecastMetricOptions {
            /** Indicates whether to include co-view metrics in the response forecast. */
            includeCoview?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__ForecastMetrics {
            /** AVG cpc */
            averageCpc?:
                string;
            /** Clicks */
            clicks?:
                number;
            /** Cost */
            costMicros?:
                string;
            /** Ctr */
            ctr?:
                number;
            /** Impressions */
            impressions?:
                number;
        }
        interface GoogleAdsGoogleadsV12Services__FrequencyCap {
            /** Required. The number of impressions, inclusive. */
            impressions?:
                number;
            /** Required. The type of time unit. */
            timeUnit?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__GclidDateTimePair {
            /**
             * The date time at which the original conversion for this adjustment occurred. The timezone must be specified. The format is "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01
             * 12:32:45-08:00".
             */
            conversionDateTime?:
                string;
            /** Google click ID (gclid) associated with the original conversion for this adjustment. */
            gclid?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__GenerateAdGroupThemesRequest {
            /** Required. A list of resource names of AdGroups to group keywords into. Resource name format: `customers/{customer_id}/adGroups/{ad_group_id}` */
            adGroups?:
                string[];
            /** Required. A list of keywords to group into the provided AdGroups. */
            keywords?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Services__GenerateAdGroupThemesResponse {
            /** A list of suggested AdGroup/keyword pairings. */
            adGroupKeywordSuggestions?:
                GoogleAdsGoogleadsV12Services__AdGroupKeywordSuggestion[];
            /** A list of provided AdGroups that could not be used as suggestions. */
            unusableAdGroups?:
                GoogleAdsGoogleadsV12Services__UnusableAdGroup[];
        }
        interface GoogleAdsGoogleadsV12Services__GenerateAudienceCompositionInsightsRequest {
            /** Required. The audience of interest for which insights are being requested. */
            audience?:
                GoogleAdsGoogleadsV12Services__InsightsAudience;
            /** The name of the customer being planned for. This is a user-defined value. */
            customerInsightsGroup?:
                string;
            /** The one-month range of historical data to use for insights, in the format "yyyy-mm". If unset, insights will be returned for the last thirty days of data. */
            dataMonth?:
                string;
            /** Required. The audience dimensions for which composition insights should be returned. */
            dimensions?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Services__GenerateAudienceCompositionInsightsResponse {
            /**
             * The contents of the insights report, organized into sections. Each section is associated with one of the AudienceInsightsDimension values in the request. There may be more than one
             * section per dimension.
             */
            sections?:
                GoogleAdsGoogleadsV12Services__AudienceCompositionSection[];
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Services__GenerateForecastCurveRequest {
        }
        interface GoogleAdsGoogleadsV12Services__GenerateForecastCurveResponse {
            /** List of forecast curves for the keyword plan campaign. One maximum. */
            campaignForecastCurves?:
                GoogleAdsGoogleadsV12Services__KeywordPlanCampaignForecastCurve[];
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Services__GenerateForecastMetricsRequest {
        }
        interface GoogleAdsGoogleadsV12Services__GenerateForecastMetricsResponse {
            /** List of ad group forecasts. */
            adGroupForecasts?:
                GoogleAdsGoogleadsV12Services__KeywordPlanAdGroupForecast[];
            /** List of campaign forecasts. One maximum. */
            campaignForecasts?:
                GoogleAdsGoogleadsV12Services__KeywordPlanCampaignForecast[];
            /** List of keyword forecasts. */
            keywordForecasts?:
                GoogleAdsGoogleadsV12Services__KeywordPlanKeywordForecast[];
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Services__GenerateForecastTimeSeriesRequest {
        }
        interface GoogleAdsGoogleadsV12Services__GenerateForecastTimeSeriesResponse {
            /** List of weekly time series forecasts for the keyword plan campaign. One maximum. */
            weeklyTimeSeriesForecasts?:
                GoogleAdsGoogleadsV12Services__KeywordPlanWeeklyTimeSeriesForecast[];
        }
        interface GoogleAdsGoogleadsV12Services__GenerateHistoricalMetricsRequest {
            /** The aggregate fields to include in response. */
            aggregateMetrics?:
                GoogleAdsGoogleadsV12Common__KeywordPlanAggregateMetrics;
            /** The options for historical metrics data. */
            historicalMetricsOptions?:
                GoogleAdsGoogleadsV12Common__HistoricalMetricsOptions;
        }
        interface GoogleAdsGoogleadsV12Services__GenerateHistoricalMetricsResponse {
            /** The aggregate metrics for all the keywords in the keyword planner plan. */
            aggregateMetricResults?:
                GoogleAdsGoogleadsV12Common__KeywordPlanAggregateMetricResults;
            /** List of keyword historical metrics. */
            metrics?:
                GoogleAdsGoogleadsV12Services__KeywordPlanKeywordHistoricalMetrics[];
        }
        interface GoogleAdsGoogleadsV12Services__GenerateInsightsFinderReportRequest {
            /** Required. A baseline audience for this report, typically all people in a region. */
            baselineAudience?:
                GoogleAdsGoogleadsV12Services__BasicInsightsAudience;
            /** The name of the customer being planned for. This is a user-defined value. */
            customerInsightsGroup?:
                string;
            /**
             * Required. The specific audience of interest for this report. The insights in the report will be based on attributes more prevalent in this audience than in the report's baseline
             * audience.
             */
            specificAudience?:
                GoogleAdsGoogleadsV12Services__BasicInsightsAudience;
        }
        interface GoogleAdsGoogleadsV12Services__GenerateInsightsFinderReportResponse {
            /** An HTTPS URL providing a deep link into the Insights Finder UI with the report inputs filled in according to the request. */
            savedReportUrl?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__GenerateKeywordHistoricalMetricsRequest {
            /** The aggregate fields to include in response. */
            aggregateMetrics?:
                GoogleAdsGoogleadsV12Common__KeywordPlanAggregateMetrics;
            /** The resource names of the location to target. Maximum is 10. An empty list MAY be used to specify all targeting geos. */
            geoTargetConstants?:
                string[];
            /** The options for historical metrics data. */
            historicalMetricsOptions?:
                GoogleAdsGoogleadsV12Common__HistoricalMetricsOptions;
            /** If true, adult keywords will be included in response. The default value is false. */
            includeAdultKeywords?:
                boolean;
            /** Targeting network. If not set, Google Search And Partners Network will be used. */
            keywordPlanNetwork?:
                string;
            /**
             * A list of keywords to get historical metrics. Not all inputs will be returned as a result of near-exact deduplication. For example, if stats for "car" and "cars" are requested, only
             * "car" will be returned. A maximum of 10,000 keywords can be used.
             */
            keywords?:
                string[];
            /**
             * The resource name of the language to target. Each keyword belongs to some set of languages; a keyword is included if language is one of its languages. If not set, all keywords will
             * be included.
             */
            language?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__GenerateKeywordHistoricalMetricsResponse {
            /** The aggregate metrics for all keywords. */
            aggregateMetricResults?:
                GoogleAdsGoogleadsV12Common__KeywordPlanAggregateMetricResults;
            /** List of keywords and their historical metrics. */
            results?:
                GoogleAdsGoogleadsV12Services__GenerateKeywordHistoricalMetricsResult[];
        }
        interface GoogleAdsGoogleadsV12Services__GenerateKeywordHistoricalMetricsResult {
            /** The list of close variants from the requested keywords whose stats are combined into this GenerateKeywordHistoricalMetricsResult. */
            closeVariants?:
                string[];
            /** The historical metrics for text and its close variants */
            keywordMetrics?:
                GoogleAdsGoogleadsV12Common__KeywordPlanHistoricalMetrics;
            /**
             * The text of the query associated with one or more keywords. Note that we de-dupe your keywords list, eliminating close variants before returning the keywords as text. For example,
             * if your request originally contained the keywords "car" and "cars", the returned search query will only contain "cars". The list of de-duped queries will be included in
             * close_variants field.
             */
            text?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__GenerateKeywordIdeaResponse {
            /** The aggregate metrics for all keyword ideas. */
            aggregateMetricResults?:
                GoogleAdsGoogleadsV12Common__KeywordPlanAggregateMetricResults;
            /**
             * Pagination token used to retrieve the next page of results. Pass the content of this string as the `page_token` attribute of the next request. `next_page_token` is not returned for
             * the last page.
             */
            nextPageToken?:
                string;
            /** Results of generating keyword ideas. */
            results?:
                GoogleAdsGoogleadsV12Services__GenerateKeywordIdeaResult[];
            /** Total number of results available. */
            totalSize?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__GenerateKeywordIdeaResult {
            /**
             * The list of close variants from the requested keywords that are combined into this GenerateKeywordIdeaResult. See https://support.google.com/google-ads/answer/9342105 for the
             * definition of "close variants".
             */
            closeVariants?:
                string[];
            /** The annotations for the keyword. The annotation data is only provided if requested. */
            keywordAnnotations?:
                GoogleAdsGoogleadsV12Common__KeywordAnnotations;
            /** The historical metrics for the keyword. */
            keywordIdeaMetrics?:
                GoogleAdsGoogleadsV12Common__KeywordPlanHistoricalMetrics;
            /**
             * Text of the keyword idea. As in Keyword Plan historical metrics, this text may not be an actual keyword, but the canonical form of multiple keywords. See
             * KeywordPlanKeywordHistoricalMetrics message in KeywordPlanService.
             */
            text?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__GenerateKeywordIdeasRequest {
            /** The aggregate fields to include in response. */
            aggregateMetrics?:
                GoogleAdsGoogleadsV12Common__KeywordPlanAggregateMetrics;
            /** The resource names of the location to target. Maximum is 10. An empty list MAY be used to specify all targeting geos. */
            geoTargetConstants?:
                string[];
            /** The options for historical metrics data. */
            historicalMetricsOptions?:
                GoogleAdsGoogleadsV12Common__HistoricalMetricsOptions;
            /** If true, adult keywords will be included in response. The default value is false. */
            includeAdultKeywords?:
                boolean;
            /** A Keyword and a specific Url to generate ideas from for example, cars, www.example.com/cars. */
            keywordAndUrlSeed?:
                GoogleAdsGoogleadsV12Services__KeywordAndUrlSeed;
            /** The keyword annotations to include in response. */
            keywordAnnotation?:
                string[];
            /** Targeting network. If not set, Google Search And Partners Network will be used. */
            keywordPlanNetwork?:
                string;
            /** A Keyword or phrase to generate ideas from, for example, cars. */
            keywordSeed?:
                GoogleAdsGoogleadsV12Services__KeywordSeed;
            /**
             * The resource name of the language to target. Each keyword belongs to some set of languages; a keyword is included if language is one of its languages. If not set, all keywords will
             * be included.
             */
            language?:
                string;
            /**
             * Number of results to retrieve in a single page. A maximum of 10,000 results may be returned, if the page_size exceeds this, it is ignored. If unspecified, at most 10,000 results
             * will be returned. The server may decide to further limit the number of returned resources. If the response contains fewer than 10,000 results it may not be assumed as last page of
             * results.
             */
            pageSize?:
                number;
            /**
             * Token of the page to retrieve. If not specified, the first page of results will be returned. To request next page of results use the value obtained from `next_page_token` in the
             * previous response. The request fields must match across pages.
             */
            pageToken?:
                string;
            /** The site to generate ideas from, for example, www.example.com. */
            siteSeed?:
                GoogleAdsGoogleadsV12Services__SiteSeed;
            /** A specific url to generate ideas from, for example, www.example.com/cars. */
            urlSeed?:
                GoogleAdsGoogleadsV12Services__UrlSeed;
        }
        interface GoogleAdsGoogleadsV12Services__GenerateReachForecastRequest {
            /** Required. Campaign duration. */
            campaignDuration?:
                GoogleAdsGoogleadsV12Services__CampaignDuration;
            /**
             * Chosen cookie frequency cap to be applied to each planned product. This is equivalent to the frequency cap exposed in Google Ads when creating a campaign, it represents the maximum
             * number of times an ad can be shown to the same user. If not specified, no cap is applied. This field is deprecated in v4 and will eventually be removed. Use
             * cookie_frequency_cap_setting instead.
             */
            cookieFrequencyCap?:
                number;
            /**
             * Chosen cookie frequency cap to be applied to each planned product. This is equivalent to the frequency cap exposed in Google Ads when creating a campaign, it represents the maximum
             * number of times an ad can be shown to the same user during a specified time interval. If not specified, a default of 0 (no cap) is applied. This field replaces the deprecated
             * cookie_frequency_cap field.
             */
            cookieFrequencyCapSetting?:
                GoogleAdsGoogleadsV12Services__FrequencyCap;
            /** The currency code. Three-character ISO 4217 currency code. */
            currencyCode?:
                string;
            /** The name of the customer being planned for. This is a user-defined value. */
            customerReachGroup?:
                string;
            /**
             * The highest minimum effective frequency (the number of times a person was exposed to the ad) value [1-10] to include in Forecast.effective_frequency_breakdowns. If not specified,
             * Forecast.effective_frequency_breakdowns will not be provided. The effective frequency value provided here will also be used as the minimum effective frequency for the reported reach
             * metrics. This field cannot be combined with the min_effective_frequency field.
             */
            effectiveFrequencyLimit?:
                GoogleAdsGoogleadsV12Services__EffectiveFrequencyLimit;
            /** Controls the forecast metrics returned in the response. */
            forecastMetricOptions?:
                GoogleAdsGoogleadsV12Services__ForecastMetricOptions;
            /**
             * Chosen minimum effective frequency (the number of times a person was exposed to the ad) for the reported reach metrics [1-10]. This won't affect the targeting, but just the
             * reporting. If not specified, a default of 1 is applied. This field cannot be combined with the effective_frequency_limit field.
             */
            minEffectiveFrequency?:
                number;
            /** Required. The products to be forecast. The max number of allowed planned products is 15. */
            plannedProducts?:
                GoogleAdsGoogleadsV12Services__PlannedProduct[];
            /**
             * The targeting to be applied to all products selected in the product mix. This is planned targeting: execution details might vary based on the advertising product, consult an
             * implementation specialist. See specific metrics for details on how targeting affects them.
             */
            targeting?:
                GoogleAdsGoogleadsV12Services__Targeting;
        }
        interface GoogleAdsGoogleadsV12Services__GenerateReachForecastResponse {
            /** Reference on target audiences for this curve. */
            onTargetAudienceMetrics?:
                GoogleAdsGoogleadsV12Services__OnTargetAudienceMetrics;
            /** The generated reach curve for the planned product mix. */
            reachCurve?:
                GoogleAdsGoogleadsV12Services__ReachCurve;
        }
        interface GoogleAdsGoogleadsV12Services__GeoTargetConstantSuggestion {
            /** The GeoTargetConstant result. */
            geoTargetConstant?:
                GoogleAdsGoogleadsV12Resources__GeoTargetConstant;
            /** The list of parents of the geo target constant. */
            geoTargetConstantParents?:
                GoogleAdsGoogleadsV12Resources__GeoTargetConstant[];
            /**
             * The language this GeoTargetConstantSuggestion is currently translated to. It affects the name of geo target fields. For example, if locale=en, then name=Spain. If locale=es, then
             * name=España. The default locale will be returned if no translation exists for the locale in the request.
             */
            locale?:
                string;
            /** Approximate user population that will be targeted, rounded to the nearest 100. */
            reach?:
                string;
            /** If the request searched by location name, this is the location name that matched the geo target. */
            searchTerm?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__GoogleAdsRow {
            /** The accessible bidding strategy referenced in the query. */
            accessibleBiddingStrategy?:
                GoogleAdsGoogleadsV12Resources__AccessibleBiddingStrategy;
            /** The account budget in the query. */
            accountBudget?:
                GoogleAdsGoogleadsV12Resources__AccountBudget;
            /** The account budget proposal referenced in the query. */
            accountBudgetProposal?:
                GoogleAdsGoogleadsV12Resources__AccountBudgetProposal;
            /** The AccountLink referenced in the query. */
            accountLink?:
                GoogleAdsGoogleadsV12Resources__AccountLink;
            /** The ad group referenced in the query. */
            adGroup?:
                GoogleAdsGoogleadsV12Resources__AdGroup;
            /** The ad referenced in the query. */
            adGroupAd?:
                GoogleAdsGoogleadsV12Resources__AdGroupAd;
            /** The ad group ad asset combination view in the query. */
            adGroupAdAssetCombinationView?:
                GoogleAdsGoogleadsV12Resources__AdGroupAdAssetCombinationView;
            /** The ad group ad asset view in the query. */
            adGroupAdAssetView?:
                GoogleAdsGoogleadsV12Resources__AdGroupAdAssetView;
            /** The ad group ad label referenced in the query. */
            adGroupAdLabel?:
                GoogleAdsGoogleadsV12Resources__AdGroupAdLabel;
            /** The ad group asset referenced in the query. */
            adGroupAsset?:
                GoogleAdsGoogleadsV12Resources__AdGroupAsset;
            /** The ad group asset set referenced in the query. */
            adGroupAssetSet?:
                GoogleAdsGoogleadsV12Resources__AdGroupAssetSet;
            /** The ad group audience view referenced in the query. */
            adGroupAudienceView?:
                GoogleAdsGoogleadsV12Resources__AdGroupAudienceView;
            /** The bid modifier referenced in the query. */
            adGroupBidModifier?:
                GoogleAdsGoogleadsV12Resources__AdGroupBidModifier;
            /** The criterion referenced in the query. */
            adGroupCriterion?:
                GoogleAdsGoogleadsV12Resources__AdGroupCriterion;
            /** The ad group criterion customizer referenced in the query. */
            adGroupCriterionCustomizer?:
                GoogleAdsGoogleadsV12Resources__AdGroupCriterionCustomizer;
            /** The ad group criterion label referenced in the query. */
            adGroupCriterionLabel?:
                GoogleAdsGoogleadsV12Resources__AdGroupCriterionLabel;
            /** The ad group criterion simulation referenced in the query. */
            adGroupCriterionSimulation?:
                GoogleAdsGoogleadsV12Resources__AdGroupCriterionSimulation;
            /** The ad group customizer referenced in the query. */
            adGroupCustomizer?:
                GoogleAdsGoogleadsV12Resources__AdGroupCustomizer;
            /** The ad group extension setting referenced in the query. */
            adGroupExtensionSetting?:
                GoogleAdsGoogleadsV12Resources__AdGroupExtensionSetting;
            /** The ad group feed referenced in the query. */
            adGroupFeed?:
                GoogleAdsGoogleadsV12Resources__AdGroupFeed;
            /** The ad group label referenced in the query. */
            adGroupLabel?:
                GoogleAdsGoogleadsV12Resources__AdGroupLabel;
            /** The ad group simulation referenced in the query. */
            adGroupSimulation?:
                GoogleAdsGoogleadsV12Resources__AdGroupSimulation;
            /** The ad parameter referenced in the query. */
            adParameter?:
                GoogleAdsGoogleadsV12Resources__AdParameter;
            /** The ad schedule view referenced in the query. */
            adScheduleView?:
                GoogleAdsGoogleadsV12Resources__AdScheduleView;
            /** The age range view referenced in the query. */
            ageRangeView?:
                GoogleAdsGoogleadsV12Resources__AgeRangeView;
            /** The asset referenced in the query. */
            asset?:
                GoogleAdsGoogleadsV12Resources__Asset;
            /** The asset field type view referenced in the query. */
            assetFieldTypeView?:
                GoogleAdsGoogleadsV12Resources__AssetFieldTypeView;
            /** The asset group referenced in the query. */
            assetGroup?:
                GoogleAdsGoogleadsV12Resources__AssetGroup;
            /** The asset group asset referenced in the query. */
            assetGroupAsset?:
                GoogleAdsGoogleadsV12Resources__AssetGroupAsset;
            /** The asset group listing group filter referenced in the query. */
            assetGroupListingGroupFilter?:
                GoogleAdsGoogleadsV12Resources__AssetGroupListingGroupFilter;
            /** The asset group product group view referenced in the query. */
            assetGroupProductGroupView?:
                GoogleAdsGoogleadsV12Resources__AssetGroupProductGroupView;
            /** The asset group signal referenced in the query. */
            assetGroupSignal?:
                GoogleAdsGoogleadsV12Resources__AssetGroupSignal;
            /** The asset set referenced in the query. */
            assetSet?:
                GoogleAdsGoogleadsV12Resources__AssetSet;
            /** The asset set asset referenced in the query. */
            assetSetAsset?:
                GoogleAdsGoogleadsV12Resources__AssetSetAsset;
            /** The asset set type view referenced in the query. */
            assetSetTypeView?:
                GoogleAdsGoogleadsV12Resources__AssetSetTypeView;
            /** The Audience referenced in the query. */
            audience?:
                GoogleAdsGoogleadsV12Resources__Audience;
            /** The batch job referenced in the query. */
            batchJob?:
                GoogleAdsGoogleadsV12Resources__BatchJob;
            /** The bidding data exclusion referenced in the query. */
            biddingDataExclusion?:
                GoogleAdsGoogleadsV12Resources__BiddingDataExclusion;
            /** The bidding seasonality adjustment referenced in the query. */
            biddingSeasonalityAdjustment?:
                GoogleAdsGoogleadsV12Resources__BiddingSeasonalityAdjustment;
            /** The bidding strategy referenced in the query. */
            biddingStrategy?:
                GoogleAdsGoogleadsV12Resources__BiddingStrategy;
            /** The bidding strategy simulation referenced in the query. */
            biddingStrategySimulation?:
                GoogleAdsGoogleadsV12Resources__BiddingStrategySimulation;
            /** The billing setup referenced in the query. */
            billingSetup?:
                GoogleAdsGoogleadsV12Resources__BillingSetup;
            /** The call view referenced in the query. */
            callView?:
                GoogleAdsGoogleadsV12Resources__CallView;
            /** The campaign referenced in the query. */
            campaign?:
                GoogleAdsGoogleadsV12Resources__Campaign;
            /** The campaign asset referenced in the query. */
            campaignAsset?:
                GoogleAdsGoogleadsV12Resources__CampaignAsset;
            /** The campaign asset set referenced in the query. */
            campaignAssetSet?:
                GoogleAdsGoogleadsV12Resources__CampaignAssetSet;
            /** The campaign audience view referenced in the query. */
            campaignAudienceView?:
                GoogleAdsGoogleadsV12Resources__CampaignAudienceView;
            /** The campaign bid modifier referenced in the query. */
            campaignBidModifier?:
                GoogleAdsGoogleadsV12Resources__CampaignBidModifier;
            /** The campaign budget referenced in the query. */
            campaignBudget?:
                GoogleAdsGoogleadsV12Resources__CampaignBudget;
            /** The CampaignConversionGoal referenced in the query. */
            campaignConversionGoal?:
                GoogleAdsGoogleadsV12Resources__CampaignConversionGoal;
            /** The campaign criterion referenced in the query. */
            campaignCriterion?:
                GoogleAdsGoogleadsV12Resources__CampaignCriterion;
            /** The campaign criterion simulation referenced in the query. */
            campaignCriterionSimulation?:
                GoogleAdsGoogleadsV12Resources__CampaignCriterionSimulation;
            /** The campaign customizer referenced in the query. */
            campaignCustomizer?:
                GoogleAdsGoogleadsV12Resources__CampaignCustomizer;
            /** The campaign draft referenced in the query. */
            campaignDraft?:
                GoogleAdsGoogleadsV12Resources__CampaignDraft;
            /** The campaign extension setting referenced in the query. */
            campaignExtensionSetting?:
                GoogleAdsGoogleadsV12Resources__CampaignExtensionSetting;
            /** The campaign feed referenced in the query. */
            campaignFeed?:
                GoogleAdsGoogleadsV12Resources__CampaignFeed;
            /** Campaign Group referenced in AWQL query. */
            campaignGroup?:
                GoogleAdsGoogleadsV12Resources__CampaignGroup;
            /** The campaign label referenced in the query. */
            campaignLabel?:
                GoogleAdsGoogleadsV12Resources__CampaignLabel;
            /** Campaign Shared Set referenced in AWQL query. */
            campaignSharedSet?:
                GoogleAdsGoogleadsV12Resources__CampaignSharedSet;
            /** The campaign simulation referenced in the query. */
            campaignSimulation?:
                GoogleAdsGoogleadsV12Resources__CampaignSimulation;
            /** The carrier constant referenced in the query. */
            carrierConstant?:
                GoogleAdsGoogleadsV12Resources__CarrierConstant;
            /** The ChangeEvent referenced in the query. */
            changeEvent?:
                GoogleAdsGoogleadsV12Resources__ChangeEvent;
            /** The ChangeStatus referenced in the query. */
            changeStatus?:
                GoogleAdsGoogleadsV12Resources__ChangeStatus;
            /** The ClickView referenced in the query. */
            clickView?:
                GoogleAdsGoogleadsV12Resources__ClickView;
            /** The CombinedAudience referenced in the query. */
            combinedAudience?:
                GoogleAdsGoogleadsV12Resources__CombinedAudience;
            /** The conversion action referenced in the query. */
            conversionAction?:
                GoogleAdsGoogleadsV12Resources__ConversionAction;
            /** The conversion custom variable referenced in the query. */
            conversionCustomVariable?:
                GoogleAdsGoogleadsV12Resources__ConversionCustomVariable;
            /** The ConversionGoalCampaignConfig referenced in the query. */
            conversionGoalCampaignConfig?:
                GoogleAdsGoogleadsV12Resources__ConversionGoalCampaignConfig;
            /** The conversion value rule referenced in the query. */
            conversionValueRule?:
                GoogleAdsGoogleadsV12Resources__ConversionValueRule;
            /** The conversion value rule set referenced in the query. */
            conversionValueRuleSet?:
                GoogleAdsGoogleadsV12Resources__ConversionValueRuleSet;
            /** The currency constant referenced in the query. */
            currencyConstant?:
                GoogleAdsGoogleadsV12Resources__CurrencyConstant;
            /** The CustomAudience referenced in the query. */
            customAudience?:
                GoogleAdsGoogleadsV12Resources__CustomAudience;
            /** The CustomConversionGoal referenced in the query. */
            customConversionGoal?:
                GoogleAdsGoogleadsV12Resources__CustomConversionGoal;
            /** The customer referenced in the query. */
            customer?:
                GoogleAdsGoogleadsV12Resources__Customer;
            /** The customer asset referenced in the query. */
            customerAsset?:
                GoogleAdsGoogleadsV12Resources__CustomerAsset;
            /** The customer asset set referenced in the query. */
            customerAssetSet?:
                GoogleAdsGoogleadsV12Resources__CustomerAssetSet;
            /** The CustomerClient referenced in the query. */
            customerClient?:
                GoogleAdsGoogleadsV12Resources__CustomerClient;
            /** The CustomerClientLink referenced in the query. */
            customerClientLink?:
                GoogleAdsGoogleadsV12Resources__CustomerClientLink;
            /** The CustomerConversionGoal referenced in the query. */
            customerConversionGoal?:
                GoogleAdsGoogleadsV12Resources__CustomerConversionGoal;
            /** The customer customizer referenced in the query. */
            customerCustomizer?:
                GoogleAdsGoogleadsV12Resources__CustomerCustomizer;
            /** The customer extension setting referenced in the query. */
            customerExtensionSetting?:
                GoogleAdsGoogleadsV12Resources__CustomerExtensionSetting;
            /** The customer feed referenced in the query. */
            customerFeed?:
                GoogleAdsGoogleadsV12Resources__CustomerFeed;
            /** The customer label referenced in the query. */
            customerLabel?:
                GoogleAdsGoogleadsV12Resources__CustomerLabel;
            /** The CustomerManagerLink referenced in the query. */
            customerManagerLink?:
                GoogleAdsGoogleadsV12Resources__CustomerManagerLink;
            /** The customer negative criterion referenced in the query. */
            customerNegativeCriterion?:
                GoogleAdsGoogleadsV12Resources__CustomerNegativeCriterion;
            /** The CustomerUserAccess referenced in the query. */
            customerUserAccess?:
                GoogleAdsGoogleadsV12Resources__CustomerUserAccess;
            /** The CustomerUserAccessInvitation referenced in the query. */
            customerUserAccessInvitation?:
                GoogleAdsGoogleadsV12Resources__CustomerUserAccessInvitation;
            /** The CustomInterest referenced in the query. */
            customInterest?:
                GoogleAdsGoogleadsV12Resources__CustomInterest;
            /** The customizer attribute referenced in the query. */
            customizerAttribute?:
                GoogleAdsGoogleadsV12Resources__CustomizerAttribute;
            /** The detailed demographic referenced in the query. */
            detailedDemographic?:
                GoogleAdsGoogleadsV12Resources__DetailedDemographic;
            /** The detail placement view referenced in the query. */
            detailPlacementView?:
                GoogleAdsGoogleadsV12Resources__DetailPlacementView;
            /** The display keyword view referenced in the query. */
            displayKeywordView?:
                GoogleAdsGoogleadsV12Resources__DisplayKeywordView;
            /** The distance view referenced in the query. */
            distanceView?:
                GoogleAdsGoogleadsV12Resources__DistanceView;
            /** The domain category referenced in the query. */
            domainCategory?:
                GoogleAdsGoogleadsV12Resources__DomainCategory;
            /** The dynamic search ads search term view referenced in the query. */
            dynamicSearchAdsSearchTermView?:
                GoogleAdsGoogleadsV12Resources__DynamicSearchAdsSearchTermView;
            /** The expanded landing page view referenced in the query. */
            expandedLandingPageView?:
                GoogleAdsGoogleadsV12Resources__ExpandedLandingPageView;
            /** The experiment referenced in the query. */
            experiment?:
                GoogleAdsGoogleadsV12Resources__Experiment;
            /** The experiment arm referenced in the query. */
            experimentArm?:
                GoogleAdsGoogleadsV12Resources__ExperimentArm;
            /** The extension feed item referenced in the query. */
            extensionFeedItem?:
                GoogleAdsGoogleadsV12Resources__ExtensionFeedItem;
            /** The feed referenced in the query. */
            feed?:
                GoogleAdsGoogleadsV12Resources__Feed;
            /** The feed item referenced in the query. */
            feedItem?:
                GoogleAdsGoogleadsV12Resources__FeedItem;
            /** The feed item set referenced in the query. */
            feedItemSet?:
                GoogleAdsGoogleadsV12Resources__FeedItemSet;
            /** The feed item set link referenced in the query. */
            feedItemSetLink?:
                GoogleAdsGoogleadsV12Resources__FeedItemSetLink;
            /** The feed item target referenced in the query. */
            feedItemTarget?:
                GoogleAdsGoogleadsV12Resources__FeedItemTarget;
            /** The feed mapping referenced in the query. */
            feedMapping?:
                GoogleAdsGoogleadsV12Resources__FeedMapping;
            /** The feed placeholder view referenced in the query. */
            feedPlaceholderView?:
                GoogleAdsGoogleadsV12Resources__FeedPlaceholderView;
            /** The gender view referenced in the query. */
            genderView?:
                GoogleAdsGoogleadsV12Resources__GenderView;
            /** The geographic view referenced in the query. */
            geographicView?:
                GoogleAdsGoogleadsV12Resources__GeographicView;
            /** The geo target constant referenced in the query. */
            geoTargetConstant?:
                GoogleAdsGoogleadsV12Resources__GeoTargetConstant;
            /** The group placement view referenced in the query. */
            groupPlacementView?:
                GoogleAdsGoogleadsV12Resources__GroupPlacementView;
            /** The hotel group view referenced in the query. */
            hotelGroupView?:
                GoogleAdsGoogleadsV12Resources__HotelGroupView;
            /** The hotel performance view referenced in the query. */
            hotelPerformanceView?:
                GoogleAdsGoogleadsV12Resources__HotelPerformanceView;
            /** The hotel reconciliation referenced in the query. */
            hotelReconciliation?:
                GoogleAdsGoogleadsV12Resources__HotelReconciliation;
            /** The income range view referenced in the query. */
            incomeRangeView?:
                GoogleAdsGoogleadsV12Resources__IncomeRangeView;
            /** The keyword plan referenced in the query. */
            keywordPlan?:
                GoogleAdsGoogleadsV12Resources__KeywordPlan;
            /** The keyword plan ad group referenced in the query. */
            keywordPlanAdGroup?:
                GoogleAdsGoogleadsV12Resources__KeywordPlanAdGroup;
            /** The keyword plan ad group referenced in the query. */
            keywordPlanAdGroupKeyword?:
                GoogleAdsGoogleadsV12Resources__KeywordPlanAdGroupKeyword;
            /** The keyword plan campaign referenced in the query. */
            keywordPlanCampaign?:
                GoogleAdsGoogleadsV12Resources__KeywordPlanCampaign;
            /** The keyword plan campaign keyword referenced in the query. */
            keywordPlanCampaignKeyword?:
                GoogleAdsGoogleadsV12Resources__KeywordPlanCampaignKeyword;
            /** The keyword theme constant referenced in the query. */
            keywordThemeConstant?:
                GoogleAdsGoogleadsV12Resources__KeywordThemeConstant;
            /** The keyword view referenced in the query. */
            keywordView?:
                GoogleAdsGoogleadsV12Resources__KeywordView;
            /** The label referenced in the query. */
            label?:
                GoogleAdsGoogleadsV12Resources__Label;
            /** The landing page view referenced in the query. */
            landingPageView?:
                GoogleAdsGoogleadsV12Resources__LandingPageView;
            /** The language constant referenced in the query. */
            languageConstant?:
                GoogleAdsGoogleadsV12Resources__LanguageConstant;
            /** The lead form user submission referenced in the query. */
            leadFormSubmissionData?:
                GoogleAdsGoogleadsV12Resources__LeadFormSubmissionData;
            /** The life event referenced in the query. */
            lifeEvent?:
                GoogleAdsGoogleadsV12Resources__LifeEvent;
            /** The location view referenced in the query. */
            locationView?:
                GoogleAdsGoogleadsV12Resources__LocationView;
            /** The managed placement view referenced in the query. */
            managedPlacementView?:
                GoogleAdsGoogleadsV12Resources__ManagedPlacementView;
            /** The media file referenced in the query. */
            mediaFile?:
                GoogleAdsGoogleadsV12Resources__MediaFile;
            /** The metrics. */
            metrics?:
                GoogleAdsGoogleadsV12Common__Metrics;
            /** The mobile app category constant referenced in the query. */
            mobileAppCategoryConstant?:
                GoogleAdsGoogleadsV12Resources__MobileAppCategoryConstant;
            /** The mobile device constant referenced in the query. */
            mobileDeviceConstant?:
                GoogleAdsGoogleadsV12Resources__MobileDeviceConstant;
            /** The offline user data job referenced in the query. */
            offlineUserDataJob?:
                GoogleAdsGoogleadsV12Resources__OfflineUserDataJob;
            /** The operating system version constant referenced in the query. */
            operatingSystemVersionConstant?:
                GoogleAdsGoogleadsV12Resources__OperatingSystemVersionConstant;
            /** The paid organic search term view referenced in the query. */
            paidOrganicSearchTermView?:
                GoogleAdsGoogleadsV12Resources__PaidOrganicSearchTermView;
            /** The parental status view referenced in the query. */
            parentalStatusView?:
                GoogleAdsGoogleadsV12Resources__ParentalStatusView;
            /** The per store view referenced in the query. */
            perStoreView?:
                GoogleAdsGoogleadsV12Resources__PerStoreView;
            /** The Product Bidding Category referenced in the query. */
            productBiddingCategoryConstant?:
                GoogleAdsGoogleadsV12Resources__ProductBiddingCategoryConstant;
            /** The product group view referenced in the query. */
            productGroupView?:
                GoogleAdsGoogleadsV12Resources__ProductGroupView;
            /** The recommendation referenced in the query. */
            recommendation?:
                GoogleAdsGoogleadsV12Resources__Recommendation;
            /** The remarketing action referenced in the query. */
            remarketingAction?:
                GoogleAdsGoogleadsV12Resources__RemarketingAction;
            /** The search term view referenced in the query. */
            searchTermView?:
                GoogleAdsGoogleadsV12Resources__SearchTermView;
            /** The segments. */
            segments?:
                GoogleAdsGoogleadsV12Common__Segments;
            /** The shared set referenced in the query. */
            sharedCriterion?:
                GoogleAdsGoogleadsV12Resources__SharedCriterion;
            /** The shared set referenced in the query. */
            sharedSet?:
                GoogleAdsGoogleadsV12Resources__SharedSet;
            /** The shopping performance view referenced in the query. */
            shoppingPerformanceView?:
                GoogleAdsGoogleadsV12Resources__ShoppingPerformanceView;
            /** The Smart campaign search term view referenced in the query. */
            smartCampaignSearchTermView?:
                GoogleAdsGoogleadsV12Resources__SmartCampaignSearchTermView;
            /** The Smart campaign setting referenced in the query. */
            smartCampaignSetting?:
                GoogleAdsGoogleadsV12Resources__SmartCampaignSetting;
            /** The AccountLink referenced in the query. */
            thirdPartyAppAnalyticsLink?:
                GoogleAdsGoogleadsV12Resources__ThirdPartyAppAnalyticsLink;
            /** The topic constant referenced in the query. */
            topicConstant?:
                GoogleAdsGoogleadsV12Resources__TopicConstant;
            /** The topic view referenced in the query. */
            topicView?:
                GoogleAdsGoogleadsV12Resources__TopicView;
            /** The user interest referenced in the query. */
            userInterest?:
                GoogleAdsGoogleadsV12Resources__UserInterest;
            /** The user list referenced in the query. */
            userList?:
                GoogleAdsGoogleadsV12Resources__UserList;
            /** The user location view referenced in the query. */
            userLocationView?:
                GoogleAdsGoogleadsV12Resources__UserLocationView;
            /** The video referenced in the query. */
            video?:
                GoogleAdsGoogleadsV12Resources__Video;
            /** The webpage view referenced in the query. */
            webpageView?:
                GoogleAdsGoogleadsV12Resources__WebpageView;
        }
        interface GoogleAdsGoogleadsV12Services__GraduateExperimentRequest {
            /**
             * Required. List of campaign budget mappings for graduation. Each campaign that appears here will graduate, and will be assigned a new budget that is paired with it in the mapping.
             * The maximum size is one.
             */
            campaignBudgetMappings?:
                GoogleAdsGoogleadsV12Services__CampaignBudgetMapping[];
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__InsightsAudience {
            /** Age ranges for the audience. If absent, the audience represents all people over 18 that match the other attributes. */
            ageRanges?:
                GoogleAdsGoogleadsV12Common__AgeRangeInfo[];
            /** Required. The countries for the audience. */
            countryLocations?:
                GoogleAdsGoogleadsV12Common__LocationInfo[];
            /** Dynamic lineups representing the YouTube content viewed by the audience. */
            dynamicLineups?:
                GoogleAdsGoogleadsV12Services__AudienceInsightsDynamicLineup[];
            /** Gender for the audience. If absent, the audience does not restrict by gender. */
            gender?:
                GoogleAdsGoogleadsV12Common__GenderInfo;
            /** Household income percentile ranges for the audience. If absent, the audience does not restrict by household income range. */
            incomeRanges?:
                GoogleAdsGoogleadsV12Common__IncomeRangeInfo[];
            /** Parental status for the audience. If absent, the audience does not restrict by parental status. */
            parentalStatus?:
                GoogleAdsGoogleadsV12Common__ParentalStatusInfo;
            /**
             * Sub-country geographic location attributes. If present, each of these must be contained in one of the countries in this audience. If absent, the audience is geographically to the
             * country_locations and no further.
             */
            subCountryLocations?:
                GoogleAdsGoogleadsV12Common__LocationInfo[];
            /**
             * A combination of entity, category and user interest attributes defining the audience. The combination has a logical AND-of-ORs structure: Attributes within each
             * InsightsAudienceAttributeGroup are combined with OR, and the combinations themselves are combined together with AND. For example, the expression (Entity OR Affinity) AND (In-Market
             * OR Category) can be formed using two InsightsAudienceAttributeGroups with two Attributes each.
             */
            topicAudienceCombinations?:
                GoogleAdsGoogleadsV12Services__InsightsAudienceAttributeGroup[];
        }
        interface GoogleAdsGoogleadsV12Services__InsightsAudienceAttributeGroup {
            /**
             * Required. A collection of audience attributes to be combined with logical OR. Attributes need not all be the same dimension. Only Knowledge Graph entities, Product & Service
             * Categories, and Affinity and In-Market audiences are supported in this context.
             */
            attributes?:
                GoogleAdsGoogleadsV12Services__AudienceInsightsAttribute[];
        }
        interface GoogleAdsGoogleadsV12Services__KeywordAndUrlSeed {
            /** Requires at least one keyword. */
            keywords?:
                string[];
            /** The URL to crawl in order to generate keyword ideas. */
            url?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__KeywordPlanAdGroupForecast {
            /** The forecast for the Keyword Plan ad group. */
            adGroupForecast?:
                GoogleAdsGoogleadsV12Services__ForecastMetrics;
            /** The resource name of the Keyword Plan ad group related to the forecast. `customers/{customer_id}/keywordPlanAdGroups/{keyword_plan_ad_group_id}` */
            keywordPlanAdGroup?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__KeywordPlanAdGroupKeywordOperation {
            /** Create operation: No resource name is expected for the new Keyword Plan ad group keyword. */
            create?:
                GoogleAdsGoogleadsV12Resources__KeywordPlanAdGroupKeyword;
            /**
             * Remove operation: A resource name for the removed Keyword Plan ad group keyword is expected, in this format:
             * `customers/{customer_id}/keywordPlanAdGroupKeywords/{kp_ad_group_keyword_id}`
             */
            remove?:
                string;
            /** Update operation: The Keyword Plan ad group keyword is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__KeywordPlanAdGroupKeyword;
            /** The FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__KeywordPlanAdGroupOperation {
            /** Create operation: No resource name is expected for the new Keyword Plan ad group. */
            create?:
                GoogleAdsGoogleadsV12Resources__KeywordPlanAdGroup;
            /** Remove operation: A resource name for the removed Keyword Plan ad group is expected, in this format: `customers/{customer_id}/keywordPlanAdGroups/{kp_ad_group_id}` */
            remove?:
                string;
            /** Update operation: The Keyword Plan ad group is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__KeywordPlanAdGroup;
            /** The FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__KeywordPlanCampaignForecast {
            /** The forecast for the Keyword Plan campaign. */
            campaignForecast?:
                GoogleAdsGoogleadsV12Services__ForecastMetrics;
            /** The resource name of the Keyword Plan campaign related to the forecast. `customers/{customer_id}/keywordPlanCampaigns/{keyword_plan_campaign_id}` */
            keywordPlanCampaign?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__KeywordPlanCampaignForecastCurve {
            /** The resource name of the Keyword Plan campaign related to the forecast. `customers/{customer_id}/keywordPlanCampaigns/{keyword_plan_campaign_id}` */
            keywordPlanCampaign?:
                string;
            /** The max cpc bid forecast curve for the campaign. */
            maxCpcBidForecastCurve?:
                GoogleAdsGoogleadsV12Services__KeywordPlanMaxCpcBidForecastCurve;
        }
        interface GoogleAdsGoogleadsV12Services__KeywordPlanCampaignKeywordOperation {
            /** Create operation: No resource name is expected for the new Keyword Plan campaign keyword. */
            create?:
                GoogleAdsGoogleadsV12Resources__KeywordPlanCampaignKeyword;
            /**
             * Remove operation: A resource name for the removed Keyword Plan campaign keywords expected in this format:
             * `customers/{customer_id}/keywordPlanCampaignKeywords/{kp_campaign_keyword_id}`
             */
            remove?:
                string;
            /** Update operation: The Keyword Plan campaign keyword expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__KeywordPlanCampaignKeyword;
            /** The FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__KeywordPlanCampaignOperation {
            /** Create operation: No resource name is expected for the new Keyword Plan campaign. */
            create?:
                GoogleAdsGoogleadsV12Resources__KeywordPlanCampaign;
            /** Remove operation: A resource name for the removed Keyword Plan campaign is expected, in this format: `customers/{customer_id}/keywordPlanCampaigns/{keywordPlan_campaign_id}` */
            remove?:
                string;
            /** Update operation: The Keyword Plan campaign is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__KeywordPlanCampaign;
            /** The FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__KeywordPlanKeywordForecast {
            /** The forecast for the Keyword Plan keyword. */
            keywordForecast?:
                GoogleAdsGoogleadsV12Services__ForecastMetrics;
            /** The resource name of the Keyword Plan keyword related to the forecast. `customers/{customer_id}/keywordPlanAdGroupKeywords/{keyword_plan_ad_group_keyword_id}` */
            keywordPlanAdGroupKeyword?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__KeywordPlanKeywordHistoricalMetrics {
            /** The list of close variant queries for search_query whose search results are combined into the search_query. */
            closeVariants?:
                string[];
            /** The historical metrics for the query associated with one or more ad_group_keywords in the plan. */
            keywordMetrics?:
                GoogleAdsGoogleadsV12Common__KeywordPlanHistoricalMetrics;
            /**
             * The text of the query associated with one or more ad_group_keywords in the plan. Note that we de-dupe your keywords list, eliminating close variants before returning the plan's
             * keywords as text. For example, if your plan originally contained the keywords 'car' and 'cars', the returned search query will only contain 'cars'. Starting V5, the list of de-duped
             * queries will be included in close_variants field.
             */
            searchQuery?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__KeywordPlanMaxCpcBidForecast {
            /** The forecast for the Keyword Plan campaign at the specific bid. */
            maxCpcBidForecast?:
                GoogleAdsGoogleadsV12Services__ForecastMetrics;
            /** The max cpc bid in micros. */
            maxCpcBidMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__KeywordPlanMaxCpcBidForecastCurve {
            /** The forecasts for the Keyword Plan campaign at different max CPC bids. */
            maxCpcBidForecasts?:
                GoogleAdsGoogleadsV12Services__KeywordPlanMaxCpcBidForecast[];
        }
        interface GoogleAdsGoogleadsV12Services__KeywordPlanOperation {
            /** Create operation: No resource name is expected for the new keyword plan. */
            create?:
                GoogleAdsGoogleadsV12Resources__KeywordPlan;
            /** Remove operation: A resource name for the removed keyword plan is expected in this format: `customers/{customer_id}/keywordPlans/{keyword_plan_id}` */
            remove?:
                string;
            /** Update operation: The keyword plan is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__KeywordPlan;
            /** The FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__KeywordPlanWeeklyForecast {
            /** The forecast for the Keyword Plan campaign for the week. */
            forecast?:
                GoogleAdsGoogleadsV12Services__ForecastMetrics;
            /** The start date, in yyyy-mm-dd format. This date is inclusive. */
            startDate?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__KeywordPlanWeeklyTimeSeriesForecast {
            /** The resource name of the Keyword Plan campaign related to the forecast. `customers/{customer_id}/keywordPlanCampaigns/{keyword_plan_campaign_id}` */
            keywordPlanCampaign?:
                string;
            /** The forecasts for the Keyword Plan campaign at different max CPC bids. */
            weeklyForecasts?:
                GoogleAdsGoogleadsV12Services__KeywordPlanWeeklyForecast[];
        }
        interface GoogleAdsGoogleadsV12Services__KeywordSeed {
            /** Requires at least one keyword. */
            keywords?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Services__LabelOperation {
            /** Create operation: No resource name is expected for the new label. */
            create?:
                GoogleAdsGoogleadsV12Resources__Label;
            /** Remove operation: A resource name for the label being removed, in this format: `customers/{customer_id}/labels/{label_id}` */
            remove?:
                string;
            /** Update operation: The label is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__Label;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ListAccessibleCustomersResponse {
            /** Resource name of customers directly accessible by the user authenticating the call. */
            resourceNames?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Services__ListAudienceInsightsAttributesRequest {
            /** The name of the customer being planned for. This is a user-defined value. */
            customerInsightsGroup?:
                string;
            /** Required. The types of attributes to be returned. */
            dimensions?:
                string[];
            /**
             * If SUB_COUNTRY_LOCATION attributes are one of the requested dimensions and this field is present, then the SUB_COUNTRY_LOCATION attributes returned will be located in these
             * countries. If this field is absent, then location attributes are not filtered by country. Setting this field when SUB_COUNTRY_LOCATION attributes are not requested will return an
             * error.
             */
            locationCountryFilters?:
                GoogleAdsGoogleadsV12Common__LocationInfo[];
            /**
             * Required. A free text query. If the requested dimensions include Attributes CATEGORY or KNOWLEDGE_GRAPH, then the attributes returned for those dimensions will match or be related
             * to this string. For other dimensions, this field is ignored and all available attributes are returned.
             */
            queryText?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ListAudienceInsightsAttributesResponse {
            /** The attributes matching the search query. */
            attributes?:
                GoogleAdsGoogleadsV12Services__AudienceInsightsAttributeMetadata[];
        }
        interface GoogleAdsGoogleadsV12Services__ListBatchJobResultsResponse {
            /**
             * Pagination token used to retrieve the next page of results. Pass the content of this string as the `page_token` attribute of the next request. `next_page_token` is not returned for
             * the last page.
             */
            nextPageToken?:
                string;
            /** The list of rows that matched the query. */
            results?:
                GoogleAdsGoogleadsV12Services__BatchJobResult[];
        }
        interface GoogleAdsGoogleadsV12Services__ListCampaignDraftAsyncErrorsResponse {
            /** Details of the errors when performing the asynchronous operation. */
            errors?:
                GoogleRpc__Status[];
            /**
             * Pagination token used to retrieve the next page of results. Pass the content of this string as the `page_token` attribute of the next request. `next_page_token` is not returned for
             * the last page.
             */
            nextPageToken?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ListExperimentAsyncErrorsResponse {
            /** details of the errors when performing the asynchronous operation. */
            errors?:
                GoogleRpc__Status[];
            /**
             * Pagination token used to retrieve the next page of results. Pass the content of this string as the `page_token` attribute of the next request. `next_page_token` is not returned for
             * the last page.
             */
            nextPageToken?:
                string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Services__ListInsightsEligibleDatesRequest {
        }
        interface GoogleAdsGoogleadsV12Services__ListInsightsEligibleDatesResponse {
            /** The months for which AudienceInsights data is currently available, each represented as a string in the form "YYYY-MM". */
            dataMonths?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Services__ListInvoicesResponse {
            /** The list of invoices that match the billing setup and time period. */
            invoices?:
                GoogleAdsGoogleadsV12Resources__Invoice[];
        }
        interface GoogleAdsGoogleadsV12Services__ListMerchantCenterLinksResponse {
            /** Merchant Center links available for the requested customer */
            merchantCenterLinks?:
                GoogleAdsGoogleadsV12Resources__MerchantCenterLink[];
        }
        interface GoogleAdsGoogleadsV12Services__ListPaymentsAccountsResponse {
            /** The list of accessible payments accounts. */
            paymentsAccounts?:
                GoogleAdsGoogleadsV12Resources__PaymentsAccount[];
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Services__ListPlannableLocationsRequest {
        }
        interface GoogleAdsGoogleadsV12Services__ListPlannableLocationsResponse {
            /** The list of locations available for planning. See https://developers.google.com/google-ads/api/reference/data/geotargets for sample locations. */
            plannableLocations?:
                GoogleAdsGoogleadsV12Services__PlannableLocation[];
        }
        interface GoogleAdsGoogleadsV12Services__ListPlannableProductsRequest {
            /** Required. The ID of the selected location for planning. To list the available plannable location IDs use ReachPlanService.ListPlannableLocations. */
            plannableLocationId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ListPlannableProductsResponse {
            /** The list of products available for planning and related targeting metadata. */
            productMetadata?:
                GoogleAdsGoogleadsV12Services__ProductMetadata[];
        }
        interface GoogleAdsGoogleadsV12Services__LocationAttributeMetadata {
            /** The country location of the sub country location. */
            countryLocation?:
                GoogleAdsGoogleadsV12Common__LocationInfo;
        }
        interface GoogleAdsGoogleadsV12Services__MediaFileOperation {
            /** Create operation: No resource name is expected for the new media file. */
            create?:
                GoogleAdsGoogleadsV12Resources__MediaFile;
        }
        interface GoogleAdsGoogleadsV12Services__MerchantCenterLinkOperation {
            /** Remove operation: A resource name for the removed merchant center link is expected, in this format: `customers/{customer_id}/merchantCenterLinks/{merchant_center_id}` */
            remove?:
                string;
            /** Update operation: The merchant center link is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__MerchantCenterLink;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MoveManagerLinkRequest {
            /** Required. The resource name of the new manager customer that the client wants to move to. Customer resource names have the format: "customers/{customer_id}" */
            newManager?:
                string;
            /**
             * Required. The resource name of the previous CustomerManagerLink. The resource name has the form:
             * `customers/{customer_id}/customerManagerLinks/{manager_customer_id}~{manager_link_id}`
             */
            previousCustomerManagerLink?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MoveManagerLinkResponse {
            /** Returned for successful operations. Represents a CustomerManagerLink resource of the newly created link between client customer and new manager customer. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAccountBudgetProposalRequest {
            /** Required. The operation to perform on an individual account-level budget proposal. */
            operation?:
                GoogleAdsGoogleadsV12Services__AccountBudgetProposalOperation;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAccountBudgetProposalResponse {
            /** The result of the mutate. */
            result?:
                GoogleAdsGoogleadsV12Services__MutateAccountBudgetProposalResult;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAccountBudgetProposalResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAccountLinkRequest {
            /** Required. The operation to perform on the link. */
            operation?:
                GoogleAdsGoogleadsV12Services__AccountLinkOperation;
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAccountLinkResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** Result for the mutate. */
            result?:
                GoogleAdsGoogleadsV12Services__MutateAccountLinkResult;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAccountLinkResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupAdLabelResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupAdLabelsRequest {
            /** Required. The list of operations to perform on ad group ad labels. */
            operations?:
                GoogleAdsGoogleadsV12Services__AdGroupAdLabelOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupAdLabelsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupAdLabelResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupAdResult {
            /** The mutated ad group ad with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            adGroupAd?:
                GoogleAdsGoogleadsV12Resources__AdGroupAd;
            /** The resource name returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupAdsRequest {
            /** Required. The list of operations to perform on individual ads. */
            operations?:
                GoogleAdsGoogleadsV12Services__AdGroupAdOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupAdsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupAdResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupAssetResult {
            /** The mutated ad group asset with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            adGroupAsset?:
                GoogleAdsGoogleadsV12Resources__AdGroupAsset;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupAssetSetResult {
            /** The mutated ad group asset set with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            adGroupAssetSet?:
                GoogleAdsGoogleadsV12Resources__AdGroupAssetSet;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupAssetSetsRequest {
            /** Required. The list of operations to perform on individual ad group asset sets. */
            operations?:
                GoogleAdsGoogleadsV12Services__AdGroupAssetSetOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupAssetSetsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (e.g. auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupAssetSetResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupAssetsRequest {
            /** Required. The list of operations to perform on individual ad group assets. */
            operations?:
                GoogleAdsGoogleadsV12Services__AdGroupAssetOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupAssetsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupAssetResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupBidModifierResult {
            /** The mutated ad group bid modifier with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            adGroupBidModifier?:
                GoogleAdsGoogleadsV12Resources__AdGroupBidModifier;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupBidModifiersRequest {
            /** Required. The list of operations to perform on individual ad group bid modifiers. */
            operations?:
                GoogleAdsGoogleadsV12Services__AdGroupBidModifierOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupBidModifiersResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupBidModifierResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupCriteriaRequest {
            /** Required. The list of operations to perform on individual criteria. */
            operations?:
                GoogleAdsGoogleadsV12Services__AdGroupCriterionOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupCriteriaResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionCustomizerResult {
            /** The mutated AdGroupCriterionCustomizer with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            adGroupCriterionCustomizer?:
                GoogleAdsGoogleadsV12Resources__AdGroupCriterionCustomizer;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionCustomizersRequest {
            /** Required. The list of operations to perform on individual ad group criterion customizers. */
            operations?:
                GoogleAdsGoogleadsV12Services__AdGroupCriterionCustomizerOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionCustomizersResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionCustomizerResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionLabelResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionLabelsRequest {
            /** Required. The list of operations to perform on ad group criterion labels. */
            operations?:
                GoogleAdsGoogleadsV12Services__AdGroupCriterionLabelOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionLabelsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionLabelResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionResult {
            /** The mutated ad group criterion with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            adGroupCriterion?:
                GoogleAdsGoogleadsV12Resources__AdGroupCriterion;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupCustomizerResult {
            /** The mutated AdGroupCustomizer with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            adGroupCustomizer?:
                GoogleAdsGoogleadsV12Resources__AdGroupCustomizer;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupCustomizersRequest {
            /** Required. The list of operations to perform on individual ad group customizers. */
            operations?:
                GoogleAdsGoogleadsV12Services__AdGroupCustomizerOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupCustomizersResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupCustomizerResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupExtensionSettingResult {
            /** The mutated AdGroupExtensionSetting with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            adGroupExtensionSetting?:
                GoogleAdsGoogleadsV12Resources__AdGroupExtensionSetting;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupExtensionSettingsRequest {
            /** Required. The list of operations to perform on individual ad group extension settings. */
            operations?:
                GoogleAdsGoogleadsV12Services__AdGroupExtensionSettingOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupExtensionSettingsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupExtensionSettingResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupFeedResult {
            /** The mutated ad group feed with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            adGroupFeed?:
                GoogleAdsGoogleadsV12Resources__AdGroupFeed;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupFeedsRequest {
            /** Required. The list of operations to perform on individual ad group feeds. */
            operations?:
                GoogleAdsGoogleadsV12Services__AdGroupFeedOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupFeedsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupFeedResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupLabelResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupLabelsRequest {
            /** Required. The list of operations to perform on ad group labels. */
            operations?:
                GoogleAdsGoogleadsV12Services__AdGroupLabelOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupLabelsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupLabelResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupResult {
            /** The mutated ad group with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            adGroup?:
                GoogleAdsGoogleadsV12Resources__AdGroup;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupsRequest {
            /** Required. The list of operations to perform on individual ad groups. */
            operations?:
                GoogleAdsGoogleadsV12Services__AdGroupOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdGroupsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdParameterResult {
            /** The mutated AdParameter with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            adParameter?:
                GoogleAdsGoogleadsV12Resources__AdParameter;
            /** The resource name returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdParametersRequest {
            /** Required. The list of operations to perform on individual ad parameters. */
            operations?:
                GoogleAdsGoogleadsV12Services__AdParameterOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdParametersResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAdParameterResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdResult {
            /** The mutated ad with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            ad?:
                GoogleAdsGoogleadsV12Resources__Ad;
            /** The resource name returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdsRequest {
            /** Required. The list of operations to perform on individual ads. */
            operations?:
                GoogleAdsGoogleadsV12Services__AdOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAdsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAdResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetGroupAssetResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetGroupAssetsRequest {
            /** Required. The list of operations to perform on individual asset group assets. */
            operations?:
                GoogleAdsGoogleadsV12Services__AssetGroupAssetOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetGroupAssetsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAssetGroupAssetResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetGroupListingGroupFilterResult {
            /** The mutated AssetGroupListingGroupFilter with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            assetGroupListingGroupFilter?:
                GoogleAdsGoogleadsV12Resources__AssetGroupListingGroupFilter;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetGroupListingGroupFiltersRequest {
            /** Required. The list of operations to perform on individual asset group listing group filters. */
            operations?:
                GoogleAdsGoogleadsV12Services__AssetGroupListingGroupFilterOperation[];
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetGroupListingGroupFiltersResponse {
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAssetGroupListingGroupFilterResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetGroupResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetGroupSignalResult {
            /** The mutated AssetGroupSignal with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            assetGroupSignal?:
                GoogleAdsGoogleadsV12Resources__AssetGroupSignal;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetGroupSignalsRequest {
            /** Required. The list of operations to perform on individual asset group signals. */
            operations?:
                GoogleAdsGoogleadsV12Services__AssetGroupSignalOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetGroupSignalsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAssetGroupSignalResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetGroupsRequest {
            /** Required. The list of operations to perform on individual asset groups. */
            operations?:
                GoogleAdsGoogleadsV12Services__AssetGroupOperation[];
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetGroupsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAssetGroupResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetResult {
            /** The mutated asset with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            asset?:
                GoogleAdsGoogleadsV12Resources__Asset;
            /** The resource name returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetSetAssetResult {
            /** The mutated asset set asset with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            assetSetAsset?:
                GoogleAdsGoogleadsV12Resources__AssetSetAsset;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetSetAssetsRequest {
            /** Required. The list of operations to perform on individual asset set assets. */
            operations?:
                GoogleAdsGoogleadsV12Services__AssetSetAssetOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetSetAssetsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAssetSetAssetResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetSetResult {
            /** The mutated asset set with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            assetSet?:
                GoogleAdsGoogleadsV12Resources__AssetSet;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetSetsRequest {
            /** Required. The list of operations to perform on individual asset sets. */
            operations?:
                GoogleAdsGoogleadsV12Services__AssetSetOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetSetsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAssetSetResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetsRequest {
            /** Required. The list of operations to perform on individual assets. */
            operations?:
                GoogleAdsGoogleadsV12Services__AssetOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAssetsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAssetResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateAudienceResult {
            /** The mutated Audience with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            audience?:
                GoogleAdsGoogleadsV12Resources__Audience;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAudiencesRequest {
            /** Required. The list of operations to perform on individual audiences. */
            operations?:
                GoogleAdsGoogleadsV12Services__AudienceOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateAudiencesResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateAudienceResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateBatchJobRequest {
            /** Required. The operation to perform on an individual batch job. */
            operation?:
                GoogleAdsGoogleadsV12Services__BatchJobOperation;
        }
        interface GoogleAdsGoogleadsV12Services__MutateBatchJobResponse {
            /** The result for the mutate. */
            result?:
                GoogleAdsGoogleadsV12Services__MutateBatchJobResult;
        }
        interface GoogleAdsGoogleadsV12Services__MutateBatchJobResult {
            /** The resource name of the batch job. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateBiddingDataExclusionsRequest {
            /** Required. The list of operations to perform on individual data exclusions. */
            operations?:
                GoogleAdsGoogleadsV12Services__BiddingDataExclusionOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateBiddingDataExclusionsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateBiddingDataExclusionsResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateBiddingDataExclusionsResult {
            /** The mutated bidding data exclusion with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            biddingDataExclusion?:
                GoogleAdsGoogleadsV12Resources__BiddingDataExclusion;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateBiddingSeasonalityAdjustmentsRequest {
            /** Required. The list of operations to perform on individual seasonality adjustments. */
            operations?:
                GoogleAdsGoogleadsV12Services__BiddingSeasonalityAdjustmentOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateBiddingSeasonalityAdjustmentsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateBiddingSeasonalityAdjustmentsResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateBiddingSeasonalityAdjustmentsResult {
            /** The mutated bidding seasonality adjustment with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            biddingSeasonalityAdjustment?:
                GoogleAdsGoogleadsV12Resources__BiddingSeasonalityAdjustment;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateBiddingStrategiesRequest {
            /** Required. The list of operations to perform on individual bidding strategies. */
            operations?:
                GoogleAdsGoogleadsV12Services__BiddingStrategyOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateBiddingStrategiesResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateBiddingStrategyResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateBiddingStrategyResult {
            /** The mutated bidding strategy with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            biddingStrategy?:
                GoogleAdsGoogleadsV12Resources__BiddingStrategy;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateBillingSetupRequest {
            /** Required. The operation to perform. */
            operation?:
                GoogleAdsGoogleadsV12Services__BillingSetupOperation;
        }
        interface GoogleAdsGoogleadsV12Services__MutateBillingSetupResponse {
            /** A result that identifies the resource affected by the mutate request. */
            result?:
                GoogleAdsGoogleadsV12Services__MutateBillingSetupResult;
        }
        interface GoogleAdsGoogleadsV12Services__MutateBillingSetupResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignAssetResult {
            /** The mutated campaign asset with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            campaignAsset?:
                GoogleAdsGoogleadsV12Resources__CampaignAsset;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignAssetSetResult {
            /** The mutated campaign asset set with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            campaignAssetSet?:
                GoogleAdsGoogleadsV12Resources__CampaignAssetSet;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignAssetSetsRequest {
            /** Required. The list of operations to perform on individual campaign asset sets. */
            operations?:
                GoogleAdsGoogleadsV12Services__CampaignAssetSetOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignAssetSetsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCampaignAssetSetResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignAssetsRequest {
            /** Required. The list of operations to perform on individual campaign assets. */
            operations?:
                GoogleAdsGoogleadsV12Services__CampaignAssetOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignAssetsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCampaignAssetResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignBidModifierResult {
            /** The mutated campaign bid modifier with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            campaignBidModifier?:
                GoogleAdsGoogleadsV12Resources__CampaignBidModifier;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignBidModifiersRequest {
            /** Required. The list of operations to perform on individual campaign bid modifiers. */
            operations?:
                GoogleAdsGoogleadsV12Services__CampaignBidModifierOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignBidModifiersResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCampaignBidModifierResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignBudgetResult {
            /** The mutated campaign budget with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            campaignBudget?:
                GoogleAdsGoogleadsV12Resources__CampaignBudget;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignBudgetsRequest {
            /** Required. The list of operations to perform on individual campaign budgets. */
            operations?:
                GoogleAdsGoogleadsV12Services__CampaignBudgetOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignBudgetsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCampaignBudgetResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignConversionGoalResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignConversionGoalsRequest {
            /** Required. The list of operations to perform on individual campaign conversion goal. */
            operations?:
                GoogleAdsGoogleadsV12Services__CampaignConversionGoalOperation[];
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignConversionGoalsResponse {
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCampaignConversionGoalResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignCriteriaRequest {
            /** Required. The list of operations to perform on individual criteria. */
            operations?:
                GoogleAdsGoogleadsV12Services__CampaignCriterionOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignCriteriaResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCampaignCriterionResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignCriterionResult {
            /** The mutated campaign criterion with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            campaignCriterion?:
                GoogleAdsGoogleadsV12Resources__CampaignCriterion;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignCustomizerResult {
            /** The mutated CampaignCustomizer with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            campaignCustomizer?:
                GoogleAdsGoogleadsV12Resources__CampaignCustomizer;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignCustomizersRequest {
            /** Required. The list of operations to perform on individual campaign customizers. */
            operations?:
                GoogleAdsGoogleadsV12Services__CampaignCustomizerOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignCustomizersResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCampaignCustomizerResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignDraftResult {
            /** The mutated campaign draft with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            campaignDraft?:
                GoogleAdsGoogleadsV12Resources__CampaignDraft;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignDraftsRequest {
            /** Required. The list of operations to perform on individual campaign drafts. */
            operations?:
                GoogleAdsGoogleadsV12Services__CampaignDraftOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignDraftsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCampaignDraftResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignExtensionSettingResult {
            /** The mutated campaign extension setting with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            campaignExtensionSetting?:
                GoogleAdsGoogleadsV12Resources__CampaignExtensionSetting;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignExtensionSettingsRequest {
            /** Required. The list of operations to perform on individual campaign extension settings. */
            operations?:
                GoogleAdsGoogleadsV12Services__CampaignExtensionSettingOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignExtensionSettingsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCampaignExtensionSettingResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignFeedResult {
            /** The mutated campaign feed with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            campaignFeed?:
                GoogleAdsGoogleadsV12Resources__CampaignFeed;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignFeedsRequest {
            /** Required. The list of operations to perform on individual campaign feeds. */
            operations?:
                GoogleAdsGoogleadsV12Services__CampaignFeedOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignFeedsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCampaignFeedResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignGroupResult {
            /** The mutated campaign group with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            campaignGroup?:
                GoogleAdsGoogleadsV12Resources__CampaignGroup;
            /** Required. Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignGroupsRequest {
            /** Required. The list of operations to perform on individual campaign groups. */
            operations?:
                GoogleAdsGoogleadsV12Services__CampaignGroupOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignGroupsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCampaignGroupResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignLabelResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignLabelsRequest {
            /** Required. The list of operations to perform on campaign-label relationships. */
            operations?:
                GoogleAdsGoogleadsV12Services__CampaignLabelOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignLabelsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCampaignLabelResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignResult {
            /** The mutated campaign with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            campaign?:
                GoogleAdsGoogleadsV12Resources__Campaign;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignSharedSetResult {
            /** The mutated campaign shared set with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            campaignSharedSet?:
                GoogleAdsGoogleadsV12Resources__CampaignSharedSet;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignSharedSetsRequest {
            /** Required. The list of operations to perform on individual campaign shared sets. */
            operations?:
                GoogleAdsGoogleadsV12Services__CampaignSharedSetOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignSharedSetsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCampaignSharedSetResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignsRequest {
            /** Required. The list of operations to perform on individual campaigns. */
            operations?:
                GoogleAdsGoogleadsV12Services__CampaignOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCampaignsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCampaignResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateConversionActionResult {
            /** The mutated conversion action with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            conversionAction?:
                GoogleAdsGoogleadsV12Resources__ConversionAction;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateConversionActionsRequest {
            /** Required. The list of operations to perform on individual conversion actions. */
            operations?:
                GoogleAdsGoogleadsV12Services__ConversionActionOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateConversionActionsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateConversionActionResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateConversionCustomVariableResult {
            /** The mutated conversion custom variable with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            conversionCustomVariable?:
                GoogleAdsGoogleadsV12Resources__ConversionCustomVariable;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateConversionCustomVariablesRequest {
            /** Required. The list of operations to perform on individual conversion custom variables. */
            operations?:
                GoogleAdsGoogleadsV12Services__ConversionCustomVariableOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateConversionCustomVariablesResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateConversionCustomVariableResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateConversionGoalCampaignConfigResult {
            /** The mutated ConversionGoalCampaignConfig with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            conversionGoalCampaignConfig?:
                GoogleAdsGoogleadsV12Resources__ConversionGoalCampaignConfig;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateConversionGoalCampaignConfigsRequest {
            /** Required. The list of operations to perform on individual conversion goal campaign config. */
            operations?:
                GoogleAdsGoogleadsV12Services__ConversionGoalCampaignConfigOperation[];
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateConversionGoalCampaignConfigsResponse {
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateConversionGoalCampaignConfigResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateConversionValueRuleResult {
            /** The mutated conversion value rule with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            conversionValueRule?:
                GoogleAdsGoogleadsV12Resources__ConversionValueRule;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateConversionValueRuleSetResult {
            /** The mutated conversion value rule set with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            conversionValueRuleSet?:
                GoogleAdsGoogleadsV12Resources__ConversionValueRuleSet;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateConversionValueRuleSetsRequest {
            /** Required. The list of operations to perform on individual conversion value rule sets. */
            operations?:
                GoogleAdsGoogleadsV12Services__ConversionValueRuleSetOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateConversionValueRuleSetsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateConversionValueRuleSetResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateConversionValueRulesRequest {
            /** Required. The list of operations to perform on individual conversion value rules. */
            operations?:
                GoogleAdsGoogleadsV12Services__ConversionValueRuleOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateConversionValueRulesResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateConversionValueRuleResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomAudienceResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomAudiencesRequest {
            /** Required. The list of operations to perform on individual custom audiences. */
            operations?:
                GoogleAdsGoogleadsV12Services__CustomAudienceOperation[];
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomAudiencesResponse {
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCustomAudienceResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomConversionGoalResult {
            /** The mutated CustomConversionGoal with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            customConversionGoal?:
                GoogleAdsGoogleadsV12Resources__CustomConversionGoal;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomConversionGoalsRequest {
            /** Required. The list of operations to perform on individual custom conversion goal. */
            operations?:
                GoogleAdsGoogleadsV12Services__CustomConversionGoalOperation[];
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomConversionGoalsResponse {
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCustomConversionGoalResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerAssetResult {
            /** The mutated customer asset with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            customerAsset?:
                GoogleAdsGoogleadsV12Resources__CustomerAsset;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerAssetSetResult {
            /** The mutated customer asset set with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            customerAssetSet?:
                GoogleAdsGoogleadsV12Resources__CustomerAssetSet;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerAssetSetsRequest {
            /** Required. The list of operations to perform on individual customer asset sets. */
            operations?:
                GoogleAdsGoogleadsV12Services__CustomerAssetSetOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerAssetSetsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (e.g. auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCustomerAssetSetResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerAssetsRequest {
            /** Required. The list of operations to perform on individual customer assets. */
            operations?:
                GoogleAdsGoogleadsV12Services__CustomerAssetOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerAssetsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCustomerAssetResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerClientLinkRequest {
            /** Required. The operation to perform on the individual CustomerClientLink. */
            operation?:
                GoogleAdsGoogleadsV12Services__CustomerClientLinkOperation;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerClientLinkResponse {
            /** A result that identifies the resource affected by the mutate request. */
            result?:
                GoogleAdsGoogleadsV12Services__MutateCustomerClientLinkResult;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerClientLinkResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerConversionGoalResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerConversionGoalsRequest {
            /** Required. The list of operations to perform on individual customer conversion goal. */
            operations?:
                GoogleAdsGoogleadsV12Services__CustomerConversionGoalOperation[];
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerConversionGoalsResponse {
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCustomerConversionGoalResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerCustomizerResult {
            /** The mutated CustomerCustomizer with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            customerCustomizer?:
                GoogleAdsGoogleadsV12Resources__CustomerCustomizer;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerCustomizersRequest {
            /** Required. The list of operations to perform on individual customer customizers. */
            operations?:
                GoogleAdsGoogleadsV12Services__CustomerCustomizerOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerCustomizersResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCustomerCustomizerResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerExtensionSettingResult {
            /** The mutated CustomerExtensionSetting with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            customerExtensionSetting?:
                GoogleAdsGoogleadsV12Resources__CustomerExtensionSetting;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerExtensionSettingsRequest {
            /** Required. The list of operations to perform on individual customer extension settings. */
            operations?:
                GoogleAdsGoogleadsV12Services__CustomerExtensionSettingOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerExtensionSettingsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCustomerExtensionSettingResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerFeedResult {
            /** The mutated customer feed with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            customerFeed?:
                GoogleAdsGoogleadsV12Resources__CustomerFeed;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerFeedsRequest {
            /** Required. The list of operations to perform on individual customer feeds. */
            operations?:
                GoogleAdsGoogleadsV12Services__CustomerFeedOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerFeedsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCustomerFeedResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerLabelResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerLabelsRequest {
            /** Required. The list of operations to perform on customer-label relationships. */
            operations?:
                GoogleAdsGoogleadsV12Services__CustomerLabelOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerLabelsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCustomerLabelResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerManagerLinkRequest {
            /** Required. The list of operations to perform on individual customer manager links. */
            operations?:
                GoogleAdsGoogleadsV12Services__CustomerManagerLinkOperation[];
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerManagerLinkResponse {
            /** A result that identifies the resource affected by the mutate request. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCustomerManagerLinkResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerManagerLinkResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerNegativeCriteriaRequest {
            /** Required. The list of operations to perform on individual criteria. */
            operations?:
                GoogleAdsGoogleadsV12Services__CustomerNegativeCriterionOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerNegativeCriteriaResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCustomerNegativeCriteriaResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerNegativeCriteriaResult {
            /** The mutated criterion with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            customerNegativeCriterion?:
                GoogleAdsGoogleadsV12Resources__CustomerNegativeCriterion;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerRequest {
            /** Required. The operation to perform on the customer */
            operation?:
                GoogleAdsGoogleadsV12Services__CustomerOperation;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerResponse {
            /** Result for the mutate. */
            result?:
                GoogleAdsGoogleadsV12Services__MutateCustomerResult;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerResult {
            /** The mutated customer with only mutable fields after mutate. The fields will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            customer?:
                GoogleAdsGoogleadsV12Resources__Customer;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerUserAccessInvitationRequest {
            /** Required. The operation to perform on the access invitation */
            operation?:
                GoogleAdsGoogleadsV12Services__CustomerUserAccessInvitationOperation;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerUserAccessInvitationResponse {
            /** Result for the mutate. */
            result?:
                GoogleAdsGoogleadsV12Services__MutateCustomerUserAccessInvitationResult;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerUserAccessInvitationResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerUserAccessRequest {
            /** Required. The operation to perform on the customer */
            operation?:
                GoogleAdsGoogleadsV12Services__CustomerUserAccessOperation;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerUserAccessResponse {
            /** Result for the mutate. */
            result?:
                GoogleAdsGoogleadsV12Services__MutateCustomerUserAccessResult;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomerUserAccessResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomInterestResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomInterestsRequest {
            /** Required. The list of operations to perform on individual custom interests. */
            operations?:
                GoogleAdsGoogleadsV12Services__CustomInterestOperation[];
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomInterestsResponse {
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCustomInterestResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomizerAttributeResult {
            /** The mutated CustomizerAttribute with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            customizerAttribute?:
                GoogleAdsGoogleadsV12Resources__CustomizerAttribute;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomizerAttributesRequest {
            /** Required. The list of operations to perform on individual customizer attributes. */
            operations?:
                GoogleAdsGoogleadsV12Services__CustomizerAttributeOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateCustomizerAttributesResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateCustomizerAttributeResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateExperimentArmResult {
            /** The mutated experiment arm with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            experimentArm?:
                GoogleAdsGoogleadsV12Resources__ExperimentArm;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateExperimentArmsRequest {
            /** Required. The list of operations to perform on individual experiment arm. */
            operations?:
                GoogleAdsGoogleadsV12Services__ExperimentArmOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateExperimentArmsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateExperimentArmResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateExperimentResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateExperimentsRequest {
            /** Required. The list of operations to perform on individual experiments. */
            operations?:
                GoogleAdsGoogleadsV12Services__ExperimentOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateExperimentsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateExperimentResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateExtensionFeedItemResult {
            /** The mutated extension feed item with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            extensionFeedItem?:
                GoogleAdsGoogleadsV12Resources__ExtensionFeedItem;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateExtensionFeedItemsRequest {
            /** Required. The list of operations to perform on individual extension feed items. */
            operations?:
                GoogleAdsGoogleadsV12Services__ExtensionFeedItemOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateExtensionFeedItemsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateExtensionFeedItemResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedItemResult {
            /** The mutated feed item with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            feedItem?:
                GoogleAdsGoogleadsV12Resources__FeedItem;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedItemSetLinkResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedItemSetLinksRequest {
            /** Required. The list of operations to perform on individual feed item set links. */
            operations?:
                GoogleAdsGoogleadsV12Services__FeedItemSetLinkOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedItemSetLinksResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateFeedItemSetLinkResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedItemSetResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedItemSetsRequest {
            /** Required. The list of operations to perform on individual feed item sets. */
            operations?:
                GoogleAdsGoogleadsV12Services__FeedItemSetOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedItemSetsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateFeedItemSetResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedItemsRequest {
            /** Required. The list of operations to perform on individual feed items. */
            operations?:
                GoogleAdsGoogleadsV12Services__FeedItemOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedItemsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateFeedItemResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedItemTargetResult {
            /** The mutated feed item target with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            feedItemTarget?:
                GoogleAdsGoogleadsV12Resources__FeedItemTarget;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedItemTargetsRequest {
            /** Required. The list of operations to perform on individual feed item targets. */
            operations?:
                GoogleAdsGoogleadsV12Services__FeedItemTargetOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedItemTargetsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateFeedItemTargetResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedMappingResult {
            /** The mutated feed mapping with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            feedMapping?:
                GoogleAdsGoogleadsV12Resources__FeedMapping;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedMappingsRequest {
            /** Required. The list of operations to perform on individual feed mappings. */
            operations?:
                GoogleAdsGoogleadsV12Services__FeedMappingOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedMappingsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateFeedMappingResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedResult {
            /** The mutated feed with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            feed?:
                GoogleAdsGoogleadsV12Resources__Feed;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedsRequest {
            /** Required. The list of operations to perform on individual feeds. */
            operations?:
                GoogleAdsGoogleadsV12Services__FeedOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateFeedsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateFeedResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateGoogleAdsRequest {
            /** Required. The list of operations to perform on individual resources. */
            mutateOperations?:
                GoogleAdsGoogleadsV12Services__MutateOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /**
             * The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. The mutable resource will only be returned if
             * the resource has the appropriate response field. For example, MutateCampaignResult.campaign.
             */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateGoogleAdsResponse {
            /** All responses for the mutate. */
            mutateOperationResponses?:
                GoogleAdsGoogleadsV12Services__MutateOperationResponse[];
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
        }
        interface GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupKeywordResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupKeywordsRequest {
            /** Required. The list of operations to perform on individual Keyword Plan ad group keywords. */
            operations?:
                GoogleAdsGoogleadsV12Services__KeywordPlanAdGroupKeywordOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupKeywordsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupKeywordResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupsRequest {
            /** Required. The list of operations to perform on individual Keyword Plan ad groups. */
            operations?:
                GoogleAdsGoogleadsV12Services__KeywordPlanAdGroupOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. The order of the results is determined by the order of the keywords in the original request. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignKeywordResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignKeywordsRequest {
            /** Required. The list of operations to perform on individual Keyword Plan campaign keywords. */
            operations?:
                GoogleAdsGoogleadsV12Services__KeywordPlanCampaignKeywordOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignKeywordsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignKeywordResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignsRequest {
            /** Required. The list of operations to perform on individual Keyword Plan campaigns. */
            operations?:
                GoogleAdsGoogleadsV12Services__KeywordPlanCampaignOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateKeywordPlansRequest {
            /** Required. The list of operations to perform on individual keyword plans. */
            operations?:
                GoogleAdsGoogleadsV12Services__KeywordPlanOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateKeywordPlansResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateKeywordPlansResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateKeywordPlansResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateLabelResult {
            /** The mutated label with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            label?:
                GoogleAdsGoogleadsV12Resources__Label;
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateLabelsRequest {
            /** Required. The list of operations to perform on labels. */
            operations?:
                GoogleAdsGoogleadsV12Services__LabelOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateLabelsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateLabelResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateMediaFileResult {
            /** The mutated media file with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            mediaFile?:
                GoogleAdsGoogleadsV12Resources__MediaFile;
            /** The resource name returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateMediaFilesRequest {
            /** Required. The list of operations to perform on individual media file. */
            operations?:
                GoogleAdsGoogleadsV12Services__MediaFileOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateMediaFilesResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateMediaFileResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateMerchantCenterLinkRequest {
            /** Required. The operation to perform on the link */
            operation?:
                GoogleAdsGoogleadsV12Services__MerchantCenterLinkOperation;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateMerchantCenterLinkResponse {
            /** Result for the mutate. */
            result?:
                GoogleAdsGoogleadsV12Services__MutateMerchantCenterLinkResult;
        }
        interface GoogleAdsGoogleadsV12Services__MutateMerchantCenterLinkResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateOperation {
            /** An ad group ad label mutate operation. */
            adGroupAdLabelOperation?:
                GoogleAdsGoogleadsV12Services__AdGroupAdLabelOperation;
            /** An ad group ad mutate operation. */
            adGroupAdOperation?:
                GoogleAdsGoogleadsV12Services__AdGroupAdOperation;
            /** An ad group asset mutate operation. */
            adGroupAssetOperation?:
                GoogleAdsGoogleadsV12Services__AdGroupAssetOperation;
            /** An ad group bid modifier mutate operation. */
            adGroupBidModifierOperation?:
                GoogleAdsGoogleadsV12Services__AdGroupBidModifierOperation;
            /** An ad group criterion customizer mutate operation. */
            adGroupCriterionCustomizerOperation?:
                GoogleAdsGoogleadsV12Services__AdGroupCriterionCustomizerOperation;
            /** An ad group criterion label mutate operation. */
            adGroupCriterionLabelOperation?:
                GoogleAdsGoogleadsV12Services__AdGroupCriterionLabelOperation;
            /** An ad group criterion mutate operation. */
            adGroupCriterionOperation?:
                GoogleAdsGoogleadsV12Services__AdGroupCriterionOperation;
            /** An ad group customizer mutate operation. */
            adGroupCustomizerOperation?:
                GoogleAdsGoogleadsV12Services__AdGroupCustomizerOperation;
            /** An ad group extension setting mutate operation. */
            adGroupExtensionSettingOperation?:
                GoogleAdsGoogleadsV12Services__AdGroupExtensionSettingOperation;
            /** An ad group feed mutate operation. */
            adGroupFeedOperation?:
                GoogleAdsGoogleadsV12Services__AdGroupFeedOperation;
            /** An ad group label mutate operation. */
            adGroupLabelOperation?:
                GoogleAdsGoogleadsV12Services__AdGroupLabelOperation;
            /** An ad group mutate operation. */
            adGroupOperation?:
                GoogleAdsGoogleadsV12Services__AdGroupOperation;
            /** An ad mutate operation. */
            adOperation?:
                GoogleAdsGoogleadsV12Services__AdOperation;
            /** An ad parameter mutate operation. */
            adParameterOperation?:
                GoogleAdsGoogleadsV12Services__AdParameterOperation;
            /** An asset group asset mutate operation. */
            assetGroupAssetOperation?:
                GoogleAdsGoogleadsV12Services__AssetGroupAssetOperation;
            /** An asset group listing group filter mutate operation. */
            assetGroupListingGroupFilterOperation?:
                GoogleAdsGoogleadsV12Services__AssetGroupListingGroupFilterOperation;
            /** An asset group mutate operation. */
            assetGroupOperation?:
                GoogleAdsGoogleadsV12Services__AssetGroupOperation;
            /** An asset group signal mutate operation. */
            assetGroupSignalOperation?:
                GoogleAdsGoogleadsV12Services__AssetGroupSignalOperation;
            /** An asset mutate operation. */
            assetOperation?:
                GoogleAdsGoogleadsV12Services__AssetOperation;
            /** An asset set asset mutate operation. */
            assetSetAssetOperation?:
                GoogleAdsGoogleadsV12Services__AssetSetAssetOperation;
            /** An asset set mutate operation. */
            assetSetOperation?:
                GoogleAdsGoogleadsV12Services__AssetSetOperation;
            /** An audience mutate operation. */
            audienceOperation?:
                GoogleAdsGoogleadsV12Services__AudienceOperation;
            /** A bidding data exclusion mutate operation. */
            biddingDataExclusionOperation?:
                GoogleAdsGoogleadsV12Services__BiddingDataExclusionOperation;
            /** A bidding seasonality adjustment mutate operation. */
            biddingSeasonalityAdjustmentOperation?:
                GoogleAdsGoogleadsV12Services__BiddingSeasonalityAdjustmentOperation;
            /** A bidding strategy mutate operation. */
            biddingStrategyOperation?:
                GoogleAdsGoogleadsV12Services__BiddingStrategyOperation;
            /** A campaign asset mutate operation. */
            campaignAssetOperation?:
                GoogleAdsGoogleadsV12Services__CampaignAssetOperation;
            /** A campaign asset mutate operation. */
            campaignAssetSetOperation?:
                GoogleAdsGoogleadsV12Services__CampaignAssetSetOperation;
            /** A campaign bid modifier mutate operation. */
            campaignBidModifierOperation?:
                GoogleAdsGoogleadsV12Services__CampaignBidModifierOperation;
            /** A campaign budget mutate operation. */
            campaignBudgetOperation?:
                GoogleAdsGoogleadsV12Services__CampaignBudgetOperation;
            /** A campaign conversion goal mutate operation. */
            campaignConversionGoalOperation?:
                GoogleAdsGoogleadsV12Services__CampaignConversionGoalOperation;
            /** A campaign criterion mutate operation. */
            campaignCriterionOperation?:
                GoogleAdsGoogleadsV12Services__CampaignCriterionOperation;
            /** A campaign customizer mutate operation. */
            campaignCustomizerOperation?:
                GoogleAdsGoogleadsV12Services__CampaignCustomizerOperation;
            /** A campaign draft mutate operation. */
            campaignDraftOperation?:
                GoogleAdsGoogleadsV12Services__CampaignDraftOperation;
            /** A campaign extension setting mutate operation. */
            campaignExtensionSettingOperation?:
                GoogleAdsGoogleadsV12Services__CampaignExtensionSettingOperation;
            /** A campaign feed mutate operation. */
            campaignFeedOperation?:
                GoogleAdsGoogleadsV12Services__CampaignFeedOperation;
            /** A campaign group mutate operation. */
            campaignGroupOperation?:
                GoogleAdsGoogleadsV12Services__CampaignGroupOperation;
            /** A campaign label mutate operation. */
            campaignLabelOperation?:
                GoogleAdsGoogleadsV12Services__CampaignLabelOperation;
            /** A campaign mutate operation. */
            campaignOperation?:
                GoogleAdsGoogleadsV12Services__CampaignOperation;
            /** A campaign shared set mutate operation. */
            campaignSharedSetOperation?:
                GoogleAdsGoogleadsV12Services__CampaignSharedSetOperation;
            /** A conversion action mutate operation. */
            conversionActionOperation?:
                GoogleAdsGoogleadsV12Services__ConversionActionOperation;
            /** A conversion custom variable mutate operation. */
            conversionCustomVariableOperation?:
                GoogleAdsGoogleadsV12Services__ConversionCustomVariableOperation;
            /** A conversion goal campaign config mutate operation. */
            conversionGoalCampaignConfigOperation?:
                GoogleAdsGoogleadsV12Services__ConversionGoalCampaignConfigOperation;
            /** A conversion value rule mutate operation. */
            conversionValueRuleOperation?:
                GoogleAdsGoogleadsV12Services__ConversionValueRuleOperation;
            /** A conversion value rule set mutate operation. */
            conversionValueRuleSetOperation?:
                GoogleAdsGoogleadsV12Services__ConversionValueRuleSetOperation;
            /** A custom conversion goal mutate operation. */
            customConversionGoalOperation?:
                GoogleAdsGoogleadsV12Services__CustomConversionGoalOperation;
            /** A customer asset mutate operation. */
            customerAssetOperation?:
                GoogleAdsGoogleadsV12Services__CustomerAssetOperation;
            /** A customer conversion goal mutate operation. */
            customerConversionGoalOperation?:
                GoogleAdsGoogleadsV12Services__CustomerConversionGoalOperation;
            /** A customer customizer mutate operation. */
            customerCustomizerOperation?:
                GoogleAdsGoogleadsV12Services__CustomerCustomizerOperation;
            /** A customer extension setting mutate operation. */
            customerExtensionSettingOperation?:
                GoogleAdsGoogleadsV12Services__CustomerExtensionSettingOperation;
            /** A customer feed mutate operation. */
            customerFeedOperation?:
                GoogleAdsGoogleadsV12Services__CustomerFeedOperation;
            /** A customer label mutate operation. */
            customerLabelOperation?:
                GoogleAdsGoogleadsV12Services__CustomerLabelOperation;
            /** A customer negative criterion mutate operation. */
            customerNegativeCriterionOperation?:
                GoogleAdsGoogleadsV12Services__CustomerNegativeCriterionOperation;
            /** A customer mutate operation. */
            customerOperation?:
                GoogleAdsGoogleadsV12Services__CustomerOperation;
            /** A customizer attribute mutate operation. */
            customizerAttributeOperation?:
                GoogleAdsGoogleadsV12Services__CustomizerAttributeOperation;
            /** An experiment arm mutate operation. */
            experimentArmOperation?:
                GoogleAdsGoogleadsV12Services__ExperimentArmOperation;
            /** An experiment mutate operation. */
            experimentOperation?:
                GoogleAdsGoogleadsV12Services__ExperimentOperation;
            /** An extension feed item mutate operation. */
            extensionFeedItemOperation?:
                GoogleAdsGoogleadsV12Services__ExtensionFeedItemOperation;
            /** A feed item mutate operation. */
            feedItemOperation?:
                GoogleAdsGoogleadsV12Services__FeedItemOperation;
            /** A feed item set link mutate operation. */
            feedItemSetLinkOperation?:
                GoogleAdsGoogleadsV12Services__FeedItemSetLinkOperation;
            /** A feed item set mutate operation. */
            feedItemSetOperation?:
                GoogleAdsGoogleadsV12Services__FeedItemSetOperation;
            /** A feed item target mutate operation. */
            feedItemTargetOperation?:
                GoogleAdsGoogleadsV12Services__FeedItemTargetOperation;
            /** A feed mapping mutate operation. */
            feedMappingOperation?:
                GoogleAdsGoogleadsV12Services__FeedMappingOperation;
            /** A feed mutate operation. */
            feedOperation?:
                GoogleAdsGoogleadsV12Services__FeedOperation;
            /** A keyword plan ad group keyword operation. */
            keywordPlanAdGroupKeywordOperation?:
                GoogleAdsGoogleadsV12Services__KeywordPlanAdGroupKeywordOperation;
            /** A keyword plan ad group operation. */
            keywordPlanAdGroupOperation?:
                GoogleAdsGoogleadsV12Services__KeywordPlanAdGroupOperation;
            /** A keyword plan campaign keyword operation. */
            keywordPlanCampaignKeywordOperation?:
                GoogleAdsGoogleadsV12Services__KeywordPlanCampaignKeywordOperation;
            /** A keyword plan campaign operation. */
            keywordPlanCampaignOperation?:
                GoogleAdsGoogleadsV12Services__KeywordPlanCampaignOperation;
            /** A keyword plan operation. */
            keywordPlanOperation?:
                GoogleAdsGoogleadsV12Services__KeywordPlanOperation;
            /** A label mutate operation. */
            labelOperation?:
                GoogleAdsGoogleadsV12Services__LabelOperation;
            /** A media file mutate operation. */
            mediaFileOperation?:
                GoogleAdsGoogleadsV12Services__MediaFileOperation;
            /** A remarketing action mutate operation. */
            remarketingActionOperation?:
                GoogleAdsGoogleadsV12Services__RemarketingActionOperation;
            /** A shared criterion mutate operation. */
            sharedCriterionOperation?:
                GoogleAdsGoogleadsV12Services__SharedCriterionOperation;
            /** A shared set mutate operation. */
            sharedSetOperation?:
                GoogleAdsGoogleadsV12Services__SharedSetOperation;
            /** A Smart campaign setting mutate operation. */
            smartCampaignSettingOperation?:
                GoogleAdsGoogleadsV12Services__SmartCampaignSettingOperation;
            /** A user list mutate operation. */
            userListOperation?:
                GoogleAdsGoogleadsV12Services__UserListOperation;
        }
        interface GoogleAdsGoogleadsV12Services__MutateOperationResponse {
            /** The result for the ad group ad label mutate. */
            adGroupAdLabelResult?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupAdLabelResult;
            /** The result for the ad group ad mutate. */
            adGroupAdResult?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupAdResult;
            /** The result for the ad group asset mutate. */
            adGroupAssetResult?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupAssetResult;
            /** The result for the ad group bid modifier mutate. */
            adGroupBidModifierResult?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupBidModifierResult;
            /** The result for the ad group criterion customizer mutate. */
            adGroupCriterionCustomizerResult?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionCustomizerResult;
            /** The result for the ad group criterion label mutate. */
            adGroupCriterionLabelResult?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionLabelResult;
            /** The result for the ad group criterion mutate. */
            adGroupCriterionResult?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionResult;
            /** The result for the ad group customizer mutate. */
            adGroupCustomizerResult?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupCustomizerResult;
            /** The result for the ad group extension setting mutate. */
            adGroupExtensionSettingResult?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupExtensionSettingResult;
            /** The result for the ad group feed mutate. */
            adGroupFeedResult?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupFeedResult;
            /** The result for the ad group label mutate. */
            adGroupLabelResult?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupLabelResult;
            /** The result for the ad group mutate. */
            adGroupResult?:
                GoogleAdsGoogleadsV12Services__MutateAdGroupResult;
            /** The result for the ad parameter mutate. */
            adParameterResult?:
                GoogleAdsGoogleadsV12Services__MutateAdParameterResult;
            /** The result for the ad mutate. */
            adResult?:
                GoogleAdsGoogleadsV12Services__MutateAdResult;
            /** The result for the asset group asset mutate. */
            assetGroupAssetResult?:
                GoogleAdsGoogleadsV12Services__MutateAssetGroupAssetResult;
            /** The result for the asset group listing group filter mutate. */
            assetGroupListingGroupFilterResult?:
                GoogleAdsGoogleadsV12Services__MutateAssetGroupListingGroupFilterResult;
            /** The result for the asset group mutate. */
            assetGroupResult?:
                GoogleAdsGoogleadsV12Services__MutateAssetGroupResult;
            /** The result for the asset group signal mutate. */
            assetGroupSignalResult?:
                GoogleAdsGoogleadsV12Services__MutateAssetGroupSignalResult;
            /** The result for the asset mutate. */
            assetResult?:
                GoogleAdsGoogleadsV12Services__MutateAssetResult;
            /** The result for the asset set asset mutate. */
            assetSetAssetResult?:
                GoogleAdsGoogleadsV12Services__MutateAssetSetAssetResult;
            /** The result for the asset set mutate. */
            assetSetResult?:
                GoogleAdsGoogleadsV12Services__MutateAssetSetResult;
            /** The result for the audience mutate. */
            audienceResult?:
                GoogleAdsGoogleadsV12Services__MutateAudienceResult;
            /** The result for the bidding data exclusion mutate. */
            biddingDataExclusionResult?:
                GoogleAdsGoogleadsV12Services__MutateBiddingDataExclusionsResult;
            /** The result for the bidding seasonality adjustment mutate. */
            biddingSeasonalityAdjustmentResult?:
                GoogleAdsGoogleadsV12Services__MutateBiddingSeasonalityAdjustmentsResult;
            /** The result for the bidding strategy mutate. */
            biddingStrategyResult?:
                GoogleAdsGoogleadsV12Services__MutateBiddingStrategyResult;
            /** The result for the campaign asset mutate. */
            campaignAssetResult?:
                GoogleAdsGoogleadsV12Services__MutateCampaignAssetResult;
            /** The result for the campaign asset set mutate. */
            campaignAssetSetResult?:
                GoogleAdsGoogleadsV12Services__MutateCampaignAssetSetResult;
            /** The result for the campaign bid modifier mutate. */
            campaignBidModifierResult?:
                GoogleAdsGoogleadsV12Services__MutateCampaignBidModifierResult;
            /** The result for the campaign budget mutate. */
            campaignBudgetResult?:
                GoogleAdsGoogleadsV12Services__MutateCampaignBudgetResult;
            /** The result for the campaign conversion goal mutate. */
            campaignConversionGoalResult?:
                GoogleAdsGoogleadsV12Services__MutateCampaignConversionGoalResult;
            /** The result for the campaign criterion mutate. */
            campaignCriterionResult?:
                GoogleAdsGoogleadsV12Services__MutateCampaignCriterionResult;
            /** The result for the campaign customizer mutate. */
            campaignCustomizerResult?:
                GoogleAdsGoogleadsV12Services__MutateCampaignCustomizerResult;
            /** The result for the campaign draft mutate. */
            campaignDraftResult?:
                GoogleAdsGoogleadsV12Services__MutateCampaignDraftResult;
            /** The result for the campaign extension setting mutate. */
            campaignExtensionSettingResult?:
                GoogleAdsGoogleadsV12Services__MutateCampaignExtensionSettingResult;
            /** The result for the campaign feed mutate. */
            campaignFeedResult?:
                GoogleAdsGoogleadsV12Services__MutateCampaignFeedResult;
            /** The result for the campaign group mutate. */
            campaignGroupResult?:
                GoogleAdsGoogleadsV12Services__MutateCampaignGroupResult;
            /** The result for the campaign label mutate. */
            campaignLabelResult?:
                GoogleAdsGoogleadsV12Services__MutateCampaignLabelResult;
            /** The result for the campaign mutate. */
            campaignResult?:
                GoogleAdsGoogleadsV12Services__MutateCampaignResult;
            /** The result for the campaign shared set mutate. */
            campaignSharedSetResult?:
                GoogleAdsGoogleadsV12Services__MutateCampaignSharedSetResult;
            /** The result for the conversion action mutate. */
            conversionActionResult?:
                GoogleAdsGoogleadsV12Services__MutateConversionActionResult;
            /** The result for the conversion custom variable mutate. */
            conversionCustomVariableResult?:
                GoogleAdsGoogleadsV12Services__MutateConversionCustomVariableResult;
            /** The result for the conversion goal campaign config mutate. */
            conversionGoalCampaignConfigResult?:
                GoogleAdsGoogleadsV12Services__MutateConversionGoalCampaignConfigResult;
            /** The result for the conversion value rule mutate. */
            conversionValueRuleResult?:
                GoogleAdsGoogleadsV12Services__MutateConversionValueRuleResult;
            /** The result for the conversion value rule set mutate. */
            conversionValueRuleSetResult?:
                GoogleAdsGoogleadsV12Services__MutateConversionValueRuleSetResult;
            /** The result for the custom conversion goal mutate. */
            customConversionGoalResult?:
                GoogleAdsGoogleadsV12Services__MutateCustomConversionGoalResult;
            /** The result for the customer asset mutate. */
            customerAssetResult?:
                GoogleAdsGoogleadsV12Services__MutateCustomerAssetResult;
            /** The result for the customer conversion goal mutate. */
            customerConversionGoalResult?:
                GoogleAdsGoogleadsV12Services__MutateCustomerConversionGoalResult;
            /** The result for the customer customizer mutate. */
            customerCustomizerResult?:
                GoogleAdsGoogleadsV12Services__MutateCustomerCustomizerResult;
            /** The result for the customer extension setting mutate. */
            customerExtensionSettingResult?:
                GoogleAdsGoogleadsV12Services__MutateCustomerExtensionSettingResult;
            /** The result for the customer feed mutate. */
            customerFeedResult?:
                GoogleAdsGoogleadsV12Services__MutateCustomerFeedResult;
            /** The result for the customer label mutate. */
            customerLabelResult?:
                GoogleAdsGoogleadsV12Services__MutateCustomerLabelResult;
            /** The result for the customer negative criterion mutate. */
            customerNegativeCriterionResult?:
                GoogleAdsGoogleadsV12Services__MutateCustomerNegativeCriteriaResult;
            /** The result for the customer mutate. */
            customerResult?:
                GoogleAdsGoogleadsV12Services__MutateCustomerResult;
            /** The result for the customizer attribute mutate. */
            customizerAttributeResult?:
                GoogleAdsGoogleadsV12Services__MutateCustomizerAttributeResult;
            /** The result for the experiment arm mutate. */
            experimentArmResult?:
                GoogleAdsGoogleadsV12Services__MutateExperimentArmResult;
            /** The result for the experiment mutate. */
            experimentResult?:
                GoogleAdsGoogleadsV12Services__MutateExperimentResult;
            /** The result for the extension feed item mutate. */
            extensionFeedItemResult?:
                GoogleAdsGoogleadsV12Services__MutateExtensionFeedItemResult;
            /** The result for the feed item mutate. */
            feedItemResult?:
                GoogleAdsGoogleadsV12Services__MutateFeedItemResult;
            /** The result for the feed item set link mutate. */
            feedItemSetLinkResult?:
                GoogleAdsGoogleadsV12Services__MutateFeedItemSetLinkResult;
            /** The result for the feed item set mutate. */
            feedItemSetResult?:
                GoogleAdsGoogleadsV12Services__MutateFeedItemSetResult;
            /** The result for the feed item target mutate. */
            feedItemTargetResult?:
                GoogleAdsGoogleadsV12Services__MutateFeedItemTargetResult;
            /** The result for the feed mapping mutate. */
            feedMappingResult?:
                GoogleAdsGoogleadsV12Services__MutateFeedMappingResult;
            /** The result for the feed mutate. */
            feedResult?:
                GoogleAdsGoogleadsV12Services__MutateFeedResult;
            /** The result for the keyword plan ad group keyword mutate. */
            keywordPlanAdGroupKeywordResult?:
                GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupKeywordResult;
            /** The result for the keyword plan ad group mutate. */
            keywordPlanAdGroupResult?:
                GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupResult;
            /** The result for the keyword plan campaign keyword mutate. */
            keywordPlanCampaignKeywordResult?:
                GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignKeywordResult;
            /** The result for the keyword plan campaign mutate. */
            keywordPlanCampaignResult?:
                GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignResult;
            /** The result for the keyword plan mutate. */
            keywordPlanResult?:
                GoogleAdsGoogleadsV12Services__MutateKeywordPlansResult;
            /** The result for the label mutate. */
            labelResult?:
                GoogleAdsGoogleadsV12Services__MutateLabelResult;
            /** The result for the media file mutate. */
            mediaFileResult?:
                GoogleAdsGoogleadsV12Services__MutateMediaFileResult;
            /** The result for the remarketing action mutate. */
            remarketingActionResult?:
                GoogleAdsGoogleadsV12Services__MutateRemarketingActionResult;
            /** The result for the shared criterion mutate. */
            sharedCriterionResult?:
                GoogleAdsGoogleadsV12Services__MutateSharedCriterionResult;
            /** The result for the shared set mutate. */
            sharedSetResult?:
                GoogleAdsGoogleadsV12Services__MutateSharedSetResult;
            /** The result for the Smart campaign setting mutate. */
            smartCampaignSettingResult?:
                GoogleAdsGoogleadsV12Services__MutateSmartCampaignSettingResult;
            /** The result for the user list mutate. */
            userListResult?:
                GoogleAdsGoogleadsV12Services__MutateUserListResult;
        }
        interface GoogleAdsGoogleadsV12Services__MutateRemarketingActionResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateRemarketingActionsRequest {
            /** Required. The list of operations to perform on individual remarketing actions. */
            operations?:
                GoogleAdsGoogleadsV12Services__RemarketingActionOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateRemarketingActionsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateRemarketingActionResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateSharedCriteriaRequest {
            /** Required. The list of operations to perform on individual shared criteria. */
            operations?:
                GoogleAdsGoogleadsV12Services__SharedCriterionOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateSharedCriteriaResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateSharedCriterionResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateSharedCriterionResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
            /** The mutated shared criterion with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            sharedCriterion?:
                GoogleAdsGoogleadsV12Resources__SharedCriterion;
        }
        interface GoogleAdsGoogleadsV12Services__MutateSharedSetResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
            /** The mutated shared set with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            sharedSet?:
                GoogleAdsGoogleadsV12Resources__SharedSet;
        }
        interface GoogleAdsGoogleadsV12Services__MutateSharedSetsRequest {
            /** Required. The list of operations to perform on individual shared sets. */
            operations?:
                GoogleAdsGoogleadsV12Services__SharedSetOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateSharedSetsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateSharedSetResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateSmartCampaignSettingResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
            /** The mutated Smart campaign setting with only mutable fields after mutate. The field will only be returned when response_content_type is set to "MUTABLE_RESOURCE". */
            smartCampaignSetting?:
                GoogleAdsGoogleadsV12Resources__SmartCampaignSetting;
        }
        interface GoogleAdsGoogleadsV12Services__MutateSmartCampaignSettingsRequest {
            /** Required. The list of operations to perform on individual Smart campaign settings. */
            operations?:
                GoogleAdsGoogleadsV12Services__SmartCampaignSettingOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned post mutation. */
            responseContentType?:
                string;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateSmartCampaignSettingsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateSmartCampaignSettingResult[];
        }
        interface GoogleAdsGoogleadsV12Services__MutateUserListResult {
            /** Returned for successful operations. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__MutateUserListsRequest {
            /** Required. The list of operations to perform on individual user lists. */
            operations?:
                GoogleAdsGoogleadsV12Services__UserListOperation[];
            /**
             * If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only if they are
             * all valid. Default is false.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__MutateUserListsResponse {
            /**
             * Errors that pertain to operation failures in the partial failure mode. Returned only when partial_failure = true and all errors occur inside the operations. If any errors occur
             * outside the operations (for example, auth errors), we return an RPC level error.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** All results for the mutate. */
            results?:
                GoogleAdsGoogleadsV12Services__MutateUserListResult[];
        }
        interface GoogleAdsGoogleadsV12Services__OfflineUserDataJobOperation {
            /** Add the provided data to the transaction. Data cannot be retrieved after being uploaded. */
            create?:
                GoogleAdsGoogleadsV12Common__UserData;
            /** Remove the provided data from the transaction. Data cannot be retrieved after being uploaded. */
            remove?:
                GoogleAdsGoogleadsV12Common__UserData;
            /** Remove all previously provided data. This is only supported for Customer Match. */
            removeAll?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__OnTargetAudienceMetrics {
            /** Reference audience size matching the considered targeting for Census. */
            censusAudienceSize?:
                string;
            /** Reference audience size matching the considered targeting for YouTube. */
            youtubeAudienceSize?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__PlannableLocation {
            /** The ISO-3166-1 alpha-2 country code that is associated with the location. */
            countryCode?:
                string;
            /** The location identifier. */
            id?:
                string;
            /** The location's type. Location types correspond to target_type returned by searching location type in GoogleAdsService.Search/SearchStream. */
            locationType?:
                string;
            /** The unique location name in English. */
            name?:
                string;
            /**
             * The parent country (not present if location is a country). If present, will always be a GeoTargetConstant ID. Additional information such as country name is provided by
             * ReachPlanService.ListPlannableLocations or GoogleAdsService.Search/SearchStream.
             */
            parentCountryId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__PlannableTargeting {
            /**
             * Allowed plannable age ranges for the product for which metrics will be reported. Actual targeting is computed by mapping this age range onto standard Google common.AgeRangeInfo
             * values.
             */
            ageRanges?:
                string[];
            /**
             * Targetable devices for the ad product. TABLET device targeting is automatically applied to reported metrics when MOBILE targeting is selected for CPM_MASTHEAD,
             * GOOGLE_PREFERRED_BUMPER, and GOOGLE_PREFERRED_SHORT products.
             */
            devices?:
                GoogleAdsGoogleadsV12Common__DeviceInfo[];
            /** Targetable genders for the ad product. */
            genders?:
                GoogleAdsGoogleadsV12Common__GenderInfo[];
            /** Targetable networks for the ad product. */
            networks?:
                string[];
            /** Targetable YouTube Select Lineups for the ad product. */
            youtubeSelectLineups?:
                GoogleAdsGoogleadsV12Services__YouTubeSelectLineUp[];
        }
        interface GoogleAdsGoogleadsV12Services__PlannedProduct {
            /** Targeting settings for the selected product. To list the available targeting for each product use ReachPlanService.ListPlannableProducts. */
            advancedProductTargeting?:
                GoogleAdsGoogleadsV12Services__AdvancedProductTargeting;
            /**
             * Required. Maximum budget allocation in micros for the selected product. The value is specified in the selected planning currency_code. For example: 1 000 000$ = 1 000 000 000 000
             * micros.
             */
            budgetMicros?:
                string;
            /**
             * Required. Selected product for planning. The code associated with the ad product (for example: Trueview, Bumper). To list the available plannable product codes use
             * ReachPlanService.ListPlannableProducts.
             */
            plannableProductCode?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__PlannedProductForecast {
            /** Number of ad impressions that exactly matches the Targeting including co-viewers. */
            onTargetCoviewImpressions?:
                string;
            /** Number of unique people reached that exactly matches the Targeting including co-viewers. */
            onTargetCoviewReach?:
                string;
            /** Number of ad impressions that exactly matches the Targeting. */
            onTargetImpressions?:
                string;
            /**
             * Number of unique people reached that exactly matches the Targeting. Note that a minimum number of unique people must be reached in order for data to be reported. If the minimum
             * number is not met, the on_target_reach value will be rounded to 0.
             */
            onTargetReach?:
                string;
            /** Total number of ad impressions including co-viewers. This includes impressions that may fall outside the specified Targeting, due to insufficient information on signed-in users. */
            totalCoviewImpressions?:
                string;
            /** Number of unique people reached including co-viewers. This includes people that may fall outside the specified Targeting. */
            totalCoviewReach?:
                string;
            /** Total number of ad impressions. This includes impressions that may fall outside the specified Targeting, due to insufficient information on signed-in users. */
            totalImpressions?:
                string;
            /**
             * Number of unique people reached. This includes people that may fall outside the specified Targeting. Note that a minimum number of unique people must be reached in order for data to
             * be reported. If the minimum number is not met, the total_reach value will be rounded to 0.
             */
            totalReach?:
                string;
            /**
             * Number of times the ad's impressions were considered viewable. See https://support.google.com/google-ads/answer/7029393 for more information about what makes an ad viewable and how
             * viewability is measured.
             */
            viewableImpressions?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__PlannedProductReachForecast {
            /** The cost in micros. This may differ from the product's input allocation if one or more planned products cannot fulfill the budget because of limited inventory. */
            costMicros?:
                string;
            /** Selected product for planning. The product codes returned are within the set of the ones returned by ListPlannableProducts when using the same location ID. */
            plannableProductCode?:
                string;
            /** Forecasted traffic metrics for this product. */
            plannedProductForecast?:
                GoogleAdsGoogleadsV12Services__PlannedProductForecast;
        }
        interface GoogleAdsGoogleadsV12Services__ProductMetadata {
            /** The code associated with the ad product (for example: BUMPER, TRUEVIEW_IN_STREAM). To list the available plannable product codes use ReachPlanService.ListPlannableProducts. */
            plannableProductCode?:
                string;
            /** The name associated with the ad product. */
            plannableProductName?:
                string;
            /** The allowed plannable targeting for this product. */
            plannableTargeting?:
                GoogleAdsGoogleadsV12Services__PlannableTargeting;
        }
        interface GoogleAdsGoogleadsV12Services__PromoteCampaignDraftRequest {
            /** If true, the request is validated but no Long Running Operation is created. Only errors are returned. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__PromoteExperimentMetadata {
            /** Required. The promoted experiment. */
            experiment?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__PromoteExperimentRequest {
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__ReachCurve {
            /** All points on the reach curve. */
            reachForecasts?:
                GoogleAdsGoogleadsV12Services__ReachForecast[];
        }
        interface GoogleAdsGoogleadsV12Services__ReachForecast {
            /** The cost in micros. */
            costMicros?:
                string;
            /** Forecasted traffic metrics for this point. */
            forecast?:
                GoogleAdsGoogleadsV12Services__Forecast;
            /** The forecasted allocation and traffic metrics for each planned product at this point on the reach curve. */
            plannedProductReachForecasts?:
                GoogleAdsGoogleadsV12Services__PlannedProductReachForecast[];
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Services__RegenerateShareableLinkIdRequest {
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Services__RegenerateShareableLinkIdResponse {
        }
        interface GoogleAdsGoogleadsV12Services__RemarketingActionOperation {
            /** Create operation: No resource name is expected for the new remarketing action. */
            create?:
                GoogleAdsGoogleadsV12Resources__RemarketingAction;
            /** Update operation: The remarketing action is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__RemarketingAction;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__RestatementValue {
            /**
             * The restated conversion value. This is the value of the conversion after restatement. For example, to change the value of a conversion from 100 to 70, an adjusted value of 70 should
             * be reported. NOTE: If you want to upload a second restatement with a different adjusted value, it must have a new, more recent, adjustment occurrence time. Otherwise, it will be
             * treated as a duplicate of the previous restatement and ignored.
             */
            adjustedValue?:
                number;
            /**
             * The currency of the restated value. If not provided, then the default currency from the conversion action is used, and if that is not set then the account currency is used. This is
             * the ISO 4217 3-character currency code for example, USD or EUR.
             */
            currencyCode?:
                string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Services__RunBatchJobRequest {
        }
        interface GoogleAdsGoogleadsV12Services__RunOfflineUserDataJobRequest {
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__ScheduleExperimentMetadata {
            /** Required. The scheduled experiment. */
            experiment?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ScheduleExperimentRequest {
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__SearchGoogleAdsFieldsRequest {
            /** Number of elements to retrieve in a single page. When too large a page is requested, the server may decide to further limit the number of returned resources. */
            pageSize?:
                number;
            /**
             * Token of the page to retrieve. If not specified, the first page of results will be returned. Use the value obtained from `next_page_token` in the previous response in order to
             * request the next page of results.
             */
            pageToken?:
                string;
            /** Required. The query string. */
            query?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__SearchGoogleAdsFieldsResponse {
            /**
             * Pagination token used to retrieve the next page of results. Pass the content of this string as the `page_token` attribute of the next request. `next_page_token` is not returned for
             * the last page.
             */
            nextPageToken?:
                string;
            /** The list of fields that matched the query. */
            results?:
                GoogleAdsGoogleadsV12Resources__GoogleAdsField[];
            /** Total number of results that match the query ignoring the LIMIT clause. */
            totalResultsCount?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__SearchGoogleAdsRequest {
            /** Number of elements to retrieve in a single page. When too large a page is requested, the server may decide to further limit the number of returned resources. */
            pageSize?:
                number;
            /**
             * Token of the page to retrieve. If not specified, the first page of results will be returned. Use the value obtained from `next_page_token` in the previous response in order to
             * request the next page of results.
             */
            pageToken?:
                string;
            /** Required. The query string. */
            query?:
                string;
            /** If true, the total number of results that match the query ignoring the LIMIT clause will be included in the response. Default is false. */
            returnTotalResultsCount?:
                boolean;
            /**
             * Determines whether a summary row will be returned. By default, summary row is not returned. If requested, the summary row will be sent in a response by itself after all other query
             * results are returned.
             */
            summaryRowSetting?:
                string;
            /** If true, the request is validated but not executed. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__SearchGoogleAdsResponse {
            /** FieldMask that represents what fields were requested by the user. */
            fieldMask?:
                string;
            /**
             * Pagination token used to retrieve the next page of results. Pass the content of this string as the `page_token` attribute of the next request. `next_page_token` is not returned for
             * the last page.
             */
            nextPageToken?:
                string;
            /** The list of rows that matched the query. */
            results?:
                GoogleAdsGoogleadsV12Services__GoogleAdsRow[];
            /** Summary row that contains summary of metrics in results. Summary of metrics means aggregation of metrics across all results, here aggregation could be sum, average, rate, etc. */
            summaryRow?:
                GoogleAdsGoogleadsV12Services__GoogleAdsRow;
            /** Total number of results that match the query ignoring the LIMIT clause. */
            totalResultsCount?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__SearchGoogleAdsStreamRequest {
            /** Required. The query string. */
            query?:
                string;
            /**
             * Determines whether a summary row will be returned. By default, summary row is not returned. If requested, the summary row will be sent in a response by itself after all other query
             * results are returned.
             */
            summaryRowSetting?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__SearchGoogleAdsStreamResponse {
            /** FieldMask that represents what fields were requested by the user. */
            fieldMask?:
                string;
            /** The unique id of the request that is used for debugging purposes. */
            requestId?:
                string;
            /** The list of rows that matched the query. */
            results?:
                GoogleAdsGoogleadsV12Services__GoogleAdsRow[];
            /** Summary row that contains summary of metrics in results. Summary of metrics means aggregation of metrics across all results, here aggregation could be sum, average, rate, etc. */
            summaryRow?:
                GoogleAdsGoogleadsV12Services__GoogleAdsRow;
        }
        interface GoogleAdsGoogleadsV12Services__SharedCriterionOperation {
            /** Create operation: No resource name is expected for the new shared criterion. */
            create?:
                GoogleAdsGoogleadsV12Resources__SharedCriterion;
            /** Remove operation: A resource name for the removed shared criterion is expected, in this format: `customers/{customer_id}/sharedCriteria/{shared_set_id}~{criterion_id}` */
            remove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__SharedSetOperation {
            /** Create operation: No resource name is expected for the new shared set. */
            create?:
                GoogleAdsGoogleadsV12Resources__SharedSet;
            /** Remove operation: A resource name for the removed shared set is expected, in this format: `customers/{customer_id}/sharedSets/{shared_set_id}` */
            remove?:
                string;
            /** Update operation: The shared set is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__SharedSet;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__SiteSeed {
            /** The domain name of the site. If the customer requesting the ideas doesn't own the site provided only public information is returned. */
            site?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__SmartCampaignSettingOperation {
            /** Update operation: The Smart campaign setting must specify a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__SmartCampaignSetting;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__SmartCampaignSuggestionInfo {
            /** Optional. The business ad schedule. */
            adSchedules?:
                GoogleAdsGoogleadsV12Common__AdScheduleInfo[];
            /** Optional. Context describing the business to advertise. */
            businessContext?:
                GoogleAdsGoogleadsV12Services_SmartCampaignSuggestionInfo_BusinessContext;
            /**
             * Optional. The resource name of a Business Profile location. Business Profile location resource names can be fetched through the Business Profile API and adhere to the following
             * format: `locations/{locationId}`. See the [Business Profile API] (https://developers.google.com/my-business/reference/businessinformation/rest/v1/accounts.locations) for additional
             * details.
             */
            businessProfileLocation?:
                string;
            /** Optional. Landing page URL of the campaign. */
            finalUrl?:
                string;
            /** Optional. Smart campaign keyword themes. This field may greatly improve suggestion accuracy and we recommend always setting it if possible. */
            keywordThemes?:
                GoogleAdsGoogleadsV12Common__KeywordThemeInfo[];
            /** Optional. The two letter advertising language for the Smart campaign to be constructed, default to 'en' if not set. */
            languageCode?:
                string;
            /** Optional. The targeting geo location by locations. */
            locationList?:
                GoogleAdsGoogleadsV12Services_SmartCampaignSuggestionInfo_LocationList;
            /** Optional. The targeting geo location by proximity. */
            proximity?:
                GoogleAdsGoogleadsV12Common__ProximityInfo;
        }
        interface GoogleAdsGoogleadsV12Services__SuggestGeoTargetConstantsRequest {
            /** Returned geo targets are restricted to this country code. */
            countryCode?:
                string;
            /** The geo target constant resource names to filter by. */
            geoTargets?:
                GoogleAdsGoogleadsV12Services_SuggestGeoTargetConstantsRequest_GeoTargets;
            /** If possible, returned geo targets are translated using this locale. If not, en is used by default. This is also used as a hint for returned geo targets. */
            locale?:
                string;
            /** The location names to search by. At most 25 names can be set. */
            locationNames?:
                GoogleAdsGoogleadsV12Services_SuggestGeoTargetConstantsRequest_LocationNames;
        }
        interface GoogleAdsGoogleadsV12Services__SuggestGeoTargetConstantsResponse {
            /** Geo target constant suggestions. */
            geoTargetConstantSuggestions?:
                GoogleAdsGoogleadsV12Services__GeoTargetConstantSuggestion[];
        }
        interface GoogleAdsGoogleadsV12Services__SuggestKeywordThemeConstantsRequest {
            /** Upper-case, two-letter country code as defined by ISO-3166. This for refining the scope of the query, default to 'US' if not set. */
            countryCode?:
                string;
            /** The two letter language code for get corresponding keyword theme for refining the scope of the query, default to 'en' if not set. */
            languageCode?:
                string;
            /** The query text of a keyword theme that will be used to map to similar keyword themes. For example, "plumber" or "roofer". */
            queryText?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__SuggestKeywordThemeConstantsResponse {
            /** Smart Campaign keyword theme suggestions. */
            keywordThemeConstants?:
                GoogleAdsGoogleadsV12Resources__KeywordThemeConstant[];
        }
        interface GoogleAdsGoogleadsV12Services__SuggestKeywordThemesRequest {
            /**
             * Required. Information to get keyword theme suggestions. Required fields: * suggestion_info.final_url * suggestion_info.language_code * suggestion_info.geo_target Recommended fields:
             * * suggestion_info.business_setting
             */
            suggestionInfo?:
                GoogleAdsGoogleadsV12Services__SmartCampaignSuggestionInfo;
        }
        interface GoogleAdsGoogleadsV12Services__SuggestKeywordThemesResponse {
            /** Smart campaign keyword theme suggestions. */
            keywordThemes?:
                GoogleAdsGoogleadsV12Services_SuggestKeywordThemesResponse_KeywordTheme[];
        }
        interface GoogleAdsGoogleadsV12Services__SuggestSmartCampaignAdRequest {
            /**
             * Required. Inputs used to suggest a Smart campaign ad. Required fields: final_url, language_code, keyword_themes. Optional but recommended fields to improve the quality of the
             * suggestion: business_setting and geo_target.
             */
            suggestionInfo?:
                GoogleAdsGoogleadsV12Services__SmartCampaignSuggestionInfo;
        }
        interface GoogleAdsGoogleadsV12Services__SuggestSmartCampaignAdResponse {
            /** Optional. Ad info includes 3 creative headlines and 2 creative descriptions. */
            adInfo?:
                GoogleAdsGoogleadsV12Common__SmartCampaignAdInfo;
        }
        interface GoogleAdsGoogleadsV12Services__SuggestSmartCampaignBudgetOptionsRequest {
            /** Required. The resource name of the campaign to get suggestion for. */
            campaign?:
                string;
            /** Required. Information needed to get budget options */
            suggestionInfo?:
                GoogleAdsGoogleadsV12Services__SmartCampaignSuggestionInfo;
        }
        interface GoogleAdsGoogleadsV12Services__SuggestSmartCampaignBudgetOptionsResponse {
            /** Optional. The highest budget option. */
            high?:
                GoogleAdsGoogleadsV12Services_SuggestSmartCampaignBudgetOptionsResponse_BudgetOption;
            /** Optional. The lowest budget option. */
            low?:
                GoogleAdsGoogleadsV12Services_SuggestSmartCampaignBudgetOptionsResponse_BudgetOption;
            /** Optional. The recommended budget option. */
            recommended?:
                GoogleAdsGoogleadsV12Services_SuggestSmartCampaignBudgetOptionsResponse_BudgetOption;
        }
        interface GoogleAdsGoogleadsV12Services__Targeting {
            /** Targeted age range. An unset value is equivalent to targeting all ages. */
            ageRange?:
                string;
            /** Targeted audiences. If not specified, does not target any specific audience. */
            audienceTargeting?:
                GoogleAdsGoogleadsV12Services__AudienceTargeting;
            /** Targeted devices. If not specified, targets all applicable devices. Applicable devices vary by product and region and can be obtained from ReachPlanService.ListPlannableProducts. */
            devices?:
                GoogleAdsGoogleadsV12Common__DeviceInfo[];
            /** Targeted genders. An unset value is equivalent to targeting MALE and FEMALE. */
            genders?:
                GoogleAdsGoogleadsV12Common__GenderInfo[];
            /**
             * Targetable network for the ad product. If not specified, targets all applicable networks. Applicable networks vary by product and region and can be obtained from
             * ReachPlanService.ListPlannableProducts.
             */
            network?:
                string;
            /**
             * The ID of the selected location. Plannable location IDs can be obtained from ReachPlanService.ListPlannableLocations. Requests must set either this field or
             * `plannable_location_ids`. This field is deprecated as of V12 and will be removed in a future release. Use `plannable_location_ids` instead.
             */
            plannableLocationId?:
                string;
            /**
             * The list of plannable location IDs to target with this forecast. If more than one ID is provided, all IDs must have the same `parent_country_id`. Planning for more than
             * `parent_county` is not supported. Plannable location IDs and their `parent_country_id` can be obtained from ReachPlanService.ListPlannableLocations. Requests must set either this
             * field or `plannable_location_id`.
             */
            plannableLocationIds?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Services__UnusableAdGroup {
            /** The AdGroup resource name. Resource name format: `customers/{customer_id}/adGroups/{ad_group_id}` */
            adGroup?:
                string;
            /** The Campaign resource name. Resource name format: `customers/{customer_id}/campaigns/{campaign_id}` */
            campaign?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__UploadCallConversionsRequest {
            /** Required. The conversions that are being uploaded. */
            conversions?:
                GoogleAdsGoogleadsV12Services__CallConversion[];
            /**
             * Required. If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only
             * if they are all valid. This should always be set to true. See https://developers.google.com/google-ads/api/docs/best-practices/partial-failures for more information about partial
             * failure.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__UploadCallConversionsResponse {
            /**
             * Errors that pertain to conversion failures in the partial failure mode. Returned when all errors occur inside the conversions. If any errors occur outside the conversions (for
             * example, auth errors), we return an RPC level error. See https://developers.google.com/google-ads/api/docs/best-practices/partial-failures for more information about partial
             * failure.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** Returned for successfully processed conversions. Proto will be empty for rows that received an error. Results are not returned when validate_only is true. */
            results?:
                GoogleAdsGoogleadsV12Services__CallConversionResult[];
        }
        interface GoogleAdsGoogleadsV12Services__UploadClickConversionsRequest {
            /** Required. The conversions that are being uploaded. */
            conversions?:
                GoogleAdsGoogleadsV12Services__ClickConversion[];
            /**
             * If true, the API will perform all upload checks and return errors if any are found. If false, it will perform only basic input validation, skip subsequent upload checks, and return
             * success even if no click was found for the provided `user_identifiers`. This setting only affects Enhanced conversions for leads uploads that use `user_identifiers` instead of
             * `GCLID`, `GBRAID`, or `WBRAID`. When uploading enhanced conversions for leads, you should upload all conversion events to the API, including those that may not come from Google Ads
             * campaigns. The upload of an event that is not from a Google Ads campaign will result in a `CLICK_NOT_FOUND` error if this field is set to `true`. Since these errors are expected for
             * such events, set this field to `false` so you can confirm your uploads are properly formatted but ignore `CLICK_NOT_FOUND` errors from all of the conversions that are not from a
             * Google Ads campaign. This will allow you to focus only on errors that you can address. Default is false.
             */
            debugEnabled?:
                boolean;
            /**
             * Required. If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only
             * if they are all valid. This should always be set to true. See https://developers.google.com/google-ads/api/docs/best-practices/partial-failures for more information about partial
             * failure.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__UploadClickConversionsResponse {
            /**
             * Errors that pertain to conversion failures in the partial failure mode. Returned when all errors occur inside the conversions. If any errors occur outside the conversions (for
             * example, auth errors), we return an RPC level error. See https://developers.google.com/google-ads/api/docs/best-practices/partial-failures for more information about partial
             * failure.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** Returned for successfully processed conversions. Proto will be empty for rows that received an error. Results are not returned when validate_only is true. */
            results?:
                GoogleAdsGoogleadsV12Services__ClickConversionResult[];
        }
        interface GoogleAdsGoogleadsV12Services__UploadConversionAdjustmentsRequest {
            /** Required. The conversion adjustments that are being uploaded. */
            conversionAdjustments?:
                GoogleAdsGoogleadsV12Services__ConversionAdjustment[];
            /**
             * Required. If true, successful operations will be carried out and invalid operations will return errors. If false, all operations will be carried out in one transaction if and only
             * if they are all valid. This should always be set to true. See https://developers.google.com/google-ads/api/docs/best-practices/partial-failures for more information about partial
             * failure.
             */
            partialFailure?:
                boolean;
            /** If true, the request is validated but not executed. Only errors are returned, not results. */
            validateOnly?:
                boolean;
        }
        interface GoogleAdsGoogleadsV12Services__UploadConversionAdjustmentsResponse {
            /**
             * Errors that pertain to conversion adjustment failures in the partial failure mode. Returned when all errors occur inside the adjustments. If any errors occur outside the adjustments
             * (for example, auth errors), we return an RPC level error. See https://developers.google.com/google-ads/api/docs/best-practices/partial-failures for more information about partial
             * failure.
             */
            partialFailureError?:
                GoogleRpc__Status;
            /** Returned for successfully processed conversion adjustments. Proto will be empty for rows that received an error. Results are not returned when validate_only is true. */
            results?:
                GoogleAdsGoogleadsV12Services__ConversionAdjustmentResult[];
        }
        interface GoogleAdsGoogleadsV12Services__UploadUserDataRequest {
            /** Metadata for data updates to a Customer Match user list. */
            customerMatchUserListMetadata?:
                GoogleAdsGoogleadsV12Common__CustomerMatchUserListMetadata;
            /** Required. The list of operations to be done. */
            operations?:
                GoogleAdsGoogleadsV12Services__UserDataOperation[];
        }
        interface GoogleAdsGoogleadsV12Services__UploadUserDataResponse {
            /** Number of upload data operations received by API. */
            receivedOperationsCount?:
                number;
            /** The date time at which the request was received by API, formatted as "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00". */
            uploadDateTime?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__UrlSeed {
            /** The URL to crawl in order to generate keyword ideas. */
            url?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__UserDataOperation {
            /** The list of user data to be appended to the user list. */
            create?:
                GoogleAdsGoogleadsV12Common__UserData;
            /** The list of user data to be removed from the user list. */
            remove?:
                GoogleAdsGoogleadsV12Common__UserData;
        }
        interface GoogleAdsGoogleadsV12Services__UserListOperation {
            /** Create operation: No resource name is expected for the new user list. */
            create?:
                GoogleAdsGoogleadsV12Resources__UserList;
            /** Remove operation: A resource name for the removed user list is expected, in this format: `customers/{customer_id}/userLists/{user_list_id}` */
            remove?:
                string;
            /** Update operation: The user list is expected to have a valid resource name. */
            update?:
                GoogleAdsGoogleadsV12Resources__UserList;
            /** FieldMask that determines which resource fields are modified in an update. */
            updateMask?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__YouTubeChannelAttributeMetadata {
            /** The approximate number of subscribers to the YouTube channel. */
            subscriberCount?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__YouTubeSelectLineUp {
            /** The ID of the YouTube Select Lineup. */
            lineupId?:
                string;
            /** The unique name of the YouTube Select Lineup. */
            lineupName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__YouTubeSelectSettings {
            /** Lineup for YouTube Select Targeting. */
            lineupId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_CallExtensionParameters {
            /** Call extensions to be added. This is a required field. */
            callExtensions?:
                GoogleAdsGoogleadsV12Common__CallFeedItem[];
        }
        interface GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_CalloutExtensionParameters {
            /** Callout extensions to be added. This is a required field. */
            calloutExtensions?:
                GoogleAdsGoogleadsV12Common__CalloutFeedItem[];
        }
        interface GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_CampaignBudgetParameters {
            /** New budget amount to set for target budget resource. This is a required field. */
            newBudgetAmountMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_ForecastingSetTargetRoasParameters {
            /** New campaign budget amount to set for a campaign resource. */
            campaignBudgetAmountMicros?:
                string;
            /** New target ROAS (revenue per unit of spend) to set for a campaign resource. The value is between 0.01 and 1000.0, inclusive. */
            targetRoas?:
                number;
        }
        interface GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_KeywordParameters {
            /** The ad group resource to add keyword to. This is a required field. */
            adGroup?:
                string;
            /** Optional, CPC bid to set for the keyword. If not set, keyword will use bid based on bidding strategy used by target ad group. */
            cpcBidMicros?:
                string;
            /** The match type of the keyword. This is a required field. */
            matchType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_MoveUnusedBudgetParameters {
            /** Budget amount to move from excess budget to constrained budget. This is a required field. */
            budgetMicrosToMove?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_RaiseTargetCpaBidTooLowParameters {
            /** Required. A number greater than 1.0 indicating the factor by which to increase the target CPA. This is a required field. */
            targetMultiplier?:
                number;
        }
        interface GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_ResponsiveSearchAdAssetParameters {
            /** Updated ad. The current ad's content will be replaced. */
            updatedAd?:
                GoogleAdsGoogleadsV12Resources__Ad;
        }
        interface GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_ResponsiveSearchAdImproveAdStrengthParameters {
            /** Updated ad. The current ad's content will be replaced. */
            updatedAd?:
                GoogleAdsGoogleadsV12Resources__Ad;
        }
        interface GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_ResponsiveSearchAdParameters {
            /** Required. New ad to add to recommended ad group. */
            ad?:
                GoogleAdsGoogleadsV12Resources__Ad;
        }
        interface GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_SitelinkExtensionParameters {
            /** Sitelinks to be added. This is a required field. */
            sitelinkExtensions?:
                GoogleAdsGoogleadsV12Common__SitelinkFeedItem[];
        }
        interface GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_TargetCpaOptInParameters {
            /** Optional, budget amount to set for the campaign. */
            newCampaignBudgetAmountMicros?:
                string;
            /** Average CPA to use for Target CPA bidding strategy. This is a required field. */
            targetCpaMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_TargetRoasOptInParameters {
            /** Optional, budget amount to set for the campaign. */
            newCampaignBudgetAmountMicros?:
                string;
            /**
             * Average ROAS (revenue per unit of spend) to use for Target ROAS bidding strategy. The value is between 0.01 and 1000.0, inclusive. This is a required field, unless
             * new_campaign_budget_amount_micros is set.
             */
            targetRoas?:
                number;
        }
        interface GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_TextAdParameters {
            /** New ad to add to recommended ad group. All necessary fields need to be set in this message. This is a required field. */
            ad?:
                GoogleAdsGoogleadsV12Resources__Ad;
        }
        interface GoogleAdsGoogleadsV12Services_ApplyRecommendationOperation_UseBroadMatchKeywordParameters {
            /** New budget amount to set for target budget resource. */
            newBudgetAmountMicros?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services_CartData_Item {
            /** The shopping id of the item. Must be equal to the Merchant Center product identifier. */
            productId?:
                string;
            /** Number of items sold. */
            quantity?:
                number;
            /** Unit price excluding tax, shipping, and any transaction level discounts. The currency code is the same as that in the ClickConversion message. */
            unitPrice?:
                number;
        }
        interface GoogleAdsGoogleadsV12Services_DismissRecommendationRequest_DismissRecommendationOperation {
            /** The resource name of the recommendation to dismiss. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services_DismissRecommendationResponse_DismissRecommendationResult {
            /** Returned for successful dismissals. */
            resourceName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services_SmartCampaignSuggestionInfo_BusinessContext {
            /** Optional. The name of the business. */
            businessName?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services_SmartCampaignSuggestionInfo_LocationList {
            /** Required. Locations. */
            locations?:
                GoogleAdsGoogleadsV12Common__LocationInfo[];
        }
        interface GoogleAdsGoogleadsV12Services_SuggestGeoTargetConstantsRequest_GeoTargets {
            /** A list of geo target constant resource names. */
            geoTargetConstants?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Services_SuggestGeoTargetConstantsRequest_LocationNames {
            /** A list of location names. */
            names?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Services_SuggestKeywordThemesResponse_KeywordTheme {
            /** A free-form text keyword theme. */
            freeFormKeywordTheme?:
                string;
            /** A Smart campaign keyword theme constant. */
            keywordThemeConstant?:
                GoogleAdsGoogleadsV12Resources__KeywordThemeConstant;
        }
        interface GoogleAdsGoogleadsV12Services_SuggestSmartCampaignBudgetOptionsResponse_BudgetOption {
            /** The amount of the budget, in the local currency for the account. Amount is specified in micros, where one million is equivalent to one currency unit. */
            dailyAmountMicros?:
                string;
            /** Metrics pertaining to the suggested budget, could be empty if there is not enough information to derive the estimates. */
            metrics?:
                GoogleAdsGoogleadsV12Services_SuggestSmartCampaignBudgetOptionsResponse_Metrics;
        }
        interface GoogleAdsGoogleadsV12Services_SuggestSmartCampaignBudgetOptionsResponse_Metrics {
            /** The estimated max daily clicks. */
            maxDailyClicks?:
                string;
            /** The estimated min daily clicks. */
            minDailyClicks?:
                string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleLongrunning__CancelOperationRequest {
        }
        interface GoogleLongrunning__ListOperationsResponse {
            /** The standard List next-page token. */
            nextPageToken?:
                string;
            /** A list of operations that matches the specified filter in the request. */
            operations?:
                GoogleLongrunning__Operation[];
        }
        interface GoogleLongrunning__Operation {
            /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
            done?:
                boolean;
            /** The error result of the operation in case of failure or cancellation. */
            error?:
                GoogleRpc__Status;
            /**
             * Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such
             * metadata. Any method that returns a long-running operation should document the metadata type, if any.
             */
            metadata?:
                { [P in string]: any };
            /**
             * The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending
             * with `operations/{unique_id}`.
             */
            name?:
                string;
            /**
             * The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original
             * method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original
             * method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
             */
            response?:
                { [P in string]: any };
        }
        interface GoogleLongrunning__WaitOperationRequest {
            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also
             * specified, the shorter one will be used.
             */
            timeout?:
                string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleProtobuf__Empty {
        }
        interface GoogleRpc__Status {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?:
                number;
            /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
            details?:
                Array<{ [P in string]: any }>;
            /**
             * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the
             * client.
             */
            message?:
                string;
        }
        interface AudienceInsightsResource {
            /**
             * Lists date ranges for which audience insights data can be requested. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [FieldError]() [HeaderError]()
             * [InternalError]() [QuotaError]() [RangeError]() [RequestError]()
             */
            listInsightsEligibleDates(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__ListInsightsEligibleDatesRequest;
            }): Request<GoogleAdsGoogleadsV12Services__ListInsightsEligibleDatesResponse>;
            listInsightsEligibleDates(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__ListInsightsEligibleDatesRequest): Request<GoogleAdsGoogleadsV12Services__ListInsightsEligibleDatesResponse>;
        }
        interface AccountBudgetProposalsResource {
            /**
             * Creates, updates, or removes account budget proposals. Operation statuses are returned. List of thrown errors: [AccountBudgetProposalError]() [AuthenticationError]()
             * [AuthorizationError]() [DatabaseError]() [DateError]() [FieldError]() [FieldMaskError]() [HeaderError]() [InternalError]() [MutateError]() [QuotaError]() [RequestError]()
             * [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAccountBudgetProposalRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAccountBudgetProposalResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAccountBudgetProposalRequest): Request<GoogleAdsGoogleadsV12Services__MutateAccountBudgetProposalResponse>;
        }
        interface AccountLinksResource {
            /**
             * Creates an account link. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]() [FieldError]() [HeaderError]() [InternalError]() [MutateError]()
             * [QuotaError]() [RequestError]() [ThirdPartyAppAnalyticsLinkError]()
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer for which the account link is created. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__CreateAccountLinkRequest;
            }): Request<GoogleAdsGoogleadsV12Services__CreateAccountLinkResponse>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer for which the account link is created. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__CreateAccountLinkRequest): Request<GoogleAdsGoogleadsV12Services__CreateAccountLinkResponse>;
            /**
             * Creates or removes an account link. From V5, create is not supported through AccountLinkService.MutateAccountLink. Use AccountLinkService.CreateAccountLink instead. List of thrown
             * errors: [AccountLinkError]() [AuthenticationError]() [AuthorizationError]() [FieldMaskError]() [HeaderError]() [InternalError]() [MutateError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAccountLinkRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAccountLinkResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAccountLinkRequest): Request<GoogleAdsGoogleadsV12Services__MutateAccountLinkResponse>;
        }
        interface AdGroupAdLabelsResource {
            /**
             * Creates and removes ad group ad labels. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]() [HeaderError]()
             * [InternalError]() [LabelError]() [MutateError]() [NewResourceCreationError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose ad group ad labels are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAdGroupAdLabelsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupAdLabelsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose ad group ad labels are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAdGroupAdLabelsRequest): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupAdLabelsResponse>;
        }
        interface AdGroupAdsResource {
            /**
             * Creates, updates, or removes ads. Operation statuses are returned. List of thrown errors: [AdCustomizerError]() [AdError]() [AdGroupAdError]() [AdSharingError]() [AdxError]()
             * [AssetError]() [AssetLinkError]() [AuthenticationError]() [AuthorizationError]() [CollectionSizeError]() [ContextError]() [DatabaseError]() [DateError]() [DistinctError]()
             * [FeedAttributeReferenceError]() [FieldError]() [FieldMaskError]() [FunctionError]() [FunctionParsingError]() [HeaderError]() [IdError]() [ImageError]() [InternalError]()
             * [ListOperationError]() [MediaBundleError]() [MediaFileError]() [MutateError]() [NewResourceCreationError]() [NotEmptyError]() [NullError]() [OperationAccessDeniedError]()
             * [OperatorError]() [PolicyFindingError]() [PolicyValidationParameterError]() [PolicyViolationError]() [QuotaError]() [RangeError]() [RequestError]()
             * [ResourceCountLimitExceededError]() [SizeLimitError]() [StringFormatError]() [StringLengthError]() [UrlFieldError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ads are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAdGroupAdsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupAdsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ads are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAdGroupAdsRequest): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupAdsResponse>;
        }
        interface AdGroupAssetsResource {
            /**
             * Creates, updates, or removes ad group assets. Operation statuses are returned. List of thrown errors: [AssetLinkError]() [AuthenticationError]() [AuthorizationError]()
             * [ContextError]() [FieldError]() [HeaderError]() [InternalError]() [MutateError]() [NotAllowlistedError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ad group assets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAdGroupAssetsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupAssetsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ad group assets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAdGroupAssetsRequest): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupAssetsResponse>;
        }
        interface AdGroupAssetSetsResource {
            /** Creates, or removes ad group asset sets. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ad group asset sets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAdGroupAssetSetsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupAssetSetsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ad group asset sets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAdGroupAssetSetsRequest): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupAssetSetsResponse>;
        }
        interface AdGroupBidModifiersResource {
            /**
             * Creates, updates, or removes ad group bid modifiers. Operation statuses are returned. List of thrown errors: [AdGroupBidModifierError]() [AuthenticationError]()
             * [AuthorizationError]() [ContextError]() [CriterionError]() [DatabaseError]() [DistinctError]() [FieldError]() [FieldMaskError]() [HeaderError]() [IdError]() [InternalError]()
             * [MutateError]() [NewResourceCreationError]() [NotEmptyError]() [OperatorError]() [QuotaError]() [RangeError]() [RequestError]() [ResourceCountLimitExceededError]()
             * [SizeLimitError]() [StringFormatError]() [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose ad group bid modifiers are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAdGroupBidModifiersRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupBidModifiersResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose ad group bid modifiers are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAdGroupBidModifiersRequest): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupBidModifiersResponse>;
        }
        interface AdGroupCriteriaResource {
            /**
             * Creates, updates, or removes criteria. Operation statuses are returned. List of thrown errors: [AdGroupCriterionError]() [AdxError]() [AuthenticationError]() [AuthorizationError]()
             * [BiddingError]() [BiddingStrategyError]() [CollectionSizeError]() [ContextError]() [CriterionError]() [DatabaseError]() [DateError]() [DistinctError]() [FieldError]()
             * [FieldMaskError]() [HeaderError]() [IdError]() [InternalError]() [MultiplierError]() [MutateError]() [NewResourceCreationError]() [NotEmptyError]() [NullError]()
             * [OperationAccessDeniedError]() [OperatorError]() [PolicyViolationError]() [QuotaError]() [RangeError]() [RequestError]() [ResourceCountLimitExceededError]() [SizeLimitError]()
             * [StringFormatError]() [StringLengthError]() [UrlFieldError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose criteria are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAdGroupCriteriaRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupCriteriaResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose criteria are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAdGroupCriteriaRequest): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupCriteriaResponse>;
        }
        interface AdGroupCriterionCustomizersResource {
            /** Creates, updates or removes ad group criterion customizers. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ad group criterion customizers are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionCustomizersRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionCustomizersResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ad group criterion customizers are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionCustomizersRequest): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionCustomizersResponse>;
        }
        interface AdGroupCriterionLabelsResource {
            /**
             * Creates and removes ad group criterion labels. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]()
             * [FieldError]() [HeaderError]() [InternalError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose ad group criterion labels are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionLabelsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionLabelsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose ad group criterion labels are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionLabelsRequest): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupCriterionLabelsResponse>;
        }
        interface AdGroupCustomizersResource {
            /** Creates, updates or removes ad group customizers. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ad group customizers are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAdGroupCustomizersRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupCustomizersResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ad group customizers are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAdGroupCustomizersRequest): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupCustomizersResponse>;
        }
        interface AdGroupExtensionSettingsResource {
            /**
             * Creates, updates, or removes ad group extension settings. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]()
             * [CollectionSizeError]() [CriterionError]() [DatabaseError]() [DateError]() [DistinctError]() [ExtensionSettingError]() [FieldError]() [FieldMaskError]() [HeaderError]() [IdError]()
             * [InternalError]() [ListOperationError]() [MutateError]() [NewResourceCreationError]() [NotEmptyError]() [NullError]() [OperationAccessDeniedError]() [OperatorError]() [QuotaError]()
             * [RangeError]() [RequestError]() [ResourceCountLimitExceededError]() [SizeLimitError]() [StringFormatError]() [StringLengthError]() [UrlFieldError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ad group extension settings are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAdGroupExtensionSettingsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupExtensionSettingsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ad group extension settings are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAdGroupExtensionSettingsRequest): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupExtensionSettingsResponse>;
        }
        interface AdGroupFeedsResource {
            /**
             * Creates, updates, or removes ad group feeds. Operation statuses are returned. List of thrown errors: [AdGroupFeedError]() [AuthenticationError]() [AuthorizationError]()
             * [CollectionSizeError]() [DatabaseError]() [DistinctError]() [FieldError]() [FunctionError]() [FunctionParsingError]() [HeaderError]() [IdError]() [InternalError]() [MutateError]()
             * [NotEmptyError]() [NullError]() [OperatorError]() [QuotaError]() [RangeError]() [RequestError]() [SizeLimitError]() [StringFormatError]() [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ad group feeds are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAdGroupFeedsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupFeedsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ad group feeds are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAdGroupFeedsRequest): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupFeedsResponse>;
        }
        interface AdGroupLabelsResource {
            /**
             * Creates and removes ad group labels. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]() [FieldError]()
             * [HeaderError]() [InternalError]() [LabelError]() [MutateError]() [NewResourceCreationError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose ad group labels are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAdGroupLabelsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupLabelsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose ad group labels are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAdGroupLabelsRequest): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupLabelsResponse>;
        }
        interface AdGroupsResource {
            /**
             * Creates, updates, or removes ad groups. Operation statuses are returned. List of thrown errors: [AdGroupError]() [AdxError]() [AuthenticationError]() [AuthorizationError]()
             * [BiddingError]() [BiddingStrategyError]() [DatabaseError]() [DateError]() [DistinctError]() [FieldError]() [FieldMaskError]() [HeaderError]() [IdError]() [InternalError]()
             * [ListOperationError]() [MultiplierError]() [MutateError]() [NewResourceCreationError]() [NotEmptyError]() [NullError]() [OperationAccessDeniedError]() [OperatorError]()
             * [QuotaError]() [RangeError]() [RequestError]() [ResourceCountLimitExceededError]() [SettingError]() [SizeLimitError]() [StringFormatError]() [StringLengthError]() [UrlFieldError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ad groups are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAdGroupsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ad groups are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAdGroupsRequest): Request<GoogleAdsGoogleadsV12Services__MutateAdGroupsResponse>;
        }
        interface AdParametersResource {
            /**
             * Creates, updates, or removes ad parameters. Operation statuses are returned. List of thrown errors: [AdParameterError]() [AuthenticationError]() [AuthorizationError]()
             * [ContextError]() [DatabaseError]() [FieldError]() [FieldMaskError]() [HeaderError]() [InternalError]() [MutateError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ad parameters are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAdParametersRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAdParametersResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ad parameters are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAdParametersRequest): Request<GoogleAdsGoogleadsV12Services__MutateAdParametersResponse>;
        }
        interface AdsResource {
            /** Returns the requested ad in full detail. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [QuotaError]() [RequestError]() */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The resource name of the ad to fetch. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleAdsGoogleadsV12Resources__Ad>;
            /**
             * Updates ads. Operation statuses are returned. Updating ads is not supported for TextAd, ExpandedDynamicSearchAd, GmailAd and ImageAd. List of thrown errors: [AdCustomizerError]()
             * [AdError]() [AdSharingError]() [AdxError]() [AssetError]() [AssetLinkError]() [AuthenticationError]() [AuthorizationError]() [CollectionSizeError]() [DatabaseError]() [DateError]()
             * [DistinctError]() [FeedAttributeReferenceError]() [FieldError]() [FieldMaskError]() [FunctionError]() [FunctionParsingError]() [HeaderError]() [IdError]() [ImageError]()
             * [InternalError]() [ListOperationError]() [MediaBundleError]() [MediaFileError]() [MutateError]() [NewResourceCreationError]() [NotEmptyError]() [NullError]() [OperatorError]()
             * [PolicyFindingError]() [PolicyViolationError]() [QuotaError]() [RangeError]() [RequestError]() [SizeLimitError]() [StringFormatError]() [StringLengthError]() [UrlFieldError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ads are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAdsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAdsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose ads are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAdsRequest): Request<GoogleAdsGoogleadsV12Services__MutateAdsResponse>;
        }
        interface AssetGroupAssetsResource {
            /** Creates, updates or removes asset group assets. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose asset group assets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAssetGroupAssetsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAssetGroupAssetsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose asset group assets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAssetGroupAssetsRequest): Request<GoogleAdsGoogleadsV12Services__MutateAssetGroupAssetsResponse>;
        }
        interface AssetGroupListingGroupFiltersResource {
            /** Creates, updates or removes asset group listing group filters. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose asset group listing group filters are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAssetGroupListingGroupFiltersRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAssetGroupListingGroupFiltersResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose asset group listing group filters are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAssetGroupListingGroupFiltersRequest): Request<GoogleAdsGoogleadsV12Services__MutateAssetGroupListingGroupFiltersResponse>;
        }
        interface AssetGroupsResource {
            /** Creates, updates or removes asset groups. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose asset groups are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAssetGroupsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAssetGroupsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose asset groups are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAssetGroupsRequest): Request<GoogleAdsGoogleadsV12Services__MutateAssetGroupsResponse>;
        }
        interface AssetGroupSignalsResource {
            /** Creates or removes asset group signals. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose asset group signals are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAssetGroupSignalsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAssetGroupSignalsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose asset group signals are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAssetGroupSignalsRequest): Request<GoogleAdsGoogleadsV12Services__MutateAssetGroupSignalsResponse>;
        }
        interface AssetsResource {
            /**
             * Creates assets. Operation statuses are returned. List of thrown errors: [AssetError]() [AuthenticationError]() [AuthorizationError]() [CollectionSizeError]() [CurrencyCodeError]()
             * [DatabaseError]() [DateError]() [DistinctError]() [FieldError]() [FieldMaskError]() [HeaderError]() [IdError]() [InternalError]() [ListOperationError]() [MediaUploadError]()
             * [MutateError]() [NotAllowlistedError]() [NotEmptyError]() [OperatorError]() [QuotaError]() [RangeError]() [RequestError]() [SizeLimitError]() [StringFormatError]()
             * [StringLengthError]() [UrlFieldError]() [YoutubeVideoRegistrationError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose assets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAssetsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAssetsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose assets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAssetsRequest): Request<GoogleAdsGoogleadsV12Services__MutateAssetsResponse>;
        }
        interface AssetSetAssetsResource {
            /** Creates, updates or removes asset set assets. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose asset set assets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAssetSetAssetsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAssetSetAssetsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose asset set assets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAssetSetAssetsRequest): Request<GoogleAdsGoogleadsV12Services__MutateAssetSetAssetsResponse>;
        }
        interface AssetSetsResource {
            /** Creates, updates or removes asset sets. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose asset sets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAssetSetsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAssetSetsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose asset sets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAssetSetsRequest): Request<GoogleAdsGoogleadsV12Services__MutateAssetSetsResponse>;
        }
        interface AudiencesResource {
            /** Creates audiences. Operation statuses are returned. List of thrown errors: [AudienceError]() */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose audiences are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateAudiencesRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateAudiencesResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose audiences are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateAudiencesRequest): Request<GoogleAdsGoogleadsV12Services__MutateAudiencesResponse>;
        }
        interface BatchJobsResource {
            /**
             * Add operations to the batch job. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [BatchJobError]() [HeaderError]() [InternalError]() [QuotaError]()
             * [RequestError]() [ResourceCountLimitExceededError]()
             */
            addOperations(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The resource name of the batch job. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__AddBatchJobOperationsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__AddBatchJobOperationsResponse>;
            addOperations(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The resource name of the batch job. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__AddBatchJobOperationsRequest): Request<GoogleAdsGoogleadsV12Services__AddBatchJobOperationsResponse>;
            /**
             * Returns the results of the batch job. The job must be done. Supports standard list paging. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [BatchJobError]()
             * [HeaderError]() [InternalError]() [QuotaError]() [RequestError]()
             */
            listResults(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Number of elements to retrieve in a single page. When a page request is too large, the server may decide to further limit the number of returned resources. */
                pageSize?:
                    number;
                /**
                 * Token of the page to retrieve. If not specified, the first page of results will be returned. Use the value obtained from `next_page_token` in the previous response in order to
                 * request the next page of results.
                 */
                pageToken?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The resource name of the batch job whose results are being listed. */
                resourceName:
                    string;
                /** The response content type setting. Determines whether the mutable resource or just the resource name should be returned. */
                responseContentType?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleAdsGoogleadsV12Services__ListBatchJobResultsResponse>;
            /**
             * Mutates a batch job. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [QuotaError]() [RequestError]()
             * [ResourceCountLimitExceededError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer for which to create a batch job. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateBatchJobRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateBatchJobResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer for which to create a batch job. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateBatchJobRequest): Request<GoogleAdsGoogleadsV12Services__MutateBatchJobResponse>;
            /**
             * Runs the batch job. The Operation.metadata field type is BatchJobMetadata. When finished, the long running operation will not contain errors or a response. Instead, use
             * ListBatchJobResults to get the results of the job. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [BatchJobError]() [HeaderError]() [InternalError]()
             * [QuotaError]() [RequestError]()
             */
            run(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The resource name of the BatchJob to run. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__RunBatchJobRequest;
            }): Request<GoogleLongrunning__Operation>;
            run(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The resource name of the BatchJob to run. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__RunBatchJobRequest): Request<GoogleLongrunning__Operation>;
        }
        interface BiddingDataExclusionsResource {
            /** Creates, updates, or removes data exclusions. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose data exclusions are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateBiddingDataExclusionsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateBiddingDataExclusionsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose data exclusions are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateBiddingDataExclusionsRequest): Request<GoogleAdsGoogleadsV12Services__MutateBiddingDataExclusionsResponse>;
        }
        interface BiddingSeasonalityAdjustmentsResource {
            /** Creates, updates, or removes seasonality adjustments. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose seasonality adjustments are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateBiddingSeasonalityAdjustmentsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateBiddingSeasonalityAdjustmentsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose seasonality adjustments are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateBiddingSeasonalityAdjustmentsRequest): Request<GoogleAdsGoogleadsV12Services__MutateBiddingSeasonalityAdjustmentsResponse>;
        }
        interface BiddingStrategiesResource {
            /**
             * Creates, updates, or removes bidding strategies. Operation statuses are returned. List of thrown errors: [AdxError]() [AuthenticationError]() [AuthorizationError]() [BiddingError]()
             * [BiddingStrategyError]() [ContextError]() [DatabaseError]() [DateError]() [DistinctError]() [FieldError]() [FieldMaskError]() [HeaderError]() [IdError]() [InternalError]()
             * [MutateError]() [NewResourceCreationError]() [NotEmptyError]() [NullError]() [OperationAccessDeniedError]() [OperatorError]() [QuotaError]() [RangeError]() [RequestError]()
             * [SizeLimitError]() [StringFormatError]() [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose bidding strategies are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateBiddingStrategiesRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateBiddingStrategiesResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose bidding strategies are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateBiddingStrategiesRequest): Request<GoogleAdsGoogleadsV12Services__MutateBiddingStrategiesResponse>;
        }
        interface BillingSetupsResource {
            /**
             * Creates a billing setup, or cancels an existing billing setup. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [BillingSetupError]() [DateError]()
             * [FieldError]() [HeaderError]() [InternalError]() [MutateError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. Id of the customer to apply the billing setup mutate operation to. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateBillingSetupRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateBillingSetupResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. Id of the customer to apply the billing setup mutate operation to. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateBillingSetupRequest): Request<GoogleAdsGoogleadsV12Services__MutateBillingSetupResponse>;
        }
        interface CampaignAssetsResource {
            /**
             * Creates, updates, or removes campaign assets. Operation statuses are returned. List of thrown errors: [AssetLinkError]() [AuthenticationError]() [AuthorizationError]()
             * [ContextError]() [DatabaseError]() [FieldError]() [HeaderError]() [InternalError]() [MutateError]() [NotAllowlistedError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign assets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCampaignAssetsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCampaignAssetsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign assets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCampaignAssetsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCampaignAssetsResponse>;
        }
        interface CampaignAssetSetsResource {
            /** Creates, updates or removes campaign asset sets. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign asset sets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCampaignAssetSetsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCampaignAssetSetsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign asset sets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCampaignAssetSetsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCampaignAssetSetsResponse>;
        }
        interface CampaignBidModifiersResource {
            /**
             * Creates, updates, or removes campaign bid modifiers. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [ContextError]()
             * [CriterionError]() [DatabaseError]() [DateError]() [DistinctError]() [FieldError]() [HeaderError]() [IdError]() [InternalError]() [MutateError]() [NewResourceCreationError]()
             * [NotEmptyError]() [NullError]() [OperatorError]() [QuotaError]() [RangeError]() [RequestError]() [SizeLimitError]() [StringFormatError]() [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose campaign bid modifiers are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCampaignBidModifiersRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCampaignBidModifiersResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose campaign bid modifiers are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCampaignBidModifiersRequest): Request<GoogleAdsGoogleadsV12Services__MutateCampaignBidModifiersResponse>;
        }
        interface CampaignBudgetsResource {
            /**
             * Creates, updates, or removes campaign budgets. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CampaignBudgetError]()
             * [DatabaseError]() [DistinctError]() [FieldError]() [FieldMaskError]() [HeaderError]() [InternalError]() [MutateError]() [NewResourceCreationError]() [OperationAccessDeniedError]()
             * [QuotaError]() [RangeError]() [RequestError]() [ResourceCountLimitExceededError]() [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign budgets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCampaignBudgetsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCampaignBudgetsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign budgets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCampaignBudgetsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCampaignBudgetsResponse>;
        }
        interface CampaignConversionGoalsResource {
            /** Creates, updates or removes campaign conversion goals. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign conversion goals are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCampaignConversionGoalsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCampaignConversionGoalsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign conversion goals are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCampaignConversionGoalsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCampaignConversionGoalsResponse>;
        }
        interface CampaignCriteriaResource {
            /**
             * Creates, updates, or removes criteria. Operation statuses are returned. List of thrown errors: [AdxError]() [AuthenticationError]() [AuthorizationError]() [CampaignCriterionError]()
             * [CollectionSizeError]() [ContextError]() [CriterionError]() [DatabaseError]() [DistinctError]() [FieldError]() [FieldMaskError]() [FunctionError]() [HeaderError]() [IdError]()
             * [InternalError]() [MutateError]() [NewResourceCreationError]() [NotEmptyError]() [NullError]() [OperationAccessDeniedError]() [OperatorError]() [QuotaError]() [RangeError]()
             * [RegionCodeError]() [RequestError]() [ResourceCountLimitExceededError]() [SizeLimitError]() [StringFormatError]() [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose criteria are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCampaignCriteriaRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCampaignCriteriaResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose criteria are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCampaignCriteriaRequest): Request<GoogleAdsGoogleadsV12Services__MutateCampaignCriteriaResponse>;
        }
        interface CampaignCustomizersResource {
            /** Creates, updates or removes campaign customizers. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign customizers are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCampaignCustomizersRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCampaignCustomizersResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign customizers are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCampaignCustomizersRequest): Request<GoogleAdsGoogleadsV12Services__MutateCampaignCustomizersResponse>;
        }
        interface CampaignDraftsResource {
            /**
             * Returns all errors that occurred during CampaignDraft promote. Throws an error if called before campaign draft is promoted. Supports standard list paging. List of thrown errors:
             * [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [QuotaError]() [RequestError]()
             */
            listAsyncErrors(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Number of elements to retrieve in a single page. When a page request is too large, the server may decide to further limit the number of returned resources. */
                pageSize?:
                    number;
                /**
                 * Token of the page to retrieve. If not specified, the first page of results will be returned. Use the value obtained from `next_page_token` in the previous response in order to
                 * request the next page of results.
                 */
                pageToken?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The name of the campaign draft from which to retrieve the async errors. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleAdsGoogleadsV12Services__ListCampaignDraftAsyncErrorsResponse>;
            /**
             * Creates, updates, or removes campaign drafts. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CampaignDraftError]()
             * [DatabaseError]() [FieldError]() [HeaderError]() [InternalError]() [MutateError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign drafts are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCampaignDraftsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCampaignDraftsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign drafts are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCampaignDraftsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCampaignDraftsResponse>;
            /**
             * Promotes the changes in a draft back to the base campaign. This method returns a Long Running Operation (LRO) indicating if the Promote is done. Use [Operations.GetOperation] to
             * poll the LRO until it is done. Only a done status is returned in the response. See the status in the Campaign Draft resource to determine if the promotion was successful. If the LRO
             * failed, use CampaignDraftService.ListCampaignDraftAsyncErrors to view the list of error reasons. List of thrown errors: [AuthenticationError]() [AuthorizationError]()
             * [CampaignDraftError]() [HeaderError]() [InternalError]() [QuotaError]() [RequestError]()
             */
            promote(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The resource name of the campaign draft to promote. */
                campaignDraft:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__PromoteCampaignDraftRequest;
            }): Request<GoogleLongrunning__Operation>;
            promote(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The resource name of the campaign draft to promote. */
                campaignDraft:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__PromoteCampaignDraftRequest): Request<GoogleLongrunning__Operation>;
        }
        interface CampaignExtensionSettingsResource {
            /**
             * Creates, updates, or removes campaign extension settings. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]()
             * [CollectionSizeError]() [CriterionError]() [DatabaseError]() [DateError]() [DistinctError]() [ExtensionSettingError]() [FieldError]() [FieldMaskError]() [HeaderError]() [IdError]()
             * [InternalError]() [ListOperationError]() [MutateError]() [NewResourceCreationError]() [NotEmptyError]() [NullError]() [OperationAccessDeniedError]() [OperatorError]() [QuotaError]()
             * [RangeError]() [RequestError]() [SizeLimitError]() [StringFormatError]() [StringLengthError]() [UrlFieldError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign extension settings are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCampaignExtensionSettingsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCampaignExtensionSettingsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign extension settings are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCampaignExtensionSettingsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCampaignExtensionSettingsResponse>;
        }
        interface CampaignFeedsResource {
            /**
             * Creates, updates, or removes campaign feeds. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CampaignFeedError]()
             * [CollectionSizeError]() [DatabaseError]() [DistinctError]() [FieldError]() [FunctionError]() [FunctionParsingError]() [HeaderError]() [IdError]() [InternalError]() [MutateError]()
             * [NotEmptyError]() [NullError]() [OperationAccessDeniedError]() [OperatorError]() [QuotaError]() [RangeError]() [RequestError]() [SizeLimitError]() [StringFormatError]()
             * [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign feeds are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCampaignFeedsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCampaignFeedsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign feeds are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCampaignFeedsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCampaignFeedsResponse>;
        }
        interface CampaignGroupsResource {
            /** Creates, updates, or removes campaign groups. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign groups are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCampaignGroupsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCampaignGroupsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign groups are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCampaignGroupsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCampaignGroupsResponse>;
        }
        interface CampaignLabelsResource {
            /**
             * Creates and removes campaign-label relationships. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]()
             * [FieldError]() [HeaderError]() [InternalError]() [LabelError]() [MutateError]() [NewResourceCreationError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose campaign-label relationships are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCampaignLabelsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCampaignLabelsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose campaign-label relationships are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCampaignLabelsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCampaignLabelsResponse>;
        }
        interface CampaignsResource {
            /**
             * Creates, updates, or removes campaigns. Operation statuses are returned. List of thrown errors: [AdxError]() [AuthenticationError]() [AuthorizationError]() [BiddingError]()
             * [BiddingStrategyError]() [CampaignBudgetError]() [CampaignError]() [ContextError]() [DatabaseError]() [DateError]() [DateRangeError]() [DistinctError]() [FieldError]()
             * [FieldMaskError]() [HeaderError]() [IdError]() [InternalError]() [ListOperationError]() [MutateError]() [NewResourceCreationError]() [NotAllowlistedError]() [NotEmptyError]()
             * [NullError]() [OperationAccessDeniedError]() [OperatorError]() [QuotaError]() [RangeError]() [RegionCodeError]() [RequestError]() [ResourceCountLimitExceededError]()
             * [SettingError]() [SizeLimitError]() [StringFormatError]() [StringLengthError]() [UrlFieldError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaigns are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCampaignsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCampaignsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaigns are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCampaignsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCampaignsResponse>;
        }
        interface CampaignSharedSetsResource {
            /**
             * Creates or removes campaign shared sets. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CampaignSharedSetError]()
             * [ContextError]() [DatabaseError]() [DateError]() [DistinctError]() [FieldError]() [HeaderError]() [IdError]() [InternalError]() [MutateError]() [NewResourceCreationError]()
             * [NotEmptyError]() [NullError]() [OperatorError]() [QuotaError]() [RangeError]() [RequestError]() [SizeLimitError]() [StringFormatError]() [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign shared sets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCampaignSharedSetsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCampaignSharedSetsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign shared sets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCampaignSharedSetsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCampaignSharedSetsResponse>;
        }
        interface ConversionActionsResource {
            /**
             * Creates, updates or removes conversion actions. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [ConversionActionError]()
             * [CurrencyCodeError]() [DatabaseError]() [FieldError]() [FieldMaskError]() [HeaderError]() [InternalError]() [MutateError]() [NewResourceCreationError]() [QuotaError]()
             * [RangeError]() [RequestError]() [ResourceCountLimitExceededError]() [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose conversion actions are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateConversionActionsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateConversionActionsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose conversion actions are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateConversionActionsRequest): Request<GoogleAdsGoogleadsV12Services__MutateConversionActionsResponse>;
        }
        interface ConversionCustomVariablesResource {
            /**
             * Creates or updates conversion custom variables. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]()
             * [ConversionCustomVariableError]() [DatabaseError]() [HeaderError]() [InternalError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose conversion custom variables are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateConversionCustomVariablesRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateConversionCustomVariablesResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose conversion custom variables are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateConversionCustomVariablesRequest): Request<GoogleAdsGoogleadsV12Services__MutateConversionCustomVariablesResponse>;
        }
        interface ConversionGoalCampaignConfigsResource {
            /** Creates, updates or removes conversion goal campaign config. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose custom conversion goals are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateConversionGoalCampaignConfigsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateConversionGoalCampaignConfigsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose custom conversion goals are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateConversionGoalCampaignConfigsRequest): Request<GoogleAdsGoogleadsV12Services__MutateConversionGoalCampaignConfigsResponse>;
        }
        interface ConversionValueRulesResource {
            /** Creates, updates, or removes conversion value rules. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose conversion value rules are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateConversionValueRulesRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateConversionValueRulesResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose conversion value rules are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateConversionValueRulesRequest): Request<GoogleAdsGoogleadsV12Services__MutateConversionValueRulesResponse>;
        }
        interface ConversionValueRuleSetsResource {
            /** Creates, updates or removes conversion value rule sets. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose conversion value rule sets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateConversionValueRuleSetsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateConversionValueRuleSetsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose conversion value rule sets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateConversionValueRuleSetsRequest): Request<GoogleAdsGoogleadsV12Services__MutateConversionValueRuleSetsResponse>;
        }
        interface CustomAudiencesResource {
            /**
             * Creates or updates custom audiences. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CustomAudienceError]()
             * [CustomInterestError]() [FieldError]() [FieldMaskError]() [HeaderError]() [InternalError]() [MutateError]() [OperationAccessDeniedError]() [PolicyViolationError]() [QuotaError]()
             * [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose custom audiences are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomAudiencesRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomAudiencesResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose custom audiences are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomAudiencesRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomAudiencesResponse>;
        }
        interface CustomConversionGoalsResource {
            /** Creates, updates or removes custom conversion goals. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose custom conversion goals are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomConversionGoalsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomConversionGoalsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose custom conversion goals are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomConversionGoalsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomConversionGoalsResponse>;
        }
        interface CustomerAssetsResource {
            /**
             * Creates, updates, or removes customer assets. Operation statuses are returned. List of thrown errors: [AssetLinkError]() [AuthenticationError]() [AuthorizationError]()
             * [FieldError]() [HeaderError]() [InternalError]() [MutateError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customer assets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomerAssetsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomerAssetsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customer assets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomerAssetsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomerAssetsResponse>;
        }
        interface CustomerAssetSetsResource {
            /** Creates, or removes customer asset sets. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customer asset sets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomerAssetSetsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomerAssetSetsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customer asset sets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomerAssetSetsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomerAssetSetsResponse>;
        }
        interface CustomerClientLinksResource {
            /**
             * Creates or updates a customer client link. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]() [FieldError]()
             * [FieldMaskError]() [HeaderError]() [InternalError]() [ManagerLinkError]() [MutateError]() [NewResourceCreationError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customer link are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomerClientLinkRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomerClientLinkResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customer link are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomerClientLinkRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomerClientLinkResponse>;
        }
        interface CustomerConversionGoalsResource {
            /** Creates, updates or removes customer conversion goals. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customer conversion goals are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomerConversionGoalsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomerConversionGoalsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customer conversion goals are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomerConversionGoalsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomerConversionGoalsResponse>;
        }
        interface CustomerCustomizersResource {
            /** Creates, updates or removes customer customizers. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customer customizers are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomerCustomizersRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomerCustomizersResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customer customizers are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomerCustomizersRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomerCustomizersResponse>;
        }
        interface CustomerExtensionSettingsResource {
            /**
             * Creates, updates, or removes customer extension settings. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]()
             * [CollectionSizeError]() [CriterionError]() [DatabaseError]() [DateError]() [DistinctError]() [ExtensionSettingError]() [FieldError]() [HeaderError]() [IdError]() [InternalError]()
             * [ListOperationError]() [MutateError]() [NewResourceCreationError]() [NotEmptyError]() [NullError]() [OperatorError]() [QuotaError]() [RangeError]() [RequestError]()
             * [SizeLimitError]() [StringFormatError]() [StringLengthError]() [UrlFieldError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customer extension settings are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomerExtensionSettingsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomerExtensionSettingsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customer extension settings are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomerExtensionSettingsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomerExtensionSettingsResponse>;
        }
        interface CustomerFeedsResource {
            /**
             * Creates, updates, or removes customer feeds. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CollectionSizeError]()
             * [CustomerFeedError]() [DatabaseError]() [DistinctError]() [FieldError]() [FieldMaskError]() [FunctionError]() [FunctionParsingError]() [HeaderError]() [IdError]() [InternalError]()
             * [MutateError]() [NotEmptyError]() [OperatorError]() [QuotaError]() [RangeError]() [RequestError]() [SizeLimitError]() [StringFormatError]() [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customer feeds are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomerFeedsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomerFeedsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customer feeds are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomerFeedsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomerFeedsResponse>;
        }
        interface CustomerLabelsResource {
            /**
             * Creates and removes customer-label relationships. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]()
             * [HeaderError]() [InternalError]() [LabelError]() [MutateError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose customer-label relationships are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomerLabelsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomerLabelsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose customer-label relationships are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomerLabelsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomerLabelsResponse>;
        }
        interface CustomerManagerLinksResource {
            /**
             * Moves a client customer to a new manager customer. This simplifies the complex request that requires two operations to move a client customer to a new manager, for example: 1.
             * Update operation with Status INACTIVE (previous manager) and, 2. Update operation with Status ACTIVE (new manager). List of thrown errors: [AuthenticationError]()
             * [AuthorizationError]() [DatabaseError]() [FieldError]() [HeaderError]() [InternalError]() [MutateError]() [QuotaError]() [RequestError]()
             */
            moveManagerLink(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the client customer that is being moved. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MoveManagerLinkRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MoveManagerLinkResponse>;
            moveManagerLink(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the client customer that is being moved. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MoveManagerLinkRequest): Request<GoogleAdsGoogleadsV12Services__MoveManagerLinkResponse>;
            /**
             * Updates customer manager links. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]() [FieldError]()
             * [FieldMaskError]() [HeaderError]() [InternalError]() [ManagerLinkError]() [MutateError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customer manager links are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomerManagerLinkRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomerManagerLinkResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customer manager links are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomerManagerLinkRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomerManagerLinkResponse>;
        }
        interface CustomerNegativeCriteriaResource {
            /**
             * Creates or removes criteria. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CriterionError]() [DatabaseError]()
             * [FieldError]() [HeaderError]() [InternalError]() [MutateError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose criteria are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomerNegativeCriteriaRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomerNegativeCriteriaResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose criteria are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomerNegativeCriteriaRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomerNegativeCriteriaResponse>;
        }
        interface CustomerUserAccessesResource {
            /**
             * Updates, removes permission of a user on a given customer. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]()
             * [CustomerUserAccessError]() [FieldMaskError]() [HeaderError]() [InternalError]() [MutateError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomerUserAccessRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomerUserAccessResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomerUserAccessRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomerUserAccessResponse>;
        }
        interface CustomerUserAccessInvitationsResource {
            /**
             * Creates or removes an access invitation. List of thrown errors: [AccessInvitationError]() [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]()
             * [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose access invitation is being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomerUserAccessInvitationRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomerUserAccessInvitationResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose access invitation is being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomerUserAccessInvitationRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomerUserAccessInvitationResponse>;
        }
        interface CustomInterestsResource {
            /**
             * Creates or updates custom interests. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CriterionError]()
             * [CustomInterestError]() [HeaderError]() [InternalError]() [MutateError]() [PolicyViolationError]() [QuotaError]() [RequestError]() [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose custom interests are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomInterestsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomInterestsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose custom interests are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomInterestsRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomInterestsResponse>;
        }
        interface CustomizerAttributesResource {
            /** Creates, updates or removes customizer attributes. Operation statuses are returned. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customizer attributes are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomizerAttributesRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomizerAttributesResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose customizer attributes are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomizerAttributesRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomizerAttributesResponse>;
        }
        interface ExperimentArmsResource {
            /**
             * Creates, updates, or removes experiment arms. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [ExperimentArmError]()
             * [HeaderError]() [InternalError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose experiments are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateExperimentArmsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateExperimentArmsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose experiments are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateExperimentArmsRequest): Request<GoogleAdsGoogleadsV12Services__MutateExperimentArmsResponse>;
        }
        interface ExperimentsResource {
            /**
             * Immediately ends an experiment, changing the experiment's scheduled end date and without waiting for end of day. End date is updated to be the time of the request. List of thrown
             * errors: [AuthenticationError]() [AuthorizationError]() [ExperimentError]() [HeaderError]() [InternalError]() [QuotaError]() [RequestError]()
             */
            endExperiment(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The resource name of the campaign experiment to end. */
                experiment:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__EndExperimentRequest;
            }): Request<{}>;
            endExperiment(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The resource name of the campaign experiment to end. */
                experiment:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__EndExperimentRequest): Request<{}>;
            /**
             * Graduates an experiment to a full campaign. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [ExperimentError]() [HeaderError]() [InternalError]()
             * [MutateError]() [QuotaError]() [RequestError]()
             */
            graduateExperiment(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The experiment to be graduated. */
                experiment:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__GraduateExperimentRequest;
            }): Request<{}>;
            graduateExperiment(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The experiment to be graduated. */
                experiment:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__GraduateExperimentRequest): Request<{}>;
            /**
             * Returns all errors that occurred during the last Experiment update (either scheduling or promotion). Supports standard list paging. List of thrown errors: [AuthenticationError]()
             * [AuthorizationError]() [HeaderError]() [InternalError]() [QuotaError]() [RequestError]()
             */
            listExperimentAsyncErrors(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /**
                 * Number of elements to retrieve in a single page. When a page request is too large, the server may decide to further limit the number of returned resources. The maximum page size
                 * is 1000.
                 */
                pageSize?:
                    number;
                /**
                 * Token of the page to retrieve. If not specified, the first page of results will be returned. Use the value obtained from `next_page_token` in the previous response in order to
                 * request the next page of results.
                 */
                pageToken?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The name of the experiment from which to retrieve the async errors. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleAdsGoogleadsV12Services__ListExperimentAsyncErrorsResponse>;
            /**
             * Creates, updates, or removes experiments. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [ExperimentError]() [HeaderError]()
             * [InternalError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose experiments are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateExperimentsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateExperimentsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose experiments are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateExperimentsRequest): Request<GoogleAdsGoogleadsV12Services__MutateExperimentsResponse>;
            /**
             * Promotes the trial campaign thus applying changes in the trial campaign to the base campaign. This method returns a long running operation that tracks the promotion of the
             * experiment campaign. If it fails, a list of errors can be retrieved using the ListExperimentAsyncErrors method. The operation's metadata will be a string containing the resource
             * name of the created experiment. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [ExperimentError]() [HeaderError]() [InternalError]() [QuotaError]()
             * [RequestError]()
             */
            promoteExperiment(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The resource name of the experiment to promote. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__PromoteExperimentRequest;
            }): Request<GoogleLongrunning__Operation>;
            promoteExperiment(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The resource name of the experiment to promote. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__PromoteExperimentRequest): Request<GoogleLongrunning__Operation>;
            /**
             * Schedule an experiment. The in design campaign will be converted into a real campaign (called the experiment campaign) that will begin serving ads if successfully created. The
             * experiment is scheduled immediately with status INITIALIZING. This method returns a long running operation that tracks the forking of the in design campaign. If the forking fails, a
             * list of errors can be retrieved using the ListExperimentAsyncErrors method. The operation's metadata will be a string containing the resource name of the created experiment. List of
             * thrown errors: [AuthenticationError]() [AuthorizationError]() [ExperimentError]() [DatabaseError]() [DateError]() [DateRangeError]() [FieldError]() [HeaderError]() [InternalError]()
             * [QuotaError]() [RangeError]() [RequestError]()
             */
            scheduleExperiment(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The scheduled experiment. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__ScheduleExperimentRequest;
            }): Request<GoogleLongrunning__Operation>;
            scheduleExperiment(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The scheduled experiment. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__ScheduleExperimentRequest): Request<GoogleLongrunning__Operation>;
        }
        interface ExtensionFeedItemsResource {
            /**
             * Creates, updates, or removes extension feed items. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CollectionSizeError]()
             * [CountryCodeError]() [DatabaseError]() [DateError]() [DistinctError]() [ExtensionFeedItemError]() [FieldError]() [FieldMaskError]() [HeaderError]() [ImageError]() [InternalError]()
             * [LanguageCodeError]() [MutateError]() [NewResourceCreationError]() [OperationAccessDeniedError]() [QuotaError]() [RangeError]() [RequestError]() [SizeLimitError]()
             * [StringLengthError]() [UrlFieldError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose extension feed items are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateExtensionFeedItemsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateExtensionFeedItemsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose extension feed items are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateExtensionFeedItemsRequest): Request<GoogleAdsGoogleadsV12Services__MutateExtensionFeedItemsResponse>;
        }
        interface FeedItemsResource {
            /**
             * Creates, updates, or removes feed items. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CollectionSizeError]()
             * [CriterionError]() [DatabaseError]() [DateError]() [DistinctError]() [FeedItemError]() [FieldError]() [FieldMaskError]() [HeaderError]() [IdError]() [InternalError]()
             * [ListOperationError]() [MutateError]() [NotEmptyError]() [NullError]() [OperatorError]() [QuotaError]() [RangeError]() [RequestError]() [SizeLimitError]() [StringFormatError]()
             * [StringLengthError]() [UrlFieldError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose feed items are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateFeedItemsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateFeedItemsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose feed items are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateFeedItemsRequest): Request<GoogleAdsGoogleadsV12Services__MutateFeedItemsResponse>;
        }
        interface FeedItemSetLinksResource {
            /**
             * Creates, updates, or removes feed item set links. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [QuotaError]()
             * [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose feed item set links are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateFeedItemSetLinksRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateFeedItemSetLinksResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose feed item set links are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateFeedItemSetLinksRequest): Request<GoogleAdsGoogleadsV12Services__MutateFeedItemSetLinksResponse>;
        }
        interface FeedItemSetsResource {
            /**
             * Creates, updates or removes feed item sets. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]()
             * [MutateError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose feed item sets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateFeedItemSetsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateFeedItemSetsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose feed item sets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateFeedItemSetsRequest): Request<GoogleAdsGoogleadsV12Services__MutateFeedItemSetsResponse>;
        }
        interface FeedItemTargetsResource {
            /**
             * Creates or removes feed item targets. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CriterionError]() [DatabaseError]()
             * [DistinctError]() [FeedItemTargetError]() [FieldError]() [HeaderError]() [IdError]() [InternalError]() [MutateError]() [NotEmptyError]() [OperatorError]() [QuotaError]()
             * [RangeError]() [RequestError]() [SizeLimitError]() [StringFormatError]() [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose feed item targets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateFeedItemTargetsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateFeedItemTargetsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose feed item targets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateFeedItemTargetsRequest): Request<GoogleAdsGoogleadsV12Services__MutateFeedItemTargetsResponse>;
        }
        interface FeedMappingsResource {
            /**
             * Creates or removes feed mappings. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]() [DistinctError]()
             * [FeedMappingError]() [FieldError]() [HeaderError]() [IdError]() [InternalError]() [MutateError]() [NotEmptyError]() [OperationAccessDeniedError]() [OperatorError]() [QuotaError]()
             * [RangeError]() [RequestError]() [SizeLimitError]() [StringFormatError]() [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose feed mappings are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateFeedMappingsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateFeedMappingsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose feed mappings are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateFeedMappingsRequest): Request<GoogleAdsGoogleadsV12Services__MutateFeedMappingsResponse>;
        }
        interface FeedsResource {
            /**
             * Creates, updates, or removes feeds. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CollectionSizeError]() [DatabaseError]()
             * [DistinctError]() [FeedError]() [FieldError]() [FieldMaskError]() [HeaderError]() [IdError]() [InternalError]() [ListOperationError]() [MutateError]() [NewResourceCreationError]()
             * [NotEmptyError]() [NullError]() [OperatorError]() [QuotaError]() [RangeError]() [RequestError]() [ResourceCountLimitExceededError]() [SizeLimitError]() [StringFormatError]()
             * [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose feeds are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateFeedsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateFeedsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose feeds are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateFeedsRequest): Request<GoogleAdsGoogleadsV12Services__MutateFeedsResponse>;
        }
        interface GoogleAdsResource {
            /**
             * Creates, updates, or removes resources. This method supports atomic transactions with multiple types of resources. For example, you can atomically create a campaign and a campaign
             * budget, or perform up to thousands of mutates atomically. This method is essentially a wrapper around a series of mutate methods. The only features it offers over calling those
             * methods directly are: - Atomic transactions - Temp resource names (described below) - Somewhat reduced latency over making a series of mutate calls Note: Only resources that support
             * atomic transactions are included, so this method can't replace all calls to individual services. ## Atomic Transaction Benefits Atomicity makes error handling much easier. If you're
             * making a series of changes and one fails, it can leave your account in an inconsistent state. With atomicity, you either reach the chosen state directly, or the request fails and
             * you can retry. ## Temp Resource Names Temp resource names are a special type of resource name used to create a resource and reference that resource in the same request. For example,
             * if a campaign budget is created with `resource_name` equal to `customers/123/campaignBudgets/-1`, that resource name can be reused in the `Campaign.budget` field in the same
             * request. That way, the two resources are created and linked atomically. To create a temp resource name, put a negative number in the part of the name that the server would normally
             * allocate. Note: - Resources must be created with a temp name before the name can be reused. For example, the previous CampaignBudget+Campaign example would fail if the mutate order
             * was reversed. - Temp names are not remembered across requests. - There's no limit to the number of temp names in a request. - Each temp name must use a unique negative number, even
             * if the resource types differ. ## Latency It's important to group mutates by resource type or the request may time out and fail. Latency is roughly equal to a series of calls to
             * individual mutate methods, where each change in resource type is a new call. For example, mutating 10 campaigns then 10 ad groups is like 2 calls, while mutating 1 campaign, 1 ad
             * group, 1 campaign, 1 ad group is like 4 calls. List of thrown errors: [AdCustomizerError]() [AdError]() [AdGroupAdError]() [AdGroupCriterionError]() [AdGroupError]() [AssetError]()
             * [AuthenticationError]() [AuthorizationError]() [BiddingError]() [CampaignBudgetError]() [CampaignCriterionError]() [CampaignError]() [CampaignExperimentError]()
             * [CampaignSharedSetError]() [CollectionSizeError]() [ContextError]() [ConversionActionError]() [CriterionError]() [CustomerFeedError]() [DatabaseError]() [DateError]()
             * [DateRangeError]() [DistinctError]() [ExtensionFeedItemError]() [ExtensionSettingError]() [FeedAttributeReferenceError]() [FeedError]() [FeedItemError]() [FeedItemSetError]()
             * [FieldError]() [FieldMaskError]() [FunctionParsingError]() [HeaderError]() [ImageError]() [InternalError]() [KeywordPlanAdGroupKeywordError]() [KeywordPlanCampaignError]()
             * [KeywordPlanError]() [LabelError]() [ListOperationError]() [MediaUploadError]() [MutateError]() [NewResourceCreationError]() [NullError]() [OperationAccessDeniedError]()
             * [PolicyFindingError]() [PolicyViolationError]() [QuotaError]() [RangeError]() [RequestError]() [ResourceCountLimitExceededError]() [SettingError]() [SharedSetError]()
             * [SizeLimitError]() [StringFormatError]() [StringLengthError]() [UrlFieldError]() [UserListError]() [YoutubeVideoRegistrationError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose resources are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateGoogleAdsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateGoogleAdsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose resources are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateGoogleAdsRequest): Request<GoogleAdsGoogleadsV12Services__MutateGoogleAdsResponse>;
            /**
             * Returns all rows that match the search query. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [ChangeEventError]() [ChangeStatusError]() [ClickViewError]()
             * [HeaderError]() [InternalError]() [QueryError]() [QuotaError]() [RequestError]()
             */
            search(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer being queried. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__SearchGoogleAdsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__SearchGoogleAdsResponse>;
            search(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer being queried. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__SearchGoogleAdsRequest): Request<GoogleAdsGoogleadsV12Services__SearchGoogleAdsResponse>;
            /**
             * Returns all rows that match the search stream query. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [ChangeEventError]() [ChangeStatusError]()
             * [ClickViewError]() [HeaderError]() [InternalError]() [QueryError]() [QuotaError]() [RequestError]()
             */
            searchStream(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer being queried. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__SearchGoogleAdsStreamRequest;
            }): Request<GoogleAdsGoogleadsV12Services__SearchGoogleAdsStreamResponse>;
            searchStream(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer being queried. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__SearchGoogleAdsStreamRequest): Request<GoogleAdsGoogleadsV12Services__SearchGoogleAdsStreamResponse>;
        }
        interface InvoicesResource {
            /**
             * Returns all invoices associated with a billing setup, for a given month. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [FieldError]() [HeaderError]()
             * [InternalError]() [InvoiceError]() [QuotaError]() [RequestError]()
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** Required. The billing setup resource name of the requested invoices. `customers/{customer_id}/billingSetups/{billing_setup_id}` */
                billingSetup?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer to fetch invoices for. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** Required. The issue month to retrieve invoices. */
                issueMonth?:
                    string;
                /** Required. The issue year to retrieve invoices, in yyyy format. Only invoices issued in 2019 or later can be retrieved. */
                issueYear?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleAdsGoogleadsV12Services__ListInvoicesResponse>;
        }
        interface KeywordPlanAdGroupKeywordsResource {
            /**
             * Creates, updates, or removes Keyword Plan ad group keywords. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]()
             * [FieldError]() [HeaderError]() [InternalError]() [KeywordPlanAdGroupKeywordError]() [KeywordPlanError]() [MutateError]() [QuotaError]() [RequestError]()
             * [ResourceCountLimitExceededError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose Keyword Plan ad group keywords are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupKeywordsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupKeywordsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose Keyword Plan ad group keywords are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupKeywordsRequest): Request<GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupKeywordsResponse>;
        }
        interface KeywordPlanAdGroupsResource {
            /**
             * Creates, updates, or removes Keyword Plan ad groups. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]()
             * [FieldError]() [FieldMaskError]() [HeaderError]() [InternalError]() [KeywordPlanAdGroupError]() [KeywordPlanError]() [MutateError]() [NewResourceCreationError]() [QuotaError]()
             * [RequestError]() [ResourceCountLimitExceededError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose Keyword Plan ad groups are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose Keyword Plan ad groups are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupsRequest): Request<GoogleAdsGoogleadsV12Services__MutateKeywordPlanAdGroupsResponse>;
        }
        interface KeywordPlanCampaignKeywordsResource {
            /**
             * Creates, updates, or removes Keyword Plan campaign keywords. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]()
             * [FieldError]() [HeaderError]() [InternalError]() [KeywordPlanAdGroupKeywordError]() [KeywordPlanCampaignKeywordError]() [QuotaError]() [RequestError]()
             * [ResourceCountLimitExceededError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign keywords are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignKeywordsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignKeywordsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose campaign keywords are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignKeywordsRequest): Request<GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignKeywordsResponse>;
        }
        interface KeywordPlanCampaignsResource {
            /**
             * Creates, updates, or removes Keyword Plan campaigns. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]()
             * [FieldError]() [FieldMaskError]() [HeaderError]() [InternalError]() [KeywordPlanCampaignError]() [KeywordPlanError]() [ListOperationError]() [MutateError]() [QuotaError]()
             * [RangeError]() [RequestError]() [ResourceCountLimitExceededError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose Keyword Plan campaigns are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose Keyword Plan campaigns are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignsRequest): Request<GoogleAdsGoogleadsV12Services__MutateKeywordPlanCampaignsResponse>;
        }
        interface KeywordPlansResource {
            /**
             * Returns the requested Keyword Plan forecast curve. Only the bidding strategy is considered for generating forecast curve. The bidding strategy value specified in the plan is
             * ignored. To generate a forecast at a value specified in the plan, use KeywordPlanService.GenerateForecastMetrics. List of thrown errors: [AuthenticationError]()
             * [AuthorizationError]() [HeaderError]() [InternalError]() [KeywordPlanError]() [QuotaError]() [RequestError]()
             */
            generateForecastCurve(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** Required. The resource name of the keyword plan to be forecasted. */
                keywordPlan:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__GenerateForecastCurveRequest;
            }): Request<GoogleAdsGoogleadsV12Services__GenerateForecastCurveResponse>;
            generateForecastCurve(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** Required. The resource name of the keyword plan to be forecasted. */
                keywordPlan:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__GenerateForecastCurveRequest): Request<GoogleAdsGoogleadsV12Services__GenerateForecastCurveResponse>;
            /**
             * Returns the requested Keyword Plan forecasts. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [KeywordPlanError]()
             * [QuotaError]() [RequestError]()
             */
            generateForecastMetrics(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** Required. The resource name of the keyword plan to be forecasted. */
                keywordPlan:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__GenerateForecastMetricsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__GenerateForecastMetricsResponse>;
            generateForecastMetrics(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** Required. The resource name of the keyword plan to be forecasted. */
                keywordPlan:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__GenerateForecastMetricsRequest): Request<GoogleAdsGoogleadsV12Services__GenerateForecastMetricsResponse>;
            /**
             * Returns a forecast in the form of a time series for the Keyword Plan over the next 52 weeks. (1) Forecasts closer to the current date are generally more accurate than further out.
             * (2) The forecast reflects seasonal trends using current and prior traffic patterns. The forecast period of the plan is ignored. List of thrown errors: [AuthenticationError]()
             * [AuthorizationError]() [HeaderError]() [InternalError]() [KeywordPlanError]() [QuotaError]() [RequestError]()
             */
            generateForecastTimeSeries(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** Required. The resource name of the keyword plan to be forecasted. */
                keywordPlan:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__GenerateForecastTimeSeriesRequest;
            }): Request<GoogleAdsGoogleadsV12Services__GenerateForecastTimeSeriesResponse>;
            generateForecastTimeSeries(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** Required. The resource name of the keyword plan to be forecasted. */
                keywordPlan:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__GenerateForecastTimeSeriesRequest): Request<GoogleAdsGoogleadsV12Services__GenerateForecastTimeSeriesResponse>;
            /**
             * Returns the requested Keyword Plan historical metrics. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [KeywordPlanError]()
             * [QuotaError]() [RequestError]()
             */
            generateHistoricalMetrics(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** Required. The resource name of the keyword plan of which historical metrics are requested. */
                keywordPlan:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__GenerateHistoricalMetricsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__GenerateHistoricalMetricsResponse>;
            generateHistoricalMetrics(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** Required. The resource name of the keyword plan of which historical metrics are requested. */
                keywordPlan:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__GenerateHistoricalMetricsRequest): Request<GoogleAdsGoogleadsV12Services__GenerateHistoricalMetricsResponse>;
            /**
             * Creates, updates, or removes keyword plans. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]() [FieldError]()
             * [HeaderError]() [InternalError]() [KeywordPlanError]() [MutateError]() [NewResourceCreationError]() [QuotaError]() [RequestError]() [ResourceCountLimitExceededError]()
             * [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose keyword plans are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateKeywordPlansRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateKeywordPlansResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose keyword plans are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateKeywordPlansRequest): Request<GoogleAdsGoogleadsV12Services__MutateKeywordPlansResponse>;
        }
        interface LabelsResource {
            /**
             * Creates, updates, or removes labels. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]() [DateError]()
             * [DistinctError]() [FieldError]() [FieldMaskError]() [HeaderError]() [IdError]() [InternalError]() [LabelError]() [MutateError]() [NewResourceCreationError]() [NotEmptyError]()
             * [NullError]() [OperatorError]() [QuotaError]() [RangeError]() [RequestError]() [ResourceCountLimitExceededError]() [SizeLimitError]() [StringFormatError]() [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose labels are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateLabelsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateLabelsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. ID of the customer whose labels are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateLabelsRequest): Request<GoogleAdsGoogleadsV12Services__MutateLabelsResponse>;
        }
        interface MediaFilesResource {
            /**
             * Creates media files. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]() [DistinctError]() [FieldError]()
             * [HeaderError]() [IdError]() [ImageError]() [InternalError]() [MediaBundleError]() [MediaFileError]() [NewResourceCreationError]() [NotEmptyError]() [NullError]() [OperatorError]()
             * [QuotaError]() [RangeError]() [RequestError]() [SizeLimitError]() [StringFormatError]() [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose media files are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateMediaFilesRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateMediaFilesResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose media files are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateMediaFilesRequest): Request<GoogleAdsGoogleadsV12Services__MutateMediaFilesResponse>;
        }
        interface MerchantCenterLinksResource {
            /**
             * Returns the Merchant Center link in full detail. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [QuotaError]()
             * [RequestError]()
             */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. Resource name of the Merchant Center link. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleAdsGoogleadsV12Resources__MerchantCenterLink>;
            /**
             * Returns Merchant Center links available for this customer. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [QuotaError]()
             * [RequestError]()
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer onto which to apply the Merchant Center link list operation. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleAdsGoogleadsV12Services__ListMerchantCenterLinksResponse>;
            /**
             * Updates status or removes a Merchant Center link. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [FieldMaskError]() [HeaderError]() [InternalError]()
             * [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateMerchantCenterLinkRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateMerchantCenterLinkResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateMerchantCenterLinkRequest): Request<GoogleAdsGoogleadsV12Services__MutateMerchantCenterLinkResponse>;
        }
        interface OfflineUserDataJobsResource {
            /**
             * Adds operations to the offline user data job. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]() [FieldError]() [HeaderError]()
             * [InternalError]() [MutateError]() [OfflineUserDataJobError]() [QuotaError]() [RequestError]()
             */
            addOperations(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The resource name of the OfflineUserDataJob. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__AddOfflineUserDataJobOperationsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__AddOfflineUserDataJobOperationsResponse>;
            addOperations(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The resource name of the OfflineUserDataJob. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__AddOfflineUserDataJobOperationsRequest): Request<GoogleAdsGoogleadsV12Services__AddOfflineUserDataJobOperationsResponse>;
            /**
             * Creates an offline user data job. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]() [FieldError]() [HeaderError]() [InternalError]()
             * [NotAllowlistedError]() [OfflineUserDataJobError]() [QuotaError]() [RequestError]()
             */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer for which to create an offline user data job. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__CreateOfflineUserDataJobRequest;
            }): Request<GoogleAdsGoogleadsV12Services__CreateOfflineUserDataJobResponse>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer for which to create an offline user data job. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__CreateOfflineUserDataJobRequest): Request<GoogleAdsGoogleadsV12Services__CreateOfflineUserDataJobResponse>;
            /**
             * Runs the offline user data job. When finished, the long running operation will contain the processing result or failure information, if any. List of thrown errors:
             * [AuthenticationError]() [AuthorizationError]() [DatabaseError]() [HeaderError]() [InternalError]() [OfflineUserDataJobError]() [QuotaError]() [RequestError]()
             */
            run(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The resource name of the OfflineUserDataJob to run. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__RunOfflineUserDataJobRequest;
            }): Request<GoogleLongrunning__Operation>;
            run(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The resource name of the OfflineUserDataJob to run. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__RunOfflineUserDataJobRequest): Request<GoogleLongrunning__Operation>;
        }
        interface OperationsResource {
            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support
             * this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the
             * operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a
             * google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
             */
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource to be cancelled. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleLongrunning__CancelOperationRequest;
            }): Request<{}>;
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource to be cancelled. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleLongrunning__CancelOperationRequest): Request<{}>;
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't
             * support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource to be deleted. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<{}>;
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleLongrunning__Operation>;
            /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** The standard list filter. */
                filter?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation's parent resource. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** The standard list page size. */
                pageSize?:
                    number;
                /** The standard list page token. */
                pageToken?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleLongrunning__ListOperationsResponse>;
            /**
             * Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even
             * an immediate response is no guarantee that the operation is done.
             */
            wait(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource to wait on. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleLongrunning__WaitOperationRequest;
            }): Request<GoogleLongrunning__Operation>;
            wait(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource to wait on. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleLongrunning__WaitOperationRequest): Request<GoogleLongrunning__Operation>;
        }
        interface PaymentsAccountsResource {
            /**
             * Returns all payments accounts associated with all managers between the login customer ID and specified serving customer in the hierarchy, inclusive. List of thrown errors:
             * [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [PaymentsAccountError]() [QuotaError]() [RequestError]()
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer to apply the PaymentsAccount list operation to. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleAdsGoogleadsV12Services__ListPaymentsAccountsResponse>;
        }
        interface RecommendationsResource {
            /**
             * Applies given recommendations with corresponding apply parameters. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]() [FieldError]()
             * [HeaderError]() [InternalError]() [MutateError]() [QuotaError]() [RecommendationError]() [RequestError]() [UrlFieldError]()
             */
            apply(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer with the recommendation. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__ApplyRecommendationRequest;
            }): Request<GoogleAdsGoogleadsV12Services__ApplyRecommendationResponse>;
            apply(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer with the recommendation. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__ApplyRecommendationRequest): Request<GoogleAdsGoogleadsV12Services__ApplyRecommendationResponse>;
            /**
             * Dismisses given recommendations. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [QuotaError]() [RecommendationError]()
             * [RequestError]()
             */
            dismiss(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer with the recommendation. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__DismissRecommendationRequest;
            }): Request<GoogleAdsGoogleadsV12Services__DismissRecommendationResponse>;
            dismiss(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer with the recommendation. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__DismissRecommendationRequest): Request<GoogleAdsGoogleadsV12Services__DismissRecommendationResponse>;
        }
        interface RemarketingActionsResource {
            /**
             * Creates or updates remarketing actions. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [ConversionActionError]()
             * [HeaderError]() [InternalError]() [QuotaError]() [RequestError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose remarketing actions are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateRemarketingActionsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateRemarketingActionsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose remarketing actions are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateRemarketingActionsRequest): Request<GoogleAdsGoogleadsV12Services__MutateRemarketingActionsResponse>;
        }
        interface SharedCriteriaResource {
            /**
             * Creates or removes shared criteria. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CriterionError]() [DatabaseError]()
             * [DistinctError]() [FieldError]() [HeaderError]() [IdError]() [InternalError]() [MutateError]() [NotEmptyError]() [NullError]() [OperatorError]() [QuotaError]() [RangeError]()
             * [RequestError]() [ResourceCountLimitExceededError]() [SizeLimitError]() [StringFormatError]() [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose shared criteria are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateSharedCriteriaRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateSharedCriteriaResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose shared criteria are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateSharedCriteriaRequest): Request<GoogleAdsGoogleadsV12Services__MutateSharedCriteriaResponse>;
        }
        interface SharedSetsResource {
            /**
             * Creates, updates, or removes shared sets. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]() [DateError]()
             * [DistinctError]() [FieldError]() [FieldMaskError]() [HeaderError]() [IdError]() [InternalError]() [MutateError]() [NewResourceCreationError]() [NotEmptyError]() [NullError]()
             * [OperatorError]() [QuotaError]() [RangeError]() [RequestError]() [ResourceCountLimitExceededError]() [SharedSetError]() [SizeLimitError]() [StringFormatError]()
             * [StringLengthError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose shared sets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateSharedSetsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateSharedSetsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose shared sets are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateSharedSetsRequest): Request<GoogleAdsGoogleadsV12Services__MutateSharedSetsResponse>;
        }
        interface SmartCampaignSettingsResource {
            /** Updates Smart campaign settings for campaigns. */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose Smart campaign settings are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateSmartCampaignSettingsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateSmartCampaignSettingsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose Smart campaign settings are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateSmartCampaignSettingsRequest): Request<GoogleAdsGoogleadsV12Services__MutateSmartCampaignSettingsResponse>;
        }
        interface ThirdPartyAppAnalyticsLinksResource {
            /**
             * Regenerate ThirdPartyAppAnalyticsLink.shareable_link_id that should be provided to the third party when setting up app analytics. List of thrown errors: [AuthenticationError]()
             * [AuthorizationError]() [HeaderError]() [InternalError]() [QuotaError]() [RequestError]()
             */
            regenerateShareableLinkId(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Resource name of the third party app analytics link. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__RegenerateShareableLinkIdRequest;
            }): Request<{}>;
            regenerateShareableLinkId(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Resource name of the third party app analytics link. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__RegenerateShareableLinkIdRequest): Request<{}>;
        }
        interface UserListsResource {
            /**
             * Creates or updates user lists. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CollectionSizeError]() [DatabaseError]()
             * [DistinctError]() [FieldError]() [FieldMaskError]() [HeaderError]() [InternalError]() [MutateError]() [NewResourceCreationError]() [NotAllowlistedError]() [NotEmptyError]()
             * [OperationAccessDeniedError]() [QuotaError]() [RangeError]() [RequestError]() [StringFormatError]() [StringLengthError]() [UserListError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose user lists are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateUserListsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateUserListsResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose user lists are being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateUserListsRequest): Request<GoogleAdsGoogleadsV12Services__MutateUserListsResponse>;
        }
        interface CustomersResource {
            /**
             * Creates a new client under manager. The new client customer is returned. List of thrown errors: [AccessInvitationError]() [AuthenticationError]() [AuthorizationError]()
             * [CurrencyCodeError]() [HeaderError]() [InternalError]() [ManagerLinkError]() [QuotaError]() [RequestError]() [StringLengthError]() [TimeZoneError]()
             */
            createCustomerClient(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the Manager under whom client customer is being created. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__CreateCustomerClientRequest;
            }): Request<GoogleAdsGoogleadsV12Services__CreateCustomerClientResponse>;
            createCustomerClient(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the Manager under whom client customer is being created. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__CreateCustomerClientRequest): Request<GoogleAdsGoogleadsV12Services__CreateCustomerClientResponse>;
            /**
             * Returns a list of suggested AdGroups and suggested modifications (text, match type) for the given keywords. List of thrown errors: [AuthenticationError]() [AuthorizationError]()
             * [CollectionSizeError]() [HeaderError]() [InternalError]() [QuotaError]() [RequestError]()
             */
            generateAdGroupThemes(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__GenerateAdGroupThemesRequest;
            }): Request<GoogleAdsGoogleadsV12Services__GenerateAdGroupThemesResponse>;
            generateAdGroupThemes(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__GenerateAdGroupThemesRequest): Request<GoogleAdsGoogleadsV12Services__GenerateAdGroupThemesResponse>;
            /**
             * Returns a collection of attributes that are represented in an audience of interest, with metrics that compare each attribute's share of the audience with its share of a baseline
             * audience. List of thrown errors: [AudienceInsightsError]() [AuthenticationError]() [AuthorizationError]() [FieldError]() [HeaderError]() [InternalError]() [QuotaError]()
             * [RangeError]() [RequestError]()
             */
            generateAudienceCompositionInsights(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__GenerateAudienceCompositionInsightsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__GenerateAudienceCompositionInsightsResponse>;
            generateAudienceCompositionInsights(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__GenerateAudienceCompositionInsightsRequest): Request<GoogleAdsGoogleadsV12Services__GenerateAudienceCompositionInsightsResponse>;
            /**
             * Creates a saved report that can be viewed in the Insights Finder tool. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [FieldError]() [HeaderError]()
             * [InternalError]() [QuotaError]() [RangeError]() [RequestError]()
             */
            generateInsightsFinderReport(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__GenerateInsightsFinderReportRequest;
            }): Request<GoogleAdsGoogleadsV12Services__GenerateInsightsFinderReportResponse>;
            generateInsightsFinderReport(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__GenerateInsightsFinderReportRequest): Request<GoogleAdsGoogleadsV12Services__GenerateInsightsFinderReportResponse>;
            /**
             * Returns a list of keyword historical metrics. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CollectionSizeError]() [HeaderError]() [InternalError]()
             * [QuotaError]() [RequestError]()
             */
            generateKeywordHistoricalMetrics(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** The ID of the customer with the recommendation. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__GenerateKeywordHistoricalMetricsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__GenerateKeywordHistoricalMetricsResponse>;
            generateKeywordHistoricalMetrics(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** The ID of the customer with the recommendation. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__GenerateKeywordHistoricalMetricsRequest): Request<GoogleAdsGoogleadsV12Services__GenerateKeywordHistoricalMetricsResponse>;
            /**
             * Returns a list of keyword ideas. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CollectionSizeError]() [HeaderError]() [InternalError]()
             * [KeywordPlanIdeaError]() [QuotaError]() [RequestError]()
             */
            generateKeywordIdeas(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** The ID of the customer with the recommendation. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__GenerateKeywordIdeasRequest;
            }): Request<GoogleAdsGoogleadsV12Services__GenerateKeywordIdeaResponse>;
            generateKeywordIdeas(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** The ID of the customer with the recommendation. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__GenerateKeywordIdeasRequest): Request<GoogleAdsGoogleadsV12Services__GenerateKeywordIdeaResponse>;
            /**
             * Generates a reach forecast for a given targeting / product mix. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [FieldError]() [HeaderError]()
             * [InternalError]() [QuotaError]() [RangeError]() [ReachPlanError]() [RequestError]()
             */
            generateReachForecast(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__GenerateReachForecastRequest;
            }): Request<GoogleAdsGoogleadsV12Services__GenerateReachForecastResponse>;
            generateReachForecast(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__GenerateReachForecastRequest): Request<GoogleAdsGoogleadsV12Services__GenerateReachForecastResponse>;
            /**
             * Returns resource names of customers directly accessible by the user authenticating the call. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]()
             * [InternalError]() [QuotaError]() [RequestError]()
             */
            listAccessibleCustomers(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleAdsGoogleadsV12Services__ListAccessibleCustomersResponse>;
            /**
             * Updates a customer. Operation statuses are returned. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [DatabaseError]() [FieldMaskError]() [HeaderError]()
             * [InternalError]() [QuotaError]() [RequestError]() [UrlFieldError]()
             */
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__MutateCustomerRequest;
            }): Request<GoogleAdsGoogleadsV12Services__MutateCustomerResponse>;
            mutate(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer being modified. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__MutateCustomerRequest): Request<GoogleAdsGoogleadsV12Services__MutateCustomerResponse>;
            /**
             * Searches for audience attributes that can be used to generate insights. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [FieldError]() [HeaderError]()
             * [InternalError]() [QuotaError]() [RangeError]() [RequestError]()
             */
            searchAudienceInsightsAttributes(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__ListAudienceInsightsAttributesRequest;
            }): Request<GoogleAdsGoogleadsV12Services__ListAudienceInsightsAttributesResponse>;
            searchAudienceInsightsAttributes(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__ListAudienceInsightsAttributesRequest): Request<GoogleAdsGoogleadsV12Services__ListAudienceInsightsAttributesResponse>;
            /** Suggests keyword themes to advertise on. */
            suggestKeywordThemes(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__SuggestKeywordThemesRequest;
            }): Request<GoogleAdsGoogleadsV12Services__SuggestKeywordThemesResponse>;
            suggestKeywordThemes(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__SuggestKeywordThemesRequest): Request<GoogleAdsGoogleadsV12Services__SuggestKeywordThemesResponse>;
            /** Suggests a Smart campaign ad compatible with the Ad family of resources, based on data points such as targeting and the business to advertise. */
            suggestSmartCampaignAd(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__SuggestSmartCampaignAdRequest;
            }): Request<GoogleAdsGoogleadsV12Services__SuggestSmartCampaignAdResponse>;
            suggestSmartCampaignAd(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__SuggestSmartCampaignAdRequest): Request<GoogleAdsGoogleadsV12Services__SuggestSmartCampaignAdResponse>;
            /** Returns BudgetOption suggestions. */
            suggestSmartCampaignBudgetOptions(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose budget options are to be suggested. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__SuggestSmartCampaignBudgetOptionsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__SuggestSmartCampaignBudgetOptionsResponse>;
            suggestSmartCampaignBudgetOptions(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer whose budget options are to be suggested. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__SuggestSmartCampaignBudgetOptionsRequest): Request<GoogleAdsGoogleadsV12Services__SuggestSmartCampaignBudgetOptionsResponse>;
            /**
             * Processes the given call conversions. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [PartialFailureError]() [QuotaError]()
             * [RequestError]()
             */
            uploadCallConversions(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer performing the upload. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__UploadCallConversionsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__UploadCallConversionsResponse>;
            uploadCallConversions(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer performing the upload. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__UploadCallConversionsRequest): Request<GoogleAdsGoogleadsV12Services__UploadCallConversionsResponse>;
            /**
             * Processes the given click conversions. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [ConversionUploadError]() [HeaderError]() [InternalError]()
             * [PartialFailureError]() [QuotaError]() [RequestError]()
             */
            uploadClickConversions(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer performing the upload. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__UploadClickConversionsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__UploadClickConversionsResponse>;
            uploadClickConversions(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer performing the upload. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__UploadClickConversionsRequest): Request<GoogleAdsGoogleadsV12Services__UploadClickConversionsResponse>;
            /**
             * Processes the given conversion adjustments. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [PartialFailureError]()
             * [QuotaError]() [RequestError]()
             */
            uploadConversionAdjustments(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer performing the upload. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__UploadConversionAdjustmentsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__UploadConversionAdjustmentsResponse>;
            uploadConversionAdjustments(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer performing the upload. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__UploadConversionAdjustmentsRequest): Request<GoogleAdsGoogleadsV12Services__UploadConversionAdjustmentsResponse>;
            /**
             * Uploads the given user data. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [CollectionSizeError]() [FieldError]() [HeaderError]() [InternalError]()
             * [MutateError]() [OfflineUserDataJobError]() [QuotaError]() [RequestError]() [UserDataError]()
             */
            uploadUserData(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer for which to update the user data. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__UploadUserDataRequest;
            }): Request<GoogleAdsGoogleadsV12Services__UploadUserDataResponse>;
            uploadUserData(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Required. The ID of the customer for which to update the user data. */
                customerId:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__UploadUserDataRequest): Request<GoogleAdsGoogleadsV12Services__UploadUserDataResponse>;
            accountBudgetProposals:
                AccountBudgetProposalsResource;
            accountLinks:
                AccountLinksResource;
            adGroupAdLabels:
                AdGroupAdLabelsResource;
            adGroupAds:
                AdGroupAdsResource;
            adGroupAssets:
                AdGroupAssetsResource;
            adGroupAssetSets:
                AdGroupAssetSetsResource;
            adGroupBidModifiers:
                AdGroupBidModifiersResource;
            adGroupCriteria:
                AdGroupCriteriaResource;
            AdGroupCriterionCustomizers:
                AdGroupCriterionCustomizersResource;
            adGroupCriterionLabels:
                AdGroupCriterionLabelsResource;
            adGroupCustomizers:
                AdGroupCustomizersResource;
            adGroupExtensionSettings:
                AdGroupExtensionSettingsResource;
            adGroupFeeds:
                AdGroupFeedsResource;
            adGroupLabels:
                AdGroupLabelsResource;
            adGroups:
                AdGroupsResource;
            adParameters:
                AdParametersResource;
            ads:
                AdsResource;
            assetGroupAssets:
                AssetGroupAssetsResource;
            assetGroupListingGroupFilters:
                AssetGroupListingGroupFiltersResource;
            assetGroups:
                AssetGroupsResource;
            assetGroupSignals:
                AssetGroupSignalsResource;
            assets:
                AssetsResource;
            assetSetAssets:
                AssetSetAssetsResource;
            assetSets:
                AssetSetsResource;
            audiences:
                AudiencesResource;
            batchJobs:
                BatchJobsResource;
            biddingDataExclusions:
                BiddingDataExclusionsResource;
            biddingSeasonalityAdjustments:
                BiddingSeasonalityAdjustmentsResource;
            biddingStrategies:
                BiddingStrategiesResource;
            billingSetups:
                BillingSetupsResource;
            campaignAssets:
                CampaignAssetsResource;
            campaignAssetSets:
                CampaignAssetSetsResource;
            campaignBidModifiers:
                CampaignBidModifiersResource;
            campaignBudgets:
                CampaignBudgetsResource;
            campaignConversionGoals:
                CampaignConversionGoalsResource;
            campaignCriteria:
                CampaignCriteriaResource;
            campaignCustomizers:
                CampaignCustomizersResource;
            campaignDrafts:
                CampaignDraftsResource;
            campaignExtensionSettings:
                CampaignExtensionSettingsResource;
            campaignFeeds:
                CampaignFeedsResource;
            campaignGroups:
                CampaignGroupsResource;
            campaignLabels:
                CampaignLabelsResource;
            campaigns:
                CampaignsResource;
            campaignSharedSets:
                CampaignSharedSetsResource;
            conversionActions:
                ConversionActionsResource;
            conversionCustomVariables:
                ConversionCustomVariablesResource;
            conversionGoalCampaignConfigs:
                ConversionGoalCampaignConfigsResource;
            conversionValueRules:
                ConversionValueRulesResource;
            conversionValueRuleSets:
                ConversionValueRuleSetsResource;
            customAudiences:
                CustomAudiencesResource;
            customConversionGoals:
                CustomConversionGoalsResource;
            customerAssets:
                CustomerAssetsResource;
            customerAssetSets:
                CustomerAssetSetsResource;
            customerClientLinks:
                CustomerClientLinksResource;
            customerConversionGoals:
                CustomerConversionGoalsResource;
            CustomerCustomizers:
                CustomerCustomizersResource;
            customerExtensionSettings:
                CustomerExtensionSettingsResource;
            customerFeeds:
                CustomerFeedsResource;
            customerLabels:
                CustomerLabelsResource;
            customerManagerLinks:
                CustomerManagerLinksResource;
            customerNegativeCriteria:
                CustomerNegativeCriteriaResource;
            customerUserAccesses:
                CustomerUserAccessesResource;
            customerUserAccessInvitations:
                CustomerUserAccessInvitationsResource;
            customInterests:
                CustomInterestsResource;
            customizerAttributes:
                CustomizerAttributesResource;
            experimentArms:
                ExperimentArmsResource;
            experiments:
                ExperimentsResource;
            extensionFeedItems:
                ExtensionFeedItemsResource;
            feedItems:
                FeedItemsResource;
            feedItemSetLinks:
                FeedItemSetLinksResource;
            feedItemSets:
                FeedItemSetsResource;
            feedItemTargets:
                FeedItemTargetsResource;
            feedMappings:
                FeedMappingsResource;
            feeds:
                FeedsResource;
            googleAds:
                GoogleAdsResource;
            invoices:
                InvoicesResource;
            keywordPlanAdGroupKeywords:
                KeywordPlanAdGroupKeywordsResource;
            keywordPlanAdGroups:
                KeywordPlanAdGroupsResource;
            keywordPlanCampaignKeywords:
                KeywordPlanCampaignKeywordsResource;
            keywordPlanCampaigns:
                KeywordPlanCampaignsResource;
            keywordPlans:
                KeywordPlansResource;
            labels:
                LabelsResource;
            mediaFiles:
                MediaFilesResource;
            merchantCenterLinks:
                MerchantCenterLinksResource;
            offlineUserDataJobs:
                OfflineUserDataJobsResource;
            operations:
                OperationsResource;
            paymentsAccounts:
                PaymentsAccountsResource;
            recommendations:
                RecommendationsResource;
            remarketingActions:
                RemarketingActionsResource;
            sharedCriteria:
                SharedCriteriaResource;
            sharedSets:
                SharedSetsResource;
            smartCampaignSettings:
                SmartCampaignSettingsResource;
            thirdPartyAppAnalyticsLinks:
                ThirdPartyAppAnalyticsLinksResource;
            userLists:
                UserListsResource;
        }
        interface GeoTargetConstantsResource {
            /**
             * Returns GeoTargetConstant suggestions by location name or by resource name. List of thrown errors: [AuthenticationError]() [AuthorizationError]()
             * [GeoTargetConstantSuggestionError]() [HeaderError]() [InternalError]() [QuotaError]() [RequestError]()
             */
            suggest(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__SuggestGeoTargetConstantsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__SuggestGeoTargetConstantsResponse>;
            suggest(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__SuggestGeoTargetConstantsRequest): Request<GoogleAdsGoogleadsV12Services__SuggestGeoTargetConstantsResponse>;
        }
        interface GoogleAdsFieldsResource {
            /** Returns just the requested field. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [QuotaError]() [RequestError]() */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Required. The resource name of the field to get. */
                resourceName:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleAdsGoogleadsV12Resources__GoogleAdsField>;
            /**
             * Returns all fields that match the search query. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [QueryError]() [QuotaError]()
             * [RequestError]()
             */
            search(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__SearchGoogleAdsFieldsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__SearchGoogleAdsFieldsResponse>;
            search(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__SearchGoogleAdsFieldsRequest): Request<GoogleAdsGoogleadsV12Services__SearchGoogleAdsFieldsResponse>;
        }
        interface KeywordThemeConstantsResource {
            /**
             * Returns KeywordThemeConstant suggestions by keyword themes. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [QuotaError]()
             * [RequestError]()
             */
            suggest(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__SuggestKeywordThemeConstantsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__SuggestKeywordThemeConstantsResponse>;
            suggest(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__SuggestKeywordThemeConstantsRequest): Request<GoogleAdsGoogleadsV12Services__SuggestKeywordThemeConstantsResponse>;
        }
        interface V12Resource {
            /**
             * Returns the list of plannable locations (for example, countries). List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]()
             * [QuotaError]() [RequestError]()
             */
            listPlannableLocations(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__ListPlannableLocationsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__ListPlannableLocationsResponse>;
            listPlannableLocations(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__ListPlannableLocationsRequest): Request<GoogleAdsGoogleadsV12Services__ListPlannableLocationsResponse>;
            /**
             * Returns the list of per-location plannable YouTube ad formats with allowed targeting. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]()
             * [InternalError]() [QuotaError]() [RequestError]()
             */
            listPlannableProducts(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleAdsGoogleadsV12Services__ListPlannableProductsRequest;
            }): Request<GoogleAdsGoogleadsV12Services__ListPlannableProductsResponse>;
            listPlannableProducts(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleAdsGoogleadsV12Services__ListPlannableProductsRequest): Request<GoogleAdsGoogleadsV12Services__ListPlannableProductsResponse>;
        }

        const audienceInsights: AudienceInsightsResource;

        const customers: CustomersResource;

        const geoTargetConstants: GeoTargetConstantsResource;

        const googleAdsFields: GoogleAdsFieldsResource;

        const keywordThemeConstants: KeywordThemeConstantsResource;

        const v12: V12Resource;
    }
}
