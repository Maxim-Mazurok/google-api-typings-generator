/* This is stub file for gapi.client.checks-v1alpha definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20250623

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://checks.googleapis.com/$discovery/rest?version=v1alpha',
  );
  /** now we can use gapi.client.checks */

  void run();

  async function run() {
    /** Gets an app. */
    await gapi.client.checks.accounts.apps.get({
      name: 'Test string',
    });
    /** Lists the apps under the given account. */
    await gapi.client.checks.accounts.apps.list({
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`. */
    await gapi.client.checks.accounts.apps.operations.cancel(
      {
        name: 'Test string',
      },
      {},
    );
    /** Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. */
    await gapi.client.checks.accounts.apps.operations.delete({
      name: 'Test string',
    });
    /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
    await gapi.client.checks.accounts.apps.operations.get({
      name: 'Test string',
    });
    /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
    await gapi.client.checks.accounts.apps.operations.list({
      filter: 'Test string',
      name: 'Test string',
      pageSize: 42,
      pageToken: 'Test string',
    });
    /** Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done. */
    await gapi.client.checks.accounts.apps.operations.wait(
      {
        name: 'Test string',
      },
      {
        timeout: 'Test string',
      },
    );
    /** Gets a report. By default, only the name and results_uri fields are returned. You can include other fields by listing them in the `fields` URL query parameter. For example, `?fields=name,checks` will return the name and checks fields. */
    await gapi.client.checks.accounts.apps.reports.get({
      checksFilter: 'Test string',
      name: 'Test string',
    });
    /** Lists reports for the specified app. By default, only the name and results_uri fields are returned. You can include other fields by listing them in the `fields` URL query parameter. For example, `?fields=reports(name,checks)` will return the name and checks fields. */
    await gapi.client.checks.accounts.apps.reports.list({
      checksFilter: 'Test string',
      filter: 'Test string',
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
    await gapi.client.checks.accounts.repos.operations.get({
      name: 'Test string',
    });
    /** Uploads the results of local Code Compliance analysis and generates a scan of privacy issues. Returns a google.longrunning.Operation containing analysis and findings. */
    await gapi.client.checks.accounts.repos.scans.generate(
      {
        parent: 'Test string',
      },
      {
        cliAnalysis: {
          codeScans: [
            {
              dataTypeClassifications: [
                {
                  dataType: 'Test string',
                  lineNumber: 42,
                },
              ],
              sourceCode: {
                code: 'Test string',
                endLine: 42,
                path: 'Test string',
                startLine: 42,
              },
            },
          ],
          sources: [
            {
              codeAttribution: {
                codeExcerpt: 'Test string',
                lineNumber: 42,
                path: 'Test string',
                startLineNumber: 42,
              },
              dataType: 'Test string',
              falsePositive: true,
            },
          ],
        },
        cliVersion: 'Test string',
        localScanPath: 'Test string',
        scmMetadata: {
          branch: 'Test string',
          pullRequest: {
            baseBranch: 'Test string',
            prNumber: 'Test string',
          },
          remoteUri: 'Test string',
          revisionId: 'Test string',
        },
      },
    );
    /** Gets a repo scan. By default, only the name and results_uri fields are returned. You can include other fields by listing them in the `fields` URL query parameter. For example, `?fields=name,sources` will return the name and sources fields. */
    await gapi.client.checks.accounts.repos.scans.get({
      name: 'Test string',
    });
    /** Lists repo scans for the specified repo. */
    await gapi.client.checks.accounts.repos.scans.list({
      filter: 'Test string',
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Analyze a piece of content with the provided set of policies. */
    await gapi.client.checks.aisafety.classifyContent(
      {},
      {
        classifierVersion: 'Test string',
        context: {
          prompt: 'Test string',
        },
        input: {
          textInput: {
            content: 'Test string',
            languageCode: 'Test string',
          },
        },
        policies: [
          {
            policyType: 'Test string',
            threshold: 42,
          },
        ],
      },
    );
    /** Analyzes the uploaded app bundle and returns a google.longrunning.Operation containing the generated Report. ## Example (upload only) Send a regular POST request with the header `X-Goog-Upload-Protocol: raw`. ``` POST https://checks.googleapis.com/upload/v1alpha/{parent=accounts/*‍/apps/*}/reports:analyzeUpload HTTP/1.1 X-Goog-Upload-Protocol: raw Content-Length: Content-Type: application/octet-stream ``` ## Example (upload with metadata) Send a multipart POST request where the first body part contains the metadata JSON and the second body part contains the binary upload. Include the header `X-Goog-Upload-Protocol: multipart`. ``` POST https://checks.googleapis.com/upload/v1alpha/{parent=accounts/*‍/apps/*}/reports:analyzeUpload HTTP/1.1 X-Goog-Upload-Protocol: multipart Content-Length: ? Content-Type: multipart/related; boundary=BOUNDARY --BOUNDARY Content-Type: application/json {"code_reference_id":"db5bcc20f94055fb5bc08cbb9b0e7a5530308786"} --BOUNDARY --BOUNDARY-- ``` *Note:* Metadata-only requests are not supported. */
    await gapi.client.checks.media.upload(
      {
        parent: 'Test string',
      },
      {
        appBinaryFileType: 'Test string',
        codeReferenceId: 'Test string',
      },
    );
  }
});
