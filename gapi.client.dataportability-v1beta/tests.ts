/* This is stub file for gapi.client.dataportability-v1beta definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20240201

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://dataportability.googleapis.com/$discovery/rest?version=v1beta'
  );
  /** now we can use gapi.client.dataportability */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** Move a copy of messages between you and the businesses you have conversations with. */
    'https://www.googleapis.com/auth/dataportability.businessmessaging.conversations',
    /** Move a copy of your search activity. */
    'https://www.googleapis.com/auth/dataportability.myactivity.search',
    /** Move a copy of your Shopping activity. */
    'https://www.googleapis.com/auth/dataportability.myactivity.shopping',
    /** Move a copy of your YouTube activity. */
    'https://www.googleapis.com/auth/dataportability.myactivity.youtube',
    /** Move a copy of your shipping information. */
    'https://www.googleapis.com/auth/dataportability.shopping.addresses',
    /** Move a copy of reviews you wrote about products or online stores. */
    'https://www.googleapis.com/auth/dataportability.shopping.reviews',
    /** Move a copy of information about your channel. */
    'https://www.googleapis.com/auth/dataportability.youtube.channel',
    /** Move a copy of your comments. */
    'https://www.googleapis.com/auth/dataportability.youtube.comments',
    /** Move a copy of your messages in live chat. */
    'https://www.googleapis.com/auth/dataportability.youtube.live_chat',
    /** Move a copy of your uploaded YouTube Music tracks and your YouTube Music library. */
    'https://www.googleapis.com/auth/dataportability.youtube.music',
    /** Move a copy of your private playlists. */
    'https://www.googleapis.com/auth/dataportability.youtube.private_playlists',
    /** Move a copy of your private videos and information about them. */
    'https://www.googleapis.com/auth/dataportability.youtube.private_videos',
    /** Move a copy of your public playlists. */
    'https://www.googleapis.com/auth/dataportability.youtube.public_playlists',
    /** Move a copy of your public videos and information about them. */
    'https://www.googleapis.com/auth/dataportability.youtube.public_videos',
    /** Move a copy of YouTube Shopping Wishlists, and wishlist items. */
    'https://www.googleapis.com/auth/dataportability.youtube.shopping',
    /** Move a copy of your channel subscriptions, even if they're private. */
    'https://www.googleapis.com/auth/dataportability.youtube.subscriptions',
    /** Move a copy of your unlisted playlists. */
    'https://www.googleapis.com/auth/dataportability.youtube.unlisted_playlists',
    /** Move a copy of your unlisted videos and information about them. */
    'https://www.googleapis.com/auth/dataportability.youtube.unlisted_videos',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Retrieves the state of a Takeout Archive job for the Portability API. */
    await gapi.client.dataportability.archiveJobs.getPortabilityArchiveState({
      name: 'Test string',
    });
    /** Retries a failed Portability Archive job. */
    await gapi.client.dataportability.archiveJobs.retry(
      {
        name: 'Test string',
      },
      {}
    );
    /** Revokes OAuth tokens and resets exhausted scopes for a user/project pair. This method allows you to initiate a Takeout request after a new consent is granted. This method also indicates that previous archives can be garbage collected. You should call this method when all jobs are complete and all archives are downloaded. Do not call it only when you start a new job. */
    await gapi.client.dataportability.authorization.reset({}, {});
    /** Initiates a new Takeout Archive job for the Portability API. */
    await gapi.client.dataportability.portabilityArchive.initiate(
      {},
      {
        resources: ['Test string'],
      }
    );
  }
});
