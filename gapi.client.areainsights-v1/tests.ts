/* This is stub file for gapi.client.areainsights-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20250330

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://areainsights.googleapis.com/$discovery/rest?version=v1',
  );
  /** now we can use gapi.client.areainsights */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
    'https://www.googleapis.com/auth/cloud-platform',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** This method lets you retrieve insights about areas using a variety of filter such as: area, place type, operating status, price level and ratings. Currently "count" and "places" insights are supported. With "count" insights you can answer questions such as "How many restaurant are located in California that are operational, are inexpensive and have an average rating of at least 4 stars" (see `insight` enum for more details). With "places" insights, you can determine which places match the requested filter. Clients can then use those place resource names to fetch more details about each individual place using the Places API. */
    await gapi.client.areainsights.v1.computeInsights(
      {},
      {
        filter: {
          locationFilter: {
            circle: {
              latLng: {
                latitude: 42,
                longitude: 42,
              },
              place: 'Test string',
              radius: 42,
            },
            customArea: {
              polygon: {
                coordinates: [
                  {
                    latitude: 42,
                    longitude: 42,
                  },
                ],
              },
            },
            region: {
              place: 'Test string',
            },
          },
          operatingStatus: ['Test string'],
          priceLevels: ['Test string'],
          ratingFilter: {
            maxRating: 42,
            minRating: 42,
          },
          typeFilter: {
            excludedPrimaryTypes: ['Test string'],
            excludedTypes: ['Test string'],
            includedPrimaryTypes: ['Test string'],
            includedTypes: ['Test string'],
          },
        },
        insights: ['Test string'],
      },
    );
  }
});
