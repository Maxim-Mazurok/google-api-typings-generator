/* This is stub file for gapi.client.cloudidentity definition tests */
/* IMPORTANT.
* This file was automatically generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
* In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
**/
gapi.load('client', () => {
    /** now we can use gapi.client */
    gapi.client.load('cloudidentity', 'v1', () => {
        /** now we can use gapi.client.cloudidentity */

        /** don't forget to authenticate your client before sending any request to resources: */
        /** declare client_id registered in Google Developers Console */
        const client_id = '<<PUT YOUR CLIENT ID HERE>>';
        const scope = [
            /** See, change, create, and delete any of the Cloud Identity Groups that you can access, including the members of each group */
            'https://www.googleapis.com/auth/cloud-identity.groups',
            /** See any Cloud Identity Groups that you can access, including group members and their emails */
            'https://www.googleapis.com/auth/cloud-identity.groups.readonly',
            /** View and manage your data across Google Cloud Platform services */
            'https://www.googleapis.com/auth/cloud-platform',
        ];
        const immediate = false;
        gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
            if (authResult && !authResult.error) {
                /** handle successful authorization */
                run();
            } else {
                /** handle authorization error */
            }
        });
    });

    async function run() {
        /** Creates a Group. */
        await gapi.client.cloudidentity.groups.create({
        }, {
            createTime: "Test string",
            description: "Test string",
            displayName: "Test string",
            groupKey: {
                id: "Test string",
                namespace: "Test string",
            },
            labels: {
                A: "Test string"            },
            name: "Test string",
            parent: "Test string",
            updateTime: "Test string",
        });
        /** Creates a Membership. */
        await gapi.client.cloudidentity.groups.memberships.create({
            parent: "Test string",
        }, {
            createTime: "Test string",
            name: "Test string",
            preferredMemberKey: {
                id: "Test string",
                namespace: "Test string",
            },
            roles: [
                {
                    name: "Test string",
                }            ],
            updateTime: "Test string",
        });
        /** Deletes a Membership. */
        await gapi.client.cloudidentity.groups.memberships.delete({
            name: "Test string",
        });
        /** Retrieves a Membership. */
        await gapi.client.cloudidentity.groups.memberships.get({
            name: "Test string",
        });
        /** Lists Memberships within a Group. */
        await gapi.client.cloudidentity.groups.memberships.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
            view: "Test string",
        });
        /** Looks up [resource name](https://cloud.google.com/apis/design/resource_names) of a Membership within a Group by member's EntityKey. */
        await gapi.client.cloudidentity.groups.memberships.lookup({
            "memberKey.id": "Test string",
            "memberKey.namespace": "Test string",
            parent: "Test string",
        });
        /** Deletes a Group. */
        await gapi.client.cloudidentity.groups.delete({
            name: "Test string",
        });
        /** Creates a Membership. */
        await gapi.client.cloudidentity.groups.memberships.create({
            parent: "Test string",
        }, {
            createTime: "Test string",
            name: "Test string",
            preferredMemberKey: {
                id: "Test string",
                namespace: "Test string",
            },
            roles: [
                {
                    name: "Test string",
                }            ],
            updateTime: "Test string",
        });
        /** Deletes a Membership. */
        await gapi.client.cloudidentity.groups.memberships.delete({
            name: "Test string",
        });
        /** Retrieves a Membership. */
        await gapi.client.cloudidentity.groups.memberships.get({
            name: "Test string",
        });
        /** Lists Memberships within a Group. */
        await gapi.client.cloudidentity.groups.memberships.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
            view: "Test string",
        });
        /** Looks up [resource name](https://cloud.google.com/apis/design/resource_names) of a Membership within a Group by member's EntityKey. */
        await gapi.client.cloudidentity.groups.memberships.lookup({
            "memberKey.id": "Test string",
            "memberKey.namespace": "Test string",
            parent: "Test string",
        });
        /** Retrieves a Group. */
        await gapi.client.cloudidentity.groups.get({
            name: "Test string",
        });
        /** Creates a Membership. */
        await gapi.client.cloudidentity.groups.memberships.create({
            parent: "Test string",
        }, {
            createTime: "Test string",
            name: "Test string",
            preferredMemberKey: {
                id: "Test string",
                namespace: "Test string",
            },
            roles: [
                {
                    name: "Test string",
                }            ],
            updateTime: "Test string",
        });
        /** Deletes a Membership. */
        await gapi.client.cloudidentity.groups.memberships.delete({
            name: "Test string",
        });
        /** Retrieves a Membership. */
        await gapi.client.cloudidentity.groups.memberships.get({
            name: "Test string",
        });
        /** Lists Memberships within a Group. */
        await gapi.client.cloudidentity.groups.memberships.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
            view: "Test string",
        });
        /** Looks up [resource name](https://cloud.google.com/apis/design/resource_names) of a Membership within a Group by member's EntityKey. */
        await gapi.client.cloudidentity.groups.memberships.lookup({
            "memberKey.id": "Test string",
            "memberKey.namespace": "Test string",
            parent: "Test string",
        });
        /** Lists groups within a customer or a domain. */
        await gapi.client.cloudidentity.groups.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
            view: "Test string",
        });
        /** Creates a Membership. */
        await gapi.client.cloudidentity.groups.memberships.create({
            parent: "Test string",
        }, {
            createTime: "Test string",
            name: "Test string",
            preferredMemberKey: {
                id: "Test string",
                namespace: "Test string",
            },
            roles: [
                {
                    name: "Test string",
                }            ],
            updateTime: "Test string",
        });
        /** Deletes a Membership. */
        await gapi.client.cloudidentity.groups.memberships.delete({
            name: "Test string",
        });
        /** Retrieves a Membership. */
        await gapi.client.cloudidentity.groups.memberships.get({
            name: "Test string",
        });
        /** Lists Memberships within a Group. */
        await gapi.client.cloudidentity.groups.memberships.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
            view: "Test string",
        });
        /** Looks up [resource name](https://cloud.google.com/apis/design/resource_names) of a Membership within a Group by member's EntityKey. */
        await gapi.client.cloudidentity.groups.memberships.lookup({
            "memberKey.id": "Test string",
            "memberKey.namespace": "Test string",
            parent: "Test string",
        });
        /** Looks up [resource name](https://cloud.google.com/apis/design/resource_names) of a Group by its EntityKey. */
        await gapi.client.cloudidentity.groups.lookup({
            "groupKey.id": "Test string",
            "groupKey.namespace": "Test string",
        });
        /** Creates a Membership. */
        await gapi.client.cloudidentity.groups.memberships.create({
            parent: "Test string",
        }, {
            createTime: "Test string",
            name: "Test string",
            preferredMemberKey: {
                id: "Test string",
                namespace: "Test string",
            },
            roles: [
                {
                    name: "Test string",
                }            ],
            updateTime: "Test string",
        });
        /** Deletes a Membership. */
        await gapi.client.cloudidentity.groups.memberships.delete({
            name: "Test string",
        });
        /** Retrieves a Membership. */
        await gapi.client.cloudidentity.groups.memberships.get({
            name: "Test string",
        });
        /** Lists Memberships within a Group. */
        await gapi.client.cloudidentity.groups.memberships.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
            view: "Test string",
        });
        /** Looks up [resource name](https://cloud.google.com/apis/design/resource_names) of a Membership within a Group by member's EntityKey. */
        await gapi.client.cloudidentity.groups.memberships.lookup({
            "memberKey.id": "Test string",
            "memberKey.namespace": "Test string",
            parent: "Test string",
        });
        /** Updates a Group. */
        await gapi.client.cloudidentity.groups.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            createTime: "Test string",
            description: "Test string",
            displayName: "Test string",
            groupKey: {
                id: "Test string",
                namespace: "Test string",
            },
            labels: {
                A: "Test string"            },
            name: "Test string",
            parent: "Test string",
            updateTime: "Test string",
        });
        /** Creates a Membership. */
        await gapi.client.cloudidentity.groups.memberships.create({
            parent: "Test string",
        }, {
            createTime: "Test string",
            name: "Test string",
            preferredMemberKey: {
                id: "Test string",
                namespace: "Test string",
            },
            roles: [
                {
                    name: "Test string",
                }            ],
            updateTime: "Test string",
        });
        /** Deletes a Membership. */
        await gapi.client.cloudidentity.groups.memberships.delete({
            name: "Test string",
        });
        /** Retrieves a Membership. */
        await gapi.client.cloudidentity.groups.memberships.get({
            name: "Test string",
        });
        /** Lists Memberships within a Group. */
        await gapi.client.cloudidentity.groups.memberships.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
            view: "Test string",
        });
        /** Looks up [resource name](https://cloud.google.com/apis/design/resource_names) of a Membership within a Group by member's EntityKey. */
        await gapi.client.cloudidentity.groups.memberships.lookup({
            "memberKey.id": "Test string",
            "memberKey.namespace": "Test string",
            parent: "Test string",
        });
        /** Searches for Groups. */
        await gapi.client.cloudidentity.groups.search({
            pageSize: 42,
            pageToken: "Test string",
            query: "Test string",
            view: "Test string",
        });
        /** Creates a Membership. */
        await gapi.client.cloudidentity.groups.memberships.create({
            parent: "Test string",
        }, {
            createTime: "Test string",
            name: "Test string",
            preferredMemberKey: {
                id: "Test string",
                namespace: "Test string",
            },
            roles: [
                {
                    name: "Test string",
                }            ],
            updateTime: "Test string",
        });
        /** Deletes a Membership. */
        await gapi.client.cloudidentity.groups.memberships.delete({
            name: "Test string",
        });
        /** Retrieves a Membership. */
        await gapi.client.cloudidentity.groups.memberships.get({
            name: "Test string",
        });
        /** Lists Memberships within a Group. */
        await gapi.client.cloudidentity.groups.memberships.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
            view: "Test string",
        });
        /** Looks up [resource name](https://cloud.google.com/apis/design/resource_names) of a Membership within a Group by member's EntityKey. */
        await gapi.client.cloudidentity.groups.memberships.lookup({
            "memberKey.id": "Test string",
            "memberKey.namespace": "Test string",
            parent: "Test string",
        });
    }
});
