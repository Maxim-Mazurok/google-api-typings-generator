/* This is stub file for gapi.client.admin-datatransfer_v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20240321

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://admin.googleapis.com/$discovery/rest?version=datatransfer_v1'
  );
  /** now we can use gapi.client.datatransfer */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** View and manage data transfers between users in your organization */
    'https://www.googleapis.com/auth/admin.datatransfer',
    /** View data transfers between users in your organization */
    'https://www.googleapis.com/auth/admin.datatransfer.readonly',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Retrieves information about an application for the given application ID. */
    await gapi.client.datatransfer.applications.get({
      applicationId: 'Test string',
    });
    /** Lists the applications available for data transfer for a customer. */
    await gapi.client.datatransfer.applications.list({
      customerId: 'Test string',
      maxResults: 42,
      pageToken: 'Test string',
    });
    /** Retrieves a data transfer request by its resource ID. */
    await gapi.client.datatransfer.transfers.get({
      dataTransferId: 'Test string',
    });
    /** Inserts a data transfer request. See the [Transfer parameters](/admin-sdk/data-transfer/v1/parameters) reference for specific application requirements. */
    await gapi.client.datatransfer.transfers.insert(
      {},
      {
        applicationDataTransfers: [
          {
            applicationId: 'Test string',
            applicationTransferParams: [
              {
                key: 'Test string',
                value: ['Test string'],
              },
            ],
            applicationTransferStatus: 'Test string',
          },
        ],
        etag: 'Test string',
        id: 'Test string',
        kind: 'Test string',
        newOwnerUserId: 'Test string',
        oldOwnerUserId: 'Test string',
        overallTransferStatusCode: 'Test string',
        requestTime: 'Test string',
      }
    );
    /** Lists the transfers for a customer by source user, destination user, or status. */
    await gapi.client.datatransfer.transfers.list({
      customerId: 'Test string',
      maxResults: 42,
      newOwnerUserId: 'Test string',
      oldOwnerUserId: 'Test string',
      pageToken: 'Test string',
      status: 'Test string',
    });
  }
});
