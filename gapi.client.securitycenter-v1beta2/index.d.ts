/* Type definitions for non-npm package Security Command Center API v1beta2 0.0 */
// Project: https://cloud.google.com/security-command-center
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://securitycenter.googleapis.com/$discovery/rest?version=v1beta2
// Revision: 20220927

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Security Command Center API v1beta2 */
    function load(urlOrObject: "https://securitycenter.googleapis.com/$discovery/rest?version=v1beta2"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "securitycenter", version: "v1beta2"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "securitycenter", version: "v1beta2", callback: () => any): void;

    namespace securitycenter {
        interface Access {
            /** Caller's IP address, such as "1.1.1.1". */
            callerIp?: string;
            /** The caller IP's geolocation, which identifies where the call came from. */
            callerIpGeo?: Geolocation;
            /** The method that the service account called, e.g. "SetIamPolicy". */
            methodName?: string;
            /**
             * Associated email, such as "foo@google.com". The email address of the authenticated user (or service account on behalf of third party principal) making the request. For third party
             * identity callers, the `principal_subject` field is populated instead of this field. For privacy reasons, the principal email address is sometimes redacted. For more information, see
             * [Caller identities in audit logs](https://cloud.google.com/logging/docs/audit#user-id).
             */
            principalEmail?: string;
            /**
             * A string representing the principal_subject associated with the identity. As compared to `principal_email`, supports principals that aren't associated with email addresses, such as
             * third party principals. For most identities, the format will be `principal://iam.googleapis.com/{identity pool name}/subjects/{subject}` except for some GKE identities
             * (GKE_WORKLOAD, FREEFORM, GKE_HUB_WORKLOAD) that are still in the legacy format `serviceAccount:{identity pool name}[{subject}]`
             */
            principalSubject?: string;
            /**
             * Identity delegation history of an authenticated service account that makes the request. It contains information on the real authorities that try to access GCP resources by
             * delegating on a service account. When multiple authorities are present, they are guaranteed to be sorted based on the original ordering of the identity delegation events.
             */
            serviceAccountDelegationInfo?: ServiceAccountDelegationInfo[];
            /**
             * The name of the service account key used to create or exchange credentials for authenticating the service account making the request. This is a scheme-less URI full resource name.
             * For example: "//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}"
             */
            serviceAccountKeyName?: string;
            /** This is the API service that the service account made a call to, e.g. "iam.googleapis.com" */
            serviceName?: string;
            /** What kind of user agent is associated, e.g. operating system shells, embedded or stand-alone applications, etc. */
            userAgentFamily?: string;
            /**
             * A string representing a username. This is likely not an IAM principal. For instance, this may be the system user name if the finding is VM-related, or this may be some type of
             * application login user name, depending on the type of finding.
             */
            username?: string;
        }
        interface AccessReview {
            /** Group is the API Group of the Resource. "*" means all. */
            group?: string;
            /** Name is the name of the resource being requested. Empty means all. */
            name?: string;
            /** Namespace of the action being requested. Currently, there is no distinction between no namespace and all namespaces. Both are represented by "" (empty). */
            ns?: string;
            /** Resource is the optional resource type requested. "*" means all. */
            resource?: string;
            /** Subresource is the optional subresource type. */
            subresource?: string;
            /** Verb is a Kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy. "*" means all. */
            verb?: string;
            /** Version is the API Version of the Resource. "*" means all. */
            version?: string;
        }
        interface Compliance {
            /** Policies within the standard/benchmark e.g. A.12.4.1 */
            ids?: string[];
            /** Refers to industry wide standards or benchmarks e.g. "cis", "pci", "owasp", etc. */
            standard?: string;
            /** Version of the standard/benchmark e.g. 1.1 */
            version?: string;
        }
        interface Config {
            /** The state of enablement for the module at its level of the resource hierarchy. */
            moduleEnablementState?: string;
            /** The configuration value for the module. The absence of this field implies its inheritance from the parent. */
            value?: { [P in string]: any };
        }
        interface Connection {
            /** Destination IP address. Not present for sockets that are listening and not connected. */
            destinationIp?: string;
            /** Destination port. Not present for sockets that are listening and not connected. */
            destinationPort?: number;
            /** IANA Internet Protocol Number such as TCP(6) and UDP(17). */
            protocol?: string;
            /** Source IP address. */
            sourceIp?: string;
            /** Source port. */
            sourcePort?: number;
        }
        interface Contact {
            /** An email address e.g. "person123@company.com" */
            email?: string;
        }
        interface ContactDetails {
            /** A list of contacts */
            contacts?: Contact[];
        }
        interface Container {
            /** Optional container image id, when provided by the container runtime. Uniquely identifies the container image launched using a container image digest. */
            imageId?: string;
            /** Container labels, as provided by the container runtime. */
            labels?: Label[];
            /** Container name. */
            name?: string;
            /** Container image URI provided when configuring a pod/container. May identify a container image version using mutable tags. */
            uri?: string;
        }
        interface ContainerThreatDetectionSettings {
            /**
             * The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its
             * parent's.
             */
            modules?: { [P in string]: Config };
            /**
             * The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings *
             * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
             * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
             */
            name?: string;
            /**
             * Output only. The service account used by Container Threat Detection for scanning. Service accounts are scoped at the project level meaning this field will be empty at any level
             * above a project.
             */
            serviceAccount?: string;
            /** The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED. */
            serviceEnablementState?: string;
            /** Output only. The time the settings were last updated. */
            updateTime?: string;
        }
        interface Cve {
            /** Describe Common Vulnerability Scoring System specified at https://www.first.org/cvss/v3.1/specification-document */
            cvssv3?: Cvssv3;
            /** The unique identifier for the vulnerability. e.g. CVE-2021-34527 */
            id?: string;
            /** Additional information about the CVE. e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527 */
            references?: Reference[];
            /** Whether upstream fix is available for the CVE. */
            upstreamFixAvailable?: boolean;
        }
        interface Cvssv3 {
            /** This metric describes the conditions beyond the attacker's control that must exist in order to exploit the vulnerability. */
            attackComplexity?: string;
            /**
             * Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments. This metric reflects the context by which
             * vulnerability exploitation is possible.
             */
            attackVector?: string;
            /** This metric measures the impact to the availability of the impacted component resulting from a successfully exploited vulnerability. */
            availabilityImpact?: string;
            /** The base score is a function of the base metric scores. */
            baseScore?: number;
            /** This metric measures the impact to the confidentiality of the information resources managed by a software component due to a successfully exploited vulnerability. */
            confidentialityImpact?: string;
            /** This metric measures the impact to integrity of a successfully exploited vulnerability. */
            integrityImpact?: string;
            /** This metric describes the level of privileges an attacker must possess before successfully exploiting the vulnerability. */
            privilegesRequired?: string;
            /** The Scope metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope. */
            scope?: string;
            /** This metric captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component. */
            userInteraction?: string;
        }
        interface Database {
            /** The human readable name of the database the user connected to. */
            displayName?: string;
            /** The target usernames/roles/groups of a SQL privilege grant (not an IAM policy change). */
            grantees?: string[];
            /** The full resource name of the database the user connected to, if it is supported by CAI. (https://google.aip.dev/122#full-resource-names) */
            name?: string;
            /** The SQL statement associated with the relevant access. */
            query?: string;
            /** The username used to connect to the DB. This may not necessarily be an IAM principal, and has no required format. */
            userName?: string;
        }
        interface Details {
            /** The time the subscription has or will end. */
            endTime?: string;
            /** The time the subscription has or will start. */
            startTime?: string;
            /** The type of subscription */
            type?: string;
        }
        interface Detection {
            /** The name of the binary associated with the memory hash signature detection. */
            binary?: string;
            /** The percentage of memory page hashes in the signature that were matched. */
            percentPagesMatched?: number;
        }
        interface EnvironmentVariable {
            /** Environment variable name as a JSON encoded string. */
            name?: string;
            /** Environment variable value as a JSON encoded string. */
            val?: string;
        }
        interface EventThreatDetectionSettings {
            /**
             * The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its
             * parent's.
             */
            modules?: { [P in string]: Config };
            /**
             * The resource name of the EventThreatDetectionSettings. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings *
             * projects/{project}/eventThreatDetectionSettings
             */
            name?: string;
            /** The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED. */
            serviceEnablementState?: string;
            /** Output only. The time the settings were last updated. */
            updateTime?: string;
        }
        interface ExfilResource {
            /**
             * Subcomponents of the asset that is exfiltrated - these could be URIs used during exfiltration, table names, databases, filenames, etc. For example, multiple tables may be
             * exfiltrated from the same CloudSQL instance, or multiple files from the same Cloud Storage bucket.
             */
            components?: string[];
            /** Resource's URI (https://google.aip.dev/122#full-resource-names) */
            name?: string;
        }
        interface Exfiltration {
            /** If there are multiple sources, then the data is considered "joined" between them. For instance, BigQuery can join multiple tables, and each table would be considered a source. */
            sources?: ExfilResource[];
            /** If there are multiple targets, each target would get a complete copy of the "joined" source data. */
            targets?: ExfilResource[];
        }
        interface File {
            /** Prefix of the file contents as a JSON encoded string. (Currently only populated for Malicious Script Executed findings.) */
            contents?: string;
            /** The length in bytes of the file prefix that was hashed. If hashed_size == size, any hashes reported represent the entire file. */
            hashedSize?: string;
            /** True when the hash covers only a prefix of the file. */
            partiallyHashed?: boolean;
            /** Absolute path of the file as a JSON encoded string. */
            path?: string;
            /** SHA256 hash of the first hashed_size bytes of the file encoded as a hex string. If hashed_size == size, sha256 represents the SHA256 hash of the entire file. */
            sha256?: string;
            /** Size of the file in bytes. */
            size?: string;
        }
        interface Finding {
            /** Access details associated to the Finding, such as more information on the caller, which method was accessed, from where, etc. */
            access?: Access;
            /**
             * The canonical name of the finding. It's either "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}",
             * "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or "projects/{project_number}/sources/{source_id}/findings/{finding_id}", depending on the closest CRM ancestor of
             * the resource associated with the finding.
             */
            canonicalName?: string;
            /** The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: "XSS_FLASH_INJECTION" */
            category?: string;
            /** Contains compliance information for security standards associated to the finding. */
            compliances?: Compliance[];
            /** Contains information about the IP connection associated with the finding. */
            connections?: Connection[];
            /**
             * Output only. Map containing the points of contact for the given finding. The key represents the type of contact, while the value contains a list of all the contacts that pertain.
             * Please refer to: https://cloud.google.com/resource-manager/docs/managing-notification-contacts#notification-categories { "security": { "contacts": [ { "email": "person1@company.com"
             * }, { "email": "person2@company.com" } ] } }
             */
            contacts?: { [P in string]: ContactDetails };
            /** Containers associated with the finding. containers provides information for both Kubernetes and non-Kubernetes containers. */
            containers?: Container[];
            /** The time at which the finding was created in Security Command Center. */
            createTime?: string;
            /** Database associated with the finding. */
            database?: Database;
            /** Contains more detail about the finding. */
            description?: string;
            /**
             * The time the finding was first detected. If an existing finding is updated, then this is the time the update occurred. For example, if the finding represents an open firewall, this
             * property captures the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding is later resolved, then this time reflects when
             * the finding was resolved. This must not be set to a value greater than the current timestamp.
             */
            eventTime?: string;
            /** Represents exfiltration associated with the Finding. */
            exfiltration?: Exfiltration;
            /** Output only. Third party SIEM/SOAR fields within SCC, contains external system information and external system finding fields. */
            externalSystems?: { [P in string]: GoogleCloudSecuritycenterV1ExternalSystem };
            /**
             * The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be
             * either empty or a well formed URL.
             */
            externalUri?: string;
            /** The class of the finding. */
            findingClass?: string;
            /** Represents IAM bindings associated with the Finding. */
            iamBindings?: IamBinding[];
            /**
             * Represents what's commonly known as an Indicator of compromise (IoC) in computer forensics. This is an artifact observed on a network or in an operating system that, with high
             * confidence, indicates a computer intrusion. Reference: https://en.wikipedia.org/wiki/Indicator_of_compromise
             */
            indicator?: Indicator;
            /** Kubernetes resources associated with the finding. */
            kubernetes?: Kubernetes;
            /** MITRE ATT&CK tactics and techniques related to this finding. See: https://attack.mitre.org */
            mitreAttack?: MitreAttack;
            /** Indicates the mute state of a finding (either muted, unmuted or undefined). Unlike other attributes of a finding, a finding provider shouldn't set the value of mute. */
            mute?: string;
            /**
             * First known as mute_annotation. Records additional information about the mute operation e.g. mute config that muted the finding, user who muted the finding, etc. Unlike other
             * attributes of a finding, a finding provider shouldn't set the value of mute.
             */
            muteInitiator?: string;
            /** Output only. The most recent time this finding was muted or unmuted. */
            muteUpdateTime?: string;
            /**
             * The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example:
             * "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"
             */
            name?: string;
            /** Next steps associate to the finding. */
            nextSteps?: string;
            /**
             * The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after
             * creation time. For example: "organizations/{organization_id}/sources/{source_id}"
             */
            parent?: string;
            /** Output only. The human readable display name of the finding source such as "Event Threat Detection" or "Security Health Analytics". */
            parentDisplayName?: string;
            /** Represents operating system processes associated with the Finding. */
            processes?: Process[];
            /**
             * For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See:
             * https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined
             * string. This field is immutable after creation time.
             */
            resourceName?: string;
            /** Output only. User specified security marks. These marks are entirely managed by the user and come from the SecurityMarks resource that belongs to the finding. */
            securityMarks?: SecurityMarks;
            /** The severity of the finding. This field is managed by the source that writes the finding. */
            severity?: string;
            /**
             * Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and
             * must start with a letter and contain alphanumeric characters or underscores only.
             */
            sourceProperties?: { [P in string]: any };
            /** The state of the finding. */
            state?: string;
            /** Represents vulnerability specific fields like cve, cvss scores etc. CVE stands for Common Vulnerabilities and Exposures (https://cve.mitre.org/about/) */
            vulnerability?: Vulnerability;
        }
        interface Folder {
            /** Full resource name of this folder. See: https://cloud.google.com/apis/design/resource_names#full_resource_name */
            resourceFolder?: string;
            /** The user defined display name for this folder. */
            resourceFolderDisplayName?: string;
        }
        interface Geolocation {
            /** A CLDR. */
            regionCode?: string;
        }
        interface GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse {
            /** The duration between asset discovery run start and end */
            duration?: string;
            /** The state of an asset discovery run. */
            state?: string;
        }
        interface GoogleCloudSecuritycenterV1BigQueryExport {
            /** Output only. The time at which the big query export was created. This field is set by the server and will be ignored if provided on export on creation. */
            createTime?: string;
            /**
             * The dataset to write findings' updates to. Its format is "projects/[project_id]/datasets/[bigquery_dataset_id]". BigQuery Dataset unique ID must contain only letters (a-z, A-Z),
             * numbers (0-9), or underscores (_).
             */
            dataset?: string;
            /** The description of the export (max of 1024 characters). */
            description?: string;
            /**
             * Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or more restrictions combined via logical operators `AND` and
             * `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The
             * fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning
             * substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.
             */
            filter?: string;
            /** Output only. Email address of the user who last edited the big query export. This field is set by the server and will be ignored if provided on export creation or update. */
            mostRecentEditor?: string;
            /**
             * The relative resource name of this export. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name. Example format:
             * "organizations/{organization_id}/bigQueryExports/{export_id}" Example format: "folders/{folder_id}/bigQueryExports/{export_id}" Example format:
             * "projects/{project_id}/bigQueryExports/{export_id}" This field is provided in responses, and is ignored when provided in create requests.
             */
            name?: string;
            /** Output only. The service account that needs permission to create table, upload data to the big query dataset. */
            principal?: string;
            /** Output only. The most recent time at which the big export was updated. This field is set by the server and will be ignored if provided on export creation or update. */
            updateTime?: string;
        }
        interface GoogleCloudSecuritycenterV1Binding {
            /** Name for binding. */
            name?: string;
            /** Namespace for binding. */
            ns?: string;
            /** The Role or ClusterRole referenced by the binding. */
            role?: Role;
            /** Represents the subjects(s) bound to the role. Not always available for PATCH requests. */
            subjects?: Subject[];
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudSecuritycenterV1BulkMuteFindingsResponse {
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudSecuritycenterV1ExposedResource {
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudSecuritycenterV1ExposurePath {
        }
        interface GoogleCloudSecuritycenterV1ExternalSystem {
            /** References primary/secondary etc assignees in the external system. */
            assignees?: string[];
            /** The most recent time when the corresponding finding's ticket/tracker was updated in the external system. */
            externalSystemUpdateTime?: string;
            /** Identifier that's used to track the given finding in the external system. */
            externalUid?: string;
            /**
             * External System Name e.g. jira, demisto, etc. e.g.: `organizations/1234/sources/5678/findings/123456/externalSystems/jira`
             * `folders/1234/sources/5678/findings/123456/externalSystems/jira` `projects/1234/sources/5678/findings/123456/externalSystems/jira`
             */
            name?: string;
            /** Most recent status of the corresponding finding's ticket/tracker in the external system. */
            status?: string;
        }
        interface GoogleCloudSecuritycenterV1MuteConfig {
            /** Output only. The time at which the mute config was created. This field is set by the server and will be ignored if provided on config creation. */
            createTime?: string;
            /** A description of the mute config. */
            description?: string;
            /** The human readable name to be displayed for the mute config. */
            displayName?: string;
            /**
             * Required. An expression that defines the filter to apply across create/update events of findings. While creating a filter string, be mindful of the scope in which the mute
             * configuration is being created. E.g., If a filter contains project = X but is created under the project = Y scope, it might not match any findings. The following field and operator
             * combinations are supported: * severity: `=`, `:` * category: `=`, `:` * resource.name: `=`, `:` * resource.project_name: `=`, `:` * resource.project_display_name: `=`, `:` *
             * resource.folders.resource_folder: `=`, `:` * resource.parent_name: `=`, `:` * resource.parent_display_name: `=`, `:` * resource.type: `=`, `:` * finding_class: `=`, `:` *
             * indicator.ip_addresses: `=`, `:` * indicator.domains: `=`, `:`
             */
            filter?: string;
            /** Output only. Email address of the user who last edited the mute config. This field is set by the server and will be ignored if provided on config creation or update. */
            mostRecentEditor?: string;
            /**
             * This field will be ignored if provided on config creation. Format "organizations/{organization}/muteConfigs/{mute_config}" "folders/{folder}/muteConfigs/{mute_config}"
             * "projects/{project}/muteConfigs/{mute_config}"
             */
            name?: string;
            /** Output only. The most recent time at which the mute config was updated. This field is set by the server and will be ignored if provided on config creation or update. */
            updateTime?: string;
        }
        interface GoogleCloudSecuritycenterV1NotificationMessage {
            /** If it's a Finding based notification config, this field will be populated. */
            finding?: Finding;
            /** Name of the notification config that generated current notification. */
            notificationConfigName?: string;
            /** The Cloud resource tied to this notification's Finding. */
            resource?: GoogleCloudSecuritycenterV1Resource;
        }
        interface GoogleCloudSecuritycenterV1p1beta1Finding {
            /**
             * The canonical name of the finding. It's either "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}",
             * "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or "projects/{project_number}/sources/{source_id}/findings/{finding_id}", depending on the closest CRM ancestor of
             * the resource associated with the finding.
             */
            canonicalName?: string;
            /** The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: "XSS_FLASH_INJECTION" */
            category?: string;
            /** The time at which the finding was created in Security Command Center. */
            createTime?: string;
            /**
             * The time at which the event took place, or when an update to the finding occurred. For example, if the finding represents an open firewall it would capture the time the detector
             * believes the firewall became open. The accuracy is determined by the detector. If the finding were to be resolved afterward, this time would reflect when the finding was resolved.
             * Must not be set to a value greater than the current timestamp.
             */
            eventTime?: string;
            /**
             * The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be
             * either empty or a well formed URL.
             */
            externalUri?: string;
            /**
             * The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example:
             * "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"
             */
            name?: string;
            /**
             * The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after
             * creation time. For example: "organizations/{organization_id}/sources/{source_id}"
             */
            parent?: string;
            /**
             * For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See:
             * https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined
             * string. This field is immutable after creation time.
             */
            resourceName?: string;
            /** Output only. User specified security marks. These marks are entirely managed by the user and come from the SecurityMarks resource that belongs to the finding. */
            securityMarks?: GoogleCloudSecuritycenterV1p1beta1SecurityMarks;
            /** The severity of the finding. This field is managed by the source that writes the finding. */
            severity?: string;
            /**
             * Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and
             * must start with a letter and contain alphanumeric characters or underscores only.
             */
            sourceProperties?: { [P in string]: any };
            /** The state of the finding. */
            state?: string;
        }
        interface GoogleCloudSecuritycenterV1p1beta1Folder {
            /** Full resource name of this folder. See: https://cloud.google.com/apis/design/resource_names#full_resource_name */
            resourceFolder?: string;
            /** The user defined display name for this folder. */
            resourceFolderDisplayName?: string;
        }
        interface GoogleCloudSecuritycenterV1p1beta1NotificationMessage {
            /** If it's a Finding based notification config, this field will be populated. */
            finding?: GoogleCloudSecuritycenterV1p1beta1Finding;
            /** Name of the notification config that generated current notification. */
            notificationConfigName?: string;
            /** The Cloud resource tied to the notification. */
            resource?: GoogleCloudSecuritycenterV1p1beta1Resource;
        }
        interface GoogleCloudSecuritycenterV1p1beta1Resource {
            /**
             * Output only. Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the
             * Organization.
             */
            folders?: GoogleCloudSecuritycenterV1p1beta1Folder[];
            /** The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name */
            name?: string;
            /** The full resource name of resource's parent. */
            parent?: string;
            /** The human readable name of resource's parent. */
            parentDisplayName?: string;
            /** The full resource name of project that the resource belongs to. */
            project?: string;
            /** The project id that the resource belongs to. */
            projectDisplayName?: string;
        }
        interface GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse {
            /** The duration between asset discovery run start and end */
            duration?: string;
            /** The state of an asset discovery run. */
            state?: string;
        }
        interface GoogleCloudSecuritycenterV1p1beta1SecurityMarks {
            /**
             * The canonical name of the marks. Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks" "folders/{folder_id}/assets/{asset_id}/securityMarks"
             * "projects/{project_number}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks"
             * "folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks" "projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks"
             */
            canonicalName?: string;
            /**
             * Mutable user specified security marks belonging to the parent resource. Constraints are as follows: * Keys and values are treated as case insensitive * Keys must be between 1 - 256
             * characters (inclusive) * Keys must be letters, numbers, underscores, or dashes * Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096
             * characters (inclusive)
             */
            marks?: { [P in string]: string };
            /**
             * The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples:
             * "organizations/{organization_id}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".
             */
            name?: string;
        }
        interface GoogleCloudSecuritycenterV1Resource {
            /** The human readable name of the resource. */
            displayName?: string;
            /**
             * Output only. Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the
             * Organization.
             */
            folders?: Folder[];
            /** The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name */
            name?: string;
            /** The full resource name of resource's parent. */
            parent?: string;
            /** The human readable name of resource's parent. */
            parentDisplayName?: string;
            /** The full resource name of project that the resource belongs to. */
            project?: string;
            /** The project ID that the resource belongs to. */
            projectDisplayName?: string;
            /** The full resource type of the resource. */
            type?: string;
        }
        interface GoogleCloudSecuritycenterV1ResourceValueConfig {
            /** Name for the resource value config */
            name?: string;
            /** Required. Resource value level this expression represents */
            resourceValue?: string;
            /**
             * Required. Tag values combined with AND to check against. Values in the form "tagValues/123" E.g. [ "tagValues/123", "tagValues/456", "tagValues/789" ]
             * https://cloud.google.com/resource-manager/docs/tags/tags-creating-and-managing
             */
            tagValues?: string[];
        }
        interface GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse {
            /** The duration between asset discovery run start and end */
            duration?: string;
            /** The state of an asset discovery run. */
            state?: string;
        }
        interface IamBinding {
            /** The action that was performed on a Binding. */
            action?: string;
            /** A single identity requesting access for a Cloud Platform resource, e.g. "foo@google.com". */
            member?: string;
            /** Role that is assigned to "members". For example, "roles/viewer", "roles/editor", or "roles/owner". */
            role?: string;
        }
        interface Indicator {
            /** List of domains associated to the Finding. */
            domains?: string[];
            /** List of ip addresses associated to the Finding. */
            ipAddresses?: string[];
            /** The list of matched signatures indicating that the given process is present in the environment. */
            signatures?: ProcessSignature[];
            /** The list of URIs associated to the Findings. */
            uris?: string[];
        }
        interface Kubernetes {
            /** Provides information on any Kubernetes access reviews (i.e. privilege checks) relevant to the finding. */
            accessReviews?: AccessReview[];
            /** Provides Kubernetes role binding information for findings that involve RoleBindings or ClusterRoleBindings. */
            bindings?: GoogleCloudSecuritycenterV1Binding[];
            /** GKE Node Pools associated with the finding. This field will contain NodePool information for each Node, when it is available. */
            nodePools?: NodePool[];
            /** Provides Kubernetes Node information. */
            nodes?: Node[];
            /** Kubernetes Pods associated with the finding. This field will contain Pod records for each container that is owned by a Pod. */
            pods?: Pod[];
            /** Provides Kubernetes role information for findings that involve Roles or ClusterRoles. */
            roles?: Role[];
        }
        interface Label {
            /** Label name. */
            name?: string;
            /** Label value. */
            value?: string;
        }
        interface MemoryHashSignature {
            /** The binary family. */
            binaryFamily?: string;
            /** The list of memory hash detections contributing to the binary family match. */
            detections?: Detection[];
        }
        interface MitreAttack {
            /** Additional MITRE ATT&CK tactics related to this finding, if any. */
            additionalTactics?: string[];
            /** Additional MITRE ATT&CK techniques related to this finding, if any, along with any of their respective parent techniques. */
            additionalTechniques?: string[];
            /** The MITRE ATT&CK tactic most closely represented by this finding, if any. */
            primaryTactic?: string;
            /**
             * The MITRE ATT&CK technique most closely represented by this finding, if any. primary_techniques is a repeated field because there are multiple levels of MITRE ATT&CK techniques. If
             * the technique most closely represented by this finding is a sub-technique (e.g. `SCANNING_IP_BLOCKS`), both the sub-technique and its parent technique(s) will be listed (e.g.
             * `SCANNING_IP_BLOCKS`, `ACTIVE_SCANNING`).
             */
            primaryTechniques?: string[];
            /** The MITRE ATT&CK version referenced by the above fields. E.g. "8". */
            version?: string;
        }
        interface Node {
            /** Full Resource name of the Compute Engine VM running the cluster node. */
            name?: string;
        }
        interface NodePool {
            /** Kubernetes Node pool name. */
            name?: string;
            /** Nodes associated with the finding. */
            nodes?: Node[];
        }
        interface OnboardingState {
            /** The resource name of the OnboardingState. Format: organizations/{organization}/onboardingState Format: folders/{folder}/onboardingState Format: projects/{project}/onboardingState */
            name?: string;
            /** Describes the level a given organization, folder, or project is onboarded with SCC. If the resource wasn't onboarded, NOT_FOUND would have been thrown. */
            onboardingLevel?: string;
        }
        interface Pod {
            /** Pod containers associated with this finding, if any. */
            containers?: Container[];
            /** Pod labels. For Kubernetes containers, these are applied to the container. */
            labels?: Label[];
            /** Kubernetes Pod name. */
            name?: string;
            /** Kubernetes Pod namespace. */
            ns?: string;
        }
        interface Process {
            /** Process arguments as JSON encoded strings. */
            args?: string[];
            /** True if `args` is incomplete. */
            argumentsTruncated?: boolean;
            /** File information for the process executable. */
            binary?: File;
            /** Process environment variables. */
            envVariables?: EnvironmentVariable[];
            /** True if `env_variables` is incomplete. */
            envVariablesTruncated?: boolean;
            /** File information for libraries loaded by the process. */
            libraries?: File[];
            /** The process name visible in utilities like `top` and `ps`; it can be accessed via `/proc/[pid]/comm` and changed with `prctl(PR_SET_NAME)`. */
            name?: string;
            /** The parent process id. */
            parentPid?: string;
            /** The process id. */
            pid?: string;
            /**
             * When the process represents the invocation of a script, `binary` provides information about the interpreter while `script` provides information about the script file provided to the
             * interpreter.
             */
            script?: File;
        }
        interface ProcessSignature {
            /** Signature indicating that a binary family was matched. */
            memoryHashSignature?: MemoryHashSignature;
            /** Signature indicating that a YARA rule was matched. */
            yaraRuleSignature?: YaraRuleSignature;
        }
        interface RapidVulnerabilityDetectionSettings {
            /**
             * The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its
             * parent's.
             */
            modules?: { [P in string]: Config };
            /**
             * The resource name of the RapidVulnerabilityDetectionSettings. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings *
             * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings
             */
            name?: string;
            /** The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED. */
            serviceEnablementState?: string;
            /** Output only. The time the settings were last updated. */
            updateTime?: string;
        }
        interface Reference {
            /** Source of the reference e.g. NVD */
            source?: string;
            /** Uri for the mentioned source e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527. */
            uri?: string;
        }
        interface Role {
            /** Role type. */
            kind?: string;
            /** Role name. */
            name?: string;
            /** Role namespace. */
            ns?: string;
        }
        interface SecurityCenterSettings {
            /**
             * The resource name of the project to send logs to. This project must be part of the organization this resource resides in. The format is `projects/{project_id}`. An empty value
             * disables logging. This value is only referenced by services that support log sink. Please refer to the documentation for an updated list of compatible services. This may only be
             * specified for organization level onboarding.
             */
            logSinkProject?: string;
            /**
             * The resource name of the SecurityCenterSettings. Format: organizations/{organization}/securityCenterSettings Format: folders/{folder}/securityCenterSettings Format:
             * projects/{project}/securityCenterSettings
             */
            name?: string;
            /** Output only. Timestamp of when the customer organization was onboarded to SCC. */
            onboardingTime?: string;
            /** Output only. The organization level service account to be used for security center components. */
            orgServiceAccount?: string;
        }
        interface SecurityHealthAnalyticsSettings {
            /**
             * The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its
             * parent's.
             */
            modules?: { [P in string]: Config };
            /**
             * The resource name of the SecurityHealthAnalyticsSettings. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings
             * * projects/{project}/securityHealthAnalyticsSettings
             */
            name?: string;
            /** Output only. The service account used by Security Health Analytics detectors. */
            serviceAccount?: string;
            /** The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED. */
            serviceEnablementState?: string;
            /** Output only. The time the settings were last updated. */
            updateTime?: string;
        }
        interface SecurityMarks {
            /**
             * The canonical name of the marks. Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks" "folders/{folder_id}/assets/{asset_id}/securityMarks"
             * "projects/{project_number}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks"
             * "folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks" "projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks"
             */
            canonicalName?: string;
            /**
             * Mutable user specified security marks belonging to the parent resource. Constraints are as follows: * Keys and values are treated as case insensitive * Keys must be between 1 - 256
             * characters (inclusive) * Keys must be letters, numbers, underscores, or dashes * Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096
             * characters (inclusive)
             */
            marks?: { [P in string]: string };
            /**
             * The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples:
             * "organizations/{organization_id}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".
             */
            name?: string;
        }
        interface ServiceAccountDelegationInfo {
            /** The email address of a Google account. */
            principalEmail?: string;
            /**
             * A string representing the principal_subject associated with the identity. As compared to `principal_email`, supports principals that aren't associated with email addresses, such as
             * third party principals. For most identities, the format will be `principal://iam.googleapis.com/{identity pool name}/subjects/{subject}` except for some GKE identities
             * (GKE_WORKLOAD, FREEFORM, GKE_HUB_WORKLOAD) that are still in the legacy format `serviceAccount:{identity pool name}[{subject}]`
             */
            principalSubject?: string;
        }
        interface Subject {
            /** Authentication type for subject. */
            kind?: string;
            /** Name for subject. */
            name?: string;
            /** Namespace for subject. */
            ns?: string;
        }
        interface Subscription {
            /** The details of the most recent active subscription. If there has never been a subscription this will be empty. */
            details?: Details;
            /** The resource name of the subscription. Format: organizations/{organization}/subscription */
            name?: string;
            /** The tier of SCC features this organization currently has access to. */
            tier?: string;
        }
        interface VirtualMachineThreatDetectionSettings {
            /**
             * The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its
             * parent's.
             */
            modules?: { [P in string]: Config };
            /**
             * The resource name of the VirtualMachineThreatDetectionSettings. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings *
             * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings
             */
            name?: string;
            /** Output only. The service account used by Virtual Machine Threat Detection detectors. */
            serviceAccount?: string;
            /** The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED. */
            serviceEnablementState?: string;
            /** Output only. The time the settings were last updated. */
            updateTime?: string;
        }
        interface Vulnerability {
            /** CVE stands for Common Vulnerabilities and Exposures (https://cve.mitre.org/about/) */
            cve?: Cve;
        }
        interface WebSecurityScannerSettings {
            /**
             * The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its
             * parent's.
             */
            modules?: { [P in string]: Config };
            /**
             * The resource name of the WebSecurityScannerSettings. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings *
             * projects/{project}/webSecurityScannerSettings
             */
            name?: string;
            /** The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED. */
            serviceEnablementState?: string;
            /** Output only. The time the settings were last updated. */
            updateTime?: string;
        }
        interface YaraRuleSignature {
            /** The name of the YARA rule. */
            yaraRule?: string;
        }
        interface ContainerThreatDetectionSettingsResource {
            /** Calculates the effective ContainerThreatDetectionSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the ContainerThreatDetectionSettings to calculate. Formats: * organizations/{organization}/containerThreatDetectionSettings *
                 * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
                 * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ContainerThreatDetectionSettings>;
        }
        interface EventThreatDetectionSettingsResource {
            /** Calculates the effective EventThreatDetectionSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the EventThreatDetectionSettings to calculate. Formats: * organizations/{organization}/eventThreatDetectionSettings *
                 * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<EventThreatDetectionSettings>;
        }
        interface RapidVulnerabilityDetectionSettingsResource {
            /** Calculates the effective RapidVulnerabilityDetectionSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the RapidVulnerabilityDetectionSettings to calculate. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings *
                 * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<RapidVulnerabilityDetectionSettings>;
        }
        interface SecurityHealthAnalyticsSettingsResource {
            /** Calculates the effective SecurityHealthAnalyticsSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the SecurityHealthAnalyticsSettings to calculate. Formats: * organizations/{organization}/securityHealthAnalyticsSettings *
                 * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<SecurityHealthAnalyticsSettings>;
        }
        interface VirtualMachineThreatDetectionSettingsResource {
            /** Calculates the effective VirtualMachineThreatDetectionSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the VirtualMachineThreatDetectionSettings to calculate. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings *
                 * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<VirtualMachineThreatDetectionSettings>;
        }
        interface WebSecurityScannerSettingsResource {
            /** Calculates the effective WebSecurityScannerSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the WebSecurityScannerSettings to calculate. Formats: * organizations/{organization}/webSecurityScannerSettings *
                 * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<WebSecurityScannerSettings>;
        }
        interface FoldersResource {
            /** Get the ContainerThreatDetectionSettings resource. */
            getContainerThreatDetectionSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the ContainerThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/containerThreatDetectionSettings *
                 * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
                 * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ContainerThreatDetectionSettings>;
            /** Get the EventThreatDetectionSettings resource. */
            getEventThreatDetectionSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the EventThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/eventThreatDetectionSettings *
                 * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<EventThreatDetectionSettings>;
            /** Retrieve the OnboardingState of a resource. */
            getOnboardingState(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the OnboardingState to retrieve. Formats: * organizations/{organization}/onboardingState * folders/{folder}/onboardingState *
                 * projects/{project}/onboardingState
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<OnboardingState>;
            /** Get the RapidVulnerabilityDetectionSettings resource. */
            getRapidVulnerabilityDetectionSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the RapidVulnerabilityDetectionSettings to retrieve. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings *
                 * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<RapidVulnerabilityDetectionSettings>;
            /** Get the SecurityCenterSettings resource. */
            getSecurityCenterSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the SecurityCenterSettings to retrieve. Format: organizations/{organization}/securityCenterSettings Format: folders/{folder}/securityCenterSettings Format:
                 * projects/{project}/securityCenterSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<SecurityCenterSettings>;
            /** Get the SecurityHealthAnalyticsSettings resource. */
            getSecurityHealthAnalyticsSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the SecurityHealthAnalyticsSettings to retrieve. Formats: * organizations/{organization}/securityHealthAnalyticsSettings *
                 * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<SecurityHealthAnalyticsSettings>;
            /** Get the VirtualMachineThreatDetectionSettings resource. */
            getVirtualMachineThreatDetectionSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the VirtualMachineThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings *
                 * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<VirtualMachineThreatDetectionSettings>;
            /** Get the WebSecurityScannerSettings resource. */
            getWebSecurityScannerSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the WebSecurityScannerSettings to retrieve. Formats: * organizations/{organization}/webSecurityScannerSettings *
                 * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<WebSecurityScannerSettings>;
            /** Update the ContainerThreatDetectionSettings resource. */
            updateContainerThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings *
                 * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
                 * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: ContainerThreatDetectionSettings;
            }): Request<ContainerThreatDetectionSettings>;
            updateContainerThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings *
                 * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
                 * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: ContainerThreatDetectionSettings): Request<ContainerThreatDetectionSettings>;
            /** Update the EventThreatDetectionSettings resource. */
            updateEventThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the EventThreatDetectionSettings. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings *
                 * projects/{project}/eventThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: EventThreatDetectionSettings;
            }): Request<EventThreatDetectionSettings>;
            updateEventThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the EventThreatDetectionSettings. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings *
                 * projects/{project}/eventThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: EventThreatDetectionSettings): Request<EventThreatDetectionSettings>;
            /** Update the RapidVulnerabilityDetectionSettings resource. */
            updateRapidVulnerabilityDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the RapidVulnerabilityDetectionSettings. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings *
                 * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: RapidVulnerabilityDetectionSettings;
            }): Request<RapidVulnerabilityDetectionSettings>;
            updateRapidVulnerabilityDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the RapidVulnerabilityDetectionSettings. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings *
                 * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: RapidVulnerabilityDetectionSettings): Request<RapidVulnerabilityDetectionSettings>;
            /** Update the SecurityHealthAnalyticsSettings resource. */
            updateSecurityHealthAnalyticsSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the SecurityHealthAnalyticsSettings. Formats: * organizations/{organization}/securityHealthAnalyticsSettings *
                 * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: SecurityHealthAnalyticsSettings;
            }): Request<SecurityHealthAnalyticsSettings>;
            updateSecurityHealthAnalyticsSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the SecurityHealthAnalyticsSettings. Formats: * organizations/{organization}/securityHealthAnalyticsSettings *
                 * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: SecurityHealthAnalyticsSettings): Request<SecurityHealthAnalyticsSettings>;
            /** Update the VirtualMachineThreatDetectionSettings resource. */
            updateVirtualMachineThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the VirtualMachineThreatDetectionSettings. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings *
                 * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: VirtualMachineThreatDetectionSettings;
            }): Request<VirtualMachineThreatDetectionSettings>;
            updateVirtualMachineThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the VirtualMachineThreatDetectionSettings. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings *
                 * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: VirtualMachineThreatDetectionSettings): Request<VirtualMachineThreatDetectionSettings>;
            /** Update the WebSecurityScannerSettings resource. */
            updateWebSecurityScannerSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the WebSecurityScannerSettings. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings *
                 * projects/{project}/webSecurityScannerSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: WebSecurityScannerSettings;
            }): Request<WebSecurityScannerSettings>;
            updateWebSecurityScannerSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the WebSecurityScannerSettings. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings *
                 * projects/{project}/webSecurityScannerSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: WebSecurityScannerSettings): Request<WebSecurityScannerSettings>;
            containerThreatDetectionSettings: ContainerThreatDetectionSettingsResource;
            eventThreatDetectionSettings: EventThreatDetectionSettingsResource;
            rapidVulnerabilityDetectionSettings: RapidVulnerabilityDetectionSettingsResource;
            securityHealthAnalyticsSettings: SecurityHealthAnalyticsSettingsResource;
            virtualMachineThreatDetectionSettings: VirtualMachineThreatDetectionSettingsResource;
            webSecurityScannerSettings: WebSecurityScannerSettingsResource;
        }
        interface ContainerThreatDetectionSettingsResource {
            /** Calculates the effective ContainerThreatDetectionSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the ContainerThreatDetectionSettings to calculate. Formats: * organizations/{organization}/containerThreatDetectionSettings *
                 * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
                 * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ContainerThreatDetectionSettings>;
        }
        interface EventThreatDetectionSettingsResource {
            /** Calculates the effective EventThreatDetectionSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the EventThreatDetectionSettings to calculate. Formats: * organizations/{organization}/eventThreatDetectionSettings *
                 * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<EventThreatDetectionSettings>;
        }
        interface RapidVulnerabilityDetectionSettingsResource {
            /** Calculates the effective RapidVulnerabilityDetectionSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the RapidVulnerabilityDetectionSettings to calculate. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings *
                 * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<RapidVulnerabilityDetectionSettings>;
        }
        interface SecurityHealthAnalyticsSettingsResource {
            /** Calculates the effective SecurityHealthAnalyticsSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the SecurityHealthAnalyticsSettings to calculate. Formats: * organizations/{organization}/securityHealthAnalyticsSettings *
                 * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<SecurityHealthAnalyticsSettings>;
        }
        interface VirtualMachineThreatDetectionSettingsResource {
            /** Calculates the effective VirtualMachineThreatDetectionSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the VirtualMachineThreatDetectionSettings to calculate. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings *
                 * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<VirtualMachineThreatDetectionSettings>;
        }
        interface WebSecurityScannerSettingsResource {
            /** Calculates the effective WebSecurityScannerSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the WebSecurityScannerSettings to calculate. Formats: * organizations/{organization}/webSecurityScannerSettings *
                 * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<WebSecurityScannerSettings>;
        }
        interface OrganizationsResource {
            /** Get the ContainerThreatDetectionSettings resource. */
            getContainerThreatDetectionSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the ContainerThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/containerThreatDetectionSettings *
                 * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
                 * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ContainerThreatDetectionSettings>;
            /** Get the EventThreatDetectionSettings resource. */
            getEventThreatDetectionSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the EventThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/eventThreatDetectionSettings *
                 * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<EventThreatDetectionSettings>;
            /** Retrieve the OnboardingState of a resource. */
            getOnboardingState(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the OnboardingState to retrieve. Formats: * organizations/{organization}/onboardingState * folders/{folder}/onboardingState *
                 * projects/{project}/onboardingState
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<OnboardingState>;
            /** Get the RapidVulnerabilityDetectionSettings resource. */
            getRapidVulnerabilityDetectionSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the RapidVulnerabilityDetectionSettings to retrieve. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings *
                 * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<RapidVulnerabilityDetectionSettings>;
            /** Get the SecurityCenterSettings resource. */
            getSecurityCenterSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the SecurityCenterSettings to retrieve. Format: organizations/{organization}/securityCenterSettings Format: folders/{folder}/securityCenterSettings Format:
                 * projects/{project}/securityCenterSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<SecurityCenterSettings>;
            /** Get the SecurityHealthAnalyticsSettings resource. */
            getSecurityHealthAnalyticsSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the SecurityHealthAnalyticsSettings to retrieve. Formats: * organizations/{organization}/securityHealthAnalyticsSettings *
                 * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<SecurityHealthAnalyticsSettings>;
            /** Get the Subscription resource. */
            getSubscription(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the subscription to retrieve. Format: organizations/{organization}/subscription */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Subscription>;
            /** Get the VirtualMachineThreatDetectionSettings resource. */
            getVirtualMachineThreatDetectionSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the VirtualMachineThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings *
                 * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<VirtualMachineThreatDetectionSettings>;
            /** Get the WebSecurityScannerSettings resource. */
            getWebSecurityScannerSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the WebSecurityScannerSettings to retrieve. Formats: * organizations/{organization}/webSecurityScannerSettings *
                 * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<WebSecurityScannerSettings>;
            /** Update the ContainerThreatDetectionSettings resource. */
            updateContainerThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings *
                 * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
                 * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: ContainerThreatDetectionSettings;
            }): Request<ContainerThreatDetectionSettings>;
            updateContainerThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings *
                 * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
                 * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: ContainerThreatDetectionSettings): Request<ContainerThreatDetectionSettings>;
            /** Update the EventThreatDetectionSettings resource. */
            updateEventThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the EventThreatDetectionSettings. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings *
                 * projects/{project}/eventThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: EventThreatDetectionSettings;
            }): Request<EventThreatDetectionSettings>;
            updateEventThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the EventThreatDetectionSettings. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings *
                 * projects/{project}/eventThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: EventThreatDetectionSettings): Request<EventThreatDetectionSettings>;
            /** Update the RapidVulnerabilityDetectionSettings resource. */
            updateRapidVulnerabilityDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the RapidVulnerabilityDetectionSettings. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings *
                 * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: RapidVulnerabilityDetectionSettings;
            }): Request<RapidVulnerabilityDetectionSettings>;
            updateRapidVulnerabilityDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the RapidVulnerabilityDetectionSettings. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings *
                 * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: RapidVulnerabilityDetectionSettings): Request<RapidVulnerabilityDetectionSettings>;
            /** Update the SecurityHealthAnalyticsSettings resource. */
            updateSecurityHealthAnalyticsSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the SecurityHealthAnalyticsSettings. Formats: * organizations/{organization}/securityHealthAnalyticsSettings *
                 * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: SecurityHealthAnalyticsSettings;
            }): Request<SecurityHealthAnalyticsSettings>;
            updateSecurityHealthAnalyticsSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the SecurityHealthAnalyticsSettings. Formats: * organizations/{organization}/securityHealthAnalyticsSettings *
                 * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: SecurityHealthAnalyticsSettings): Request<SecurityHealthAnalyticsSettings>;
            /** Update the VirtualMachineThreatDetectionSettings resource. */
            updateVirtualMachineThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the VirtualMachineThreatDetectionSettings. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings *
                 * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: VirtualMachineThreatDetectionSettings;
            }): Request<VirtualMachineThreatDetectionSettings>;
            updateVirtualMachineThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the VirtualMachineThreatDetectionSettings. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings *
                 * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: VirtualMachineThreatDetectionSettings): Request<VirtualMachineThreatDetectionSettings>;
            /** Update the WebSecurityScannerSettings resource. */
            updateWebSecurityScannerSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the WebSecurityScannerSettings. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings *
                 * projects/{project}/webSecurityScannerSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: WebSecurityScannerSettings;
            }): Request<WebSecurityScannerSettings>;
            updateWebSecurityScannerSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the WebSecurityScannerSettings. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings *
                 * projects/{project}/webSecurityScannerSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: WebSecurityScannerSettings): Request<WebSecurityScannerSettings>;
            containerThreatDetectionSettings: ContainerThreatDetectionSettingsResource;
            eventThreatDetectionSettings: EventThreatDetectionSettingsResource;
            rapidVulnerabilityDetectionSettings: RapidVulnerabilityDetectionSettingsResource;
            securityHealthAnalyticsSettings: SecurityHealthAnalyticsSettingsResource;
            virtualMachineThreatDetectionSettings: VirtualMachineThreatDetectionSettingsResource;
            webSecurityScannerSettings: WebSecurityScannerSettingsResource;
        }
        interface ContainerThreatDetectionSettingsResource {
            /** Calculates the effective ContainerThreatDetectionSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the ContainerThreatDetectionSettings to calculate. Formats: * organizations/{organization}/containerThreatDetectionSettings *
                 * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
                 * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ContainerThreatDetectionSettings>;
        }
        interface EventThreatDetectionSettingsResource {
            /** Calculates the effective EventThreatDetectionSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the EventThreatDetectionSettings to calculate. Formats: * organizations/{organization}/eventThreatDetectionSettings *
                 * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<EventThreatDetectionSettings>;
        }
        interface ContainerThreatDetectionSettingsResource {
            /** Calculates the effective ContainerThreatDetectionSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the ContainerThreatDetectionSettings to calculate. Formats: * organizations/{organization}/containerThreatDetectionSettings *
                 * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
                 * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ContainerThreatDetectionSettings>;
        }
        interface ClustersResource {
            /** Get the ContainerThreatDetectionSettings resource. */
            getContainerThreatDetectionSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the ContainerThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/containerThreatDetectionSettings *
                 * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
                 * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ContainerThreatDetectionSettings>;
            /** Update the ContainerThreatDetectionSettings resource. */
            updateContainerThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings *
                 * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
                 * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: ContainerThreatDetectionSettings;
            }): Request<ContainerThreatDetectionSettings>;
            updateContainerThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings *
                 * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
                 * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: ContainerThreatDetectionSettings): Request<ContainerThreatDetectionSettings>;
            containerThreatDetectionSettings: ContainerThreatDetectionSettingsResource;
        }
        interface LocationsResource {
            clusters: ClustersResource;
        }
        interface RapidVulnerabilityDetectionSettingsResource {
            /** Calculates the effective RapidVulnerabilityDetectionSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the RapidVulnerabilityDetectionSettings to calculate. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings *
                 * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<RapidVulnerabilityDetectionSettings>;
        }
        interface SecurityHealthAnalyticsSettingsResource {
            /** Calculates the effective SecurityHealthAnalyticsSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the SecurityHealthAnalyticsSettings to calculate. Formats: * organizations/{organization}/securityHealthAnalyticsSettings *
                 * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<SecurityHealthAnalyticsSettings>;
        }
        interface VirtualMachineThreatDetectionSettingsResource {
            /** Calculates the effective VirtualMachineThreatDetectionSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the VirtualMachineThreatDetectionSettings to calculate. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings *
                 * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<VirtualMachineThreatDetectionSettings>;
        }
        interface WebSecurityScannerSettingsResource {
            /** Calculates the effective WebSecurityScannerSettings based on its level in the resource hierarchy and its settings. */
            calculate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the WebSecurityScannerSettings to calculate. Formats: * organizations/{organization}/webSecurityScannerSettings *
                 * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<WebSecurityScannerSettings>;
        }
        interface ProjectsResource {
            /** Get the ContainerThreatDetectionSettings resource. */
            getContainerThreatDetectionSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the ContainerThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/containerThreatDetectionSettings *
                 * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
                 * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ContainerThreatDetectionSettings>;
            /** Get the EventThreatDetectionSettings resource. */
            getEventThreatDetectionSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the EventThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/eventThreatDetectionSettings *
                 * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<EventThreatDetectionSettings>;
            /** Retrieve the OnboardingState of a resource. */
            getOnboardingState(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the OnboardingState to retrieve. Formats: * organizations/{organization}/onboardingState * folders/{folder}/onboardingState *
                 * projects/{project}/onboardingState
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<OnboardingState>;
            /** Get the RapidVulnerabilityDetectionSettings resource. */
            getRapidVulnerabilityDetectionSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the RapidVulnerabilityDetectionSettings to retrieve. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings *
                 * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<RapidVulnerabilityDetectionSettings>;
            /** Get the SecurityCenterSettings resource. */
            getSecurityCenterSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the SecurityCenterSettings to retrieve. Format: organizations/{organization}/securityCenterSettings Format: folders/{folder}/securityCenterSettings Format:
                 * projects/{project}/securityCenterSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<SecurityCenterSettings>;
            /** Get the SecurityHealthAnalyticsSettings resource. */
            getSecurityHealthAnalyticsSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the SecurityHealthAnalyticsSettings to retrieve. Formats: * organizations/{organization}/securityHealthAnalyticsSettings *
                 * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<SecurityHealthAnalyticsSettings>;
            /** Get the VirtualMachineThreatDetectionSettings resource. */
            getVirtualMachineThreatDetectionSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the VirtualMachineThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings *
                 * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<VirtualMachineThreatDetectionSettings>;
            /** Get the WebSecurityScannerSettings resource. */
            getWebSecurityScannerSettings(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the WebSecurityScannerSettings to retrieve. Formats: * organizations/{organization}/webSecurityScannerSettings *
                 * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<WebSecurityScannerSettings>;
            /** Update the ContainerThreatDetectionSettings resource. */
            updateContainerThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings *
                 * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
                 * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: ContainerThreatDetectionSettings;
            }): Request<ContainerThreatDetectionSettings>;
            updateContainerThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings *
                 * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings *
                 * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: ContainerThreatDetectionSettings): Request<ContainerThreatDetectionSettings>;
            /** Update the EventThreatDetectionSettings resource. */
            updateEventThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the EventThreatDetectionSettings. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings *
                 * projects/{project}/eventThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: EventThreatDetectionSettings;
            }): Request<EventThreatDetectionSettings>;
            updateEventThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the EventThreatDetectionSettings. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings *
                 * projects/{project}/eventThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: EventThreatDetectionSettings): Request<EventThreatDetectionSettings>;
            /** Update the RapidVulnerabilityDetectionSettings resource. */
            updateRapidVulnerabilityDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the RapidVulnerabilityDetectionSettings. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings *
                 * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: RapidVulnerabilityDetectionSettings;
            }): Request<RapidVulnerabilityDetectionSettings>;
            updateRapidVulnerabilityDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the RapidVulnerabilityDetectionSettings. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings *
                 * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: RapidVulnerabilityDetectionSettings): Request<RapidVulnerabilityDetectionSettings>;
            /** Update the SecurityHealthAnalyticsSettings resource. */
            updateSecurityHealthAnalyticsSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the SecurityHealthAnalyticsSettings. Formats: * organizations/{organization}/securityHealthAnalyticsSettings *
                 * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: SecurityHealthAnalyticsSettings;
            }): Request<SecurityHealthAnalyticsSettings>;
            updateSecurityHealthAnalyticsSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the SecurityHealthAnalyticsSettings. Formats: * organizations/{organization}/securityHealthAnalyticsSettings *
                 * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: SecurityHealthAnalyticsSettings): Request<SecurityHealthAnalyticsSettings>;
            /** Update the VirtualMachineThreatDetectionSettings resource. */
            updateVirtualMachineThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the VirtualMachineThreatDetectionSettings. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings *
                 * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: VirtualMachineThreatDetectionSettings;
            }): Request<VirtualMachineThreatDetectionSettings>;
            updateVirtualMachineThreatDetectionSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the VirtualMachineThreatDetectionSettings. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings *
                 * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: VirtualMachineThreatDetectionSettings): Request<VirtualMachineThreatDetectionSettings>;
            /** Update the WebSecurityScannerSettings resource. */
            updateWebSecurityScannerSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the WebSecurityScannerSettings. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings *
                 * projects/{project}/webSecurityScannerSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: WebSecurityScannerSettings;
            }): Request<WebSecurityScannerSettings>;
            updateWebSecurityScannerSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The resource name of the WebSecurityScannerSettings. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings *
                 * projects/{project}/webSecurityScannerSettings
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The list of fields to be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: WebSecurityScannerSettings): Request<WebSecurityScannerSettings>;
            containerThreatDetectionSettings: ContainerThreatDetectionSettingsResource;
            eventThreatDetectionSettings: EventThreatDetectionSettingsResource;
            locations: LocationsResource;
            rapidVulnerabilityDetectionSettings: RapidVulnerabilityDetectionSettingsResource;
            securityHealthAnalyticsSettings: SecurityHealthAnalyticsSettingsResource;
            virtualMachineThreatDetectionSettings: VirtualMachineThreatDetectionSettingsResource;
            webSecurityScannerSettings: WebSecurityScannerSettingsResource;
        }

        const folders: FoldersResource;

        const organizations: OrganizationsResource;

        const projects: ProjectsResource;
    }
}
