/* This is stub file for gapi.client.documentai-v1beta3 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20240515

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://documentai.googleapis.com/$discovery/rest?version=v1beta3'
  );
  /** now we can use gapi.client.documentai */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
    'https://www.googleapis.com/auth/cloud-platform',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Fetches processor types. Note that we don't use ListProcessorTypes here, because it isn't paginated. */
    await gapi.client.documentai.projects.locations.fetchProcessorTypes({
      parent: 'Test string',
    });
    /** Gets information about a location. */
    await gapi.client.documentai.projects.locations.get({
      name: 'Test string',
    });
    /** Lists information about the supported locations for this service. */
    await gapi.client.documentai.projects.locations.list({
      filter: 'Test string',
      name: 'Test string',
      pageSize: 42,
      pageToken: 'Test string',
    });
    /** Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
    await gapi.client.documentai.projects.locations.operations.cancel({
      name: 'Test string',
    });
    /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
    await gapi.client.documentai.projects.locations.operations.get({
      name: 'Test string',
    });
    /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
    await gapi.client.documentai.projects.locations.operations.list({
      filter: 'Test string',
      name: 'Test string',
      pageSize: 42,
      pageToken: 'Test string',
    });
    /** LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format. */
    await gapi.client.documentai.projects.locations.processors.batchProcess(
      {
        name: 'Test string',
      },
      {
        documentOutputConfig: {
          gcsOutputConfig: {
            fieldMask: 'Test string',
            gcsUri: 'Test string',
            shardingConfig: {
              pagesOverlap: 42,
              pagesPerShard: 42,
            },
          },
        },
        inputConfigs: [
          {
            gcsSource: 'Test string',
            mimeType: 'Test string',
          },
        ],
        inputDocuments: {
          gcsDocuments: {
            documents: [
              {
                gcsUri: 'Test string',
                mimeType: 'Test string',
              },
            ],
          },
          gcsPrefix: {
            gcsUriPrefix: 'Test string',
          },
        },
        labels: {
          A: 'Test string',
        },
        outputConfig: {
          gcsDestination: 'Test string',
        },
        processOptions: {
          fromEnd: 42,
          fromStart: 42,
          individualPageSelector: {
            pages: [42],
          },
          layoutConfig: {
            chunkingConfig: {
              breakpointPercentileThreshold: 42,
              chunkSize: 42,
              includeAncestorHeadings: true,
              semanticChunkingGroupSize: true,
            },
          },
          ocrConfig: {
            advancedOcrOptions: ['Test string'],
            computeStyleInfo: true,
            disableCharacterBoxesDetection: true,
            enableImageQualityScores: true,
            enableNativePdfParsing: true,
            enableSymbol: true,
            hints: {
              languageHints: ['Test string'],
            },
            premiumFeatures: {
              computeStyleInfo: true,
              enableMathOcr: true,
              enableSelectionMarkDetection: true,
            },
          },
          schemaOverride: {
            description: 'Test string',
            displayName: 'Test string',
            entityTypes: [
              {
                baseTypes: ['Test string'],
                displayName: 'Test string',
                entityTypeMetadata: {
                  inactive: true,
                },
                enumValues: {
                  values: ['Test string'],
                },
                name: 'Test string',
                properties: [
                  {
                    displayName: 'Test string',
                    name: 'Test string',
                    occurrenceType: 'Test string',
                    propertyMetadata: {
                      fieldExtractionMetadata: {
                        summaryOptions: {
                          format: 'Test string',
                          length: 'Test string',
                        },
                      },
                      inactive: true,
                    },
                    valueType: 'Test string',
                  },
                ],
              },
            ],
            metadata: {
              documentAllowMultipleLabels: true,
              documentSplitter: true,
              prefixedNamingOnProperties: true,
              skipNamingValidation: true,
            },
          },
        },
        skipHumanReview: true,
      }
    );
    /** Creates a processor from the ProcessorType provided. The processor will be at `ENABLED` state by default after its creation. */
    await gapi.client.documentai.projects.locations.processors.create(
      {
        parent: 'Test string',
      },
      {
        createTime: 'Test string',
        defaultProcessorVersion: 'Test string',
        displayName: 'Test string',
        kmsKeyName: 'Test string',
        name: 'Test string',
        processEndpoint: 'Test string',
        processorVersionAliases: [
          {
            alias: 'Test string',
            processorVersion: 'Test string',
          },
        ],
        state: 'Test string',
        type: 'Test string',
      }
    );
    /** Deletes the processor, unloads all deployed model artifacts if it was enabled and then deletes all artifacts associated with this processor. */
    await gapi.client.documentai.projects.locations.processors.delete({
      name: 'Test string',
    });
    /** Disables a processor */
    await gapi.client.documentai.projects.locations.processors.disable(
      {
        name: 'Test string',
      },
      {}
    );
    /** Enables a processor */
    await gapi.client.documentai.projects.locations.processors.enable(
      {
        name: 'Test string',
      },
      {}
    );
    /** Gets a processor detail. */
    await gapi.client.documentai.projects.locations.processors.get({
      name: 'Test string',
    });
    /** Lists all processors which belong to this project. */
    await gapi.client.documentai.projects.locations.processors.list({
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Processes a single document. */
    await gapi.client.documentai.projects.locations.processors.process(
      {
        name: 'Test string',
      },
      {
        document: {
          chunkedDocument: {
            chunks: [
              {
                chunkId: 'Test string',
                content: 'Test string',
                pageFooters: [
                  {
                    pageSpan: {
                      pageEnd: 42,
                      pageStart: 42,
                    },
                    text: 'Test string',
                  },
                ],
                pageHeaders: [
                  {
                    pageSpan: {
                      pageEnd: 42,
                      pageStart: 42,
                    },
                    text: 'Test string',
                  },
                ],
                pageSpan: {
                  pageEnd: 42,
                  pageStart: 42,
                },
                sourceBlockIds: ['Test string'],
              },
            ],
          },
          content: 'Test string',
          documentLayout: {
            blocks: [
              {
                blockId: 'Test string',
                listBlock: {
                  listEntries: [
                    {
                      blocks: undefined,
                    },
                  ],
                  type: 'Test string',
                },
                pageSpan: {
                  pageEnd: 42,
                  pageStart: 42,
                },
                tableBlock: {
                  bodyRows: [
                    {
                      cells: [
                        {
                          blocks: undefined,
                          colSpan: 42,
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  caption: 'Test string',
                  headerRows: [
                    {
                      cells: [
                        {
                          blocks: undefined,
                          colSpan: 42,
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                },
                textBlock: {
                  blocks: undefined,
                  text: 'Test string',
                  type: 'Test string',
                },
              },
            ],
          },
          entities: [
            {
              confidence: 42,
              id: 'Test string',
              mentionId: 'Test string',
              mentionText: 'Test string',
              normalizedValue: {
                addressValue: {
                  addressLines: ['Test string'],
                  administrativeArea: 'Test string',
                  languageCode: 'Test string',
                  locality: 'Test string',
                  organization: 'Test string',
                  postalCode: 'Test string',
                  recipients: ['Test string'],
                  regionCode: 'Test string',
                  revision: 42,
                  sortingCode: 'Test string',
                  sublocality: 'Test string',
                },
                booleanValue: true,
                datetimeValue: {
                  day: 42,
                  hours: 42,
                  minutes: 42,
                  month: 42,
                  nanos: 42,
                  seconds: 42,
                  timeZone: {
                    id: 'Test string',
                    version: 'Test string',
                  },
                  utcOffset: 'Test string',
                  year: 42,
                },
                dateValue: {
                  day: 42,
                  month: 42,
                  year: 42,
                },
                floatValue: 42,
                integerValue: 42,
                moneyValue: {
                  currencyCode: 'Test string',
                  nanos: 42,
                  units: 'Test string',
                },
                text: 'Test string',
              },
              pageAnchor: {
                pageRefs: [
                  {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    layoutId: 'Test string',
                    layoutType: 'Test string',
                    page: 'Test string',
                  },
                ],
              },
              properties: undefined,
              provenance: {
                id: 42,
                parents: [
                  {
                    id: 42,
                    index: 42,
                    revision: 42,
                  },
                ],
                revision: 42,
                type: 'Test string',
              },
              redacted: true,
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
              type: 'Test string',
            },
          ],
          entityRelations: [
            {
              objectId: 'Test string',
              relation: 'Test string',
              subjectId: 'Test string',
            },
          ],
          error: {
            code: 42,
            details: [
              {
                A: 42,
              },
            ],
            message: 'Test string',
          },
          mimeType: 'Test string',
          pages: [
            {
              blocks: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              detectedBarcodes: [
                {
                  barcode: {
                    format: 'Test string',
                    rawValue: 'Test string',
                    valueFormat: 'Test string',
                  },
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                },
              ],
              detectedLanguages: [
                {
                  confidence: 42,
                  languageCode: 'Test string',
                },
              ],
              dimension: {
                height: 42,
                unit: 'Test string',
                width: 42,
              },
              formFields: [
                {
                  correctedKeyText: 'Test string',
                  correctedValueText: 'Test string',
                  fieldName: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  fieldValue: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  nameDetectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                  valueDetectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  valueType: 'Test string',
                },
              ],
              image: {
                content: 'Test string',
                height: 42,
                mimeType: 'Test string',
                width: 42,
              },
              imageQualityScores: {
                detectedDefects: [
                  {
                    confidence: 42,
                    type: 'Test string',
                  },
                ],
                qualityScore: 42,
              },
              layout: {
                boundingPoly: {
                  normalizedVertices: [
                    {
                      x: 42,
                      y: 42,
                    },
                  ],
                  vertices: [
                    {
                      x: 42,
                      y: 42,
                    },
                  ],
                },
                confidence: 42,
                orientation: 'Test string',
                textAnchor: {
                  content: 'Test string',
                  textSegments: [
                    {
                      endIndex: 'Test string',
                      startIndex: 'Test string',
                    },
                  ],
                },
              },
              lines: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              pageNumber: 42,
              paragraphs: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              provenance: {
                id: 42,
                parents: [
                  {
                    id: 42,
                    index: 42,
                    revision: 42,
                  },
                ],
                revision: 42,
                type: 'Test string',
              },
              symbols: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                },
              ],
              tables: [
                {
                  bodyRows: [
                    {
                      cells: [
                        {
                          colSpan: 42,
                          detectedLanguages: [
                            {
                              confidence: 42,
                              languageCode: 'Test string',
                            },
                          ],
                          layout: {
                            boundingPoly: {
                              normalizedVertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                              vertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                            },
                            confidence: 42,
                            orientation: 'Test string',
                            textAnchor: {
                              content: 'Test string',
                              textSegments: [
                                {
                                  endIndex: 'Test string',
                                  startIndex: 'Test string',
                                },
                              ],
                            },
                          },
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  headerRows: [
                    {
                      cells: [
                        {
                          colSpan: 42,
                          detectedLanguages: [
                            {
                              confidence: 42,
                              languageCode: 'Test string',
                            },
                          ],
                          layout: {
                            boundingPoly: {
                              normalizedVertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                              vertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                            },
                            confidence: 42,
                            orientation: 'Test string',
                            textAnchor: {
                              content: 'Test string',
                              textSegments: [
                                {
                                  endIndex: 'Test string',
                                  startIndex: 'Test string',
                                },
                              ],
                            },
                          },
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              tokens: [
                {
                  detectedBreak: {
                    type: 'Test string',
                  },
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                  styleInfo: {
                    backgroundColor: {
                      alpha: 42,
                      blue: 42,
                      green: 42,
                      red: 42,
                    },
                    bold: true,
                    fontSize: 42,
                    fontType: 'Test string',
                    fontWeight: 42,
                    handwritten: true,
                    italic: true,
                    letterSpacing: 42,
                    pixelFontSize: 42,
                    smallcaps: true,
                    strikeout: true,
                    subscript: true,
                    superscript: true,
                    textColor: {
                      alpha: 42,
                      blue: 42,
                      green: 42,
                      red: 42,
                    },
                    underlined: true,
                  },
                },
              ],
              transforms: [
                {
                  cols: 42,
                  data: 'Test string',
                  rows: 42,
                  type: 42,
                },
              ],
              visualElements: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  type: 'Test string',
                },
              ],
            },
          ],
          revisions: [
            {
              agent: 'Test string',
              createTime: 'Test string',
              humanReview: {
                state: 'Test string',
                stateMessage: 'Test string',
              },
              id: 'Test string',
              parent: [42],
              parentIds: ['Test string'],
              processor: 'Test string',
            },
          ],
          shardInfo: {
            shardCount: 'Test string',
            shardIndex: 'Test string',
            textOffset: 'Test string',
          },
          text: 'Test string',
          textChanges: [
            {
              changedText: 'Test string',
              provenance: [
                {
                  id: 42,
                  parents: [
                    {
                      id: 42,
                      index: 42,
                      revision: 42,
                    },
                  ],
                  revision: 42,
                  type: 'Test string',
                },
              ],
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
            },
          ],
          textStyles: [
            {
              backgroundColor: {
                alpha: 42,
                blue: 42,
                green: 42,
                red: 42,
              },
              color: {
                alpha: 42,
                blue: 42,
                green: 42,
                red: 42,
              },
              fontFamily: 'Test string',
              fontSize: {
                size: 42,
                unit: 'Test string',
              },
              fontWeight: 'Test string',
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
              textDecoration: 'Test string',
              textStyle: 'Test string',
            },
          ],
          uri: 'Test string',
        },
        fieldMask: 'Test string',
        gcsDocument: {
          gcsUri: 'Test string',
          mimeType: 'Test string',
        },
        inlineDocument: {
          chunkedDocument: {
            chunks: [
              {
                chunkId: 'Test string',
                content: 'Test string',
                pageFooters: [
                  {
                    pageSpan: {
                      pageEnd: 42,
                      pageStart: 42,
                    },
                    text: 'Test string',
                  },
                ],
                pageHeaders: [
                  {
                    pageSpan: {
                      pageEnd: 42,
                      pageStart: 42,
                    },
                    text: 'Test string',
                  },
                ],
                pageSpan: {
                  pageEnd: 42,
                  pageStart: 42,
                },
                sourceBlockIds: ['Test string'],
              },
            ],
          },
          content: 'Test string',
          documentLayout: {
            blocks: [
              {
                blockId: 'Test string',
                listBlock: {
                  listEntries: [
                    {
                      blocks: undefined,
                    },
                  ],
                  type: 'Test string',
                },
                pageSpan: {
                  pageEnd: 42,
                  pageStart: 42,
                },
                tableBlock: {
                  bodyRows: [
                    {
                      cells: [
                        {
                          blocks: undefined,
                          colSpan: 42,
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  caption: 'Test string',
                  headerRows: [
                    {
                      cells: [
                        {
                          blocks: undefined,
                          colSpan: 42,
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                },
                textBlock: {
                  blocks: undefined,
                  text: 'Test string',
                  type: 'Test string',
                },
              },
            ],
          },
          entities: [
            {
              confidence: 42,
              id: 'Test string',
              mentionId: 'Test string',
              mentionText: 'Test string',
              normalizedValue: {
                addressValue: {
                  addressLines: ['Test string'],
                  administrativeArea: 'Test string',
                  languageCode: 'Test string',
                  locality: 'Test string',
                  organization: 'Test string',
                  postalCode: 'Test string',
                  recipients: ['Test string'],
                  regionCode: 'Test string',
                  revision: 42,
                  sortingCode: 'Test string',
                  sublocality: 'Test string',
                },
                booleanValue: true,
                datetimeValue: {
                  day: 42,
                  hours: 42,
                  minutes: 42,
                  month: 42,
                  nanos: 42,
                  seconds: 42,
                  timeZone: {
                    id: 'Test string',
                    version: 'Test string',
                  },
                  utcOffset: 'Test string',
                  year: 42,
                },
                dateValue: {
                  day: 42,
                  month: 42,
                  year: 42,
                },
                floatValue: 42,
                integerValue: 42,
                moneyValue: {
                  currencyCode: 'Test string',
                  nanos: 42,
                  units: 'Test string',
                },
                text: 'Test string',
              },
              pageAnchor: {
                pageRefs: [
                  {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    layoutId: 'Test string',
                    layoutType: 'Test string',
                    page: 'Test string',
                  },
                ],
              },
              properties: undefined,
              provenance: {
                id: 42,
                parents: [
                  {
                    id: 42,
                    index: 42,
                    revision: 42,
                  },
                ],
                revision: 42,
                type: 'Test string',
              },
              redacted: true,
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
              type: 'Test string',
            },
          ],
          entityRelations: [
            {
              objectId: 'Test string',
              relation: 'Test string',
              subjectId: 'Test string',
            },
          ],
          error: {
            code: 42,
            details: [
              {
                A: 42,
              },
            ],
            message: 'Test string',
          },
          mimeType: 'Test string',
          pages: [
            {
              blocks: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              detectedBarcodes: [
                {
                  barcode: {
                    format: 'Test string',
                    rawValue: 'Test string',
                    valueFormat: 'Test string',
                  },
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                },
              ],
              detectedLanguages: [
                {
                  confidence: 42,
                  languageCode: 'Test string',
                },
              ],
              dimension: {
                height: 42,
                unit: 'Test string',
                width: 42,
              },
              formFields: [
                {
                  correctedKeyText: 'Test string',
                  correctedValueText: 'Test string',
                  fieldName: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  fieldValue: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  nameDetectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                  valueDetectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  valueType: 'Test string',
                },
              ],
              image: {
                content: 'Test string',
                height: 42,
                mimeType: 'Test string',
                width: 42,
              },
              imageQualityScores: {
                detectedDefects: [
                  {
                    confidence: 42,
                    type: 'Test string',
                  },
                ],
                qualityScore: 42,
              },
              layout: {
                boundingPoly: {
                  normalizedVertices: [
                    {
                      x: 42,
                      y: 42,
                    },
                  ],
                  vertices: [
                    {
                      x: 42,
                      y: 42,
                    },
                  ],
                },
                confidence: 42,
                orientation: 'Test string',
                textAnchor: {
                  content: 'Test string',
                  textSegments: [
                    {
                      endIndex: 'Test string',
                      startIndex: 'Test string',
                    },
                  ],
                },
              },
              lines: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              pageNumber: 42,
              paragraphs: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              provenance: {
                id: 42,
                parents: [
                  {
                    id: 42,
                    index: 42,
                    revision: 42,
                  },
                ],
                revision: 42,
                type: 'Test string',
              },
              symbols: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                },
              ],
              tables: [
                {
                  bodyRows: [
                    {
                      cells: [
                        {
                          colSpan: 42,
                          detectedLanguages: [
                            {
                              confidence: 42,
                              languageCode: 'Test string',
                            },
                          ],
                          layout: {
                            boundingPoly: {
                              normalizedVertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                              vertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                            },
                            confidence: 42,
                            orientation: 'Test string',
                            textAnchor: {
                              content: 'Test string',
                              textSegments: [
                                {
                                  endIndex: 'Test string',
                                  startIndex: 'Test string',
                                },
                              ],
                            },
                          },
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  headerRows: [
                    {
                      cells: [
                        {
                          colSpan: 42,
                          detectedLanguages: [
                            {
                              confidence: 42,
                              languageCode: 'Test string',
                            },
                          ],
                          layout: {
                            boundingPoly: {
                              normalizedVertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                              vertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                            },
                            confidence: 42,
                            orientation: 'Test string',
                            textAnchor: {
                              content: 'Test string',
                              textSegments: [
                                {
                                  endIndex: 'Test string',
                                  startIndex: 'Test string',
                                },
                              ],
                            },
                          },
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              tokens: [
                {
                  detectedBreak: {
                    type: 'Test string',
                  },
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                  styleInfo: {
                    backgroundColor: {
                      alpha: 42,
                      blue: 42,
                      green: 42,
                      red: 42,
                    },
                    bold: true,
                    fontSize: 42,
                    fontType: 'Test string',
                    fontWeight: 42,
                    handwritten: true,
                    italic: true,
                    letterSpacing: 42,
                    pixelFontSize: 42,
                    smallcaps: true,
                    strikeout: true,
                    subscript: true,
                    superscript: true,
                    textColor: {
                      alpha: 42,
                      blue: 42,
                      green: 42,
                      red: 42,
                    },
                    underlined: true,
                  },
                },
              ],
              transforms: [
                {
                  cols: 42,
                  data: 'Test string',
                  rows: 42,
                  type: 42,
                },
              ],
              visualElements: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  type: 'Test string',
                },
              ],
            },
          ],
          revisions: [
            {
              agent: 'Test string',
              createTime: 'Test string',
              humanReview: {
                state: 'Test string',
                stateMessage: 'Test string',
              },
              id: 'Test string',
              parent: [42],
              parentIds: ['Test string'],
              processor: 'Test string',
            },
          ],
          shardInfo: {
            shardCount: 'Test string',
            shardIndex: 'Test string',
            textOffset: 'Test string',
          },
          text: 'Test string',
          textChanges: [
            {
              changedText: 'Test string',
              provenance: [
                {
                  id: 42,
                  parents: [
                    {
                      id: 42,
                      index: 42,
                      revision: 42,
                    },
                  ],
                  revision: 42,
                  type: 'Test string',
                },
              ],
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
            },
          ],
          textStyles: [
            {
              backgroundColor: {
                alpha: 42,
                blue: 42,
                green: 42,
                red: 42,
              },
              color: {
                alpha: 42,
                blue: 42,
                green: 42,
                red: 42,
              },
              fontFamily: 'Test string',
              fontSize: {
                size: 42,
                unit: 'Test string',
              },
              fontWeight: 'Test string',
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
              textDecoration: 'Test string',
              textStyle: 'Test string',
            },
          ],
          uri: 'Test string',
        },
        labels: {
          A: 'Test string',
        },
        processOptions: {
          fromEnd: 42,
          fromStart: 42,
          individualPageSelector: {
            pages: [42],
          },
          layoutConfig: {
            chunkingConfig: {
              breakpointPercentileThreshold: 42,
              chunkSize: 42,
              includeAncestorHeadings: true,
              semanticChunkingGroupSize: true,
            },
          },
          ocrConfig: {
            advancedOcrOptions: ['Test string'],
            computeStyleInfo: true,
            disableCharacterBoxesDetection: true,
            enableImageQualityScores: true,
            enableNativePdfParsing: true,
            enableSymbol: true,
            hints: {
              languageHints: ['Test string'],
            },
            premiumFeatures: {
              computeStyleInfo: true,
              enableMathOcr: true,
              enableSelectionMarkDetection: true,
            },
          },
          schemaOverride: {
            description: 'Test string',
            displayName: 'Test string',
            entityTypes: [
              {
                baseTypes: ['Test string'],
                displayName: 'Test string',
                entityTypeMetadata: {
                  inactive: true,
                },
                enumValues: {
                  values: ['Test string'],
                },
                name: 'Test string',
                properties: [
                  {
                    displayName: 'Test string',
                    name: 'Test string',
                    occurrenceType: 'Test string',
                    propertyMetadata: {
                      fieldExtractionMetadata: {
                        summaryOptions: {
                          format: 'Test string',
                          length: 'Test string',
                        },
                      },
                      inactive: true,
                    },
                    valueType: 'Test string',
                  },
                ],
              },
            ],
            metadata: {
              documentAllowMultipleLabels: true,
              documentSplitter: true,
              prefixedNamingOnProperties: true,
              skipNamingValidation: true,
            },
          },
        },
        rawDocument: {
          content: 'Test string',
          displayName: 'Test string',
          mimeType: 'Test string',
        },
        skipHumanReview: true,
      }
    );
    /** Set the default (active) version of a Processor that will be used in ProcessDocument and BatchProcessDocuments. */
    await gapi.client.documentai.projects.locations.processors.setDefaultProcessorVersion(
      {
        processor: 'Test string',
      },
      {
        defaultProcessorVersion: 'Test string',
      }
    );
    /** Updates metadata associated with a dataset. */
    await gapi.client.documentai.projects.locations.processors.updateDataset(
      {
        name: 'Test string',
        updateMask: 'Test string',
      },
      {
        documentWarehouseConfig: {
          collection: 'Test string',
          schema: 'Test string',
        },
        gcsManagedConfig: {
          gcsPrefix: {
            gcsUriPrefix: 'Test string',
          },
        },
        name: 'Test string',
        spannerIndexingConfig: {},
        state: 'Test string',
        unmanagedDatasetConfig: {},
      }
    );
    /** Deletes a set of documents. */
    await gapi.client.documentai.projects.locations.processors.dataset.batchDeleteDocuments(
      {
        dataset: 'Test string',
      },
      {
        datasetDocuments: {
          filter: 'Test string',
          individualDocumentIds: {
            documentIds: [
              {
                gcsManagedDocId: {
                  cwDocId: 'Test string',
                  gcsUri: 'Test string',
                },
                revisionRef: {
                  latestProcessorVersion: 'Test string',
                  revisionCase: 'Test string',
                  revisionId: 'Test string',
                },
                unmanagedDocId: {
                  docId: 'Test string',
                },
              },
            ],
          },
        },
      }
    );
    /** Gets the `DatasetSchema` of a `Dataset`. */
    await gapi.client.documentai.projects.locations.processors.dataset.getDatasetSchema(
      {
        name: 'Test string',
        visibleFieldsOnly: true,
      }
    );
    /** Returns relevant fields present in the requested document. */
    await gapi.client.documentai.projects.locations.processors.dataset.getDocument(
      {
        dataset: 'Test string',
        'documentId.gcsManagedDocId.cwDocId': 'Test string',
        'documentId.gcsManagedDocId.gcsUri': 'Test string',
        'documentId.revisionRef.latestProcessorVersion': 'Test string',
        'documentId.revisionRef.revisionCase': 'Test string',
        'documentId.revisionRef.revisionId': 'Test string',
        'documentId.unmanagedDocId.docId': 'Test string',
        'pageRange.end': 42,
        'pageRange.start': 42,
        readMask: 'Test string',
      }
    );
    /** Import documents into a dataset. */
    await gapi.client.documentai.projects.locations.processors.dataset.importDocuments(
      {
        dataset: 'Test string',
      },
      {
        batchDocumentsImportConfigs: [
          {
            autoSplitConfig: {
              trainingSplitRatio: 42,
            },
            batchInputConfig: {
              gcsDocuments: {
                documents: [
                  {
                    gcsUri: 'Test string',
                    mimeType: 'Test string',
                  },
                ],
              },
              gcsPrefix: {
                gcsUriPrefix: 'Test string',
              },
            },
            datasetSplit: 'Test string',
          },
        ],
      }
    );
    /** Returns a list of documents present in the dataset. */
    await gapi.client.documentai.projects.locations.processors.dataset.listDocuments(
      {
        dataset: 'Test string',
      },
      {
        filter: 'Test string',
        pageSize: 42,
        pageToken: 'Test string',
        returnTotalSize: true,
        skip: 42,
      }
    );
    /** Updates a `DatasetSchema`. */
    await gapi.client.documentai.projects.locations.processors.dataset.updateDatasetSchema(
      {
        name: 'Test string',
        updateMask: 'Test string',
      },
      {
        documentSchema: {
          description: 'Test string',
          displayName: 'Test string',
          entityTypes: [
            {
              baseTypes: ['Test string'],
              displayName: 'Test string',
              entityTypeMetadata: {
                inactive: true,
              },
              enumValues: {
                values: ['Test string'],
              },
              name: 'Test string',
              properties: [
                {
                  displayName: 'Test string',
                  name: 'Test string',
                  occurrenceType: 'Test string',
                  propertyMetadata: {
                    fieldExtractionMetadata: {
                      summaryOptions: {
                        format: 'Test string',
                        length: 'Test string',
                      },
                    },
                    inactive: true,
                  },
                  valueType: 'Test string',
                },
              ],
            },
          ],
          metadata: {
            documentAllowMultipleLabels: true,
            documentSplitter: true,
            prefixedNamingOnProperties: true,
            skipNamingValidation: true,
          },
        },
        name: 'Test string',
      }
    );
    /** Send a document for Human Review. The input document should be processed by the specified processor. */
    await gapi.client.documentai.projects.locations.processors.humanReviewConfig.reviewDocument(
      {
        humanReviewConfig: 'Test string',
      },
      {
        document: {
          chunkedDocument: {
            chunks: [
              {
                chunkId: 'Test string',
                content: 'Test string',
                pageFooters: [
                  {
                    pageSpan: {
                      pageEnd: 42,
                      pageStart: 42,
                    },
                    text: 'Test string',
                  },
                ],
                pageHeaders: [
                  {
                    pageSpan: {
                      pageEnd: 42,
                      pageStart: 42,
                    },
                    text: 'Test string',
                  },
                ],
                pageSpan: {
                  pageEnd: 42,
                  pageStart: 42,
                },
                sourceBlockIds: ['Test string'],
              },
            ],
          },
          content: 'Test string',
          documentLayout: {
            blocks: [
              {
                blockId: 'Test string',
                listBlock: {
                  listEntries: [
                    {
                      blocks: undefined,
                    },
                  ],
                  type: 'Test string',
                },
                pageSpan: {
                  pageEnd: 42,
                  pageStart: 42,
                },
                tableBlock: {
                  bodyRows: [
                    {
                      cells: [
                        {
                          blocks: undefined,
                          colSpan: 42,
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  caption: 'Test string',
                  headerRows: [
                    {
                      cells: [
                        {
                          blocks: undefined,
                          colSpan: 42,
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                },
                textBlock: {
                  blocks: undefined,
                  text: 'Test string',
                  type: 'Test string',
                },
              },
            ],
          },
          entities: [
            {
              confidence: 42,
              id: 'Test string',
              mentionId: 'Test string',
              mentionText: 'Test string',
              normalizedValue: {
                addressValue: {
                  addressLines: ['Test string'],
                  administrativeArea: 'Test string',
                  languageCode: 'Test string',
                  locality: 'Test string',
                  organization: 'Test string',
                  postalCode: 'Test string',
                  recipients: ['Test string'],
                  regionCode: 'Test string',
                  revision: 42,
                  sortingCode: 'Test string',
                  sublocality: 'Test string',
                },
                booleanValue: true,
                datetimeValue: {
                  day: 42,
                  hours: 42,
                  minutes: 42,
                  month: 42,
                  nanos: 42,
                  seconds: 42,
                  timeZone: {
                    id: 'Test string',
                    version: 'Test string',
                  },
                  utcOffset: 'Test string',
                  year: 42,
                },
                dateValue: {
                  day: 42,
                  month: 42,
                  year: 42,
                },
                floatValue: 42,
                integerValue: 42,
                moneyValue: {
                  currencyCode: 'Test string',
                  nanos: 42,
                  units: 'Test string',
                },
                text: 'Test string',
              },
              pageAnchor: {
                pageRefs: [
                  {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    layoutId: 'Test string',
                    layoutType: 'Test string',
                    page: 'Test string',
                  },
                ],
              },
              properties: undefined,
              provenance: {
                id: 42,
                parents: [
                  {
                    id: 42,
                    index: 42,
                    revision: 42,
                  },
                ],
                revision: 42,
                type: 'Test string',
              },
              redacted: true,
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
              type: 'Test string',
            },
          ],
          entityRelations: [
            {
              objectId: 'Test string',
              relation: 'Test string',
              subjectId: 'Test string',
            },
          ],
          error: {
            code: 42,
            details: [
              {
                A: 42,
              },
            ],
            message: 'Test string',
          },
          mimeType: 'Test string',
          pages: [
            {
              blocks: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              detectedBarcodes: [
                {
                  barcode: {
                    format: 'Test string',
                    rawValue: 'Test string',
                    valueFormat: 'Test string',
                  },
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                },
              ],
              detectedLanguages: [
                {
                  confidence: 42,
                  languageCode: 'Test string',
                },
              ],
              dimension: {
                height: 42,
                unit: 'Test string',
                width: 42,
              },
              formFields: [
                {
                  correctedKeyText: 'Test string',
                  correctedValueText: 'Test string',
                  fieldName: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  fieldValue: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  nameDetectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                  valueDetectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  valueType: 'Test string',
                },
              ],
              image: {
                content: 'Test string',
                height: 42,
                mimeType: 'Test string',
                width: 42,
              },
              imageQualityScores: {
                detectedDefects: [
                  {
                    confidence: 42,
                    type: 'Test string',
                  },
                ],
                qualityScore: 42,
              },
              layout: {
                boundingPoly: {
                  normalizedVertices: [
                    {
                      x: 42,
                      y: 42,
                    },
                  ],
                  vertices: [
                    {
                      x: 42,
                      y: 42,
                    },
                  ],
                },
                confidence: 42,
                orientation: 'Test string',
                textAnchor: {
                  content: 'Test string',
                  textSegments: [
                    {
                      endIndex: 'Test string',
                      startIndex: 'Test string',
                    },
                  ],
                },
              },
              lines: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              pageNumber: 42,
              paragraphs: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              provenance: {
                id: 42,
                parents: [
                  {
                    id: 42,
                    index: 42,
                    revision: 42,
                  },
                ],
                revision: 42,
                type: 'Test string',
              },
              symbols: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                },
              ],
              tables: [
                {
                  bodyRows: [
                    {
                      cells: [
                        {
                          colSpan: 42,
                          detectedLanguages: [
                            {
                              confidence: 42,
                              languageCode: 'Test string',
                            },
                          ],
                          layout: {
                            boundingPoly: {
                              normalizedVertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                              vertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                            },
                            confidence: 42,
                            orientation: 'Test string',
                            textAnchor: {
                              content: 'Test string',
                              textSegments: [
                                {
                                  endIndex: 'Test string',
                                  startIndex: 'Test string',
                                },
                              ],
                            },
                          },
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  headerRows: [
                    {
                      cells: [
                        {
                          colSpan: 42,
                          detectedLanguages: [
                            {
                              confidence: 42,
                              languageCode: 'Test string',
                            },
                          ],
                          layout: {
                            boundingPoly: {
                              normalizedVertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                              vertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                            },
                            confidence: 42,
                            orientation: 'Test string',
                            textAnchor: {
                              content: 'Test string',
                              textSegments: [
                                {
                                  endIndex: 'Test string',
                                  startIndex: 'Test string',
                                },
                              ],
                            },
                          },
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              tokens: [
                {
                  detectedBreak: {
                    type: 'Test string',
                  },
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                  styleInfo: {
                    backgroundColor: {
                      alpha: 42,
                      blue: 42,
                      green: 42,
                      red: 42,
                    },
                    bold: true,
                    fontSize: 42,
                    fontType: 'Test string',
                    fontWeight: 42,
                    handwritten: true,
                    italic: true,
                    letterSpacing: 42,
                    pixelFontSize: 42,
                    smallcaps: true,
                    strikeout: true,
                    subscript: true,
                    superscript: true,
                    textColor: {
                      alpha: 42,
                      blue: 42,
                      green: 42,
                      red: 42,
                    },
                    underlined: true,
                  },
                },
              ],
              transforms: [
                {
                  cols: 42,
                  data: 'Test string',
                  rows: 42,
                  type: 42,
                },
              ],
              visualElements: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  type: 'Test string',
                },
              ],
            },
          ],
          revisions: [
            {
              agent: 'Test string',
              createTime: 'Test string',
              humanReview: {
                state: 'Test string',
                stateMessage: 'Test string',
              },
              id: 'Test string',
              parent: [42],
              parentIds: ['Test string'],
              processor: 'Test string',
            },
          ],
          shardInfo: {
            shardCount: 'Test string',
            shardIndex: 'Test string',
            textOffset: 'Test string',
          },
          text: 'Test string',
          textChanges: [
            {
              changedText: 'Test string',
              provenance: [
                {
                  id: 42,
                  parents: [
                    {
                      id: 42,
                      index: 42,
                      revision: 42,
                    },
                  ],
                  revision: 42,
                  type: 'Test string',
                },
              ],
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
            },
          ],
          textStyles: [
            {
              backgroundColor: {
                alpha: 42,
                blue: 42,
                green: 42,
                red: 42,
              },
              color: {
                alpha: 42,
                blue: 42,
                green: 42,
                red: 42,
              },
              fontFamily: 'Test string',
              fontSize: {
                size: 42,
                unit: 'Test string',
              },
              fontWeight: 'Test string',
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
              textDecoration: 'Test string',
              textStyle: 'Test string',
            },
          ],
          uri: 'Test string',
        },
        documentSchema: {
          description: 'Test string',
          displayName: 'Test string',
          entityTypes: [
            {
              baseTypes: ['Test string'],
              displayName: 'Test string',
              entityTypeMetadata: {
                inactive: true,
              },
              enumValues: {
                values: ['Test string'],
              },
              name: 'Test string',
              properties: [
                {
                  displayName: 'Test string',
                  name: 'Test string',
                  occurrenceType: 'Test string',
                  propertyMetadata: {
                    fieldExtractionMetadata: {
                      summaryOptions: {
                        format: 'Test string',
                        length: 'Test string',
                      },
                    },
                    inactive: true,
                  },
                  valueType: 'Test string',
                },
              ],
            },
          ],
          metadata: {
            documentAllowMultipleLabels: true,
            documentSplitter: true,
            prefixedNamingOnProperties: true,
            skipNamingValidation: true,
          },
        },
        enableSchemaValidation: true,
        inlineDocument: {
          chunkedDocument: {
            chunks: [
              {
                chunkId: 'Test string',
                content: 'Test string',
                pageFooters: [
                  {
                    pageSpan: {
                      pageEnd: 42,
                      pageStart: 42,
                    },
                    text: 'Test string',
                  },
                ],
                pageHeaders: [
                  {
                    pageSpan: {
                      pageEnd: 42,
                      pageStart: 42,
                    },
                    text: 'Test string',
                  },
                ],
                pageSpan: {
                  pageEnd: 42,
                  pageStart: 42,
                },
                sourceBlockIds: ['Test string'],
              },
            ],
          },
          content: 'Test string',
          documentLayout: {
            blocks: [
              {
                blockId: 'Test string',
                listBlock: {
                  listEntries: [
                    {
                      blocks: undefined,
                    },
                  ],
                  type: 'Test string',
                },
                pageSpan: {
                  pageEnd: 42,
                  pageStart: 42,
                },
                tableBlock: {
                  bodyRows: [
                    {
                      cells: [
                        {
                          blocks: undefined,
                          colSpan: 42,
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  caption: 'Test string',
                  headerRows: [
                    {
                      cells: [
                        {
                          blocks: undefined,
                          colSpan: 42,
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                },
                textBlock: {
                  blocks: undefined,
                  text: 'Test string',
                  type: 'Test string',
                },
              },
            ],
          },
          entities: [
            {
              confidence: 42,
              id: 'Test string',
              mentionId: 'Test string',
              mentionText: 'Test string',
              normalizedValue: {
                addressValue: {
                  addressLines: ['Test string'],
                  administrativeArea: 'Test string',
                  languageCode: 'Test string',
                  locality: 'Test string',
                  organization: 'Test string',
                  postalCode: 'Test string',
                  recipients: ['Test string'],
                  regionCode: 'Test string',
                  revision: 42,
                  sortingCode: 'Test string',
                  sublocality: 'Test string',
                },
                booleanValue: true,
                datetimeValue: {
                  day: 42,
                  hours: 42,
                  minutes: 42,
                  month: 42,
                  nanos: 42,
                  seconds: 42,
                  timeZone: {
                    id: 'Test string',
                    version: 'Test string',
                  },
                  utcOffset: 'Test string',
                  year: 42,
                },
                dateValue: {
                  day: 42,
                  month: 42,
                  year: 42,
                },
                floatValue: 42,
                integerValue: 42,
                moneyValue: {
                  currencyCode: 'Test string',
                  nanos: 42,
                  units: 'Test string',
                },
                text: 'Test string',
              },
              pageAnchor: {
                pageRefs: [
                  {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    layoutId: 'Test string',
                    layoutType: 'Test string',
                    page: 'Test string',
                  },
                ],
              },
              properties: undefined,
              provenance: {
                id: 42,
                parents: [
                  {
                    id: 42,
                    index: 42,
                    revision: 42,
                  },
                ],
                revision: 42,
                type: 'Test string',
              },
              redacted: true,
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
              type: 'Test string',
            },
          ],
          entityRelations: [
            {
              objectId: 'Test string',
              relation: 'Test string',
              subjectId: 'Test string',
            },
          ],
          error: {
            code: 42,
            details: [
              {
                A: 42,
              },
            ],
            message: 'Test string',
          },
          mimeType: 'Test string',
          pages: [
            {
              blocks: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              detectedBarcodes: [
                {
                  barcode: {
                    format: 'Test string',
                    rawValue: 'Test string',
                    valueFormat: 'Test string',
                  },
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                },
              ],
              detectedLanguages: [
                {
                  confidence: 42,
                  languageCode: 'Test string',
                },
              ],
              dimension: {
                height: 42,
                unit: 'Test string',
                width: 42,
              },
              formFields: [
                {
                  correctedKeyText: 'Test string',
                  correctedValueText: 'Test string',
                  fieldName: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  fieldValue: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  nameDetectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                  valueDetectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  valueType: 'Test string',
                },
              ],
              image: {
                content: 'Test string',
                height: 42,
                mimeType: 'Test string',
                width: 42,
              },
              imageQualityScores: {
                detectedDefects: [
                  {
                    confidence: 42,
                    type: 'Test string',
                  },
                ],
                qualityScore: 42,
              },
              layout: {
                boundingPoly: {
                  normalizedVertices: [
                    {
                      x: 42,
                      y: 42,
                    },
                  ],
                  vertices: [
                    {
                      x: 42,
                      y: 42,
                    },
                  ],
                },
                confidence: 42,
                orientation: 'Test string',
                textAnchor: {
                  content: 'Test string',
                  textSegments: [
                    {
                      endIndex: 'Test string',
                      startIndex: 'Test string',
                    },
                  ],
                },
              },
              lines: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              pageNumber: 42,
              paragraphs: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              provenance: {
                id: 42,
                parents: [
                  {
                    id: 42,
                    index: 42,
                    revision: 42,
                  },
                ],
                revision: 42,
                type: 'Test string',
              },
              symbols: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                },
              ],
              tables: [
                {
                  bodyRows: [
                    {
                      cells: [
                        {
                          colSpan: 42,
                          detectedLanguages: [
                            {
                              confidence: 42,
                              languageCode: 'Test string',
                            },
                          ],
                          layout: {
                            boundingPoly: {
                              normalizedVertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                              vertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                            },
                            confidence: 42,
                            orientation: 'Test string',
                            textAnchor: {
                              content: 'Test string',
                              textSegments: [
                                {
                                  endIndex: 'Test string',
                                  startIndex: 'Test string',
                                },
                              ],
                            },
                          },
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  headerRows: [
                    {
                      cells: [
                        {
                          colSpan: 42,
                          detectedLanguages: [
                            {
                              confidence: 42,
                              languageCode: 'Test string',
                            },
                          ],
                          layout: {
                            boundingPoly: {
                              normalizedVertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                              vertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                            },
                            confidence: 42,
                            orientation: 'Test string',
                            textAnchor: {
                              content: 'Test string',
                              textSegments: [
                                {
                                  endIndex: 'Test string',
                                  startIndex: 'Test string',
                                },
                              ],
                            },
                          },
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              tokens: [
                {
                  detectedBreak: {
                    type: 'Test string',
                  },
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                  styleInfo: {
                    backgroundColor: {
                      alpha: 42,
                      blue: 42,
                      green: 42,
                      red: 42,
                    },
                    bold: true,
                    fontSize: 42,
                    fontType: 'Test string',
                    fontWeight: 42,
                    handwritten: true,
                    italic: true,
                    letterSpacing: 42,
                    pixelFontSize: 42,
                    smallcaps: true,
                    strikeout: true,
                    subscript: true,
                    superscript: true,
                    textColor: {
                      alpha: 42,
                      blue: 42,
                      green: 42,
                      red: 42,
                    },
                    underlined: true,
                  },
                },
              ],
              transforms: [
                {
                  cols: 42,
                  data: 'Test string',
                  rows: 42,
                  type: 42,
                },
              ],
              visualElements: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  type: 'Test string',
                },
              ],
            },
          ],
          revisions: [
            {
              agent: 'Test string',
              createTime: 'Test string',
              humanReview: {
                state: 'Test string',
                stateMessage: 'Test string',
              },
              id: 'Test string',
              parent: [42],
              parentIds: ['Test string'],
              processor: 'Test string',
            },
          ],
          shardInfo: {
            shardCount: 'Test string',
            shardIndex: 'Test string',
            textOffset: 'Test string',
          },
          text: 'Test string',
          textChanges: [
            {
              changedText: 'Test string',
              provenance: [
                {
                  id: 42,
                  parents: [
                    {
                      id: 42,
                      index: 42,
                      revision: 42,
                    },
                  ],
                  revision: 42,
                  type: 'Test string',
                },
              ],
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
            },
          ],
          textStyles: [
            {
              backgroundColor: {
                alpha: 42,
                blue: 42,
                green: 42,
                red: 42,
              },
              color: {
                alpha: 42,
                blue: 42,
                green: 42,
                red: 42,
              },
              fontFamily: 'Test string',
              fontSize: {
                size: 42,
                unit: 'Test string',
              },
              fontWeight: 'Test string',
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
              textDecoration: 'Test string',
              textStyle: 'Test string',
            },
          ],
          uri: 'Test string',
        },
        priority: 'Test string',
      }
    );
    /** LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format. */
    await gapi.client.documentai.projects.locations.processors.processorVersions.batchProcess(
      {
        name: 'Test string',
      },
      {
        documentOutputConfig: {
          gcsOutputConfig: {
            fieldMask: 'Test string',
            gcsUri: 'Test string',
            shardingConfig: {
              pagesOverlap: 42,
              pagesPerShard: 42,
            },
          },
        },
        inputConfigs: [
          {
            gcsSource: 'Test string',
            mimeType: 'Test string',
          },
        ],
        inputDocuments: {
          gcsDocuments: {
            documents: [
              {
                gcsUri: 'Test string',
                mimeType: 'Test string',
              },
            ],
          },
          gcsPrefix: {
            gcsUriPrefix: 'Test string',
          },
        },
        labels: {
          A: 'Test string',
        },
        outputConfig: {
          gcsDestination: 'Test string',
        },
        processOptions: {
          fromEnd: 42,
          fromStart: 42,
          individualPageSelector: {
            pages: [42],
          },
          layoutConfig: {
            chunkingConfig: {
              breakpointPercentileThreshold: 42,
              chunkSize: 42,
              includeAncestorHeadings: true,
              semanticChunkingGroupSize: true,
            },
          },
          ocrConfig: {
            advancedOcrOptions: ['Test string'],
            computeStyleInfo: true,
            disableCharacterBoxesDetection: true,
            enableImageQualityScores: true,
            enableNativePdfParsing: true,
            enableSymbol: true,
            hints: {
              languageHints: ['Test string'],
            },
            premiumFeatures: {
              computeStyleInfo: true,
              enableMathOcr: true,
              enableSelectionMarkDetection: true,
            },
          },
          schemaOverride: {
            description: 'Test string',
            displayName: 'Test string',
            entityTypes: [
              {
                baseTypes: ['Test string'],
                displayName: 'Test string',
                entityTypeMetadata: {
                  inactive: true,
                },
                enumValues: {
                  values: ['Test string'],
                },
                name: 'Test string',
                properties: [
                  {
                    displayName: 'Test string',
                    name: 'Test string',
                    occurrenceType: 'Test string',
                    propertyMetadata: {
                      fieldExtractionMetadata: {
                        summaryOptions: {
                          format: 'Test string',
                          length: 'Test string',
                        },
                      },
                      inactive: true,
                    },
                    valueType: 'Test string',
                  },
                ],
              },
            ],
            metadata: {
              documentAllowMultipleLabels: true,
              documentSplitter: true,
              prefixedNamingOnProperties: true,
              skipNamingValidation: true,
            },
          },
        },
        skipHumanReview: true,
      }
    );
    /** Deletes the processor version, all artifacts under the processor version will be deleted. */
    await gapi.client.documentai.projects.locations.processors.processorVersions.delete(
      {
        name: 'Test string',
      }
    );
    /** Deploys the processor version. */
    await gapi.client.documentai.projects.locations.processors.processorVersions.deploy(
      {
        name: 'Test string',
      },
      {}
    );
    /** Evaluates a ProcessorVersion against annotated documents, producing an Evaluation. */
    await gapi.client.documentai.projects.locations.processors.processorVersions.evaluateProcessorVersion(
      {
        processorVersion: 'Test string',
      },
      {
        evaluationDocuments: {
          gcsDocuments: {
            documents: [
              {
                gcsUri: 'Test string',
                mimeType: 'Test string',
              },
            ],
          },
          gcsPrefix: {
            gcsUriPrefix: 'Test string',
          },
        },
      }
    );
    /** Gets a processor version detail. */
    await gapi.client.documentai.projects.locations.processors.processorVersions.get(
      {
        name: 'Test string',
      }
    );
    /** Imports a processor version from source processor version. */
    await gapi.client.documentai.projects.locations.processors.processorVersions.importProcessorVersion(
      {
        parent: 'Test string',
      },
      {
        externalProcessorVersionSource: {
          processorVersion: 'Test string',
          serviceEndpoint: 'Test string',
        },
        processorVersionSource: 'Test string',
      }
    );
    /** Lists all versions of a processor. */
    await gapi.client.documentai.projects.locations.processors.processorVersions.list(
      {
        pageSize: 42,
        pageToken: 'Test string',
        parent: 'Test string',
      }
    );
    /** Processes a single document. */
    await gapi.client.documentai.projects.locations.processors.processorVersions.process(
      {
        name: 'Test string',
      },
      {
        document: {
          chunkedDocument: {
            chunks: [
              {
                chunkId: 'Test string',
                content: 'Test string',
                pageFooters: [
                  {
                    pageSpan: {
                      pageEnd: 42,
                      pageStart: 42,
                    },
                    text: 'Test string',
                  },
                ],
                pageHeaders: [
                  {
                    pageSpan: {
                      pageEnd: 42,
                      pageStart: 42,
                    },
                    text: 'Test string',
                  },
                ],
                pageSpan: {
                  pageEnd: 42,
                  pageStart: 42,
                },
                sourceBlockIds: ['Test string'],
              },
            ],
          },
          content: 'Test string',
          documentLayout: {
            blocks: [
              {
                blockId: 'Test string',
                listBlock: {
                  listEntries: [
                    {
                      blocks: undefined,
                    },
                  ],
                  type: 'Test string',
                },
                pageSpan: {
                  pageEnd: 42,
                  pageStart: 42,
                },
                tableBlock: {
                  bodyRows: [
                    {
                      cells: [
                        {
                          blocks: undefined,
                          colSpan: 42,
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  caption: 'Test string',
                  headerRows: [
                    {
                      cells: [
                        {
                          blocks: undefined,
                          colSpan: 42,
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                },
                textBlock: {
                  blocks: undefined,
                  text: 'Test string',
                  type: 'Test string',
                },
              },
            ],
          },
          entities: [
            {
              confidence: 42,
              id: 'Test string',
              mentionId: 'Test string',
              mentionText: 'Test string',
              normalizedValue: {
                addressValue: {
                  addressLines: ['Test string'],
                  administrativeArea: 'Test string',
                  languageCode: 'Test string',
                  locality: 'Test string',
                  organization: 'Test string',
                  postalCode: 'Test string',
                  recipients: ['Test string'],
                  regionCode: 'Test string',
                  revision: 42,
                  sortingCode: 'Test string',
                  sublocality: 'Test string',
                },
                booleanValue: true,
                datetimeValue: {
                  day: 42,
                  hours: 42,
                  minutes: 42,
                  month: 42,
                  nanos: 42,
                  seconds: 42,
                  timeZone: {
                    id: 'Test string',
                    version: 'Test string',
                  },
                  utcOffset: 'Test string',
                  year: 42,
                },
                dateValue: {
                  day: 42,
                  month: 42,
                  year: 42,
                },
                floatValue: 42,
                integerValue: 42,
                moneyValue: {
                  currencyCode: 'Test string',
                  nanos: 42,
                  units: 'Test string',
                },
                text: 'Test string',
              },
              pageAnchor: {
                pageRefs: [
                  {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    layoutId: 'Test string',
                    layoutType: 'Test string',
                    page: 'Test string',
                  },
                ],
              },
              properties: undefined,
              provenance: {
                id: 42,
                parents: [
                  {
                    id: 42,
                    index: 42,
                    revision: 42,
                  },
                ],
                revision: 42,
                type: 'Test string',
              },
              redacted: true,
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
              type: 'Test string',
            },
          ],
          entityRelations: [
            {
              objectId: 'Test string',
              relation: 'Test string',
              subjectId: 'Test string',
            },
          ],
          error: {
            code: 42,
            details: [
              {
                A: 42,
              },
            ],
            message: 'Test string',
          },
          mimeType: 'Test string',
          pages: [
            {
              blocks: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              detectedBarcodes: [
                {
                  barcode: {
                    format: 'Test string',
                    rawValue: 'Test string',
                    valueFormat: 'Test string',
                  },
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                },
              ],
              detectedLanguages: [
                {
                  confidence: 42,
                  languageCode: 'Test string',
                },
              ],
              dimension: {
                height: 42,
                unit: 'Test string',
                width: 42,
              },
              formFields: [
                {
                  correctedKeyText: 'Test string',
                  correctedValueText: 'Test string',
                  fieldName: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  fieldValue: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  nameDetectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                  valueDetectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  valueType: 'Test string',
                },
              ],
              image: {
                content: 'Test string',
                height: 42,
                mimeType: 'Test string',
                width: 42,
              },
              imageQualityScores: {
                detectedDefects: [
                  {
                    confidence: 42,
                    type: 'Test string',
                  },
                ],
                qualityScore: 42,
              },
              layout: {
                boundingPoly: {
                  normalizedVertices: [
                    {
                      x: 42,
                      y: 42,
                    },
                  ],
                  vertices: [
                    {
                      x: 42,
                      y: 42,
                    },
                  ],
                },
                confidence: 42,
                orientation: 'Test string',
                textAnchor: {
                  content: 'Test string',
                  textSegments: [
                    {
                      endIndex: 'Test string',
                      startIndex: 'Test string',
                    },
                  ],
                },
              },
              lines: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              pageNumber: 42,
              paragraphs: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              provenance: {
                id: 42,
                parents: [
                  {
                    id: 42,
                    index: 42,
                    revision: 42,
                  },
                ],
                revision: 42,
                type: 'Test string',
              },
              symbols: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                },
              ],
              tables: [
                {
                  bodyRows: [
                    {
                      cells: [
                        {
                          colSpan: 42,
                          detectedLanguages: [
                            {
                              confidence: 42,
                              languageCode: 'Test string',
                            },
                          ],
                          layout: {
                            boundingPoly: {
                              normalizedVertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                              vertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                            },
                            confidence: 42,
                            orientation: 'Test string',
                            textAnchor: {
                              content: 'Test string',
                              textSegments: [
                                {
                                  endIndex: 'Test string',
                                  startIndex: 'Test string',
                                },
                              ],
                            },
                          },
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  headerRows: [
                    {
                      cells: [
                        {
                          colSpan: 42,
                          detectedLanguages: [
                            {
                              confidence: 42,
                              languageCode: 'Test string',
                            },
                          ],
                          layout: {
                            boundingPoly: {
                              normalizedVertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                              vertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                            },
                            confidence: 42,
                            orientation: 'Test string',
                            textAnchor: {
                              content: 'Test string',
                              textSegments: [
                                {
                                  endIndex: 'Test string',
                                  startIndex: 'Test string',
                                },
                              ],
                            },
                          },
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              tokens: [
                {
                  detectedBreak: {
                    type: 'Test string',
                  },
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                  styleInfo: {
                    backgroundColor: {
                      alpha: 42,
                      blue: 42,
                      green: 42,
                      red: 42,
                    },
                    bold: true,
                    fontSize: 42,
                    fontType: 'Test string',
                    fontWeight: 42,
                    handwritten: true,
                    italic: true,
                    letterSpacing: 42,
                    pixelFontSize: 42,
                    smallcaps: true,
                    strikeout: true,
                    subscript: true,
                    superscript: true,
                    textColor: {
                      alpha: 42,
                      blue: 42,
                      green: 42,
                      red: 42,
                    },
                    underlined: true,
                  },
                },
              ],
              transforms: [
                {
                  cols: 42,
                  data: 'Test string',
                  rows: 42,
                  type: 42,
                },
              ],
              visualElements: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  type: 'Test string',
                },
              ],
            },
          ],
          revisions: [
            {
              agent: 'Test string',
              createTime: 'Test string',
              humanReview: {
                state: 'Test string',
                stateMessage: 'Test string',
              },
              id: 'Test string',
              parent: [42],
              parentIds: ['Test string'],
              processor: 'Test string',
            },
          ],
          shardInfo: {
            shardCount: 'Test string',
            shardIndex: 'Test string',
            textOffset: 'Test string',
          },
          text: 'Test string',
          textChanges: [
            {
              changedText: 'Test string',
              provenance: [
                {
                  id: 42,
                  parents: [
                    {
                      id: 42,
                      index: 42,
                      revision: 42,
                    },
                  ],
                  revision: 42,
                  type: 'Test string',
                },
              ],
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
            },
          ],
          textStyles: [
            {
              backgroundColor: {
                alpha: 42,
                blue: 42,
                green: 42,
                red: 42,
              },
              color: {
                alpha: 42,
                blue: 42,
                green: 42,
                red: 42,
              },
              fontFamily: 'Test string',
              fontSize: {
                size: 42,
                unit: 'Test string',
              },
              fontWeight: 'Test string',
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
              textDecoration: 'Test string',
              textStyle: 'Test string',
            },
          ],
          uri: 'Test string',
        },
        fieldMask: 'Test string',
        gcsDocument: {
          gcsUri: 'Test string',
          mimeType: 'Test string',
        },
        inlineDocument: {
          chunkedDocument: {
            chunks: [
              {
                chunkId: 'Test string',
                content: 'Test string',
                pageFooters: [
                  {
                    pageSpan: {
                      pageEnd: 42,
                      pageStart: 42,
                    },
                    text: 'Test string',
                  },
                ],
                pageHeaders: [
                  {
                    pageSpan: {
                      pageEnd: 42,
                      pageStart: 42,
                    },
                    text: 'Test string',
                  },
                ],
                pageSpan: {
                  pageEnd: 42,
                  pageStart: 42,
                },
                sourceBlockIds: ['Test string'],
              },
            ],
          },
          content: 'Test string',
          documentLayout: {
            blocks: [
              {
                blockId: 'Test string',
                listBlock: {
                  listEntries: [
                    {
                      blocks: undefined,
                    },
                  ],
                  type: 'Test string',
                },
                pageSpan: {
                  pageEnd: 42,
                  pageStart: 42,
                },
                tableBlock: {
                  bodyRows: [
                    {
                      cells: [
                        {
                          blocks: undefined,
                          colSpan: 42,
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  caption: 'Test string',
                  headerRows: [
                    {
                      cells: [
                        {
                          blocks: undefined,
                          colSpan: 42,
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                },
                textBlock: {
                  blocks: undefined,
                  text: 'Test string',
                  type: 'Test string',
                },
              },
            ],
          },
          entities: [
            {
              confidence: 42,
              id: 'Test string',
              mentionId: 'Test string',
              mentionText: 'Test string',
              normalizedValue: {
                addressValue: {
                  addressLines: ['Test string'],
                  administrativeArea: 'Test string',
                  languageCode: 'Test string',
                  locality: 'Test string',
                  organization: 'Test string',
                  postalCode: 'Test string',
                  recipients: ['Test string'],
                  regionCode: 'Test string',
                  revision: 42,
                  sortingCode: 'Test string',
                  sublocality: 'Test string',
                },
                booleanValue: true,
                datetimeValue: {
                  day: 42,
                  hours: 42,
                  minutes: 42,
                  month: 42,
                  nanos: 42,
                  seconds: 42,
                  timeZone: {
                    id: 'Test string',
                    version: 'Test string',
                  },
                  utcOffset: 'Test string',
                  year: 42,
                },
                dateValue: {
                  day: 42,
                  month: 42,
                  year: 42,
                },
                floatValue: 42,
                integerValue: 42,
                moneyValue: {
                  currencyCode: 'Test string',
                  nanos: 42,
                  units: 'Test string',
                },
                text: 'Test string',
              },
              pageAnchor: {
                pageRefs: [
                  {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    layoutId: 'Test string',
                    layoutType: 'Test string',
                    page: 'Test string',
                  },
                ],
              },
              properties: undefined,
              provenance: {
                id: 42,
                parents: [
                  {
                    id: 42,
                    index: 42,
                    revision: 42,
                  },
                ],
                revision: 42,
                type: 'Test string',
              },
              redacted: true,
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
              type: 'Test string',
            },
          ],
          entityRelations: [
            {
              objectId: 'Test string',
              relation: 'Test string',
              subjectId: 'Test string',
            },
          ],
          error: {
            code: 42,
            details: [
              {
                A: 42,
              },
            ],
            message: 'Test string',
          },
          mimeType: 'Test string',
          pages: [
            {
              blocks: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              detectedBarcodes: [
                {
                  barcode: {
                    format: 'Test string',
                    rawValue: 'Test string',
                    valueFormat: 'Test string',
                  },
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                },
              ],
              detectedLanguages: [
                {
                  confidence: 42,
                  languageCode: 'Test string',
                },
              ],
              dimension: {
                height: 42,
                unit: 'Test string',
                width: 42,
              },
              formFields: [
                {
                  correctedKeyText: 'Test string',
                  correctedValueText: 'Test string',
                  fieldName: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  fieldValue: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  nameDetectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                  valueDetectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  valueType: 'Test string',
                },
              ],
              image: {
                content: 'Test string',
                height: 42,
                mimeType: 'Test string',
                width: 42,
              },
              imageQualityScores: {
                detectedDefects: [
                  {
                    confidence: 42,
                    type: 'Test string',
                  },
                ],
                qualityScore: 42,
              },
              layout: {
                boundingPoly: {
                  normalizedVertices: [
                    {
                      x: 42,
                      y: 42,
                    },
                  ],
                  vertices: [
                    {
                      x: 42,
                      y: 42,
                    },
                  ],
                },
                confidence: 42,
                orientation: 'Test string',
                textAnchor: {
                  content: 'Test string',
                  textSegments: [
                    {
                      endIndex: 'Test string',
                      startIndex: 'Test string',
                    },
                  ],
                },
              },
              lines: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              pageNumber: 42,
              paragraphs: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              provenance: {
                id: 42,
                parents: [
                  {
                    id: 42,
                    index: 42,
                    revision: 42,
                  },
                ],
                revision: 42,
                type: 'Test string',
              },
              symbols: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                },
              ],
              tables: [
                {
                  bodyRows: [
                    {
                      cells: [
                        {
                          colSpan: 42,
                          detectedLanguages: [
                            {
                              confidence: 42,
                              languageCode: 'Test string',
                            },
                          ],
                          layout: {
                            boundingPoly: {
                              normalizedVertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                              vertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                            },
                            confidence: 42,
                            orientation: 'Test string',
                            textAnchor: {
                              content: 'Test string',
                              textSegments: [
                                {
                                  endIndex: 'Test string',
                                  startIndex: 'Test string',
                                },
                              ],
                            },
                          },
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  headerRows: [
                    {
                      cells: [
                        {
                          colSpan: 42,
                          detectedLanguages: [
                            {
                              confidence: 42,
                              languageCode: 'Test string',
                            },
                          ],
                          layout: {
                            boundingPoly: {
                              normalizedVertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                              vertices: [
                                {
                                  x: 42,
                                  y: 42,
                                },
                              ],
                            },
                            confidence: 42,
                            orientation: 'Test string',
                            textAnchor: {
                              content: 'Test string',
                              textSegments: [
                                {
                                  endIndex: 'Test string',
                                  startIndex: 'Test string',
                                },
                              ],
                            },
                          },
                          rowSpan: 42,
                        },
                      ],
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                },
              ],
              tokens: [
                {
                  detectedBreak: {
                    type: 'Test string',
                  },
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  provenance: {
                    id: 42,
                    parents: [
                      {
                        id: 42,
                        index: 42,
                        revision: 42,
                      },
                    ],
                    revision: 42,
                    type: 'Test string',
                  },
                  styleInfo: {
                    backgroundColor: {
                      alpha: 42,
                      blue: 42,
                      green: 42,
                      red: 42,
                    },
                    bold: true,
                    fontSize: 42,
                    fontType: 'Test string',
                    fontWeight: 42,
                    handwritten: true,
                    italic: true,
                    letterSpacing: 42,
                    pixelFontSize: 42,
                    smallcaps: true,
                    strikeout: true,
                    subscript: true,
                    superscript: true,
                    textColor: {
                      alpha: 42,
                      blue: 42,
                      green: 42,
                      red: 42,
                    },
                    underlined: true,
                  },
                },
              ],
              transforms: [
                {
                  cols: 42,
                  data: 'Test string',
                  rows: 42,
                  type: 42,
                },
              ],
              visualElements: [
                {
                  detectedLanguages: [
                    {
                      confidence: 42,
                      languageCode: 'Test string',
                    },
                  ],
                  layout: {
                    boundingPoly: {
                      normalizedVertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                      vertices: [
                        {
                          x: 42,
                          y: 42,
                        },
                      ],
                    },
                    confidence: 42,
                    orientation: 'Test string',
                    textAnchor: {
                      content: 'Test string',
                      textSegments: [
                        {
                          endIndex: 'Test string',
                          startIndex: 'Test string',
                        },
                      ],
                    },
                  },
                  type: 'Test string',
                },
              ],
            },
          ],
          revisions: [
            {
              agent: 'Test string',
              createTime: 'Test string',
              humanReview: {
                state: 'Test string',
                stateMessage: 'Test string',
              },
              id: 'Test string',
              parent: [42],
              parentIds: ['Test string'],
              processor: 'Test string',
            },
          ],
          shardInfo: {
            shardCount: 'Test string',
            shardIndex: 'Test string',
            textOffset: 'Test string',
          },
          text: 'Test string',
          textChanges: [
            {
              changedText: 'Test string',
              provenance: [
                {
                  id: 42,
                  parents: [
                    {
                      id: 42,
                      index: 42,
                      revision: 42,
                    },
                  ],
                  revision: 42,
                  type: 'Test string',
                },
              ],
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
            },
          ],
          textStyles: [
            {
              backgroundColor: {
                alpha: 42,
                blue: 42,
                green: 42,
                red: 42,
              },
              color: {
                alpha: 42,
                blue: 42,
                green: 42,
                red: 42,
              },
              fontFamily: 'Test string',
              fontSize: {
                size: 42,
                unit: 'Test string',
              },
              fontWeight: 'Test string',
              textAnchor: {
                content: 'Test string',
                textSegments: [
                  {
                    endIndex: 'Test string',
                    startIndex: 'Test string',
                  },
                ],
              },
              textDecoration: 'Test string',
              textStyle: 'Test string',
            },
          ],
          uri: 'Test string',
        },
        labels: {
          A: 'Test string',
        },
        processOptions: {
          fromEnd: 42,
          fromStart: 42,
          individualPageSelector: {
            pages: [42],
          },
          layoutConfig: {
            chunkingConfig: {
              breakpointPercentileThreshold: 42,
              chunkSize: 42,
              includeAncestorHeadings: true,
              semanticChunkingGroupSize: true,
            },
          },
          ocrConfig: {
            advancedOcrOptions: ['Test string'],
            computeStyleInfo: true,
            disableCharacterBoxesDetection: true,
            enableImageQualityScores: true,
            enableNativePdfParsing: true,
            enableSymbol: true,
            hints: {
              languageHints: ['Test string'],
            },
            premiumFeatures: {
              computeStyleInfo: true,
              enableMathOcr: true,
              enableSelectionMarkDetection: true,
            },
          },
          schemaOverride: {
            description: 'Test string',
            displayName: 'Test string',
            entityTypes: [
              {
                baseTypes: ['Test string'],
                displayName: 'Test string',
                entityTypeMetadata: {
                  inactive: true,
                },
                enumValues: {
                  values: ['Test string'],
                },
                name: 'Test string',
                properties: [
                  {
                    displayName: 'Test string',
                    name: 'Test string',
                    occurrenceType: 'Test string',
                    propertyMetadata: {
                      fieldExtractionMetadata: {
                        summaryOptions: {
                          format: 'Test string',
                          length: 'Test string',
                        },
                      },
                      inactive: true,
                    },
                    valueType: 'Test string',
                  },
                ],
              },
            ],
            metadata: {
              documentAllowMultipleLabels: true,
              documentSplitter: true,
              prefixedNamingOnProperties: true,
              skipNamingValidation: true,
            },
          },
        },
        rawDocument: {
          content: 'Test string',
          displayName: 'Test string',
          mimeType: 'Test string',
        },
        skipHumanReview: true,
      }
    );
    /** Trains a new processor version. Operation metadata is returned as TrainProcessorVersionMetadata. */
    await gapi.client.documentai.projects.locations.processors.processorVersions.train(
      {
        parent: 'Test string',
      },
      {
        baseProcessorVersion: 'Test string',
        customDocumentExtractionOptions: {
          trainingMethod: 'Test string',
        },
        documentSchema: {
          description: 'Test string',
          displayName: 'Test string',
          entityTypes: [
            {
              baseTypes: ['Test string'],
              displayName: 'Test string',
              entityTypeMetadata: {
                inactive: true,
              },
              enumValues: {
                values: ['Test string'],
              },
              name: 'Test string',
              properties: [
                {
                  displayName: 'Test string',
                  name: 'Test string',
                  occurrenceType: 'Test string',
                  propertyMetadata: {
                    fieldExtractionMetadata: {
                      summaryOptions: {
                        format: 'Test string',
                        length: 'Test string',
                      },
                    },
                    inactive: true,
                  },
                  valueType: 'Test string',
                },
              ],
            },
          ],
          metadata: {
            documentAllowMultipleLabels: true,
            documentSplitter: true,
            prefixedNamingOnProperties: true,
            skipNamingValidation: true,
          },
        },
        foundationModelTuningOptions: {
          learningRateMultiplier: 42,
          trainSteps: 42,
        },
        inputData: {
          testDocuments: {
            gcsDocuments: {
              documents: [
                {
                  gcsUri: 'Test string',
                  mimeType: 'Test string',
                },
              ],
            },
            gcsPrefix: {
              gcsUriPrefix: 'Test string',
            },
          },
          trainingDocuments: {
            gcsDocuments: {
              documents: [
                {
                  gcsUri: 'Test string',
                  mimeType: 'Test string',
                },
              ],
            },
            gcsPrefix: {
              gcsUriPrefix: 'Test string',
            },
          },
        },
        processorVersion: {
          createTime: 'Test string',
          deprecationInfo: {
            deprecationTime: 'Test string',
            replacementProcessorVersion: 'Test string',
          },
          displayName: 'Test string',
          documentSchema: {
            description: 'Test string',
            displayName: 'Test string',
            entityTypes: [
              {
                baseTypes: ['Test string'],
                displayName: 'Test string',
                entityTypeMetadata: {
                  inactive: true,
                },
                enumValues: {
                  values: ['Test string'],
                },
                name: 'Test string',
                properties: [
                  {
                    displayName: 'Test string',
                    name: 'Test string',
                    occurrenceType: 'Test string',
                    propertyMetadata: {
                      fieldExtractionMetadata: {
                        summaryOptions: {
                          format: 'Test string',
                          length: 'Test string',
                        },
                      },
                      inactive: true,
                    },
                    valueType: 'Test string',
                  },
                ],
              },
            ],
            metadata: {
              documentAllowMultipleLabels: true,
              documentSplitter: true,
              prefixedNamingOnProperties: true,
              skipNamingValidation: true,
            },
          },
          googleManaged: true,
          kmsKeyName: 'Test string',
          kmsKeyVersionName: 'Test string',
          latestEvaluation: {
            aggregateMetrics: {
              f1Score: 42,
              falseNegativesCount: 42,
              falsePositivesCount: 42,
              groundTruthDocumentCount: 42,
              groundTruthOccurrencesCount: 42,
              precision: 42,
              predictedDocumentCount: 42,
              predictedOccurrencesCount: 42,
              recall: 42,
              totalDocumentsCount: 42,
              truePositivesCount: 42,
            },
            aggregateMetricsExact: {
              f1Score: 42,
              falseNegativesCount: 42,
              falsePositivesCount: 42,
              groundTruthDocumentCount: 42,
              groundTruthOccurrencesCount: 42,
              precision: 42,
              predictedDocumentCount: 42,
              predictedOccurrencesCount: 42,
              recall: 42,
              totalDocumentsCount: 42,
              truePositivesCount: 42,
            },
            evaluation: 'Test string',
            operation: 'Test string',
          },
          modelType: 'Test string',
          name: 'Test string',
          state: 'Test string',
        },
      }
    );
    /** Undeploys the processor version. */
    await gapi.client.documentai.projects.locations.processors.processorVersions.undeploy(
      {
        name: 'Test string',
      },
      {}
    );
    /** Retrieves a specific evaluation. */
    await gapi.client.documentai.projects.locations.processors.processorVersions.evaluations.get(
      {
        name: 'Test string',
      }
    );
    /** Retrieves a set of evaluations for a given processor version. */
    await gapi.client.documentai.projects.locations.processors.processorVersions.evaluations.list(
      {
        pageSize: 42,
        pageToken: 'Test string',
        parent: 'Test string',
      }
    );
    /** Gets a processor type detail. */
    await gapi.client.documentai.projects.locations.processorTypes.get({
      name: 'Test string',
    });
    /** Lists the processor types that exist. */
    await gapi.client.documentai.projects.locations.processorTypes.list({
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
  }
});
