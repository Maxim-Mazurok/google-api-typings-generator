/* Type definitions for non-npm package Cloud Document AI API v1beta3 0.0 */
// Project: https://cloud.google.com/document-ai/docs/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://documentai.googleapis.com/$discovery/rest?version=v1beta3
// Revision: 20250508

/// <reference types="gapi.client" />

declare namespace gapi.client {
  /** Load Cloud Document AI API v1beta3 */
  function load(
    urlOrObject: 'https://documentai.googleapis.com/$discovery/rest?version=v1beta3',
  ): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(name: 'documentai', version: 'v1beta3'): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(
    name: 'documentai',
    version: 'v1beta3',
    callback: () => any,
  ): void;

  namespace documentai {
    interface GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
      /** The list of individual auto-labeling statuses of the dataset documents. */
      individualAutoLabelStatuses?: GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus[];
      /** Total number of the auto-labeling documents. */
      totalDocumentCount?: number;
    }
    interface GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus {
      /** The document id of the auto-labeled document. This will replace the gcs_uri. */
      documentId?: GoogleCloudDocumentaiUiv1beta3DocumentId;
      /** The status of the document auto-labeling. */
      status?: GoogleRpcStatus;
    }
    interface GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsResponse {}
    interface GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
      /** Total number of documents that failed to be deleted in storage. */
      errorDocumentCount?: number;
      /** The list of response details of each document. */
      individualBatchDeleteStatuses?: GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus[];
      /** Total number of documents deleting from dataset. */
      totalDocumentCount?: number;
    }
    interface GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus {
      /** The document id of the document. */
      documentId?: GoogleCloudDocumentaiUiv1beta3DocumentId;
      /** The status of deleting the document in storage. */
      status?: GoogleRpcStatus;
    }
    interface GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse {}
    interface GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
      /** The destination dataset split type. */
      destDatasetType?: string;
      /** The destination dataset split type. */
      destSplitType?: string;
      /** The list of response details of each document. */
      individualBatchMoveStatuses?: GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus[];
    }
    interface GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus {
      /** The document id of the document. */
      documentId?: GoogleCloudDocumentaiUiv1beta3DocumentId;
      /** The status of moving the document. */
      status?: GoogleRpcStatus;
    }
    interface GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse {}
    interface GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
      /** The list of response details of each document. */
      individualBatchUpdateStatuses?: GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadataIndividualBatchUpdateStatus[];
    }
    interface GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadataIndividualBatchUpdateStatus {
      /** The document id of the document. */
      documentId?: GoogleCloudDocumentaiUiv1beta3DocumentId;
      /** The status of updating the document in storage. */
      status?: GoogleRpcStatus;
    }
    interface GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsResponse {}
    interface GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata {
      /** The creation time of the operation. */
      createTime?: string;
      /** A related resource to this operation. */
      resource?: string;
      /** The state of the operation. */
      state?: string;
      /** A message providing more details about the current state of processing. */
      stateMessage?: string;
      /** The last update time of the operation. */
      updateTime?: string;
    }
    interface GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse {}
    interface GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse {}
    interface GoogleCloudDocumentaiUiv1beta3DocumentId {
      /** A document id within user-managed Cloud Storage. */
      gcsManagedDocId?: GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId;
      /** Points to a specific revision of the document if set. */
      revisionRef?: GoogleCloudDocumentaiUiv1beta3RevisionRef;
      /** A document id within unmanaged dataset. */
      unmanagedDocId?: GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId;
    }
    interface GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId {
      /** Id of the document (indexed) managed by Content Warehouse. */
      cwDocId?: string;
      /** Required. The Cloud Storage URI where the actual document is stored. */
      gcsUri?: string;
    }
    interface GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId {
      /** Required. The id of the document. */
      docId?: string;
    }
    interface GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse {}
    interface GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse {
      /** The resource name of the created evaluation. */
      evaluation?: string;
    }
    interface GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
      /** The list of response details of each document. */
      individualExportStatuses?: GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus[];
      /** The list of statistics for each dataset split type. */
      splitExportStats?: GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat[];
    }
    interface GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus {
      /** The path to source docproto of the document. */
      documentId?: GoogleCloudDocumentaiUiv1beta3DocumentId;
      /** The output_gcs_destination of the exported document if it was successful, otherwise empty. */
      outputGcsDestination?: string;
      /** The status of the exporting of the document. */
      status?: GoogleRpcStatus;
    }
    interface GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat {
      /** The dataset split type. */
      splitType?: string;
      /** Total number of documents with the given dataset split type to be exported. */
      totalDocumentCount?: number;
    }
    interface GoogleCloudDocumentaiUiv1beta3ExportDocumentsResponse {}
    interface GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata {
      /** The common metadata about the operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse {
      /** The Cloud Storage URI containing the output artifacts. */
      gcsUri?: string;
    }
    interface GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
      /** Validation statuses of the batch documents import config. */
      importConfigValidationResults?: GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult[];
      /** The list of response details of each document. */
      individualImportStatuses?: GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus[];
      /** Total number of the documents that are qualified for importing. */
      totalDocumentCount?: number;
    }
    interface GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult {
      /** The source Cloud Storage URI specified in the import config. */
      inputGcsSource?: string;
      /** The validation status of import config. */
      status?: GoogleRpcStatus;
    }
    interface GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus {
      /** The source Cloud Storage URI of the document. */
      inputGcsSource?: string;
      /** The document id of imported document if it was successful, otherwise empty. */
      outputDocumentId?: GoogleCloudDocumentaiUiv1beta3DocumentId;
      /** The output_gcs_destination of the processed document if it was successful, otherwise empty. */
      outputGcsDestination?: string;
      /** The status of the importing of the document. */
      status?: GoogleRpcStatus;
    }
    interface GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse {}
    interface GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionMetadata {
      /** The basic metadata for the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse {
      /** The destination processor version name. */
      processorVersion?: string;
    }
    interface GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
      /** The list of dataset resync statuses. Not checked when ResyncDatasetRequest.dataset_documents is specified. */
      datasetResyncStatuses?: GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus[];
      /** The list of document resync statuses. The same document could have multiple `individual_document_resync_statuses` if it has multiple inconsistencies. */
      individualDocumentResyncStatuses?: GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus[];
    }
    interface GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus {
      /** The type of the inconsistency of the dataset. */
      datasetInconsistencyType?: string;
      /** The status of resyncing the dataset with regards to the detected inconsistency. Empty if ResyncDatasetRequest.validate_only is `true`. */
      status?: GoogleRpcStatus;
    }
    interface GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus {
      /** The document identifier. */
      documentId?: GoogleCloudDocumentaiUiv1beta3DocumentId;
      /** The type of document inconsistency. */
      documentInconsistencyType?: string;
      /** The status of resyncing the document with regards to the detected inconsistency. Empty if ResyncDatasetRequest.validate_only is `true`. */
      status?: GoogleRpcStatus;
    }
    interface GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse {}
    interface GoogleCloudDocumentaiUiv1beta3RevisionRef {
      /** Reads the revision generated by the processor version. The format takes the full resource name of processor version. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}` */
      latestProcessorVersion?: string;
      /** Reads the revision by the predefined case. */
      revisionCase?: string;
      /** Reads the revision given by the id. */
      revisionId?: string;
    }
    interface GoogleCloudDocumentaiUiv1beta3SampleDocumentsMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponse {
      /** The status of sampling documents in test split. */
      sampleTestStatus?: GoogleRpcStatus;
      /** The status of sampling documents in training split. */
      sampleTrainingStatus?: GoogleRpcStatus;
      /** The result of the sampling process. */
      selectedDocuments?: GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponseSelectedDocument[];
    }
    interface GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponseSelectedDocument {
      /** An internal identifier for document. */
      documentId?: string;
    }
    interface GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse {}
    interface GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
      /** The test dataset validation information. */
      testDatasetValidation?: GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation;
      /** The training dataset validation information. */
      trainingDatasetValidation?: GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation;
    }
    interface GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation {
      /** The total number of dataset errors. */
      datasetErrorCount?: number;
      /** Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training. */
      datasetErrors?: GoogleRpcStatus[];
      /** The total number of document errors. */
      documentErrorCount?: number;
      /** Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training. */
      documentErrors?: GoogleRpcStatus[];
    }
    interface GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse {
      /** The resource name of the processor version produced by training. */
      processorVersion?: string;
    }
    interface GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse {}
    interface GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1BatchProcessMetadata {
      /** The creation time of the operation. */
      createTime?: string;
      /** The list of response details of each document. */
      individualProcessStatuses?: GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus[];
      /** The state of the current batch processing. */
      state?: string;
      /** A message providing more details about the current state of processing. For example, the error message if the operation is failed. */
      stateMessage?: string;
      /** The last update time of the operation. */
      updateTime?: string;
    }
    interface GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus {
      /** The status of human review on the processed document. */
      humanReviewStatus?: GoogleCloudDocumentaiV1HumanReviewStatus;
      /** The source of the document, same as the input_gcs_source field in the request when the batch process started. */
      inputGcsSource?: string;
      /** The Cloud Storage output destination (in the request as DocumentOutputConfig.GcsOutputConfig.gcs_uri) of the processed document if it was successful, otherwise empty. */
      outputGcsDestination?: string;
      /** The status processing the document. */
      status?: GoogleRpcStatus;
    }
    interface GoogleCloudDocumentaiV1BatchProcessResponse {}
    interface GoogleCloudDocumentaiV1beta3Barcode {
      /** Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type. */
      format?: string;
      /** Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`. */
      rawValue?: string;
      /** Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license. */
      valueFormat?: string;
    }
    interface GoogleCloudDocumentaiV1beta3BatchDatasetDocuments {
      /** A filter matching the documents. Follows the same format and restriction as [google.cloud.documentai.master.ListDocumentsRequest.filter]. */
      filter?: string;
      /** Document identifiers. */
      individualDocumentIds?: GoogleCloudDocumentaiV1beta3BatchDatasetDocumentsIndividualDocumentIds;
    }
    interface GoogleCloudDocumentaiV1beta3BatchDatasetDocumentsIndividualDocumentIds {
      /** Required. List of Document IDs indicating where the actual documents are stored. */
      documentIds?: GoogleCloudDocumentaiV1beta3DocumentId[];
    }
    interface GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
      /** Total number of documents that failed to be deleted in storage. */
      errorDocumentCount?: number;
      /** The list of response details of each document. */
      individualBatchDeleteStatuses?: GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus[];
      /** Total number of documents deleting from dataset. */
      totalDocumentCount?: number;
    }
    interface GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus {
      /** The document id of the document. */
      documentId?: GoogleCloudDocumentaiV1beta3DocumentId;
      /** The status of deleting the document in storage. */
      status?: GoogleRpcStatus;
    }
    interface GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsRequest {
      /** Required. Dataset documents input. If given `filter`, all documents satisfying the filter will be deleted. If given documentIds, a maximum of 50 documents can be deleted in a batch. The request will be rejected if more than 50 document_ids are provided. */
      datasetDocuments?: GoogleCloudDocumentaiV1beta3BatchDatasetDocuments;
    }
    interface GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsResponse {}
    interface GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig {
      /** The set of documents individually specified on Cloud Storage. */
      gcsDocuments?: GoogleCloudDocumentaiV1beta3GcsDocuments;
      /** The set of documents that match the specified Cloud Storage `gcs_prefix`. */
      gcsPrefix?: GoogleCloudDocumentaiV1beta3GcsPrefix;
    }
    interface GoogleCloudDocumentaiV1beta3BatchProcessMetadata {
      /** The creation time of the operation. */
      createTime?: string;
      /** The list of response details of each document. */
      individualProcessStatuses?: GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus[];
      /** The state of the current batch processing. */
      state?: string;
      /** A message providing more details about the current state of processing. For example, the error message if the operation is failed. */
      stateMessage?: string;
      /** The last update time of the operation. */
      updateTime?: string;
    }
    interface GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus {
      /** The name of the operation triggered by the processed document. If the human review process isn't triggered, this field will be empty. It has the same response type and metadata as the long-running operation returned by the ReviewDocument method. */
      humanReviewOperation?: string;
      /** The status of human review on the processed document. */
      humanReviewStatus?: GoogleCloudDocumentaiV1beta3HumanReviewStatus;
      /** The source of the document, same as the input_gcs_source field in the request when the batch process started. */
      inputGcsSource?: string;
      /** The Cloud Storage output destination (in the request as DocumentOutputConfig.GcsOutputConfig.gcs_uri) of the processed document if it was successful, otherwise empty. */
      outputGcsDestination?: string;
      /** The status processing the document. */
      status?: GoogleRpcStatus;
    }
    interface GoogleCloudDocumentaiV1beta3BatchProcessRequest {
      /** The output configuration for the BatchProcessDocuments method. */
      documentOutputConfig?: GoogleCloudDocumentaiV1beta3DocumentOutputConfig;
      /** The input config for each single document in the batch process. */
      inputConfigs?: GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig[];
      /** The input documents for the BatchProcessDocuments method. */
      inputDocuments?: GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig;
      /** Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. */
      labels?: {[P in string]: string};
      /** The overall output config for batch process. */
      outputConfig?: GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig;
      /** Inference-time options for the process API */
      processOptions?: GoogleCloudDocumentaiV1beta3ProcessOptions;
      /** Whether human review should be skipped for this request. Default to `false`. */
      skipHumanReview?: boolean;
    }
    interface GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig {
      /** The Cloud Storage location as the source of the document. */
      gcsSource?: string;
      /** An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml) of the input. If the input is a raw document, refer to [supported file types](https://cloud.google.com/document-ai/docs/file-types) for the list of media types. If the input is a Document, the type should be `application/json`. */
      mimeType?: string;
    }
    interface GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig {
      /** The output Cloud Storage directory to put the processed documents. */
      gcsDestination?: string;
    }
    interface GoogleCloudDocumentaiV1beta3BatchProcessResponse {}
    interface GoogleCloudDocumentaiV1beta3BoundingPoly {
      /** The bounding polygon normalized vertices. */
      normalizedVertices?: GoogleCloudDocumentaiV1beta3NormalizedVertex[];
      /** The bounding polygon vertices. */
      vertices?: GoogleCloudDocumentaiV1beta3Vertex[];
    }
    interface GoogleCloudDocumentaiV1beta3CommonOperationMetadata {
      /** The creation time of the operation. */
      createTime?: string;
      /** A related resource to this operation. */
      resource?: string;
      /** The state of the operation. */
      state?: string;
      /** A message providing more details about the current state of processing. */
      stateMessage?: string;
      /** The last update time of the operation. */
      updateTime?: string;
    }
    interface GoogleCloudDocumentaiV1beta3Dataset {
      /** Optional. Deprecated. Warehouse-based dataset configuration is not supported. */
      documentWarehouseConfig?: GoogleCloudDocumentaiV1beta3DatasetDocumentWarehouseConfig;
      /** Optional. User-managed Cloud Storage dataset configuration. Use this configuration if the dataset documents are stored under a user-managed Cloud Storage location. */
      gcsManagedConfig?: GoogleCloudDocumentaiV1beta3DatasetGCSManagedConfig;
      /** Dataset resource name. Format: `projects/{project}/locations/{location}/processors/{processor}/dataset` */
      name?: string;
      /** Output only. Reserved for future use. */
      satisfiesPzi?: boolean;
      /** Output only. Reserved for future use. */
      satisfiesPzs?: boolean;
      /** Optional. A lightweight indexing source with low latency and high reliability, but lacking advanced features like CMEK and content-based search. */
      spannerIndexingConfig?: any;
      /** Required. State of the dataset. Ignored when updating dataset. */
      state?: string;
      /** Optional. Unmanaged dataset configuration. Use this configuration if the dataset documents are managed by the document service internally (not user-managed). */
      unmanagedDatasetConfig?: any;
    }
    interface GoogleCloudDocumentaiV1beta3DatasetDocumentWarehouseConfig {
      /** Output only. The collection in Document AI Warehouse associated with the dataset. */
      collection?: string;
      /** Output only. The schema in Document AI Warehouse associated with the dataset. */
      schema?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DatasetGCSManagedConfig {
      /** Required. The Cloud Storage URI (a directory) where the documents belonging to the dataset must be stored. */
      gcsPrefix?: GoogleCloudDocumentaiV1beta3GcsPrefix;
    }
    interface GoogleCloudDocumentaiV1beta3DatasetSchema {
      /** Optional. Schema of the dataset. */
      documentSchema?: GoogleCloudDocumentaiV1beta3DocumentSchema;
      /** Dataset schema resource name. Format: `projects/{project}/locations/{location}/processors/{processor}/dataset/datasetSchema` */
      name?: string;
      /** Output only. Reserved for future use. */
      satisfiesPzi?: boolean;
      /** Output only. Reserved for future use. */
      satisfiesPzs?: boolean;
    }
    interface GoogleCloudDocumentaiV1beta3DatasetSpannerIndexingConfig {}
    interface GoogleCloudDocumentaiV1beta3DatasetUnmanagedDatasetConfig {}
    interface GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1beta3DeployProcessorVersionRequest {}
    interface GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse {}
    interface GoogleCloudDocumentaiV1beta3DisableProcessorMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1beta3DisableProcessorRequest {}
    interface GoogleCloudDocumentaiV1beta3DisableProcessorResponse {}
    interface GoogleCloudDocumentaiV1beta3Document {
      /** Optional. The blob assets in this document. This is used to store the content of the inline blobs in this document, e.g. image bytes, such that it can be referenced by other fields in the document via asset id. */
      blobAssets?: GoogleCloudDocumentaiV1beta3DocumentBlobAsset[];
      /** Document chunked based on chunking config. */
      chunkedDocument?: GoogleCloudDocumentaiV1beta3DocumentChunkedDocument;
      /** Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. */
      content?: string;
      /** Optional. An internal identifier for document. Should be loggable (no PII). */
      docid?: string;
      /** Parsed layout of the document. */
      documentLayout?: GoogleCloudDocumentaiV1beta3DocumentDocumentLayout;
      /** A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries. */
      entities?: GoogleCloudDocumentaiV1beta3DocumentEntity[];
      /** Placeholder. Relationship among Document.entities. */
      entityRelations?: GoogleCloudDocumentaiV1beta3DocumentEntityRelation[];
      /** Any error that occurred while processing this document. */
      error?: GoogleRpcStatus;
      /** An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml). */
      mimeType?: string;
      /** Visual page layout for the Document. */
      pages?: GoogleCloudDocumentaiV1beta3DocumentPage[];
      /** Placeholder. Revision history of this document. */
      revisions?: GoogleCloudDocumentaiV1beta3DocumentRevision[];
      /** Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified. */
      shardInfo?: GoogleCloudDocumentaiV1beta3DocumentShardInfo;
      /** Optional. UTF-8 encoded text in reading order from the document. */
      text?: string;
      /** Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other. */
      textChanges?: GoogleCloudDocumentaiV1beta3DocumentTextChange[];
      /** Styles for the Document.text. */
      textStyles?: GoogleCloudDocumentaiV1beta3DocumentStyle[];
      /** Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris). */
      uri?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentAnnotations {
      /** The description of the content with this annotation. */
      description?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentBlobAsset {
      /** Optional. The id of the blob asset. */
      assetId?: string;
      /** Optional. The content of the blob asset, e.g. image bytes. */
      content?: string;
      /** The mime type of the blob asset. An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml). */
      mimeType?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentChunkedDocument {
      /** List of chunks. */
      chunks?: GoogleCloudDocumentaiV1beta3DocumentChunkedDocumentChunk[];
    }
    interface GoogleCloudDocumentaiV1beta3DocumentChunkedDocumentChunk {
      /** Chunk fields inside this chunk. */
      chunkFields?: GoogleCloudDocumentaiV1beta3DocumentChunkedDocumentChunkChunkField[];
      /** ID of the chunk. */
      chunkId?: string;
      /** Text content of the chunk. */
      content?: string;
      /** Page footers associated with the chunk. */
      pageFooters?: GoogleCloudDocumentaiV1beta3DocumentChunkedDocumentChunkChunkPageFooter[];
      /** Page headers associated with the chunk. */
      pageHeaders?: GoogleCloudDocumentaiV1beta3DocumentChunkedDocumentChunkChunkPageHeader[];
      /** Page span of the chunk. */
      pageSpan?: GoogleCloudDocumentaiV1beta3DocumentChunkedDocumentChunkChunkPageSpan;
      /** Unused. */
      sourceBlockIds?: string[];
    }
    interface GoogleCloudDocumentaiV1beta3DocumentChunkedDocumentChunkChunkField {
      /** The image chunk field in the chunk. */
      imageChunkField?: GoogleCloudDocumentaiV1beta3DocumentChunkedDocumentChunkImageChunkField;
      /** The table chunk field in the chunk. */
      tableChunkField?: GoogleCloudDocumentaiV1beta3DocumentChunkedDocumentChunkTableChunkField;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentChunkedDocumentChunkChunkPageFooter {
      /** Page span of the footer. */
      pageSpan?: GoogleCloudDocumentaiV1beta3DocumentChunkedDocumentChunkChunkPageSpan;
      /** Footer in text format. */
      text?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentChunkedDocumentChunkChunkPageHeader {
      /** Page span of the header. */
      pageSpan?: GoogleCloudDocumentaiV1beta3DocumentChunkedDocumentChunkChunkPageSpan;
      /** Header in text format. */
      text?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentChunkedDocumentChunkChunkPageSpan {
      /** Page where chunk ends in the document. */
      pageEnd?: number;
      /** Page where chunk starts in the document. */
      pageStart?: number;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentChunkedDocumentChunkImageChunkField {
      /** Annotation of the image chunk field. */
      annotations?: GoogleCloudDocumentaiV1beta3DocumentAnnotations;
      /** Optional. Asset id of the inline image. If set, find the image content in the blob_assets field. */
      blobAssetId?: string;
      /** Optional. Data uri of the image. It is composed of four parts: a prefix (data:), a MIME type indicating the type of data, an optional base64 token if non-textual, and the data itself: data:, */
      dataUri?: string;
      /** Optional. Google Cloud Storage uri of the image. */
      gcsUri?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentChunkedDocumentChunkTableChunkField {
      /** Annotation of the table chunk field. */
      annotations?: GoogleCloudDocumentaiV1beta3DocumentAnnotations;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentDocumentLayout {
      /** List of blocks in the document. */
      blocks?: GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlock[];
    }
    interface GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlock {
      /** ID of the block. */
      blockId?: string;
      /** Identifies the bounding box for the block. */
      boundingBox?: GoogleCloudDocumentaiV1beta3BoundingPoly;
      /** Block consisting of image content. */
      imageBlock?: GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutImageBlock;
      /** Block consisting of list content/structure. */
      listBlock?: GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutListBlock;
      /** Page span of the block. */
      pageSpan?: GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutPageSpan;
      /** Block consisting of table content/structure. */
      tableBlock?: GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutTableBlock;
      /** Block consisting of text content. */
      textBlock?: GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutTextBlock;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutImageBlock {
      /** Annotation of the image block. */
      annotations?: GoogleCloudDocumentaiV1beta3DocumentAnnotations;
      /** Optional. Asset id of the inline image. If set, find the image content in the blob_assets field. */
      blobAssetId?: string;
      /** Optional. Data uri of the image. It is composed of four parts: a prefix (data:), a MIME type indicating the type of data, an optional base64 token if non-textual, and the data itself: data:, */
      dataUri?: string;
      /** Optional. Google Cloud Storage uri of the image. */
      gcsUri?: string;
      /** Text extracted from the image using OCR or alt text describing the image. */
      imageText?: string;
      /** Mime type of the image. An IANA published [media type (MIME type)] (https://www.iana.org/assignments/media-types/media-types.xhtml). */
      mimeType?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutListBlock {
      /** List entries that constitute a list block. */
      listEntries?: GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutListEntry[];
      /** Type of the list_entries (if exist). Available options are `ordered` and `unordered`. */
      type?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutListEntry {
      /** A list entry is a list of blocks. Repeated blocks support further hierarchies and nested blocks. */
      blocks?: GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlock[];
    }
    interface GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutPageSpan {
      /** Page where block ends in the document. */
      pageEnd?: number;
      /** Page where block starts in the document. */
      pageStart?: number;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutTableBlock {
      /** Annotation of the table block. */
      annotations?: GoogleCloudDocumentaiV1beta3DocumentAnnotations;
      /** Body rows containing main table content. */
      bodyRows?: GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutTableRow[];
      /** Table caption/title. */
      caption?: string;
      /** Header rows at the top of the table. */
      headerRows?: GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutTableRow[];
    }
    interface GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutTableCell {
      /** A table cell is a list of blocks. Repeated blocks support further hierarchies and nested blocks. */
      blocks?: GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlock[];
      /** How many columns this cell spans. */
      colSpan?: number;
      /** How many rows this cell spans. */
      rowSpan?: number;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutTableRow {
      /** A table row is a list of table cells. */
      cells?: GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutTableCell[];
    }
    interface GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlockLayoutTextBlock {
      /** A text block could further have child blocks. Repeated blocks support further hierarchies and nested blocks. */
      blocks?: GoogleCloudDocumentaiV1beta3DocumentDocumentLayoutDocumentLayoutBlock[];
      /** Text content stored in the block. */
      text?: string;
      /** Type of the text in the block. Available options are: `paragraph`, `subtitle`, `heading-1`, `heading-2`, `heading-3`, `heading-4`, `heading-5`, `header`, `footer`. */
      type?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentEntity {
      /** Optional. Confidence of detected Schema entity. Range `[0, 1]`. */
      confidence?: number;
      /** Optional. Canonical id. This will be a unique value in the entity list for this document. */
      id?: string;
      /** Optional. Deprecated. Use `id` field instead. */
      mentionId?: string;
      /** Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`. */
      mentionText?: string;
      /** Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types. */
      normalizedValue?: GoogleCloudDocumentaiV1beta3DocumentEntityNormalizedValue;
      /** Optional. Represents the provenance of this entity wrt. the location on the page where it was found. */
      pageAnchor?: GoogleCloudDocumentaiV1beta3DocumentPageAnchor;
      /** Optional. Entities can be nested to form a hierarchical data structure representing the content in the document. */
      properties?: GoogleCloudDocumentaiV1beta3DocumentEntity[];
      /** Optional. The history of this annotation. */
      provenance?: GoogleCloudDocumentaiV1beta3DocumentProvenance;
      /** Optional. Whether the entity will be redacted for de-identification purposes. */
      redacted?: boolean;
      /** Optional. Provenance of the entity. Text anchor indexing into the Document.text. */
      textAnchor?: GoogleCloudDocumentaiV1beta3DocumentTextAnchor;
      /** Required. Entity type from a schema e.g. `Address`. */
      type?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentEntityNormalizedValue {
      /** Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto */
      addressValue?: GoogleTypePostalAddress;
      /** Boolean value. Can be used for entities with binary values, or for checkboxes. */
      booleanValue?: boolean;
      /** DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto */
      datetimeValue?: GoogleTypeDateTime;
      /** Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto */
      dateValue?: GoogleTypeDate;
      /** Float value. */
      floatValue?: number;
      /** Integer value. */
      integerValue?: number;
      /** Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto */
      moneyValue?: GoogleTypeMoney;
      signatureValue?: boolean;
      /** Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format. */
      text?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentEntityRelation {
      /** Object entity id. */
      objectId?: string;
      /** Relationship description. */
      relation?: string;
      /** Subject entity id. */
      subjectId?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentId {
      /** A document id within user-managed Cloud Storage. */
      gcsManagedDocId?: GoogleCloudDocumentaiV1beta3DocumentIdGCSManagedDocumentId;
      /** Points to a specific revision of the document if set. */
      revisionRef?: GoogleCloudDocumentaiV1beta3RevisionRef;
      /** A document id within unmanaged dataset. */
      unmanagedDocId?: GoogleCloudDocumentaiV1beta3DocumentIdUnmanagedDocumentId;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentIdGCSManagedDocumentId {
      /** Id of the document (indexed) managed by Content Warehouse. */
      cwDocId?: string;
      /** Required. The Cloud Storage URI where the actual document is stored. */
      gcsUri?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentIdUnmanagedDocumentId {
      /** Required. The id of the document. */
      docId?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentMetadata {
      /** Type of the dataset split to which the document belongs. */
      datasetType?: string;
      /** The display name of the document. */
      displayName?: string;
      /** Document identifier. */
      documentId?: GoogleCloudDocumentaiV1beta3DocumentId;
      /** Labeling state of the document. */
      labelingState?: string;
      /** Number of pages in the document. */
      pageCount?: number;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentOutputConfig {
      /** Output config to write the results to Cloud Storage. */
      gcsOutputConfig?: GoogleCloudDocumentaiV1beta3DocumentOutputConfigGcsOutputConfig;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentOutputConfigGcsOutputConfig {
      /** Specifies which fields to include in the output documents. Only supports top level document and pages field so it must be in the form of `{document_field_name}` or `pages.{page_field_name}`. */
      fieldMask?: string;
      /** The Cloud Storage uri (a directory) of the output. */
      gcsUri?: string;
      /** Specifies the sharding config for the output document. */
      shardingConfig?: GoogleCloudDocumentaiV1beta3DocumentOutputConfigGcsOutputConfigShardingConfig;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentOutputConfigGcsOutputConfigShardingConfig {
      /** The number of overlapping pages between consecutive shards. */
      pagesOverlap?: number;
      /** The number of pages per shard. */
      pagesPerShard?: number;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPage {
      /** A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation. */
      blocks?: GoogleCloudDocumentaiV1beta3DocumentPageBlock[];
      /** A list of detected barcodes. */
      detectedBarcodes?: GoogleCloudDocumentaiV1beta3DocumentPageDetectedBarcode[];
      /** A list of detected languages together with confidence. */
      detectedLanguages?: GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage[];
      /** Physical dimension of the page. */
      dimension?: GoogleCloudDocumentaiV1beta3DocumentPageDimension;
      /** A list of visually detected form fields on the page. */
      formFields?: GoogleCloudDocumentaiV1beta3DocumentPageFormField[];
      /** Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned. */
      image?: GoogleCloudDocumentaiV1beta3DocumentPageImage;
      /** Image quality scores. */
      imageQualityScores?: GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScores;
      /** Layout for the page. */
      layout?: GoogleCloudDocumentaiV1beta3DocumentPageLayout;
      /** A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line. */
      lines?: GoogleCloudDocumentaiV1beta3DocumentPageLine[];
      /** 1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing. */
      pageNumber?: number;
      /** A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph. */
      paragraphs?: GoogleCloudDocumentaiV1beta3DocumentPageParagraph[];
      /** The history of this page. */
      provenance?: GoogleCloudDocumentaiV1beta3DocumentProvenance;
      /** A list of visually detected symbols on the page. */
      symbols?: GoogleCloudDocumentaiV1beta3DocumentPageSymbol[];
      /** A list of visually detected tables on the page. */
      tables?: GoogleCloudDocumentaiV1beta3DocumentPageTable[];
      /** A list of visually detected tokens on the page. */
      tokens?: GoogleCloudDocumentaiV1beta3DocumentPageToken[];
      /** Transformation matrices that were applied to the original document image to produce Page.image. */
      transforms?: GoogleCloudDocumentaiV1beta3DocumentPageMatrix[];
      /** A list of detected non-text visual elements e.g. checkbox, signature etc. on the page. */
      visualElements?: GoogleCloudDocumentaiV1beta3DocumentPageVisualElement[];
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageAnchor {
      /** One or more references to visual page elements */
      pageRefs?: GoogleCloudDocumentaiV1beta3DocumentPageAnchorPageRef[];
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageAnchorPageRef {
      /** Optional. Identifies the bounding polygon of a layout element on the page. If `layout_type` is set, the bounding polygon must be exactly the same to the layout element it's referring to. */
      boundingPoly?: GoogleCloudDocumentaiV1beta3BoundingPoly;
      /** Optional. Confidence of detected page element, if applicable. Range `[0, 1]`. */
      confidence?: number;
      /** Optional. Deprecated. Use PageRef.bounding_poly instead. */
      layoutId?: string;
      /** Optional. The type of the layout element that is being referenced if any. */
      layoutType?: string;
      /** Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json. */
      page?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageBlock {
      /** A list of detected languages together with confidence. */
      detectedLanguages?: GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage[];
      /** Layout for Block. */
      layout?: GoogleCloudDocumentaiV1beta3DocumentPageLayout;
      /** The history of this annotation. */
      provenance?: GoogleCloudDocumentaiV1beta3DocumentProvenance;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageDetectedBarcode {
      /** Detailed barcode information of the DetectedBarcode. */
      barcode?: GoogleCloudDocumentaiV1beta3Barcode;
      /** Layout for DetectedBarcode. */
      layout?: GoogleCloudDocumentaiV1beta3DocumentPageLayout;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage {
      /** Confidence of detected language. Range `[0, 1]`. */
      confidence?: number;
      /** The [BCP-47 language code](https://www.unicode.org/reports/tr35/#Unicode_locale_identifier), such as `en-US` or `sr-Latn`. */
      languageCode?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageDimension {
      /** Page height. */
      height?: number;
      /** Dimension unit. */
      unit?: string;
      /** Page width. */
      width?: number;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageFormField {
      /** Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction. */
      correctedKeyText?: string;
      /** Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction. */
      correctedValueText?: string;
      /** Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc. */
      fieldName?: GoogleCloudDocumentaiV1beta3DocumentPageLayout;
      /** Layout for the FormField value. */
      fieldValue?: GoogleCloudDocumentaiV1beta3DocumentPageLayout;
      /** A list of detected languages for name together with confidence. */
      nameDetectedLanguages?: GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage[];
      /** The history of this annotation. */
      provenance?: GoogleCloudDocumentaiV1beta3DocumentProvenance;
      /** A list of detected languages for value together with confidence. */
      valueDetectedLanguages?: GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage[];
      /** If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox` */
      valueType?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageImage {
      /** Raw byte content of the image. */
      content?: string;
      /** Height of the image in pixels. */
      height?: number;
      /** Encoding [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml) for the image. */
      mimeType?: string;
      /** Width of the image in pixels. */
      width?: number;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScores {
      /** A list of detected defects. */
      detectedDefects?: GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect[];
      /** The overall quality score. Range `[0, 1]` where `1` is perfect quality. */
      qualityScore?: number;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect {
      /** Confidence of detected defect. Range `[0, 1]` where `1` indicates strong confidence that the defect exists. */
      confidence?: number;
      /** Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare` */
      type?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageLayout {
      /** The bounding polygon for the Layout. */
      boundingPoly?: GoogleCloudDocumentaiV1beta3BoundingPoly;
      /** Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`. */
      confidence?: number;
      /** Detected orientation for the Layout. */
      orientation?: string;
      /** Text anchor indexing into the Document.text. */
      textAnchor?: GoogleCloudDocumentaiV1beta3DocumentTextAnchor;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageLine {
      /** A list of detected languages together with confidence. */
      detectedLanguages?: GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage[];
      /** Layout for Line. */
      layout?: GoogleCloudDocumentaiV1beta3DocumentPageLayout;
      /** The history of this annotation. */
      provenance?: GoogleCloudDocumentaiV1beta3DocumentProvenance;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageMatrix {
      /** Number of columns in the matrix. */
      cols?: number;
      /** The matrix data. */
      data?: string;
      /** Number of rows in the matrix. */
      rows?: number;
      /** This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html */
      type?: number;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageParagraph {
      /** A list of detected languages together with confidence. */
      detectedLanguages?: GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage[];
      /** Layout for Paragraph. */
      layout?: GoogleCloudDocumentaiV1beta3DocumentPageLayout;
      /** The history of this annotation. */
      provenance?: GoogleCloudDocumentaiV1beta3DocumentProvenance;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageSymbol {
      /** A list of detected languages together with confidence. */
      detectedLanguages?: GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage[];
      /** Layout for Symbol. */
      layout?: GoogleCloudDocumentaiV1beta3DocumentPageLayout;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageTable {
      /** Body rows of the table. */
      bodyRows?: GoogleCloudDocumentaiV1beta3DocumentPageTableTableRow[];
      /** A list of detected languages together with confidence. */
      detectedLanguages?: GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage[];
      /** Header rows of the table. */
      headerRows?: GoogleCloudDocumentaiV1beta3DocumentPageTableTableRow[];
      /** Layout for Table. */
      layout?: GoogleCloudDocumentaiV1beta3DocumentPageLayout;
      /** The history of this table. */
      provenance?: GoogleCloudDocumentaiV1beta3DocumentProvenance;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell {
      /** How many columns this cell spans. */
      colSpan?: number;
      /** A list of detected languages together with confidence. */
      detectedLanguages?: GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage[];
      /** Layout for TableCell. */
      layout?: GoogleCloudDocumentaiV1beta3DocumentPageLayout;
      /** How many rows this cell spans. */
      rowSpan?: number;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageTableTableRow {
      /** Cells that make up this row. */
      cells?: GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell[];
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageToken {
      /** Detected break at the end of a Token. */
      detectedBreak?: GoogleCloudDocumentaiV1beta3DocumentPageTokenDetectedBreak;
      /** A list of detected languages together with confidence. */
      detectedLanguages?: GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage[];
      /** Layout for Token. */
      layout?: GoogleCloudDocumentaiV1beta3DocumentPageLayout;
      /** The history of this annotation. */
      provenance?: GoogleCloudDocumentaiV1beta3DocumentProvenance;
      /** Text style attributes. */
      styleInfo?: GoogleCloudDocumentaiV1beta3DocumentPageTokenStyleInfo;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageTokenDetectedBreak {
      /** Detected break type. */
      type?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageTokenStyleInfo {
      /** Color of the background. */
      backgroundColor?: GoogleTypeColor;
      /** Whether the text is bold (equivalent to font_weight is at least `700`). */
      bold?: boolean;
      /** Font size in points (`1` point is `¹⁄₇₂` inches). */
      fontSize?: number;
      /** Name or style of the font. */
      fontType?: string;
      /** TrueType weight on a scale `100` (thin) to `1000` (ultra-heavy). Normal is `400`, bold is `700`. */
      fontWeight?: number;
      /** Whether the text is handwritten. */
      handwritten?: boolean;
      /** Whether the text is italic. */
      italic?: boolean;
      /** Letter spacing in points. */
      letterSpacing?: number;
      /** Font size in pixels, equal to _unrounded font_size_ * _resolution_ ÷ `72.0`. */
      pixelFontSize?: number;
      /** Whether the text is in small caps. This feature is not supported yet. */
      smallcaps?: boolean;
      /** Whether the text is strikethrough. This feature is not supported yet. */
      strikeout?: boolean;
      /** Whether the text is a subscript. This feature is not supported yet. */
      subscript?: boolean;
      /** Whether the text is a superscript. This feature is not supported yet. */
      superscript?: boolean;
      /** Color of the text. */
      textColor?: GoogleTypeColor;
      /** Whether the text is underlined. */
      underlined?: boolean;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentPageVisualElement {
      /** A list of detected languages together with confidence. */
      detectedLanguages?: GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage[];
      /** Layout for VisualElement. */
      layout?: GoogleCloudDocumentaiV1beta3DocumentPageLayout;
      /** Type of the VisualElement. */
      type?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentProvenance {
      /** The Id of this operation. Needs to be unique within the scope of the revision. */
      id?: number;
      /** References to the original elements that are replaced. */
      parents?: GoogleCloudDocumentaiV1beta3DocumentProvenanceParent[];
      /** The index of the revision that produced this element. */
      revision?: number;
      /** The type of provenance operation. */
      type?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentProvenanceParent {
      /** The id of the parent provenance. */
      id?: number;
      /** The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision. */
      index?: number;
      /** The index of the index into current revision's parent_ids list. */
      revision?: number;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentRevision {
      /** If the change was made by a person specify the name or id of that person. */
      agent?: string;
      /** The time that the revision was created, internally generated by doc proto storage at the time of create. */
      createTime?: string;
      /** Human Review information of this revision. */
      humanReview?: GoogleCloudDocumentaiV1beta3DocumentRevisionHumanReview;
      /** Id of the revision, internally generated by doc proto storage. Unique within the context of the document. */
      id?: string;
      /** The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field. */
      parent?: number[];
      /** The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field. */
      parentIds?: string[];
      /** If the annotation was made by processor identify the processor by its resource name. */
      processor?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentRevisionHumanReview {
      /** Human review state. e.g. `requested`, `succeeded`, `rejected`. */
      state?: string;
      /** A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`. */
      stateMessage?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentSchema {
      /** Description of the schema. */
      description?: string;
      /** Display name to show to users. */
      displayName?: string;
      /** Entity types of the schema. */
      entityTypes?: GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType[];
      /** Metadata of the schema. */
      metadata?: GoogleCloudDocumentaiV1beta3DocumentSchemaMetadata;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType {
      /** The entity type that this type is derived from. For now, one and only one should be set. */
      baseTypes?: string[];
      /** The description of the entity type. Could be used to provide more information about the entity type for model calls. */
      description?: string;
      /** User defined name for the type. */
      displayName?: string;
      /** Metadata for the entity type. */
      entityTypeMetadata?: GoogleCloudDocumentaiV1beta3EntityTypeMetadata;
      /** If specified, lists all the possible values for this entity. This should not be more than a handful of values. If the number of values is >10 or could change frequently use the `EntityType.value_ontology` field and specify a list of all possible values in a value ontology file. */
      enumValues?: GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeEnumValues;
      /** Name of the type. It must be unique within the schema file and cannot be a "Common Type". The following naming conventions are used: - Use `snake_casing`. - Name matching is case-sensitive. - Maximum 64 characters. - Must start with a letter. - Allowed characters: ASCII letters `[a-z0-9_-]`. (For backward compatibility internal infrastructure and tooling can handle any ascii character.) - The `/` is sometimes used to denote a property of a type. For example `line_item/amount`. This convention is deprecated, but will still be honored for backward compatibility. */
      name?: string;
      /** Description the nested structure, or composition of an entity. */
      properties?: GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty[];
    }
    interface GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeEnumValues {
      /** The individual values that this enum values type can include. */
      values?: string[];
    }
    interface GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty {
      /** The description of the property. Could be used to provide more information about the property for model calls. */
      description?: string;
      /** User defined name for the property. */
      displayName?: string;
      /** Grounding config of the entity type. */
      groundingConfig?: string;
      /** The name of the property. Follows the same guidelines as the EntityType name. */
      name?: string;
      /** Occurrence type limits the number of instances an entity type appears in the document. */
      occurrenceType?: string;
      /** Any additional metadata about the property can be added here. */
      propertyMetadata?: GoogleCloudDocumentaiV1beta3PropertyMetadata;
      /** A reference to the value type of the property. This type is subject to the same conventions as the `Entity.base_types` field. */
      valueType?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentSchemaMetadata {
      /** If true, on a given page, there can be multiple `document` annotations covering it. */
      documentAllowMultipleLabels?: boolean;
      /** If true, a `document` entity type can be applied to subdocument (splitting). Otherwise, it can only be applied to the entire document (classification). */
      documentSplitter?: boolean;
      /** If set, all the nested entities must be prefixed with the parents. */
      prefixedNamingOnProperties?: boolean;
      /** If set, we will skip the naming format validation in the schema. So the string values in `DocumentSchema.EntityType.name` and `DocumentSchema.EntityType.Property.name` will not be checked. */
      skipNamingValidation?: boolean;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentShardInfo {
      /** Total number of shards. */
      shardCount?: string;
      /** The 0-based index of this shard. */
      shardIndex?: string;
      /** The index of the first character in Document.text in the overall document global text. */
      textOffset?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentStyle {
      /** Text background color. */
      backgroundColor?: GoogleTypeColor;
      /** Text color. */
      color?: GoogleTypeColor;
      /** Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp */
      fontFamily?: string;
      /** Font size. */
      fontSize?: GoogleCloudDocumentaiV1beta3DocumentStyleFontSize;
      /** [Font weight](https://www.w3schools.com/cssref/pr_font_weight.asp). Possible values are `normal`, `bold`, `bolder`, and `lighter`. */
      fontWeight?: string;
      /** Text anchor indexing into the Document.text. */
      textAnchor?: GoogleCloudDocumentaiV1beta3DocumentTextAnchor;
      /** [Text decoration](https://www.w3schools.com/cssref/pr_text_text-decoration.asp). Follows CSS standard. */
      textDecoration?: string;
      /** [Text style](https://www.w3schools.com/cssref/pr_font_font-style.asp). Possible values are `normal`, `italic`, and `oblique`. */
      textStyle?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentStyleFontSize {
      /** Font size for the text. */
      size?: number;
      /** Unit for the font size. Follows CSS naming (such as `in`, `px`, and `pt`). */
      unit?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentTextAnchor {
      /** Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields. */
      content?: string;
      /** The text segments from the Document.text. */
      textSegments?: GoogleCloudDocumentaiV1beta3DocumentTextAnchorTextSegment[];
    }
    interface GoogleCloudDocumentaiV1beta3DocumentTextAnchorTextSegment {
      /** TextSegment half open end UTF-8 char index in the Document.text. */
      endIndex?: string;
      /** TextSegment start UTF-8 char index in the Document.text. */
      startIndex?: string;
    }
    interface GoogleCloudDocumentaiV1beta3DocumentTextChange {
      /** The text that replaces the text identified in the `text_anchor`. */
      changedText?: string;
      /** The history of this annotation. */
      provenance?: GoogleCloudDocumentaiV1beta3DocumentProvenance[];
      /** Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index. */
      textAnchor?: GoogleCloudDocumentaiV1beta3DocumentTextAnchor;
    }
    interface GoogleCloudDocumentaiV1beta3EnableProcessorMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1beta3EnableProcessorRequest {}
    interface GoogleCloudDocumentaiV1beta3EnableProcessorResponse {}
    interface GoogleCloudDocumentaiV1beta3EntityTypeMetadata {
      /** Whether the entity type should be considered inactive. */
      inactive?: boolean;
    }
    interface GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionRequest {
      /** Optional. The documents used in the evaluation. If unspecified, use the processor's dataset as evaluation input. */
      evaluationDocuments?: GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig;
    }
    interface GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionResponse {
      /** The resource name of the created evaluation. */
      evaluation?: string;
    }
    interface GoogleCloudDocumentaiV1beta3Evaluation {
      /** Metrics for all the entities in aggregate. */
      allEntitiesMetrics?: GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics;
      /** The time that the evaluation was created. */
      createTime?: string;
      /** Counters for the documents used in the evaluation. */
      documentCounters?: GoogleCloudDocumentaiV1beta3EvaluationCounters;
      /** Metrics across confidence levels, for different entities. */
      entityMetrics?: {
        [P in string]: GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics;
      };
      /** The KMS key name used for encryption. */
      kmsKeyName?: string;
      /** The KMS key version with which data is encrypted. */
      kmsKeyVersionName?: string;
      /** The resource name of the evaluation. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}/evaluations/{evaluation}` */
      name?: string;
    }
    interface GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics {
      /** The confidence level. */
      confidenceLevel?: number;
      /** The metrics at the specific confidence level. */
      metrics?: GoogleCloudDocumentaiV1beta3EvaluationMetrics;
    }
    interface GoogleCloudDocumentaiV1beta3EvaluationCounters {
      /** How many documents were used in the evaluation. */
      evaluatedDocumentsCount?: number;
      /** How many documents were not included in the evaluation as Document AI failed to process them. */
      failedDocumentsCount?: number;
      /** How many documents were sent for evaluation. */
      inputDocumentsCount?: number;
      /** How many documents were not included in the evaluation as they didn't pass validation. */
      invalidDocumentsCount?: number;
    }
    interface GoogleCloudDocumentaiV1beta3EvaluationMetrics {
      /** The calculated f1 score. */
      f1Score?: number;
      /** The amount of false negatives. */
      falseNegativesCount?: number;
      /** The amount of false positives. */
      falsePositivesCount?: number;
      /** The amount of documents with a ground truth occurrence. */
      groundTruthDocumentCount?: number;
      /** The amount of occurrences in ground truth documents. */
      groundTruthOccurrencesCount?: number;
      /** The calculated precision. */
      precision?: number;
      /** The amount of documents with a predicted occurrence. */
      predictedDocumentCount?: number;
      /** The amount of occurrences in predicted documents. */
      predictedOccurrencesCount?: number;
      /** The calculated recall. */
      recall?: number;
      /** The amount of documents that had an occurrence of this label. */
      totalDocumentsCount?: number;
      /** The amount of true positives. */
      truePositivesCount?: number;
    }
    interface GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics {
      /** The calculated area under the precision recall curve (AUPRC), computed by integrating over all confidence thresholds. */
      auprc?: number;
      /** The AUPRC for metrics with fuzzy matching disabled, i.e., exact matching only. */
      auprcExact?: number;
      /** Metrics across confidence levels with fuzzy matching enabled. */
      confidenceLevelMetrics?: GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics[];
      /** Metrics across confidence levels with only exact matching. */
      confidenceLevelMetricsExact?: GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics[];
      /** The Estimated Calibration Error (ECE) of the confidence of the predicted entities. */
      estimatedCalibrationError?: number;
      /** The ECE for the predicted entities with fuzzy matching disabled, i.e., exact matching only. */
      estimatedCalibrationErrorExact?: number;
      /** The metrics type for the label. */
      metricsType?: string;
    }
    interface GoogleCloudDocumentaiV1beta3EvaluationReference {
      /** An aggregate of the statistics for the evaluation with fuzzy matching on. */
      aggregateMetrics?: GoogleCloudDocumentaiV1beta3EvaluationMetrics;
      /** An aggregate of the statistics for the evaluation with fuzzy matching off. */
      aggregateMetricsExact?: GoogleCloudDocumentaiV1beta3EvaluationMetrics;
      /** The resource name of the evaluation. */
      evaluation?: string;
      /** The resource name of the Long Running Operation for the evaluation. */
      operation?: string;
    }
    interface GoogleCloudDocumentaiV1beta3FetchProcessorTypesResponse {
      /** The list of processor types. */
      processorTypes?: GoogleCloudDocumentaiV1beta3ProcessorType[];
    }
    interface GoogleCloudDocumentaiV1beta3FieldExtractionMetadata {
      /** Summary options config. */
      summaryOptions?: GoogleCloudDocumentaiV1beta3SummaryOptions;
    }
    interface GoogleCloudDocumentaiV1beta3GcsDocument {
      /** The Cloud Storage object uri. */
      gcsUri?: string;
      /** An IANA MIME type (RFC6838) of the content. */
      mimeType?: string;
    }
    interface GoogleCloudDocumentaiV1beta3GcsDocuments {
      /** The list of documents. */
      documents?: GoogleCloudDocumentaiV1beta3GcsDocument[];
    }
    interface GoogleCloudDocumentaiV1beta3GcsPrefix {
      /** The URI prefix. */
      gcsUriPrefix?: string;
    }
    interface GoogleCloudDocumentaiV1beta3GetDocumentResponse {
      document?: GoogleCloudDocumentaiV1beta3Document;
    }
    interface GoogleCloudDocumentaiV1beta3HumanReviewStatus {
      /** The name of the operation triggered by the processed document. This field is populated only when the state is `HUMAN_REVIEW_IN_PROGRESS`. It has the same response type and metadata as the long-running operation returned by ReviewDocument. */
      humanReviewOperation?: string;
      /** The state of human review on the processing request. */
      state?: string;
      /** A message providing more details about the human review state. */
      stateMessage?: string;
    }
    interface GoogleCloudDocumentaiV1beta3ImportDocumentsMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
      /** Validation statuses of the batch documents import config. */
      importConfigValidationResults?: GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataImportConfigValidationResult[];
      /** The list of response details of each document. */
      individualImportStatuses?: GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataIndividualImportStatus[];
      /** Total number of the documents that are qualified for importing. */
      totalDocumentCount?: number;
    }
    interface GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataImportConfigValidationResult {
      /** The source Cloud Storage URI specified in the import config. */
      inputGcsSource?: string;
      /** The validation status of import config. */
      status?: GoogleRpcStatus;
    }
    interface GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataIndividualImportStatus {
      /** The source Cloud Storage URI of the document. */
      inputGcsSource?: string;
      /** The document id of imported document if it was successful, otherwise empty. */
      outputDocumentId?: GoogleCloudDocumentaiV1beta3DocumentId;
      /** The status of the importing of the document. */
      status?: GoogleRpcStatus;
    }
    interface GoogleCloudDocumentaiV1beta3ImportDocumentsRequest {
      /** Required. The Cloud Storage uri containing raw documents that must be imported. */
      batchDocumentsImportConfigs?: GoogleCloudDocumentaiV1beta3ImportDocumentsRequestBatchDocumentsImportConfig[];
    }
    interface GoogleCloudDocumentaiV1beta3ImportDocumentsRequestBatchDocumentsImportConfig {
      /** If set, documents will be automatically split into training and test split category with the specified ratio. */
      autoSplitConfig?: GoogleCloudDocumentaiV1beta3ImportDocumentsRequestBatchDocumentsImportConfigAutoSplitConfig;
      /** The common config to specify a set of documents used as input. */
      batchInputConfig?: GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig;
      /** Target dataset split where the documents must be stored. */
      datasetSplit?: string;
    }
    interface GoogleCloudDocumentaiV1beta3ImportDocumentsRequestBatchDocumentsImportConfigAutoSplitConfig {
      /** Ratio of training dataset split. */
      trainingSplitRatio?: number;
    }
    interface GoogleCloudDocumentaiV1beta3ImportDocumentsResponse {}
    interface GoogleCloudDocumentaiV1beta3ImportProcessorVersionMetadata {
      /** The basic metadata for the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1beta3ImportProcessorVersionRequest {
      /** The source processor version to import from. It can be from a different environment and region than the destination processor. */
      externalProcessorVersionSource?: GoogleCloudDocumentaiV1beta3ImportProcessorVersionRequestExternalProcessorVersionSource;
      /** The source processor version to import from. The source processor version and destination processor need to be in the same environment and region. Note that ProcessorVersions with `model_type` `MODEL_TYPE_LLM` are not supported. */
      processorVersionSource?: string;
    }
    interface GoogleCloudDocumentaiV1beta3ImportProcessorVersionRequestExternalProcessorVersionSource {
      /** Required. The processor version name. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}` */
      processorVersion?: string;
      /** Optional. The Document AI service endpoint. For example, 'https://us-documentai.googleapis.com' */
      serviceEndpoint?: string;
    }
    interface GoogleCloudDocumentaiV1beta3ImportProcessorVersionResponse {
      /** The destination processor version name. */
      processorVersion?: string;
    }
    interface GoogleCloudDocumentaiV1beta3ListDocumentsRequest {
      /** Optional. Query to filter the documents based on https://google.aip.dev/160. ## Currently support query strings are: `SplitType=DATASET_SPLIT_TEST|DATASET_SPLIT_TRAIN|DATASET_SPLIT_UNASSIGNED` - `LabelingState=DOCUMENT_LABELED|DOCUMENT_UNLABELED|DOCUMENT_AUTO_LABELED` - `DisplayName=\"file_name.pdf\"` - `EntityType=abc/def` - `TagName=\"auto-labeling-running\"|\"sampled\"` Note: - Only `AND`, `=` and `!=` are supported. e.g. `DisplayName=file_name AND EntityType!=abc` IS supported. - Wildcard `*` is supported only in `DisplayName` filter - No duplicate filter keys are allowed, e.g. `EntityType=a AND EntityType=b` is NOT supported. - String match is case sensitive (for filter `DisplayName` & `EntityType`). */
      filter?: string;
      /** The maximum number of documents to return. The service may return fewer than this value. If unspecified, at most 20 documents will be returned. The maximum value is 100; values above 100 will be coerced to 100. */
      pageSize?: number;
      /** A page token, received from a previous `ListDocuments` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDocuments` must match the call that provided the page token. */
      pageToken?: string;
      /** Optional. Controls if the request requires a total size of matched documents. See ListDocumentsResponse.total_size. Enabling this flag may adversely impact performance. Defaults to false. */
      returnTotalSize?: boolean;
      /** Optional. Number of results to skip beginning from the `page_token` if provided. https://google.aip.dev/158#skipping-results. It must be a non-negative integer. Negative values will be rejected. Note that this is not the number of pages to skip. If this value causes the cursor to move past the end of results, ListDocumentsResponse.document_metadata and ListDocumentsResponse.next_page_token will be empty. */
      skip?: number;
    }
    interface GoogleCloudDocumentaiV1beta3ListDocumentsResponse {
      /** Document metadata corresponding to the listed documents. */
      documentMetadata?: GoogleCloudDocumentaiV1beta3DocumentMetadata[];
      /** A token, which can be sent as ListDocumentsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** Total count of documents queried. */
      totalSize?: number;
    }
    interface GoogleCloudDocumentaiV1beta3ListEvaluationsResponse {
      /** The evaluations requested. */
      evaluations?: GoogleCloudDocumentaiV1beta3Evaluation[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudDocumentaiV1beta3ListProcessorsResponse {
      /** Points to the next processor, otherwise empty. */
      nextPageToken?: string;
      /** The list of processors. */
      processors?: GoogleCloudDocumentaiV1beta3Processor[];
    }
    interface GoogleCloudDocumentaiV1beta3ListProcessorTypesResponse {
      /** Points to the next page, otherwise empty. */
      nextPageToken?: string;
      /** The processor types. */
      processorTypes?: GoogleCloudDocumentaiV1beta3ProcessorType[];
    }
    interface GoogleCloudDocumentaiV1beta3ListProcessorVersionsResponse {
      /** Points to the next processor, otherwise empty. */
      nextPageToken?: string;
      /** The list of processors. */
      processorVersions?: GoogleCloudDocumentaiV1beta3ProcessorVersion[];
    }
    interface GoogleCloudDocumentaiV1beta3NormalizedVertex {
      /** X coordinate. */
      x?: number;
      /** Y coordinate (starts from the top of the image). */
      y?: number;
    }
    interface GoogleCloudDocumentaiV1beta3OcrConfig {
      /** A list of advanced OCR options to further fine-tune OCR behavior. Current valid values are: - `legacy_layout`: a heuristics layout detection algorithm, which serves as an alternative to the current ML-based layout detection algorithm. Customers can choose the best suitable layout algorithm based on their situation. */
      advancedOcrOptions?: string[];
      /** Turn on font identification model and return font style information. Deprecated, use PremiumFeatures.compute_style_info instead. */
      computeStyleInfo?: boolean;
      /** Turn off character box detector in OCR engine. Character box detection is enabled by default in OCR 2.0 (and later) processors. */
      disableCharacterBoxesDetection?: boolean;
      /** Enables intelligent document quality scores after OCR. Can help with diagnosing why OCR responses are of poor quality for a given input. Adds additional latency comparable to regular OCR to the process call. */
      enableImageQualityScores?: boolean;
      /** Enables special handling for PDFs with existing text information. Results in better text extraction quality in such PDF inputs. */
      enableNativePdfParsing?: boolean;
      /** Includes symbol level OCR information if set to true. */
      enableSymbol?: boolean;
      /** Hints for the OCR model. */
      hints?: GoogleCloudDocumentaiV1beta3OcrConfigHints;
      /** Configurations for premium OCR features. */
      premiumFeatures?: GoogleCloudDocumentaiV1beta3OcrConfigPremiumFeatures;
    }
    interface GoogleCloudDocumentaiV1beta3OcrConfigHints {
      /** List of BCP-47 language codes to use for OCR. In most cases, not specifying it yields the best results since it enables automatic language detection. For languages based on the Latin alphabet, setting hints is not needed. In rare cases, when the language of the text in the image is known, setting a hint will help get better results (although it will be a significant hindrance if the hint is wrong). */
      languageHints?: string[];
    }
    interface GoogleCloudDocumentaiV1beta3OcrConfigPremiumFeatures {
      /** Turn on font identification model and return font style information. */
      computeStyleInfo?: boolean;
      /** Turn on the model that can extract LaTeX math formulas. */
      enableMathOcr?: boolean;
      /** Turn on selection mark detector in OCR engine. Only available in OCR 2.0 (and later) processors. */
      enableSelectionMarkDetection?: boolean;
    }
    interface GoogleCloudDocumentaiV1beta3ProcessOptions {
      /** Only process certain pages from the end, same as above. */
      fromEnd?: number;
      /** Only process certain pages from the start. Process all if the document has fewer pages. */
      fromStart?: number;
      /** Which pages to process (1-indexed). */
      individualPageSelector?: GoogleCloudDocumentaiV1beta3ProcessOptionsIndividualPageSelector;
      /** Optional. Only applicable to `LAYOUT_PARSER_PROCESSOR`. Returns error if set on other processor types. */
      layoutConfig?: GoogleCloudDocumentaiV1beta3ProcessOptionsLayoutConfig;
      /** Only applicable to `OCR_PROCESSOR` and `FORM_PARSER_PROCESSOR`. Returns error if set on other processor types. */
      ocrConfig?: GoogleCloudDocumentaiV1beta3OcrConfig;
      /** Optional. Override the schema of the ProcessorVersion. Will return an Invalid Argument error if this field is set when the underlying ProcessorVersion doesn't support schema override. */
      schemaOverride?: GoogleCloudDocumentaiV1beta3DocumentSchema;
    }
    interface GoogleCloudDocumentaiV1beta3ProcessOptionsIndividualPageSelector {
      /** Optional. Indices of the pages (starting from 1). */
      pages?: number[];
    }
    interface GoogleCloudDocumentaiV1beta3ProcessOptionsLayoutConfig {
      /** Optional. Config for chunking in layout parser processor. */
      chunkingConfig?: GoogleCloudDocumentaiV1beta3ProcessOptionsLayoutConfigChunkingConfig;
      /** Optional. Whether to include image annotations in layout parser response. */
      enableImageAnnotation?: boolean;
      /** Optional. Whether to extract images in layout parser response. */
      enableImageExtraction?: boolean;
      /** Optional. Whether to refine PDF layout using LLM. */
      enableLlmLayoutParsing?: boolean;
      /** Optional. Whether to include table annotations in layout parser response. */
      enableTableAnnotation?: boolean;
      /** Optional. Whether to include bounding boxes in layout parser processor response. */
      returnBoundingBoxes?: boolean;
      /** Optional. Whether to include images in layout parser processor response. */
      returnImages?: boolean;
    }
    interface GoogleCloudDocumentaiV1beta3ProcessOptionsLayoutConfigChunkingConfig {
      /** Optional. The percentile of cosine dissimilarity that must be exceeded between a group of tokens and the next. The smaller this number is, the more chunks will be generated. THIS FIELD IS NOT YET USED. */
      breakpointPercentileThreshold?: number;
      /** Optional. The chunk sizes to use when splitting documents, in order of level. */
      chunkSize?: number;
      /** Optional. Whether or not to include ancestor headings when splitting. */
      includeAncestorHeadings?: boolean;
      /** Optional. The number of tokens to group together when evaluating semantic similarity. THIS FIELD IS NOT YET USED. */
      semanticChunkingGroupSize?: boolean;
    }
    interface GoogleCloudDocumentaiV1beta3Processor {
      /** The time the processor was created. */
      createTime?: string;
      /** The default processor version. */
      defaultProcessorVersion?: string;
      /** The display name of the processor. */
      displayName?: string;
      /** The [KMS key](https://cloud.google.com/security-key-management) used for encryption and decryption in CMEK scenarios. */
      kmsKeyName?: string;
      /** Output only. Immutable. The resource name of the processor. Format: `projects/{project}/locations/{location}/processors/{processor}` */
      name?: string;
      /** Output only. Immutable. The http endpoint that can be called to invoke processing. */
      processEndpoint?: string;
      /** Output only. The processor version aliases. */
      processorVersionAliases?: GoogleCloudDocumentaiV1beta3ProcessorVersionAlias[];
      /** Output only. Reserved for future use. */
      satisfiesPzi?: boolean;
      /** Output only. Reserved for future use. */
      satisfiesPzs?: boolean;
      /** Output only. The state of the processor. */
      state?: string;
      /** The processor type, such as: `OCR_PROCESSOR`, `INVOICE_PROCESSOR`. To get a list of processor types, see FetchProcessorTypes. */
      type?: string;
    }
    interface GoogleCloudDocumentaiV1beta3ProcessorType {
      /** Whether the processor type allows creation. If true, users can create a processor of this processor type. Otherwise, users need to request access. */
      allowCreation?: boolean;
      /** The locations in which this processor is available. */
      availableLocations?: GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo[];
      /** The processor category, used by UI to group processor types. */
      category?: string;
      /** Launch stage of the processor type */
      launchStage?: string;
      /** The resource name of the processor type. Format: `projects/{project}/processorTypes/{processor_type}` */
      name?: string;
      /** A set of Cloud Storage URIs of sample documents for this processor. */
      sampleDocumentUris?: string[];
      /** The processor type, such as: `OCR_PROCESSOR`, `INVOICE_PROCESSOR`. */
      type?: string;
    }
    interface GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo {
      /** The location ID. For supported locations, refer to [regional and multi-regional support](/document-ai/docs/regions). */
      locationId?: string;
    }
    interface GoogleCloudDocumentaiV1beta3ProcessorVersion {
      /** The time the processor version was created. */
      createTime?: string;
      /** If set, information about the eventual deprecation of this version. */
      deprecationInfo?: GoogleCloudDocumentaiV1beta3ProcessorVersionDeprecationInfo;
      /** The display name of the processor version. */
      displayName?: string;
      /** The schema of the processor version. Describes the output. */
      documentSchema?: GoogleCloudDocumentaiV1beta3DocumentSchema;
      /** Output only. Information about Generative AI model-based processor versions. */
      genAiModelInfo?: GoogleCloudDocumentaiV1beta3ProcessorVersionGenAiModelInfo;
      /** Output only. Denotes that this `ProcessorVersion` is managed by Google. */
      googleManaged?: boolean;
      /** The KMS key name used for encryption. */
      kmsKeyName?: string;
      /** The KMS key version with which data is encrypted. */
      kmsKeyVersionName?: string;
      /** The most recently invoked evaluation for the processor version. */
      latestEvaluation?: GoogleCloudDocumentaiV1beta3EvaluationReference;
      /** Output only. The model type of this processor version. */
      modelType?: string;
      /** Identifier. The resource name of the processor version. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}` */
      name?: string;
      /** Output only. Reserved for future use. */
      satisfiesPzi?: boolean;
      /** Output only. Reserved for future use. */
      satisfiesPzs?: boolean;
      /** Output only. The state of the processor version. */
      state?: string;
    }
    interface GoogleCloudDocumentaiV1beta3ProcessorVersionAlias {
      /** The alias in the form of `processor_version` resource name. */
      alias?: string;
      /** The resource name of aliased processor version. */
      processorVersion?: string;
    }
    interface GoogleCloudDocumentaiV1beta3ProcessorVersionDeprecationInfo {
      /** The time at which this processor version will be deprecated. */
      deprecationTime?: string;
      /** If set, the processor version that will be used as a replacement. */
      replacementProcessorVersion?: string;
    }
    interface GoogleCloudDocumentaiV1beta3ProcessorVersionGenAiModelInfo {
      /** Information for a custom Generative AI model created by the user. */
      customGenAiModelInfo?: GoogleCloudDocumentaiV1beta3ProcessorVersionGenAiModelInfoCustomGenAiModelInfo;
      /** Information for a pretrained Google-managed foundation model. */
      foundationGenAiModelInfo?: GoogleCloudDocumentaiV1beta3ProcessorVersionGenAiModelInfoFoundationGenAiModelInfo;
    }
    interface GoogleCloudDocumentaiV1beta3ProcessorVersionGenAiModelInfoCustomGenAiModelInfo {
      /** The base processor version ID for the custom model. */
      baseProcessorVersionId?: string;
      /** The type of custom model created by the user. */
      customModelType?: string;
    }
    interface GoogleCloudDocumentaiV1beta3ProcessorVersionGenAiModelInfoFoundationGenAiModelInfo {
      /** Whether finetuning is allowed for this base processor version. */
      finetuningAllowed?: boolean;
      /** The minimum number of labeled documents in the training dataset required for finetuning. */
      minTrainLabeledDocuments?: number;
    }
    interface GoogleCloudDocumentaiV1beta3ProcessRequest {
      /** The document payload, the content and mime_type fields must be set. */
      document?: GoogleCloudDocumentaiV1beta3Document;
      /** Specifies which fields to include in the ProcessResponse.document output. Only supports top-level document and pages field, so it must be in the form of `{document_field_name}` or `pages.{page_field_name}`. */
      fieldMask?: string;
      /** A raw document on Google Cloud Storage. */
      gcsDocument?: GoogleCloudDocumentaiV1beta3GcsDocument;
      /** Optional. Option to remove images from the document. */
      imagelessMode?: boolean;
      /** An inline document proto. */
      inlineDocument?: GoogleCloudDocumentaiV1beta3Document;
      /** Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. */
      labels?: {[P in string]: string};
      /** Inference-time options for the process API */
      processOptions?: GoogleCloudDocumentaiV1beta3ProcessOptions;
      /** A raw document content (bytes). */
      rawDocument?: GoogleCloudDocumentaiV1beta3RawDocument;
      /** Whether human review should be skipped for this request. Default to `false`. */
      skipHumanReview?: boolean;
    }
    interface GoogleCloudDocumentaiV1beta3ProcessResponse {
      /** The document payload, will populate fields based on the processor's behavior. */
      document?: GoogleCloudDocumentaiV1beta3Document;
      /** The name of the operation triggered by the processed document. If the human review process isn't triggered, this field is empty. It has the same response type and metadata as the long-running operation returned by ReviewDocument. */
      humanReviewOperation?: string;
      /** The status of human review on the processed document. */
      humanReviewStatus?: GoogleCloudDocumentaiV1beta3HumanReviewStatus;
    }
    interface GoogleCloudDocumentaiV1beta3PropertyMetadata {
      /** Field extraction metadata on the property. */
      fieldExtractionMetadata?: GoogleCloudDocumentaiV1beta3FieldExtractionMetadata;
      /** Whether the property should be considered as "inactive". */
      inactive?: boolean;
    }
    interface GoogleCloudDocumentaiV1beta3RawDocument {
      /** Inline document content. */
      content?: string;
      /** The display name of the document, it supports all Unicode characters except the following: `*`, `?`, `[`, `]`, `%`, `{`, `}`,`'`, `\"`, `,` `~`, `=` and `:` are reserved. If not specified, a default ID is generated. */
      displayName?: string;
      /** An IANA MIME type (RFC6838) indicating the nature and format of the content. */
      mimeType?: string;
    }
    interface GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
      /** The creation time of the operation. */
      createTime?: string;
      /** The Crowd Compute question ID. */
      questionId?: string;
      /** Used only when Operation.done is false. */
      state?: string;
      /** A message providing more details about the current state of processing. For example, the error message if the operation is failed. */
      stateMessage?: string;
      /** The last update time of the operation. */
      updateTime?: string;
    }
    interface GoogleCloudDocumentaiV1beta3ReviewDocumentRequest {
      /** The document that needs human review. */
      document?: GoogleCloudDocumentaiV1beta3Document;
      /** The document schema of the human review task. */
      documentSchema?: GoogleCloudDocumentaiV1beta3DocumentSchema;
      /** Whether the validation should be performed on the ad-hoc review request. */
      enableSchemaValidation?: boolean;
      /** An inline document proto. */
      inlineDocument?: GoogleCloudDocumentaiV1beta3Document;
      /** The priority of the human review task. */
      priority?: string;
    }
    interface GoogleCloudDocumentaiV1beta3ReviewDocumentResponse {
      /** The Cloud Storage uri for the human reviewed document if the review is succeeded. */
      gcsDestination?: string;
      /** The reason why the review is rejected by reviewer. */
      rejectionReason?: string;
      /** The state of the review operation. */
      state?: string;
    }
    interface GoogleCloudDocumentaiV1beta3RevisionRef {
      /** Reads the revision generated by the processor version. The format takes the full resource name of processor version. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}` */
      latestProcessorVersion?: string;
      /** Reads the revision by the predefined case. */
      revisionCase?: string;
      /** Reads the revision given by the id. */
      revisionId?: string;
    }
    interface GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionRequest {
      /** Required. The resource name of child ProcessorVersion to use as default. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{version}` */
      defaultProcessorVersion?: string;
    }
    interface GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse {}
    interface GoogleCloudDocumentaiV1beta3SummaryOptions {
      /** The format the summary should be in. */
      format?: string;
      /** How long the summary should be. */
      length?: string;
    }
    interface GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
      /** The test dataset validation information. */
      testDatasetValidation?: GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation;
      /** The training dataset validation information. */
      trainingDatasetValidation?: GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation;
    }
    interface GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation {
      /** The total number of dataset errors. */
      datasetErrorCount?: number;
      /** Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training. */
      datasetErrors?: GoogleRpcStatus[];
      /** The total number of document errors. */
      documentErrorCount?: number;
      /** Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training. */
      documentErrors?: GoogleRpcStatus[];
    }
    interface GoogleCloudDocumentaiV1beta3TrainProcessorVersionRequest {
      /** Optional. The processor version to use as a base for training. This processor version must be a child of `parent`. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`. */
      baseProcessorVersion?: string;
      /** Options to control Custom Document Extraction (CDE) Processor. */
      customDocumentExtractionOptions?: GoogleCloudDocumentaiV1beta3TrainProcessorVersionRequestCustomDocumentExtractionOptions;
      /** Optional. The schema the processor version will be trained with. */
      documentSchema?: GoogleCloudDocumentaiV1beta3DocumentSchema;
      /** Options to control foundation model tuning of a processor. */
      foundationModelTuningOptions?: GoogleCloudDocumentaiV1beta3TrainProcessorVersionRequestFoundationModelTuningOptions;
      /** Optional. The input data used to train the ProcessorVersion. */
      inputData?: GoogleCloudDocumentaiV1beta3TrainProcessorVersionRequestInputData;
      /** Required. The processor version to be created. */
      processorVersion?: GoogleCloudDocumentaiV1beta3ProcessorVersion;
    }
    interface GoogleCloudDocumentaiV1beta3TrainProcessorVersionRequestCustomDocumentExtractionOptions {
      /** Training method to use for CDE training. */
      trainingMethod?: string;
    }
    interface GoogleCloudDocumentaiV1beta3TrainProcessorVersionRequestFoundationModelTuningOptions {
      /** Optional. The multiplier to apply to the recommended learning rate. Valid values are between 0.1 and 10. If not provided, recommended learning rate will be used. */
      learningRateMultiplier?: number;
      /** Optional. The number of steps to run for model tuning. Valid values are between 1 and 400. If not provided, recommended steps will be used. */
      trainSteps?: number;
    }
    interface GoogleCloudDocumentaiV1beta3TrainProcessorVersionRequestInputData {
      /** The documents used for testing the trained version. */
      testDocuments?: GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig;
      /** The documents used for training the new version. */
      trainingDocuments?: GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig;
    }
    interface GoogleCloudDocumentaiV1beta3TrainProcessorVersionResponse {
      /** The resource name of the processor version produced by training. */
      processorVersion?: string;
    }
    interface GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1beta3UndeployProcessorVersionRequest {}
    interface GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse {}
    interface GoogleCloudDocumentaiV1beta3UpdateDatasetOperationMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1beta3CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1beta3Vertex {
      /** X coordinate. */
      x?: number;
      /** Y coordinate (starts from the top of the image). */
      y?: number;
    }
    interface GoogleCloudDocumentaiV1CommonOperationMetadata {
      /** The creation time of the operation. */
      createTime?: string;
      /** A related resource to this operation. */
      resource?: string;
      /** The state of the operation. */
      state?: string;
      /** A message providing more details about the current state of processing. */
      stateMessage?: string;
      /** The last update time of the operation. */
      updateTime?: string;
    }
    interface GoogleCloudDocumentaiV1DeleteProcessorMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1DeployProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1DeployProcessorVersionResponse {}
    interface GoogleCloudDocumentaiV1DisableProcessorMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1DisableProcessorResponse {}
    interface GoogleCloudDocumentaiV1EnableProcessorMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1EnableProcessorResponse {}
    interface GoogleCloudDocumentaiV1EvaluateProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1EvaluateProcessorVersionResponse {
      /** The resource name of the created evaluation. */
      evaluation?: string;
    }
    interface GoogleCloudDocumentaiV1HumanReviewStatus {
      /** The name of the operation triggered by the processed document. This field is populated only when the state is `HUMAN_REVIEW_IN_PROGRESS`. It has the same response type and metadata as the long-running operation returned by ReviewDocument. */
      humanReviewOperation?: string;
      /** The state of human review on the processing request. */
      state?: string;
      /** A message providing more details about the human review state. */
      stateMessage?: string;
    }
    interface GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
      /** The Crowd Compute question ID. */
      questionId?: string;
    }
    interface GoogleCloudDocumentaiV1ReviewDocumentResponse {
      /** The Cloud Storage uri for the human reviewed document if the review is succeeded. */
      gcsDestination?: string;
      /** The reason why the review is rejected by reviewer. */
      rejectionReason?: string;
      /** The state of the review operation. */
      state?: string;
    }
    interface GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse {}
    interface GoogleCloudDocumentaiV1TrainProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
      /** The test dataset validation information. */
      testDatasetValidation?: GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation;
      /** The training dataset validation information. */
      trainingDatasetValidation?: GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation;
    }
    interface GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation {
      /** The total number of dataset errors. */
      datasetErrorCount?: number;
      /** Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training. */
      datasetErrors?: GoogleRpcStatus[];
      /** The total number of document errors. */
      documentErrorCount?: number;
      /** Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training. */
      documentErrors?: GoogleRpcStatus[];
    }
    interface GoogleCloudDocumentaiV1TrainProcessorVersionResponse {
      /** The resource name of the processor version produced by training. */
      processorVersion?: string;
    }
    interface GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata {
      /** The basic metadata of the long-running operation. */
      commonMetadata?: GoogleCloudDocumentaiV1CommonOperationMetadata;
    }
    interface GoogleCloudDocumentaiV1UndeployProcessorVersionResponse {}
    interface GoogleCloudLocationListLocationsResponse {
      /** A list of locations that matches the specified filter in the request. */
      locations?: GoogleCloudLocationLocation[];
      /** The standard List next-page token. */
      nextPageToken?: string;
    }
    interface GoogleCloudLocationLocation {
      /** The friendly name for this location, typically a nearby city name. For example, "Tokyo". */
      displayName?: string;
      /** Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"} */
      labels?: {[P in string]: string};
      /** The canonical id for this location. For example: `"us-east1"`. */
      locationId?: string;
      /** Service-specific metadata. For example the available capacity at the given location. */
      metadata?: {[P in string]: any};
      /** Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"` */
      name?: string;
    }
    interface GoogleLongrunningListOperationsResponse {
      /** The standard List next-page token. */
      nextPageToken?: string;
      /** A list of operations that matches the specified filter in the request. */
      operations?: GoogleLongrunningOperation[];
    }
    interface GoogleLongrunningOperation {
      /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
      done?: boolean;
      /** The error result of the operation in case of failure or cancellation. */
      error?: GoogleRpcStatus;
      /** Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any. */
      metadata?: {[P in string]: any};
      /** The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`. */
      name?: string;
      /** The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`. */
      response?: {[P in string]: any};
    }
    interface GoogleProtobufEmpty {}
    interface GoogleRpcStatus {
      /** The status code, which should be an enum value of google.rpc.Code. */
      code?: number;
      /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
      details?: Array<{[P in string]: any}>;
      /** A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client. */
      message?: string;
    }
    interface GoogleTypeColor {
      /** The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0). */
      alpha?: number;
      /** The amount of blue in the color as a value in the interval [0, 1]. */
      blue?: number;
      /** The amount of green in the color as a value in the interval [0, 1]. */
      green?: number;
      /** The amount of red in the color as a value in the interval [0, 1]. */
      red?: number;
    }
    interface GoogleTypeDate {
      /** Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. */
      day?: number;
      /** Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. */
      month?: number;
      /** Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. */
      year?: number;
    }
    interface GoogleTypeDateTime {
      /** Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day. */
      day?: number;
      /** Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value "24:00:00" for scenarios like business closing time. */
      hours?: number;
      /** Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0. */
      minutes?: number;
      /** Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month. */
      month?: number;
      /** Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0. */
      nanos?: number;
      /** Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds. */
      seconds?: number;
      /** Time zone. */
      timeZone?: GoogleTypeTimeZone;
      /** UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }. */
      utcOffset?: string;
      /** Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year. */
      year?: number;
    }
    interface GoogleTypeMoney {
      /** The three-letter currency code defined in ISO 4217. */
      currencyCode?: string;
      /** Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000. */
      nanos?: number;
      /** The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar. */
      units?: string;
    }
    interface GoogleTypePostalAddress {
      /** Unstructured address lines describing the lower levels of an address. Because values in `address_lines` do not have type information and may sometimes contain multiple values in a single field (for example, "Austin, TX"), it is important that the line order is clear. The order of address lines should be "envelope order" for the country or region of the address. In places where this can vary (for example, Japan), `address_language` is used to make it explicit (for example, "ja" for large-to-small ordering and "ja-Latn" or "en" for small-to-large). In this way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a `region_code` with all remaining information placed in the `address_lines`. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a `region_code` and `address_lines` and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas). */
      addressLines?: string[];
      /** Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. For Spain, this is the province and not the autonomous community (for example, "Barcelona" and not "Catalonia"). Many countries don't use an administrative area in postal addresses. For example, in Switzerland, this should be left unpopulated. */
      administrativeArea?: string;
      /** Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: "zh-Hant", "ja", "ja-Latn", "en". */
      languageCode?: string;
      /** Optional. Generally refers to the city or town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave `locality` empty and use `address_lines`. */
      locality?: string;
      /** Optional. The name of the organization at the address. */
      organization?: string;
      /** Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (for example, state or zip code validation in the United States). */
      postalCode?: string;
      /** Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain "care of" information. */
      recipients?: string[];
      /** Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See https://cldr.unicode.org/ and https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: "CH" for Switzerland. */
      regionCode?: string;
      /** The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions. */
      revision?: number;
      /** Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like "CEDEX", optionally followed by a number (for example, "CEDEX 7"), or just a number alone, representing the "sector code" (Jamaica), "delivery area indicator" (Malawi) or "post office indicator" (Côte d'Ivoire). */
      sortingCode?: string;
      /** Optional. Sublocality of the address. For example, this can be a neighborhood, borough, or district. */
      sublocality?: string;
    }
    interface GoogleTypeTimeZone {
      /** IANA Time Zone Database time zone. For example "America/New_York". */
      id?: string;
      /** Optional. IANA Time Zone Database version number. For example "2019a". */
      version?: string;
    }
    interface OperationsResource {
      /** Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`. */
      cancel(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource to be cancelled. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface DatasetResource {
      /** Deletes a set of documents. */
      batchDeleteDocuments(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The dataset resource name. Format: projects/{project}/locations/{location}/processors/{processor}/dataset */
        dataset: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsRequest;
      }): Request<GoogleLongrunningOperation>;
      batchDeleteDocuments(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Required. The dataset resource name. Format: projects/{project}/locations/{location}/processors/{processor}/dataset */
          dataset: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Gets the `DatasetSchema` of a `Dataset`. */
      getDatasetSchema(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The dataset schema resource name. Format: projects/{project}/locations/{location}/processors/{processor}/dataset/datasetSchema */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** If set, only returns the visible fields of the schema. */
        visibleFieldsOnly?: boolean;
      }): Request<GoogleCloudDocumentaiV1beta3DatasetSchema>;
      /** Returns relevant fields present in the requested document. */
      getDocument(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The resource name of the dataset that the document belongs to . Format: projects/{project}/locations/{location}/processors/{processor}/dataset */
        dataset: string;
        /** Id of the document (indexed) managed by Content Warehouse. */
        'documentId.gcsManagedDocId.cwDocId'?: string;
        /** Required. The Cloud Storage URI where the actual document is stored. */
        'documentId.gcsManagedDocId.gcsUri'?: string;
        /** Reads the revision generated by the processor version. The format takes the full resource name of processor version. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}` */
        'documentId.revisionRef.latestProcessorVersion'?: string;
        /** Reads the revision by the predefined case. */
        'documentId.revisionRef.revisionCase'?: string;
        /** Reads the revision given by the id. */
        'documentId.revisionRef.revisionId'?: string;
        /** Required. The id of the document. */
        'documentId.unmanagedDocId.docId'?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Last page number (one-based index) to be returned. */
        'pageRange.end'?: number;
        /** First page number (one-based index) to be returned. */
        'pageRange.start'?: number;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** If set, only fields listed here will be returned. Otherwise, all fields will be returned by default. */
        readMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDocumentaiV1beta3GetDocumentResponse>;
      /** Import documents into a dataset. */
      importDocuments(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The dataset resource name. Format: projects/{project}/locations/{location}/processors/{processor}/dataset */
        dataset: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3ImportDocumentsRequest;
      }): Request<GoogleLongrunningOperation>;
      importDocuments(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Required. The dataset resource name. Format: projects/{project}/locations/{location}/processors/{processor}/dataset */
          dataset: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3ImportDocumentsRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Returns a list of documents present in the dataset. */
      listDocuments(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Required. The resource name of the dataset to be listed. Format: projects/{project}/locations/{location}/processors/{processor}/dataset */
        dataset: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3ListDocumentsRequest;
      }): Request<GoogleCloudDocumentaiV1beta3ListDocumentsResponse>;
      listDocuments(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Required. The resource name of the dataset to be listed. Format: projects/{project}/locations/{location}/processors/{processor}/dataset */
          dataset: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3ListDocumentsRequest,
      ): Request<GoogleCloudDocumentaiV1beta3ListDocumentsResponse>;
      /** Updates a `DatasetSchema`. */
      updateDatasetSchema(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Dataset schema resource name. Format: `projects/{project}/locations/{location}/processors/{processor}/dataset/datasetSchema` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** The update mask applies to the resource. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3DatasetSchema;
      }): Request<GoogleCloudDocumentaiV1beta3DatasetSchema>;
      updateDatasetSchema(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Dataset schema resource name. Format: `projects/{project}/locations/{location}/processors/{processor}/dataset/datasetSchema` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** The update mask applies to the resource. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3DatasetSchema,
      ): Request<GoogleCloudDocumentaiV1beta3DatasetSchema>;
    }
    interface HumanReviewConfigResource {
      /** Send a document for Human Review. The input document should be processed by the specified processor. */
      reviewDocument(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Required. The resource name of the HumanReviewConfig that the document will be reviewed with. */
        humanReviewConfig: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3ReviewDocumentRequest;
      }): Request<GoogleLongrunningOperation>;
      reviewDocument(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Required. The resource name of the HumanReviewConfig that the document will be reviewed with. */
          humanReviewConfig: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3ReviewDocumentRequest,
      ): Request<GoogleLongrunningOperation>;
    }
    interface EvaluationsResource {
      /** Retrieves a specific evaluation. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Evaluation to get. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}/evaluations/{evaluation}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDocumentaiV1beta3Evaluation>;
      /** Retrieves a set of evaluations for a given processor version. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. If unspecified, at most `5` evaluations are returned. The maximum value is `100`. Values above `100` are coerced to `100`. */
        pageSize?: number;
        /** A page token, received from a previous `ListEvaluations` call. Provide this to retrieve the subsequent page. */
        pageToken?: string;
        /** Required. The resource name of the ProcessorVersion to list evaluations for. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDocumentaiV1beta3ListEvaluationsResponse>;
    }
    interface ProcessorVersionsResource {
      /** LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format. */
      batchProcess(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3BatchProcessRequest;
      }): Request<GoogleLongrunningOperation>;
      batchProcess(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3BatchProcessRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes the processor version, all artifacts under the processor version will be deleted. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The processor version resource name to be deleted. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Deploys the processor version. */
      deploy(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The processor version resource name to be deployed. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3DeployProcessorVersionRequest;
      }): Request<GoogleLongrunningOperation>;
      deploy(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The processor version resource name to be deployed. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3DeployProcessorVersionRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Evaluates a ProcessorVersion against annotated documents, producing an Evaluation. */
      evaluateProcessorVersion(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Required. The resource name of the ProcessorVersion to evaluate. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}` */
        processorVersion: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionRequest;
      }): Request<GoogleLongrunningOperation>;
      evaluateProcessorVersion(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Required. The resource name of the ProcessorVersion to evaluate. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}` */
          processorVersion: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Gets a processor version detail. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The processor resource name. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDocumentaiV1beta3ProcessorVersion>;
      /** Imports a processor version from source processor version. */
      importProcessorVersion(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The destination processor name to create the processor version in. Format: `projects/{project}/locations/{location}/processors/{processor}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3ImportProcessorVersionRequest;
      }): Request<GoogleLongrunningOperation>;
      importProcessorVersion(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The destination processor name to create the processor version in. Format: `projects/{project}/locations/{location}/processors/{processor}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3ImportProcessorVersionRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Lists all versions of a processor. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of processor versions to return. If unspecified, at most `10` processor versions will be returned. The maximum value is `20`. Values above `20` will be coerced to `20`. */
        pageSize?: number;
        /** We will return the processor versions sorted by creation time. The page token will point to the next processor version. */
        pageToken?: string;
        /** Required. The parent (project, location and processor) to list all versions. Format: `projects/{project}/locations/{location}/processors/{processor}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDocumentaiV1beta3ListProcessorVersionsResponse>;
      /** Processes a single document. */
      process(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3ProcessRequest;
      }): Request<GoogleCloudDocumentaiV1beta3ProcessResponse>;
      process(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3ProcessRequest,
      ): Request<GoogleCloudDocumentaiV1beta3ProcessResponse>;
      /** Trains a new processor version. Operation metadata is returned as TrainProcessorVersionMetadata. */
      train(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent (project, location and processor) to create the new version for. Format: `projects/{project}/locations/{location}/processors/{processor}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3TrainProcessorVersionRequest;
      }): Request<GoogleLongrunningOperation>;
      train(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent (project, location and processor) to create the new version for. Format: `projects/{project}/locations/{location}/processors/{processor}`. */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3TrainProcessorVersionRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Undeploys the processor version. */
      undeploy(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The processor version resource name to be undeployed. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3UndeployProcessorVersionRequest;
      }): Request<GoogleLongrunningOperation>;
      undeploy(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The processor version resource name to be undeployed. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3UndeployProcessorVersionRequest,
      ): Request<GoogleLongrunningOperation>;
      evaluations: EvaluationsResource;
    }
    interface ProcessorsResource {
      /** LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format. */
      batchProcess(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3BatchProcessRequest;
      }): Request<GoogleLongrunningOperation>;
      batchProcess(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3BatchProcessRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Creates a processor from the ProcessorType provided. The processor will be at `ENABLED` state by default after its creation. Note that this method requires the `documentai.processors.create` permission on the project, which is highly privileged. A user or service account with this permission can create new processors that can interact with any gcs bucket in your project. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent (project and location) under which to create the processor. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3Processor;
      }): Request<GoogleCloudDocumentaiV1beta3Processor>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent (project and location) under which to create the processor. Format: `projects/{project}/locations/{location}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3Processor,
      ): Request<GoogleCloudDocumentaiV1beta3Processor>;
      /** Deletes the processor, unloads all deployed model artifacts if it was enabled and then deletes all artifacts associated with this processor. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The processor resource name to be deleted. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Disables a processor */
      disable(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The processor resource name to be disabled. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3DisableProcessorRequest;
      }): Request<GoogleLongrunningOperation>;
      disable(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The processor resource name to be disabled. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3DisableProcessorRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Enables a processor */
      enable(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The processor resource name to be enabled. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3EnableProcessorRequest;
      }): Request<GoogleLongrunningOperation>;
      enable(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The processor resource name to be enabled. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3EnableProcessorRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Gets a processor detail. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The processor resource name. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDocumentaiV1beta3Processor>;
      /** Lists all processors which belong to this project. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of processors to return. If unspecified, at most `50` processors will be returned. The maximum value is `100`. Values above `100` will be coerced to `100`. */
        pageSize?: number;
        /** We will return the processors sorted by creation time. The page token will point to the next processor. */
        pageToken?: string;
        /** Required. The parent (project and location) which owns this collection of Processors. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDocumentaiV1beta3ListProcessorsResponse>;
      /** Processes a single document. */
      process(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3ProcessRequest;
      }): Request<GoogleCloudDocumentaiV1beta3ProcessResponse>;
      process(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3ProcessRequest,
      ): Request<GoogleCloudDocumentaiV1beta3ProcessResponse>;
      /** Set the default (active) version of a Processor that will be used in ProcessDocument and BatchProcessDocuments. */
      setDefaultProcessorVersion(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Required. The resource name of the Processor to change default version. */
        processor: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionRequest;
      }): Request<GoogleLongrunningOperation>;
      setDefaultProcessorVersion(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Required. The resource name of the Processor to change default version. */
          processor: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Updates metadata associated with a dataset. Note that this method requires the `documentai.googleapis.com/datasets.update` permission on the project, which is highly privileged. A user or service account with this permission can create new processors that can interact with any gcs bucket in your project. */
      updateDataset(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Dataset resource name. Format: `projects/{project}/locations/{location}/processors/{processor}/dataset` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** The update mask applies to the resource. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudDocumentaiV1beta3Dataset;
      }): Request<GoogleLongrunningOperation>;
      updateDataset(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Dataset resource name. Format: `projects/{project}/locations/{location}/processors/{processor}/dataset` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** The update mask applies to the resource. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudDocumentaiV1beta3Dataset,
      ): Request<GoogleLongrunningOperation>;
      dataset: DatasetResource;
      humanReviewConfig: HumanReviewConfigResource;
      processorVersions: ProcessorVersionsResource;
    }
    interface ProcessorTypesResource {
      /** Gets a processor type detail. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The processor type resource name. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDocumentaiV1beta3ProcessorType>;
      /** Lists the processor types that exist. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of processor types to return. If unspecified, at most `100` processor types will be returned. The maximum value is `500`. Values above `500` will be coerced to `500`. */
        pageSize?: number;
        /** Used to retrieve the next page of results, empty if at the end of the list. */
        pageToken?: string;
        /** Required. The location of processor types to list. Format: `projects/{project}/locations/{location}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDocumentaiV1beta3ListProcessorTypesResponse>;
    }
    interface LocationsResource {
      /** Fetches processor types. Note that we don't use ListProcessorTypes here, because it isn't paginated. */
      fetchProcessorTypes(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The location of processor types to list. Format: `projects/{project}/locations/{location}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudDocumentaiV1beta3FetchProcessorTypesResponse>;
      /** Gets information about a location. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Resource name for the location. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudLocationLocation>;
      /** Lists information about the supported locations for this service. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Optional. A list of extra location types that should be used as conditions for controlling the visibility of the locations. */
        extraLocationTypes?: string | string[];
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160). */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource that owns the locations collection, if applicable. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of results to return. If not set, the service selects a default. */
        pageSize?: number;
        /** A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudLocationListLocationsResponse>;
      operations: OperationsResource;
      processors: ProcessorsResource;
      processorTypes: ProcessorTypesResource;
    }
    interface ProjectsResource {
      locations: LocationsResource;
    }

    const projects: ProjectsResource;
  }
}
