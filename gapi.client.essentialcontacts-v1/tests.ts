/* This is stub file for gapi.client.essentialcontacts-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20230419

gapi.load('client', async () => {
    /** now we can use gapi.client */

    await gapi.client.load('https://essentialcontacts.googleapis.com/$discovery/rest?version=v1');
    /** now we can use gapi.client.essentialcontacts */

    /** don't forget to authenticate your client before sending any request to resources: */
    /** declare client_id registered in Google Developers Console */
    const client_id = '<<PUT YOUR CLIENT ID HERE>>';
    const scope = [
        /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
        'https://www.googleapis.com/auth/cloud-platform',
    ];
    const immediate = false;
    gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
        if (authResult && !authResult.error) {
            /** handle successful authorization */
            run();
        } else {
            /** handle authorization error */
        }
    });

    async function run() {
        /** Lists all contacts for the resource that are subscribed to the specified notification categories, including contacts inherited from any parent resources. */
        await gapi.client.essentialcontacts.folders.contacts.compute({
            notificationCategories: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Adds a new contact for a resource. */
        await gapi.client.essentialcontacts.folders.contacts.create({
            parent: "Test string",
        }, {
            email: "Test string",
            languageTag: "Test string",
            name: "Test string",
            notificationCategorySubscriptions: [
                "Test string"
            ],
            validateTime: "Test string",
            validationState: "Test string",
        });
        /** Deletes a contact. */
        await gapi.client.essentialcontacts.folders.contacts.delete({
            name: "Test string",
        });
        /** Gets a single contact. */
        await gapi.client.essentialcontacts.folders.contacts.get({
            name: "Test string",
        });
        /** Lists the contacts that have been set on a resource. */
        await gapi.client.essentialcontacts.folders.contacts.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a contact. Note: A contact's email address cannot be changed. */
        await gapi.client.essentialcontacts.folders.contacts.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            email: "Test string",
            languageTag: "Test string",
            name: "Test string",
            notificationCategorySubscriptions: [
                "Test string"
            ],
            validateTime: "Test string",
            validationState: "Test string",
        });
        /** Allows a contact admin to send a test message to contact to verify that it has been configured correctly. */
        await gapi.client.essentialcontacts.folders.contacts.sendTestMessage({
            resource: "Test string",
        }, {
            contacts: [
                "Test string"
            ],
            notificationCategory: "Test string",
        });
        /** Lists all contacts for the resource that are subscribed to the specified notification categories, including contacts inherited from any parent resources. */
        await gapi.client.essentialcontacts.organizations.contacts.compute({
            notificationCategories: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Adds a new contact for a resource. */
        await gapi.client.essentialcontacts.organizations.contacts.create({
            parent: "Test string",
        }, {
            email: "Test string",
            languageTag: "Test string",
            name: "Test string",
            notificationCategorySubscriptions: [
                "Test string"
            ],
            validateTime: "Test string",
            validationState: "Test string",
        });
        /** Deletes a contact. */
        await gapi.client.essentialcontacts.organizations.contacts.delete({
            name: "Test string",
        });
        /** Gets a single contact. */
        await gapi.client.essentialcontacts.organizations.contacts.get({
            name: "Test string",
        });
        /** Lists the contacts that have been set on a resource. */
        await gapi.client.essentialcontacts.organizations.contacts.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a contact. Note: A contact's email address cannot be changed. */
        await gapi.client.essentialcontacts.organizations.contacts.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            email: "Test string",
            languageTag: "Test string",
            name: "Test string",
            notificationCategorySubscriptions: [
                "Test string"
            ],
            validateTime: "Test string",
            validationState: "Test string",
        });
        /** Allows a contact admin to send a test message to contact to verify that it has been configured correctly. */
        await gapi.client.essentialcontacts.organizations.contacts.sendTestMessage({
            resource: "Test string",
        }, {
            contacts: [
                "Test string"
            ],
            notificationCategory: "Test string",
        });
        /** Lists all contacts for the resource that are subscribed to the specified notification categories, including contacts inherited from any parent resources. */
        await gapi.client.essentialcontacts.projects.contacts.compute({
            notificationCategories: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Adds a new contact for a resource. */
        await gapi.client.essentialcontacts.projects.contacts.create({
            parent: "Test string",
        }, {
            email: "Test string",
            languageTag: "Test string",
            name: "Test string",
            notificationCategorySubscriptions: [
                "Test string"
            ],
            validateTime: "Test string",
            validationState: "Test string",
        });
        /** Deletes a contact. */
        await gapi.client.essentialcontacts.projects.contacts.delete({
            name: "Test string",
        });
        /** Gets a single contact. */
        await gapi.client.essentialcontacts.projects.contacts.get({
            name: "Test string",
        });
        /** Lists the contacts that have been set on a resource. */
        await gapi.client.essentialcontacts.projects.contacts.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a contact. Note: A contact's email address cannot be changed. */
        await gapi.client.essentialcontacts.projects.contacts.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            email: "Test string",
            languageTag: "Test string",
            name: "Test string",
            notificationCategorySubscriptions: [
                "Test string"
            ],
            validateTime: "Test string",
            validationState: "Test string",
        });
        /** Allows a contact admin to send a test message to contact to verify that it has been configured correctly. */
        await gapi.client.essentialcontacts.projects.contacts.sendTestMessage({
            resource: "Test string",
        }, {
            contacts: [
                "Test string"
            ],
            notificationCategory: "Test string",
        });
    }
});
