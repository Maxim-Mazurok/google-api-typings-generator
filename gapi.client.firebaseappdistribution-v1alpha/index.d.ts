/* Type definitions for non-npm package Firebase App Distribution API v1alpha 0.0 */
// Project: https://firebase.google.com/products/app-distribution
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://firebaseappdistribution.googleapis.com/$discovery/rest?version=v1alpha
// Revision: 20240313

/// <reference types="gapi.client" />

declare namespace gapi.client {
  /** Load Firebase App Distribution API v1alpha */
  function load(
    urlOrObject: 'https://firebaseappdistribution.googleapis.com/$discovery/rest?version=v1alpha'
  ): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(
    name: 'firebaseappdistribution',
    version: 'v1alpha'
  ): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(
    name: 'firebaseappdistribution',
    version: 'v1alpha',
    callback: () => any
  ): void;

  namespace firebaseappdistribution {
    interface GoogleFirebaseAppdistroV1alphaAabCertificate {
      /** MD5 hash of the certificate used to resign the AAB */
      certificateHashMd5?: string;
      /** SHA1 hash of the certificate used to resign the AAB */
      certificateHashSha1?: string;
      /** SHA256 hash of the certificate used to resign the AAB */
      certificateHashSha256?: string;
    }
    interface GoogleFirebaseAppdistroV1alphaApp {
      /** App bundle test certificate generated for the app. */
      aabCertificate?: GoogleFirebaseAppdistroV1alphaAabCertificate;
      /** App bundle state. Only valid for android apps. The app_view field in the request must be set to FULL in order for this to be populated. */
      aabState?: string;
      /** Firebase gmp app id */
      appId?: string;
      /** Bundle identifier */
      bundleId?: string;
      /** Developer contact email for testers to reach out to about privacy or support issues. */
      contactEmail?: string;
      /** iOS or Android */
      platform?: string;
      /** Project number of the Firebase project, for example 300830567303. */
      projectNumber?: string;
    }
    interface GoogleFirebaseAppdistroV1alphaAppCrash {
      /** Output only. The message associated with the crash. */
      message?: string;
      /** Output only. The raw stack trace. */
      stackTrace?: string;
    }
    interface GoogleFirebaseAppdistroV1alphaCreateReleaseNotesRequest {
      /** The actual release notes body from the user */
      releaseNotes?: GoogleFirebaseAppdistroV1alphaReleaseNotes;
    }
    interface GoogleFirebaseAppdistroV1alphaCreateReleaseNotesResponse {}
    interface GoogleFirebaseAppdistroV1alphaDeviceExecution {
      /** Output only. An app crash, if any occurred during the test. */
      appCrash?: GoogleFirebaseAppdistroV1alphaAppCrash;
      /** Output only. A URI to an image of the Robo crawl graph. */
      crawlGraphUri?: string;
      /** Required. The device that the test was run on. */
      device?: GoogleFirebaseAppdistroV1alphaTestDevice;
      /** Output only. The reason why the test failed. */
      failedReason?: string;
      /** Output only. The reason why the test was inconclusive. */
      inconclusiveReason?: string;
      /** Output only. The path to a directory in Cloud Storage that will eventually contain the results for this execution. For example, gs://bucket/Nexus5-18-en-portrait. */
      resultsStoragePath?: string;
      /** Output only. The statistics collected during the Robo test. */
      roboStats?: GoogleFirebaseAppdistroV1alphaRoboStats;
      /** Output only. A list of screenshot image URIs taken from the Robo crawl. The file names are numbered by the order in which they were taken. */
      screenshotUris?: string[];
      /** Output only. The state of the test. */
      state?: string;
      /** Output only. A URI to a video of the test run. */
      videoUri?: string;
    }
    interface GoogleFirebaseAppdistroV1alphaEnableAccessOnReleaseRequest {
      /** Optional. Ignored. Used to be build version of the app release if an instance identifier was provided for the release_id. */
      buildVersion?: string;
      /** Optional. Ignored. Used to be display version of the app release if an instance identifier was provided for the release_id. */
      displayVersion?: string;
      /** Optional. An email address which should get access to this release, for example rebeccahe@google.com */
      emails?: string[];
      /** Optional. A repeated list of group aliases to enable access to a release for Note: This field is misnamed, but can't be changed because we need to maintain compatibility with old build tools */
      groupIds?: string[];
    }
    interface GoogleFirebaseAppdistroV1alphaEnableAccessOnReleaseResponse {}
    interface GoogleFirebaseAppdistroV1alphaGetReleaseByUploadHashResponse {
      /** Release object */
      release?: GoogleFirebaseAppdistroV1alphaRelease;
    }
    interface GoogleFirebaseAppdistroV1alphaGetTesterUdidsResponse {
      /** The UDIDs of tester iOS devices in a project */
      testerUdids?: GoogleFirebaseAppdistroV1alphaTesterUdid[];
    }
    interface GoogleFirebaseAppdistroV1alphaGetUploadStatusResponse {
      /** The error code associated with (only set on "FAILURE") */
      errorCode?: string;
      /** Any additional context for the given upload status (e.g. error message) Meant to be displayed to the client */
      message?: string;
      /** The release that was created from the upload (only set on "SUCCESS") */
      release?: GoogleFirebaseAppdistroV1alphaRelease;
      /** The status of the upload */
      status?: string;
    }
    interface GoogleFirebaseAppdistroV1alphaJwt {
      token?: string;
    }
    interface GoogleFirebaseAppdistroV1alphaListReleaseTestsResponse {
      /** A short-lived token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** The tests listed. */
      releaseTests?: GoogleFirebaseAppdistroV1alphaReleaseTest[];
    }
    interface GoogleFirebaseAppdistroV1alphaLoginCredential {
      /** Optional. Hints to the crawler for identifying input fields */
      fieldHints?: GoogleFirebaseAppdistroV1alphaLoginCredentialFieldHints;
      /** Optional. Are these credentials for Google? */
      google?: boolean;
      /** Optional. Password for automated tests */
      password?: string;
      /** Optional. Username for automated tests */
      username?: string;
    }
    interface GoogleFirebaseAppdistroV1alphaLoginCredentialFieldHints {
      /** Required. The Android resource name of the password UI element. For example, in Java: R.string.foo in xml: @string/foo Only the "foo" part is needed. Reference doc: https://developer.android.com/guide/topics/resources/accessing-resources.html */
      passwordResourceName?: string;
      /** Required. The Android resource name of the username UI element. For example, in Java: R.string.foo in xml: @string/foo Only the "foo" part is needed. Reference doc: https://developer.android.com/guide/topics/resources/accessing-resources.html */
      usernameResourceName?: string;
    }
    interface GoogleFirebaseAppdistroV1alphaProvisionAppResponse {}
    interface GoogleFirebaseAppdistroV1alphaRelease {
      /** Release build version */
      buildVersion?: string;
      /** Release version */
      displayVersion?: string;
      /** Timestamp when the release was created */
      distributedAt?: string;
      /** Release Id */
      id?: string;
      /** Instance id of the release */
      instanceId?: string;
      /** Last activity timestamp */
      lastActivityAt?: string;
      /** Number of testers who have open invitations for the release */
      openInvitationCount?: number;
      /** unused. */
      receivedAt?: string;
      /** Release notes summary */
      releaseNotesSummary?: string;
      /** Count of testers added to the release */
      testerCount?: number;
      /** Number of testers who have installed the release */
      testerWithInstallCount?: number;
    }
    interface GoogleFirebaseAppdistroV1alphaReleaseNotes {
      releaseNotes?: string;
    }
    interface GoogleFirebaseAppdistroV1alphaReleaseTest {
      /** Output only. Timestamp when the test was run. */
      createTime?: string;
      /** Required. The results of the test on each device. */
      deviceExecutions?: GoogleFirebaseAppdistroV1alphaDeviceExecution[];
      /** Optional. Input only. Login credentials for the test. Input only. */
      loginCredential?: GoogleFirebaseAppdistroV1alphaLoginCredential;
      /** The name of the release test resource. Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}/tests/{test_id}` */
      name?: string;
    }
    interface GoogleFirebaseAppdistroV1alphaRoboCrawler {
      /** Optional. Login credential for automated tests */
      loginCredential?: GoogleFirebaseAppdistroV1alphaLoginCredential;
    }
    interface GoogleFirebaseAppdistroV1alphaRoboStats {
      /** Output only. Number of actions that crawler performed. */
      actionsPerformed?: number;
      /** Output only. Duration of crawl. */
      crawlDuration?: string;
      /** Output only. Number of distinct screens visited. */
      distinctVisitedScreens?: number;
      /** Output only. Whether the main activity crawl timed out. */
      mainActivityCrawlTimedOut?: boolean;
    }
    interface GoogleFirebaseAppdistroV1alphaTestConfig {
      /** Identifier. The name of the test configuration resource. Format: `projects/{project_number}/apps/{app_id}/testConfig` */
      name?: string;
      /** Optional. Configuration for Robo crawler */
      roboCrawler?: GoogleFirebaseAppdistroV1alphaRoboCrawler;
      /** Optional. Tests will be run on this list of devices */
      testDevices?: GoogleFirebaseAppdistroV1alphaTestDevice[];
    }
    interface GoogleFirebaseAppdistroV1alphaTestDevice {
      /** Optional. The locale of the device (e.g. "en_US" for US English) during the test. */
      locale?: string;
      /** Required. The device model. */
      model?: string;
      /** Optional. The orientation of the device during the test. */
      orientation?: string;
      /** Required. The version of the device (API level on Android). */
      version?: string;
    }
    interface GoogleFirebaseAppdistroV1alphaTesterUdid {
      /** The name of the tester's device */
      name?: string;
      /** The platform of the tester's device */
      platform?: string;
      /** The UDID of the tester's device */
      udid?: string;
    }
    interface GoogleFirebaseAppdistroV1Release {
      /** Output only. A signed link (which expires in one hour) to directly download the app binary (IPA/APK/AAB) file. */
      binaryDownloadUri?: string;
      /** Output only. Build version of the release. For an Android release, the build version is the `versionCode`. For an iOS release, the build version is the `CFBundleVersion`. */
      buildVersion?: string;
      /** Output only. The time the release was created. */
      createTime?: string;
      /** Output only. Display version of the release. For an Android release, the display version is the `versionName`. For an iOS release, the display version is the `CFBundleShortVersionString`. */
      displayVersion?: string;
      /** Output only. A link to the Firebase console displaying a single release. */
      firebaseConsoleUri?: string;
      /** The name of the release resource. Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}` */
      name?: string;
      /** Notes of the release. */
      releaseNotes?: GoogleFirebaseAppdistroV1ReleaseNotes;
      /** Output only. A link to the release in the tester web clip or Android app that lets testers (which were granted access to the app) view release notes and install the app onto their devices. */
      testingUri?: string;
    }
    interface GoogleFirebaseAppdistroV1ReleaseNotes {
      /** The text of the release notes. */
      text?: string;
    }
    interface GoogleFirebaseAppdistroV1UploadReleaseMetadata {}
    interface GoogleFirebaseAppdistroV1UploadReleaseResponse {
      /** Release associated with the uploaded binary. */
      release?: GoogleFirebaseAppdistroV1Release;
      /** Result of upload release. */
      result?: string;
    }
    interface Release_by_hashResource {
      /** GET Release by binary upload hash */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Unique id for a Firebase app of the format: {version}:{project_number}:{platform}:{hash(bundle_id)} Example: 1:581234567376:android:aa0a3c7b135e90289 */
        mobilesdkAppId: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** The hash for the upload */
        uploadHash: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleFirebaseAppdistroV1alphaGetReleaseByUploadHashResponse>;
    }
    interface NotesResource {
      /** Create release notes on a release. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Unique id for a Firebase app of the format: {version}:{project_number}:{platform}:{hash(bundle_id)} Example: 1:581234567376:android:aa0a3c7b135e90289 */
        mobilesdkAppId: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Release identifier */
        releaseId: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleFirebaseAppdistroV1alphaCreateReleaseNotesRequest;
      }): Request<{}>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Unique id for a Firebase app of the format: {version}:{project_number}:{platform}:{hash(bundle_id)} Example: 1:581234567376:android:aa0a3c7b135e90289 */
          mobilesdkAppId: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Release identifier */
          releaseId: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleFirebaseAppdistroV1alphaCreateReleaseNotesRequest
      ): Request<{}>;
    }
    interface ReleasesResource {
      /** Enable access on a release for testers. */
      enable_access(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Unique id for a Firebase app of the format: {version}:{project_number}:{platform}:{hash(bundle_id)} Example: 1:581234567376:android:aa0a3c7b135e90289 */
        mobilesdkAppId: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Release identifier */
        releaseId: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleFirebaseAppdistroV1alphaEnableAccessOnReleaseRequest;
      }): Request<{}>;
      enable_access(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Unique id for a Firebase app of the format: {version}:{project_number}:{platform}:{hash(bundle_id)} Example: 1:581234567376:android:aa0a3c7b135e90289 */
          mobilesdkAppId: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Release identifier */
          releaseId: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleFirebaseAppdistroV1alphaEnableAccessOnReleaseRequest
      ): Request<{}>;
      notes: NotesResource;
    }
    interface TestersResource {
      /** Get UDIDs of tester iOS devices in a project */
      getTesterUdids(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Unique id for a Firebase app of the format: {version}:{project_number}:{platform}:{hash(bundle_id)} Example: 1:581234567376:android:aa0a3c7b135e90289 */
        mobilesdkAppId: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** The name of the project, which is the parent of testers Format: `projects/{project_number}` */
        project?: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleFirebaseAppdistroV1alphaGetTesterUdidsResponse>;
    }
    interface Upload_statusResource {
      /** GET Binary upload status by token */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Unique id for a Firebase app of the format: {version}:{project_number}:{platform}:{hash(bundle_id)} Example: 1:581234567376:android:aa0a3c7b135e90289 */
        mobilesdkAppId: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** The token for the upload */
        uploadToken: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleFirebaseAppdistroV1alphaGetUploadStatusResponse>;
    }
    interface AppsResource {
      /** Get the app, if it exists */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** App view. When unset or set to BASIC, returns an App with everything set except for aab_state. When set to FULL, returns an App with aab_state set. */
        appView?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Unique id for a Firebase app of the format: {version}:{project_number}:{platform}:{hash(bundle_id)} Example: 1:581234567376:android:aa0a3c7b135e90289 */
        mobilesdkAppId: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleFirebaseAppdistroV1alphaApp>;
      /** Get a JWT token */
      getJwt(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Unique id for a Firebase app of the format: {version}:{project_number}:{platform}:{hash(bundle_id)} Example: 1:581234567376:android:aa0a3c7b135e90289 */
        mobilesdkAppId: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleFirebaseAppdistroV1alphaJwt>;
      /** Provision app distribution for an existing Firebase app, enabling it to subsequently be used by appdistro. */
      provisionApp(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Unique id for a Firebase app of the format: {version}:{project_number}:{platform}:{hash(bundle_id)} Example: 1:581234567376:android:aa0a3c7b135e90289 */
        mobilesdkAppId: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      release_by_hash: Release_by_hashResource;
      releases: ReleasesResource;
      testers: TestersResource;
      upload_status: Upload_statusResource;
    }
    interface TestsResource {
      /** Run automated test(s) on release. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The name of the release resource, which is the parent of the test Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. The ID to use for the test, which will become the final component of the tests's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. If it is not provided one will be automatically generated. */
        releaseTestId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleFirebaseAppdistroV1alphaReleaseTest;
      }): Request<GoogleFirebaseAppdistroV1alphaReleaseTest>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The name of the release resource, which is the parent of the test Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. The ID to use for the test, which will become the final component of the tests's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. If it is not provided one will be automatically generated. */
          releaseTestId?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleFirebaseAppdistroV1alphaReleaseTest
      ): Request<GoogleFirebaseAppdistroV1alphaReleaseTest>;
      /** Get results for automated test run on release. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the release test resource. Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}/tests/{test_id}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleFirebaseAppdistroV1alphaReleaseTest>;
      /** List results for automated tests run on release. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of tests to return. The service may return fewer than this value. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListReleaseTests` call. Provide this to retrieve the subsequent page. */
        pageToken?: string;
        /** Required. The name of the release resource, which is the parent of the tests Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleFirebaseAppdistroV1alphaListReleaseTestsResponse>;
    }
    interface ReleasesResource {
      tests: TestsResource;
    }
    interface AppsResource {
      /** Gets configuration for automated tests. */
      getTestConfig(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the `TestConfig` resource to retrieve. Format: `projects/{project_number}/apps/{app_id}/testConfig` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleFirebaseAppdistroV1alphaTestConfig>;
      /** Updates a release. */
      updateTestConfig(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The name of the test configuration resource. Format: `projects/{project_number}/apps/{app_id}/testConfig` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. The list of fields to update. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleFirebaseAppdistroV1alphaTestConfig;
      }): Request<GoogleFirebaseAppdistroV1alphaTestConfig>;
      updateTestConfig(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The name of the test configuration resource. Format: `projects/{project_number}/apps/{app_id}/testConfig` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. The list of fields to update. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleFirebaseAppdistroV1alphaTestConfig
      ): Request<GoogleFirebaseAppdistroV1alphaTestConfig>;
      releases: ReleasesResource;
    }
    interface TestersResource {
      /** Get UDIDs of tester iOS devices in a project */
      getUdids(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Unique id for a Firebase app of the format: {version}:{project_number}:{platform}:{hash(bundle_id)} Example: 1:581234567376:android:aa0a3c7b135e90289 */
        mobilesdkAppId?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** The name of the project, which is the parent of testers Format: `projects/{project_number}` */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleFirebaseAppdistroV1alphaGetTesterUdidsResponse>;
    }
    interface ProjectsResource {
      apps: AppsResource;
      testers: TestersResource;
    }

    const apps: AppsResource;

    const projects: ProjectsResource;
  }
}
