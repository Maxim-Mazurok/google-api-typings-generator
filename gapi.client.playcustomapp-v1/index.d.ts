/* Type definitions for non-npm package Google Play Custom App Publishing API v1 0.0 */
// Project: https://developers.google.com/android/work/play/custom-app-api/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://playcustomapp.googleapis.com/$discovery/rest?version=v1
// Revision: 20231011

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Google Play Custom App Publishing API v1 */
    function load(urlOrObject: "https://playcustomapp.googleapis.com/$discovery/rest?version=v1"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "playcustomapp", version: "v1"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "playcustomapp", version: "v1", callback: () => any): void;

    namespace playcustomapp {
        interface CustomApp {
            /** Default listing language in BCP 47 format. */
            languageCode?:
                string;
            /**
             * Organizations to which the custom app should be made available. If the request contains any organizations, then the app will be restricted to only these organizations. To support
             * the organization linked to the developer account, the organization ID should be provided explicitly together with other organizations. If no organizations are provided, then the app
             * is only available to the organization linked to the developer account.
             */
            organizations?:
                Organization[];
            /** Output only. Package name of the created Android app. Only present in the API response. */
            packageName?:
                string;
            /** Title for the Android app. */
            title?:
                string;
        }
        interface Organization {
            /** Required. ID of the organization. */
            organizationId?:
                string;
            /** Optional. A human-readable name of the organization, to help recognize the organization. */
            organizationName?:
                string;
        }
        interface CustomAppsResource {
            /** Creates a new custom app. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Developer account ID. */
                account:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    CustomApp;
            }): Request<CustomApp>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Developer account ID. */
                account:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: CustomApp): Request<CustomApp>;
        }
        interface AccountsResource {
            customApps:
                CustomAppsResource;
        }

        const accounts: AccountsResource;
    }
}
