/* This is stub file for gapi.client.assuredworkloads-v1beta1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20221007

gapi.load('client', async () => {
    /** now we can use gapi.client */

    await gapi.client.load('https://assuredworkloads.googleapis.com/$discovery/rest?version=v1beta1');
    /** now we can use gapi.client.assuredworkloads */

    /** don't forget to authenticate your client before sending any request to resources: */
    /** declare client_id registered in Google Developers Console */
    const client_id = '<<PUT YOUR CLIENT ID HERE>>';
    const scope = [
        /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
        'https://www.googleapis.com/auth/cloud-platform',
    ];
    const immediate = false;
    gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
        if (authResult && !authResult.error) {
            /** handle successful authorization */
            run();
        } else {
            /** handle authorization error */
        }
    });

    async function run() {
        /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
        await gapi.client.assuredworkloads.organizations.locations.operations.get({
            name: "Test string",
        });
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to
         * override the binding to use different resource name schemes, such as `users/*‚Äç/operations`. To override the binding, API services can add a binding such as
         * `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must
         * ensure the name binding is the parent resource, without the operations collection id.
         */
        await gapi.client.assuredworkloads.organizations.locations.operations.list({
            filter: "Test string",
            name: "Test string",
            pageSize: 42,
            pageToken: "Test string",
        });
        /** Creates Assured Workload. */
        await gapi.client.assuredworkloads.organizations.locations.workloads.create({
            externalId: "Test string",
            parent: "Test string",
        }, {
            billingAccount: "Test string",
            cjisSettings: {
                kmsSettings: {
                    nextRotationTime: "Test string",
                    rotationPeriod: "Test string",
                },
            },
            complianceRegime: "Test string",
            complianceStatus: {
                acknowledgedViolationCount: 42,
                activeViolationCount: 42,
            },
            compliantButDisallowedServices: [
                "Test string"
            ],
            createTime: "Test string",
            displayName: "Test string",
            enableSovereignControls: true,
            etag: "Test string",
            fedrampHighSettings: {
                kmsSettings: {
                    nextRotationTime: "Test string",
                    rotationPeriod: "Test string",
                },
            },
            fedrampModerateSettings: {
                kmsSettings: {
                    nextRotationTime: "Test string",
                    rotationPeriod: "Test string",
                },
            },
            il4Settings: {
                kmsSettings: {
                    nextRotationTime: "Test string",
                    rotationPeriod: "Test string",
                },
            },
            kajEnrollmentState: "Test string",
            kmsSettings: {
                nextRotationTime: "Test string",
                rotationPeriod: "Test string",
            },
            labels: {
                A: "Test string"
            },
            name: "Test string",
            partner: "Test string",
            provisionedResourcesParent: "Test string",
            resources: [
                {
                    resourceId: "Test string",
                    resourceType: "Test string",
                }
            ],
            resourceSettings: [
                {
                    displayName: "Test string",
                    resourceId: "Test string",
                    resourceType: "Test string",
                }
            ],
            saaEnrollmentResponse: {
                setupErrors: [
                    "Test string"
                ],
                setupStatus: "Test string",
            },
        });
        /**
         * Deletes the workload. Make sure that workload's direct children are already in a deleted state, otherwise the request will fail with a FAILED_PRECONDITION error. In addition to
         * assuredworkloads.workload.delete permission, the user should also have orgpolicy.policy.set permission on the deleted folder to remove Assured Workloads OrgPolicies.
         */
        await gapi.client.assuredworkloads.organizations.locations.workloads.delete({
            etag: "Test string",
            name: "Test string",
        });
        /** Gets Assured Workload associated with a CRM Node */
        await gapi.client.assuredworkloads.organizations.locations.workloads.get({
            name: "Test string",
        });
        /** Lists Assured Workloads under a CRM Node. */
        await gapi.client.assuredworkloads.organizations.locations.workloads.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Updates an existing workload. Currently allows updating of workload display_name and labels. For force updates don't set etag field in the Workload. Only one update operation per
         * workload can be in progress.
         */
        await gapi.client.assuredworkloads.organizations.locations.workloads.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            billingAccount: "Test string",
            cjisSettings: {
                kmsSettings: {
                    nextRotationTime: "Test string",
                    rotationPeriod: "Test string",
                },
            },
            complianceRegime: "Test string",
            complianceStatus: {
                acknowledgedViolationCount: 42,
                activeViolationCount: 42,
            },
            compliantButDisallowedServices: [
                "Test string"
            ],
            createTime: "Test string",
            displayName: "Test string",
            enableSovereignControls: true,
            etag: "Test string",
            fedrampHighSettings: {
                kmsSettings: {
                    nextRotationTime: "Test string",
                    rotationPeriod: "Test string",
                },
            },
            fedrampModerateSettings: {
                kmsSettings: {
                    nextRotationTime: "Test string",
                    rotationPeriod: "Test string",
                },
            },
            il4Settings: {
                kmsSettings: {
                    nextRotationTime: "Test string",
                    rotationPeriod: "Test string",
                },
            },
            kajEnrollmentState: "Test string",
            kmsSettings: {
                nextRotationTime: "Test string",
                rotationPeriod: "Test string",
            },
            labels: {
                A: "Test string"
            },
            name: "Test string",
            partner: "Test string",
            provisionedResourcesParent: "Test string",
            resources: [
                {
                    resourceId: "Test string",
                    resourceType: "Test string",
                }
            ],
            resourceSettings: [
                {
                    displayName: "Test string",
                    resourceId: "Test string",
                    resourceType: "Test string",
                }
            ],
            saaEnrollmentResponse: {
                setupErrors: [
                    "Test string"
                ],
                setupStatus: "Test string",
            },
        });
        /**
         * Restrict the list of resources allowed in the Workload environment. The current list of allowed products can be found at
         * https://cloud.google.com/assured-workloads/docs/supported-products In addition to assuredworkloads.workload.update permission, the user should also have orgpolicy.policy.set permission
         * on the folder resource to use this functionality.
         */
        await gapi.client.assuredworkloads.organizations.locations.workloads.restrictAllowedResources({
            name: "Test string",
        }, {
            restrictionType: "Test string",
        });
        /** Analyzes a hypothetical move of a source project or project-based workload to a target (destination) folder-based workload. */
        await gapi.client.assuredworkloads.organizations.locations.workloads.organizations.locations.workloads.analyzeWorkloadMove({
            project: "Test string",
            source: "Test string",
            target: "Test string",
        });
        /**
         * Acknowledges an existing violation. By acknowledging a violation, users acknowledge the existence of a compliance violation in their workload and decide to ignore it due to a valid
         * business justification. Acknowledgement is a permanent operation and it cannot be reverted.
         */
        await gapi.client.assuredworkloads.organizations.locations.workloads.violations.acknowledge({
            name: "Test string",
        }, {
            comment: "Test string",
        });
        /** Retrieves Assured Workload Violation based on ID. */
        await gapi.client.assuredworkloads.organizations.locations.workloads.violations.get({
            name: "Test string",
        });
        /**
         * Lists the Violations in the AssuredWorkload Environment. Callers may also choose to read across multiple Workloads as per [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen
         * or dash character) as a wildcard character instead of workload-id in the parent. Format `organizations/{org_id}/locations/{location}/workloads/-`
         */
        await gapi.client.assuredworkloads.organizations.locations.workloads.violations.list({
            filter: "Test string",
            "interval.endTime": "Test string",
            "interval.startTime": "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Analyzes a hypothetical move of a source project or project-based workload to a target (destination) folder-based workload. */
        await gapi.client.assuredworkloads.projects.organizations.locations.workloads.analyzeWorkloadMove({
            project: "Test string",
            source: "Test string",
            target: "Test string",
        });
    }
});
