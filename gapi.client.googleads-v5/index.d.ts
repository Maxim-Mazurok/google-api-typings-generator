/* Type definitions for non-npm package Google Ads API v5 0.0 */
// Project: https://developers.google.com/google-ads/api/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://googleads.googleapis.com/$discovery/rest?version=v5
// Revision: 20220816

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Google Ads API v5 */
    function load(urlOrObject: "https://googleads.googleapis.com/$discovery/rest?version=v5"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "googleads", version: "v5"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "googleads", version: "v5", callback: () => any): void;

    namespace googleads {
        interface GoogleAdsGoogleadsV10Common__PolicyTopicConstraint {
            /** Countries where the resource's domain is not covered by the certificates associated with it. */
            certificateDomainMismatchInCountryList?: GoogleAdsGoogleadsV10Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where a certificate is required for serving. */
            certificateMissingInCountryList?: GoogleAdsGoogleadsV10Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where the resource cannot serve. */
            countryConstraintList?: GoogleAdsGoogleadsV10Common_PolicyTopicConstraint_CountryConstraintList;
            /** Reseller constraint. */
            resellerConstraint?: any;
        }
        interface GoogleAdsGoogleadsV10Common__PolicyTopicEntry {
            /** Indicates how serving of this resource may be affected (for example, not serving in a country). */
            constraints?: GoogleAdsGoogleadsV10Common__PolicyTopicConstraint[];
            /** Additional information that explains policy finding (for example, the brand name for a trademark finding). */
            evidences?: GoogleAdsGoogleadsV10Common__PolicyTopicEvidence[];
            /**
             * Policy topic this finding refers to. For example, "ALCOHOL", "TRADEMARKS_IN_AD_TEXT", or "DESTINATION_NOT_WORKING". The set of possible policy topics is not fixed for a particular
             * API version and may change at any time.
             */
            topic?: string;
            /** Describes the negative or positive effect this policy will have on serving. */
            type?: string;
        }
        interface GoogleAdsGoogleadsV10Common__PolicyTopicEvidence {
            /** Mismatch between the destinations of a resource's URLs. */
            destinationMismatch?: GoogleAdsGoogleadsV10Common_PolicyTopicEvidence_DestinationMismatch;
            /** Details when the destination is returning an HTTP error code or isn't functional in all locations for commonly used devices. */
            destinationNotWorking?: GoogleAdsGoogleadsV10Common_PolicyTopicEvidence_DestinationNotWorking;
            /** The text in the destination of the resource that is causing a policy finding. */
            destinationTextList?: GoogleAdsGoogleadsV10Common_PolicyTopicEvidence_DestinationTextList;
            /** The language the resource was detected to be written in. This is an IETF language tag such as "en-US". */
            languageCode?: string;
            /** List of evidence found in the text of a resource. */
            textList?: GoogleAdsGoogleadsV10Common_PolicyTopicEvidence_TextList;
            /** List of websites linked with this resource. */
            websiteList?: GoogleAdsGoogleadsV10Common_PolicyTopicEvidence_WebsiteList;
        }
        interface GoogleAdsGoogleadsV10Common__PolicyViolationKey {
            /** Unique ID of the violated policy. */
            policyName?: string;
            /**
             * The text that violates the policy if specified. Otherwise, refers to the policy in general (for example, when requesting to be exempt from the whole policy). If not specified for
             * criterion exemptions, the whole policy is implied. Must be specified for ad exemptions.
             */
            violatingText?: string;
        }
        interface GoogleAdsGoogleadsV10Common__Value {
            /** A boolean. */
            booleanValue?: boolean;
            /** A double. */
            doubleValue?: number;
            /** A float. */
            floatValue?: number;
            /** An int64. */
            int64Value?: string;
            /** A string. */
            stringValue?: string;
        }
        interface GoogleAdsGoogleadsV10Common_PolicyTopicConstraint_CountryConstraint {
            /** Geo target constant resource name of the country in which serving is constrained. */
            countryCriterion?: string;
        }
        interface GoogleAdsGoogleadsV10Common_PolicyTopicConstraint_CountryConstraintList {
            /** Countries in which serving is restricted. */
            countries?: GoogleAdsGoogleadsV10Common_PolicyTopicConstraint_CountryConstraint[];
            /** Total number of countries targeted by the resource. */
            totalTargetedCountries?: number;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV10Common_PolicyTopicConstraint_ResellerConstraint {
        }
        interface GoogleAdsGoogleadsV10Common_PolicyTopicEvidence_DestinationMismatch {
            /** The set of URLs that did not match each other. */
            urlTypes?: string[];
        }
        interface GoogleAdsGoogleadsV10Common_PolicyTopicEvidence_DestinationNotWorking {
            /** The type of device that failed to load the URL. */
            device?: string;
            /** The type of DNS error. */
            dnsErrorType?: string;
            /** The full URL that didn't work. */
            expandedUrl?: string;
            /** The HTTP error code. */
            httpErrorCode?: string;
            /** The time the URL was last checked. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30" */
            lastCheckedDateTime?: string;
        }
        interface GoogleAdsGoogleadsV10Common_PolicyTopicEvidence_DestinationTextList {
            /** List of text found in the resource's destination page. */
            destinationTexts?: string[];
        }
        interface GoogleAdsGoogleadsV10Common_PolicyTopicEvidence_TextList {
            /** The fragments of text from the resource that caused the policy finding. */
            texts?: string[];
        }
        interface GoogleAdsGoogleadsV10Common_PolicyTopicEvidence_WebsiteList {
            /** Websites that caused the policy finding. */
            websites?: string[];
        }
        interface GoogleAdsGoogleadsV10Errors__ErrorCode {
            /** The reasons for the access invitation error */
            accessInvitationError?: string;
            /** The reasons for account budget proposal errors. */
            accountBudgetProposalError?: string;
            /** The reasons for the account link status change error */
            accountLinkError?: string;
            /** The reasons for the ad customizer error */
            adCustomizerError?: string;
            /** An error with an Ad Group Ad mutate. */
            adError?: string;
            /** The reasons for the ad group ad error */
            adGroupAdError?: string;
            /** The reasons for the ad group bid modifier error */
            adGroupBidModifierError?: string;
            /** The reasons for the ad group criterion customizer error. */
            adGroupCriterionCustomizerError?: string;
            /** Indicates failure to properly authenticate user. */
            adGroupCriterionError?: string;
            /** The reasons for the ad group customizer error. */
            adGroupCustomizerError?: string;
            /** An error with an Ad Group mutate. */
            adGroupError?: string;
            /** The reasons for the ad group feed error */
            adGroupFeedError?: string;
            /** The reasons for the ad parameter error */
            adParameterError?: string;
            /** The reasons for the ad sharing error */
            adSharingError?: string;
            /** The reasons for the adx error */
            adxError?: string;
            /** The reasons for the asset error */
            assetError?: string;
            /** The reasons for the asset group asset error */
            assetGroupAssetError?: string;
            /** The reasons for the asset group error */
            assetGroupError?: string;
            /** The reasons for the asset group listing group filter error */
            assetGroupListingGroupFilterError?: string;
            /** The reasons for the asset link error */
            assetLinkError?: string;
            /** The reasons for the asset set asset error */
            assetSetAssetError?: string;
            /** The reasons for the asset set error */
            assetSetError?: string;
            /** The reasons for the asset set link error */
            assetSetLinkError?: string;
            /** The reasons for the audience error */
            audienceError?: string;
            /** Indicates failure to properly authenticate user. */
            authenticationError?: string;
            /** An error encountered when trying to authorize a user. */
            authorizationError?: string;
            /** The reasons for the batch job error */
            batchJobError?: string;
            /** The reasons for the bidding errors */
            biddingError?: string;
            /** An error with a Bidding Strategy mutate. */
            biddingStrategyError?: string;
            /** The reasons for the billing setup error */
            billingSetupError?: string;
            /** An error with a Campaign Budget mutate. */
            campaignBudgetError?: string;
            /** The reasons for the campaign conversion goal error */
            campaignConversionGoalError?: string;
            /** The reasons for the campaign criterion error */
            campaignCriterionError?: string;
            /** The reasons for the campaign customizer error. */
            campaignCustomizerError?: string;
            /** The reasons for the campaign draft error */
            campaignDraftError?: string;
            /** An error with a Campaign mutate. */
            campaignError?: string;
            /** The reasons for the campaign experiment error */
            campaignExperimentError?: string;
            /** The reasons for the campaign feed error */
            campaignFeedError?: string;
            /** The reasons for the campaign shared set error */
            campaignSharedSetError?: string;
            /** The reasons for the change event error */
            changeEventError?: string;
            /** The reasons for the change status error */
            changeStatusError?: string;
            /** The reasons for the collection size error */
            collectionSizeError?: string;
            /** The reasons for the context error */
            contextError?: string;
            /** The reasons for the conversion action error */
            conversionActionError?: string;
            /** The reasons for the conversion adjustment upload error */
            conversionAdjustmentUploadError?: string;
            /** The reasons for the conversion custom variable error */
            conversionCustomVariableError?: string;
            /** The reasons for the conversion goal campaign config error */
            conversionGoalCampaignConfigError?: string;
            /** The reasons for the conversion upload error */
            conversionUploadError?: string;
            /** The reasons for the conversion value rule error */
            conversionValueRuleError?: string;
            /** The reasons for the conversion value rule set error */
            conversionValueRuleSetError?: string;
            /** The reasons for the country code error */
            countryCodeError?: string;
            /** The reasons for the criterion error */
            criterionError?: string;
            /** The reasons for the currency code error */
            currencyCodeError?: string;
            /** The reasons for the custom audience error */
            customAudienceError?: string;
            /** The reasons for the custom conversion goal error */
            customConversionGoalError?: string;
            /** The reasons for the customer client link error */
            customerClientLinkError?: string;
            /** The reasons for the customer customizer error. */
            customerCustomizerError?: string;
            /** The reasons for the customer error */
            customerError?: string;
            /** The reasons for the customer feed error */
            customerFeedError?: string;
            /** The reasons for the customer manager link error */
            customerManagerLinkError?: string;
            /** The reasons for the customer user access mutate error */
            customerUserAccessError?: string;
            /** The reasons for the custom interest error */
            customInterestError?: string;
            /** The reasons for the customizer attribute error. */
            customizerAttributeError?: string;
            /** The reasons for the database error. */
            databaseError?: string;
            /** The reasons for the date error */
            dateError?: string;
            /** The reasons for the date range error */
            dateRangeError?: string;
            /** The reasons for the distinct error */
            distinctError?: string;
            /** The reason for enum error. */
            enumError?: string;
            /** The reasons for the experiment arm error */
            experimentArmError?: string;
            /** The reasons for the experiment error */
            experimentError?: string;
            /** The reasons for the extension feed item error */
            extensionFeedItemError?: string;
            /** The reasons for the extension setting error */
            extensionSettingError?: string;
            /** The reasons for the feed attribute reference error */
            feedAttributeReferenceError?: string;
            /** The reasons for the feed error */
            feedError?: string;
            /** The reasons for the feed item error */
            feedItemError?: string;
            /** The reasons for the feed item set error */
            feedItemSetError?: string;
            /** The reasons for the feed item set link error */
            feedItemSetLinkError?: string;
            /** The reasons for the feed item target error */
            feedItemTargetError?: string;
            /** The reasons for the feed item validation error */
            feedItemValidationError?: string;
            /** The reasons for the feed mapping error */
            feedMappingError?: string;
            /** The reasons for the field error */
            fieldError?: string;
            /** An error with a field mask */
            fieldMaskError?: string;
            /** The reasons for the function error */
            functionError?: string;
            /** The reasons for the function parsing error */
            functionParsingError?: string;
            /** The reasons for the geo target constant suggestion error. */
            geoTargetConstantSuggestionError?: string;
            /** The reasons for the header error. */
            headerError?: string;
            /** The reasons for the id error */
            idError?: string;
            /** The reasons for the image error */
            imageError?: string;
            /** An unexpected server-side error. */
            internalError?: string;
            /** The reasons for the invoice error */
            invoiceError?: string;
            /** The reason for keyword plan ad group error. */
            keywordPlanAdGroupError?: string;
            /** The reason for keyword plan ad group keyword error. */
            keywordPlanAdGroupKeywordError?: string;
            /** The reason for keyword plan campaign error. */
            keywordPlanCampaignError?: string;
            /** The reason for keyword plan campaign keyword error. */
            keywordPlanCampaignKeywordError?: string;
            /** The reason for keyword plan error. */
            keywordPlanError?: string;
            /** The reason for keyword idea error. */
            keywordPlanIdeaError?: string;
            /** The reason for the label error. */
            labelError?: string;
            /** The reasons for the language code error */
            languageCodeError?: string;
            /** An error with a list operation. */
            listOperationError?: string;
            /** The reasons for the manager link error */
            managerLinkError?: string;
            /** The reasons for the media bundle error */
            mediaBundleError?: string;
            /** The reasons for the media file error */
            mediaFileError?: string;
            /** The reasons for media uploading errors. */
            mediaUploadError?: string;
            /** Container for enum describing possible merchant center errors. */
            merchantCenterError?: string;
            /** The reasons for the multiplier error */
            multiplierError?: string;
            /** An error with a mutate */
            mutateError?: string;
            /** The reasons for the new resource creation error */
            newResourceCreationError?: string;
            /** The reasons for the not allowlisted error */
            notAllowlistedError?: string;
            /** The reasons for the not empty error */
            notEmptyError?: string;
            /** The reasons for the null error */
            nullError?: string;
            /** The reasons for the offline user data job error. */
            offlineUserDataJobError?: string;
            /** The reasons for the operation access denied error */
            operationAccessDeniedError?: string;
            /** The reasons for the operator error */
            operatorError?: string;
            /** The reasons for the mutate job error */
            partialFailureError?: string;
            /** The reasons for errors in payments accounts service */
            paymentsAccountError?: string;
            /** The reasons for the policy finding error. */
            policyFindingError?: string;
            /** The reasons for the policy validation parameter error */
            policyValidationParameterError?: string;
            /** The reasons for the policy violation error */
            policyViolationError?: string;
            /** An error with an AWQL query */
            queryError?: string;
            /** An error with the amonut of quota remaining. */
            quotaError?: string;
            /** The reasons for the range error */
            rangeError?: string;
            /** The reasons for the reach plan error */
            reachPlanError?: string;
            /** The reasons for error in applying a recommendation */
            recommendationError?: string;
            /** The reasons for the region code error */
            regionCodeError?: string;
            /** An error caused by the request */
            requestError?: string;
            /** The reasons for the resource access denied error */
            resourceAccessDeniedError?: string;
            /** The reasons for the resource count limit exceeded error */
            resourceCountLimitExceededError?: string;
            /** The reasons for the setting error */
            settingError?: string;
            /** The reasons for the shared criterion error */
            sharedCriterionError?: string;
            /** The reasons for the shared set error */
            sharedSetError?: string;
            /** The reasons for the size limit error */
            sizeLimitError?: string;
            /** The reasons for the string format error */
            stringFormatError?: string;
            /** The reasons for the string length error */
            stringLengthError?: string;
            /** The reasons for the third party app analytics link mutate error */
            thirdPartyAppAnalyticsLinkError?: string;
            /** The reasons for the time zone error */
            timeZoneError?: string;
            /** An error with a URL field mutate. */
            urlFieldError?: string;
            /** The reasons for the user data error. */
            userDataError?: string;
            /** The reasons for the user list error */
            userListError?: string;
            /** The reasons for YouTube video registration errors. */
            youtubeVideoRegistrationError?: string;
        }
        interface GoogleAdsGoogleadsV10Errors__ErrorDetails {
            /** Describes policy violation findings. */
            policyFindingDetails?: GoogleAdsGoogleadsV10Errors__PolicyFindingDetails;
            /** Describes an ad policy violation. */
            policyViolationDetails?: GoogleAdsGoogleadsV10Errors__PolicyViolationDetails;
            /** Details on the quota error, including the scope (account or developer), the rate bucket name and the retry delay. */
            quotaErrorDetails?: GoogleAdsGoogleadsV10Errors__QuotaErrorDetails;
            /** Details for a resource count limit exceeded error. */
            resourceCountDetails?: GoogleAdsGoogleadsV10Errors__ResourceCountDetails;
            /** The error code that should have been returned, but wasn't. This is used when the error code is not published in the client specified version. */
            unpublishedErrorCode?: string;
        }
        interface GoogleAdsGoogleadsV10Errors__ErrorLocation {
            /** A field path that indicates which field was invalid in the request. */
            fieldPathElements?: GoogleAdsGoogleadsV10Errors_ErrorLocation_FieldPathElement[];
        }
        interface GoogleAdsGoogleadsV10Errors__GoogleAdsError {
            /** Additional error details, which are returned by certain error codes. Most error codes do not include details. */
            details?: GoogleAdsGoogleadsV10Errors__ErrorDetails;
            /** An enum value that indicates which error occurred. */
            errorCode?: GoogleAdsGoogleadsV10Errors__ErrorCode;
            /** Describes the part of the request proto that caused the error. */
            location?: GoogleAdsGoogleadsV10Errors__ErrorLocation;
            /** A human-readable description of the error. */
            message?: string;
            /** The value that triggered the error. */
            trigger?: GoogleAdsGoogleadsV10Common__Value;
        }
        interface GoogleAdsGoogleadsV10Errors__GoogleAdsFailure {
            /** The list of errors that occurred. */
            errors?: GoogleAdsGoogleadsV10Errors__GoogleAdsError[];
            /** The unique ID of the request that is used for debugging purposes. */
            requestId?: string;
        }
        interface GoogleAdsGoogleadsV10Errors__PolicyFindingDetails {
            /**
             * The list of policy topics for the resource. Contains the PROHIBITED or FULLY_LIMITED policy topic entries that prevented the resource from being saved (among any other entries the
             * resource may also have).
             */
            policyTopicEntries?: GoogleAdsGoogleadsV10Common__PolicyTopicEntry[];
        }
        interface GoogleAdsGoogleadsV10Errors__PolicyViolationDetails {
            /** Human readable description of policy violation. */
            externalPolicyDescription?: string;
            /** Human readable name of the policy. */
            externalPolicyName?: string;
            /** Whether user can file an exemption request for this violation. */
            isExemptible?: boolean;
            /** Unique identifier for this violation. If policy is exemptible, this key may be used to request exemption. */
            key?: GoogleAdsGoogleadsV10Common__PolicyViolationKey;
        }
        interface GoogleAdsGoogleadsV10Errors__QuotaErrorDetails {
            /** The high level description of the quota bucket. Examples are "Get requests for standard access" or "Requests per account". */
            rateName?: string;
            /** The rate scope of the quota limit. */
            rateScope?: string;
            /** Backoff period that customers should wait before sending next request. */
            retryDelay?: string;
        }
        interface GoogleAdsGoogleadsV10Errors__ResourceCountDetails {
            /** The ID of the resource whose limit was exceeded. External customer ID if the limit is for a customer. */
            enclosingId?: string;
            /** The name of the resource (Customer, Campaign etc.) whose limit was exceeded. */
            enclosingResource?: string;
            /** The count of existing entities. */
            existingCount?: number;
            /** The limit which was exceeded. */
            limit?: number;
            /** The resource limit type which was exceeded. */
            limitType?: string;
        }
        interface GoogleAdsGoogleadsV10Errors_ErrorLocation_FieldPathElement {
            /** The name of a field or a oneof */
            fieldName?: string;
            /** If field_name is a repeated field, this is the element that failed */
            index?: number;
        }
        interface GoogleAdsGoogleadsV10Resources_BatchJob_BatchJobMetadata {
            /** Output only. The time when this batch job was completed. Formatted as yyyy-MM-dd HH:mm:ss. Example: "2018-03-05 09:16:00" */
            completionDateTime?: string;
            /** Output only. The time when this batch job was created. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:00" */
            creationDateTime?: string;
            /** Output only. The fraction (between 0.0 and 1.0) of mutates that have been processed. This is empty if the job hasn't started running yet. */
            estimatedCompletionRatio?: number;
            /** Output only. The number of mutate operations executed by the batch job. Present only if the job has started running. */
            executedOperationCount?: string;
            /** Output only. The number of mutate operations in the batch job. */
            operationCount?: string;
            /** Output only. The time when this batch job started running. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:30" */
            startDateTime?: string;
        }
        interface GoogleAdsGoogleadsV10Services__CreateCampaignExperimentMetadata {
            /** Resource name of campaign experiment created. */
            campaignExperiment?: string;
        }
        interface GoogleAdsGoogleadsV10Services__PromoteExperimentMetadata {
            /** Required. The promoted experiment. */
            experiment?: string;
        }
        interface GoogleAdsGoogleadsV10Services__ScheduleExperimentMetadata {
            /** Required. The scheduled experiment. */
            experiment?: string;
        }
        interface GoogleAdsGoogleadsV11Common__PolicyTopicConstraint {
            /** Countries where the resource's domain is not covered by the certificates associated with it. */
            certificateDomainMismatchInCountryList?: GoogleAdsGoogleadsV11Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where a certificate is required for serving. */
            certificateMissingInCountryList?: GoogleAdsGoogleadsV11Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where the resource cannot serve. */
            countryConstraintList?: GoogleAdsGoogleadsV11Common_PolicyTopicConstraint_CountryConstraintList;
            /** Reseller constraint. */
            resellerConstraint?: any;
        }
        interface GoogleAdsGoogleadsV11Common__PolicyTopicEntry {
            /** Indicates how serving of this resource may be affected (for example, not serving in a country). */
            constraints?: GoogleAdsGoogleadsV11Common__PolicyTopicConstraint[];
            /** Additional information that explains policy finding (for example, the brand name for a trademark finding). */
            evidences?: GoogleAdsGoogleadsV11Common__PolicyTopicEvidence[];
            /**
             * Policy topic this finding refers to. For example, "ALCOHOL", "TRADEMARKS_IN_AD_TEXT", or "DESTINATION_NOT_WORKING". The set of possible policy topics is not fixed for a particular
             * API version and may change at any time.
             */
            topic?: string;
            /** Describes the negative or positive effect this policy will have on serving. */
            type?: string;
        }
        interface GoogleAdsGoogleadsV11Common__PolicyTopicEvidence {
            /** Mismatch between the destinations of a resource's URLs. */
            destinationMismatch?: GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_DestinationMismatch;
            /** Details when the destination is returning an HTTP error code or isn't functional in all locations for commonly used devices. */
            destinationNotWorking?: GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_DestinationNotWorking;
            /** The text in the destination of the resource that is causing a policy finding. */
            destinationTextList?: GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_DestinationTextList;
            /** The language the resource was detected to be written in. This is an IETF language tag such as "en-US". */
            languageCode?: string;
            /** List of evidence found in the text of a resource. */
            textList?: GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_TextList;
            /** List of websites linked with this resource. */
            websiteList?: GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_WebsiteList;
        }
        interface GoogleAdsGoogleadsV11Common__PolicyViolationKey {
            /** Unique ID of the violated policy. */
            policyName?: string;
            /**
             * The text that violates the policy if specified. Otherwise, refers to the policy in general (for example, when requesting to be exempt from the whole policy). If not specified for
             * criterion exemptions, the whole policy is implied. Must be specified for ad exemptions.
             */
            violatingText?: string;
        }
        interface GoogleAdsGoogleadsV11Common__Value {
            /** A boolean. */
            booleanValue?: boolean;
            /** A double. */
            doubleValue?: number;
            /** A float. */
            floatValue?: number;
            /** An int64. */
            int64Value?: string;
            /** A string. */
            stringValue?: string;
        }
        interface GoogleAdsGoogleadsV11Common_PolicyTopicConstraint_CountryConstraint {
            /** Geo target constant resource name of the country in which serving is constrained. */
            countryCriterion?: string;
        }
        interface GoogleAdsGoogleadsV11Common_PolicyTopicConstraint_CountryConstraintList {
            /** Countries in which serving is restricted. */
            countries?: GoogleAdsGoogleadsV11Common_PolicyTopicConstraint_CountryConstraint[];
            /** Total number of countries targeted by the resource. */
            totalTargetedCountries?: number;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV11Common_PolicyTopicConstraint_ResellerConstraint {
        }
        interface GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_DestinationMismatch {
            /** The set of URLs that did not match each other. */
            urlTypes?: string[];
        }
        interface GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_DestinationNotWorking {
            /** The type of device that failed to load the URL. */
            device?: string;
            /** The type of DNS error. */
            dnsErrorType?: string;
            /** The full URL that didn't work. */
            expandedUrl?: string;
            /** The HTTP error code. */
            httpErrorCode?: string;
            /** The time the URL was last checked. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30" */
            lastCheckedDateTime?: string;
        }
        interface GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_DestinationTextList {
            /** List of text found in the resource's destination page. */
            destinationTexts?: string[];
        }
        interface GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_TextList {
            /** The fragments of text from the resource that caused the policy finding. */
            texts?: string[];
        }
        interface GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_WebsiteList {
            /** Websites that caused the policy finding. */
            websites?: string[];
        }
        interface GoogleAdsGoogleadsV11Errors__ErrorCode {
            /** The reasons for the access invitation error */
            accessInvitationError?: string;
            /** The reasons for account budget proposal errors. */
            accountBudgetProposalError?: string;
            /** The reasons for the account link status change error */
            accountLinkError?: string;
            /** The reasons for the ad customizer error */
            adCustomizerError?: string;
            /** An error with an Ad Group Ad mutate. */
            adError?: string;
            /** The reasons for the ad group ad error */
            adGroupAdError?: string;
            /** The reasons for the ad group bid modifier error */
            adGroupBidModifierError?: string;
            /** The reasons for the ad group criterion customizer error. */
            adGroupCriterionCustomizerError?: string;
            /** Indicates failure to properly authenticate user. */
            adGroupCriterionError?: string;
            /** The reasons for the ad group customizer error. */
            adGroupCustomizerError?: string;
            /** An error with an Ad Group mutate. */
            adGroupError?: string;
            /** The reasons for the ad group feed error */
            adGroupFeedError?: string;
            /** The reasons for the ad parameter error */
            adParameterError?: string;
            /** The reasons for the ad sharing error */
            adSharingError?: string;
            /** The reasons for the adx error */
            adxError?: string;
            /** The reasons for the asset error */
            assetError?: string;
            /** The reasons for the asset group asset error */
            assetGroupAssetError?: string;
            /** The reasons for the asset group error */
            assetGroupError?: string;
            /** The reasons for the asset group listing group filter error */
            assetGroupListingGroupFilterError?: string;
            /** The reasons for the asset link error */
            assetLinkError?: string;
            /** The reasons for the asset set asset error */
            assetSetAssetError?: string;
            /** The reasons for the asset set error */
            assetSetError?: string;
            /** The reasons for the asset set link error */
            assetSetLinkError?: string;
            /** The reasons for the audience error */
            audienceError?: string;
            /** The reasons for the Audience Insights error */
            audienceInsightsError?: string;
            /** Indicates failure to properly authenticate user. */
            authenticationError?: string;
            /** An error encountered when trying to authorize a user. */
            authorizationError?: string;
            /** The reasons for the batch job error */
            batchJobError?: string;
            /** The reasons for the bidding errors */
            biddingError?: string;
            /** An error with a Bidding Strategy mutate. */
            biddingStrategyError?: string;
            /** The reasons for the billing setup error */
            billingSetupError?: string;
            /** An error with a Campaign Budget mutate. */
            campaignBudgetError?: string;
            /** The reasons for the campaign conversion goal error */
            campaignConversionGoalError?: string;
            /** The reasons for the campaign criterion error */
            campaignCriterionError?: string;
            /** The reasons for the campaign customizer error. */
            campaignCustomizerError?: string;
            /** The reasons for the campaign draft error */
            campaignDraftError?: string;
            /** An error with a Campaign mutate. */
            campaignError?: string;
            /** The reasons for the campaign experiment error */
            campaignExperimentError?: string;
            /** The reasons for the campaign feed error */
            campaignFeedError?: string;
            /** The reasons for the campaign shared set error */
            campaignSharedSetError?: string;
            /** The reasons for the change event error */
            changeEventError?: string;
            /** The reasons for the change status error */
            changeStatusError?: string;
            /** The reasons for the collection size error */
            collectionSizeError?: string;
            /** The reasons for the context error */
            contextError?: string;
            /** The reasons for the conversion action error */
            conversionActionError?: string;
            /** The reasons for the conversion adjustment upload error */
            conversionAdjustmentUploadError?: string;
            /** The reasons for the conversion custom variable error */
            conversionCustomVariableError?: string;
            /** The reasons for the conversion goal campaign config error */
            conversionGoalCampaignConfigError?: string;
            /** The reasons for the conversion upload error */
            conversionUploadError?: string;
            /** The reasons for the conversion value rule error */
            conversionValueRuleError?: string;
            /** The reasons for the conversion value rule set error */
            conversionValueRuleSetError?: string;
            /** The reasons for the country code error */
            countryCodeError?: string;
            /** The reasons for the criterion error */
            criterionError?: string;
            /** The reasons for the currency code error */
            currencyCodeError?: string;
            /** The reasons for the custom audience error */
            customAudienceError?: string;
            /** The reasons for the custom conversion goal error */
            customConversionGoalError?: string;
            /** The reasons for the customer client link error */
            customerClientLinkError?: string;
            /** The reasons for the customer customizer error. */
            customerCustomizerError?: string;
            /** The reasons for the customer error */
            customerError?: string;
            /** The reasons for the customer feed error */
            customerFeedError?: string;
            /** The reasons for the customer manager link error */
            customerManagerLinkError?: string;
            /** The reasons for the customer user access mutate error */
            customerUserAccessError?: string;
            /** The reasons for the custom interest error */
            customInterestError?: string;
            /** The reasons for the customizer attribute error. */
            customizerAttributeError?: string;
            /** The reasons for the database error. */
            databaseError?: string;
            /** The reasons for the date error */
            dateError?: string;
            /** The reasons for the date range error */
            dateRangeError?: string;
            /** The reasons for the distinct error */
            distinctError?: string;
            /** The reason for enum error. */
            enumError?: string;
            /** The reasons for the experiment arm error */
            experimentArmError?: string;
            /** The reasons for the experiment error */
            experimentError?: string;
            /** The reasons for the extension feed item error */
            extensionFeedItemError?: string;
            /** The reasons for the extension setting error */
            extensionSettingError?: string;
            /** The reasons for the feed attribute reference error */
            feedAttributeReferenceError?: string;
            /** The reasons for the feed error */
            feedError?: string;
            /** The reasons for the feed item error */
            feedItemError?: string;
            /** The reasons for the feed item set error */
            feedItemSetError?: string;
            /** The reasons for the feed item set link error */
            feedItemSetLinkError?: string;
            /** The reasons for the feed item target error */
            feedItemTargetError?: string;
            /** The reasons for the feed item validation error */
            feedItemValidationError?: string;
            /** The reasons for the feed mapping error */
            feedMappingError?: string;
            /** The reasons for the field error */
            fieldError?: string;
            /** An error with a field mask */
            fieldMaskError?: string;
            /** The reasons for the function error */
            functionError?: string;
            /** The reasons for the function parsing error */
            functionParsingError?: string;
            /** The reasons for the geo target constant suggestion error. */
            geoTargetConstantSuggestionError?: string;
            /** The reasons for the header error. */
            headerError?: string;
            /** The reasons for the id error */
            idError?: string;
            /** The reasons for the image error */
            imageError?: string;
            /** An unexpected server-side error. */
            internalError?: string;
            /** The reasons for the invoice error */
            invoiceError?: string;
            /** The reason for keyword plan ad group error. */
            keywordPlanAdGroupError?: string;
            /** The reason for keyword plan ad group keyword error. */
            keywordPlanAdGroupKeywordError?: string;
            /** The reason for keyword plan campaign error. */
            keywordPlanCampaignError?: string;
            /** The reason for keyword plan campaign keyword error. */
            keywordPlanCampaignKeywordError?: string;
            /** The reason for keyword plan error. */
            keywordPlanError?: string;
            /** The reason for keyword idea error. */
            keywordPlanIdeaError?: string;
            /** The reason for the label error. */
            labelError?: string;
            /** The reasons for the language code error */
            languageCodeError?: string;
            /** An error with a list operation. */
            listOperationError?: string;
            /** The reasons for the manager link error */
            managerLinkError?: string;
            /** The reasons for the media bundle error */
            mediaBundleError?: string;
            /** The reasons for the media file error */
            mediaFileError?: string;
            /** The reasons for media uploading errors. */
            mediaUploadError?: string;
            /** Container for enum describing possible merchant center errors. */
            merchantCenterError?: string;
            /** The reasons for the multiplier error */
            multiplierError?: string;
            /** An error with a mutate */
            mutateError?: string;
            /** The reasons for the new resource creation error */
            newResourceCreationError?: string;
            /** The reasons for the not allowlisted error */
            notAllowlistedError?: string;
            /** The reasons for the not empty error */
            notEmptyError?: string;
            /** The reasons for the null error */
            nullError?: string;
            /** The reasons for the offline user data job error. */
            offlineUserDataJobError?: string;
            /** The reasons for the operation access denied error */
            operationAccessDeniedError?: string;
            /** The reasons for the operator error */
            operatorError?: string;
            /** The reasons for the mutate job error */
            partialFailureError?: string;
            /** The reasons for errors in payments accounts service */
            paymentsAccountError?: string;
            /** The reasons for the policy finding error. */
            policyFindingError?: string;
            /** The reasons for the policy validation parameter error */
            policyValidationParameterError?: string;
            /** The reasons for the policy violation error */
            policyViolationError?: string;
            /** An error with an AWQL query */
            queryError?: string;
            /** An error with the amonut of quota remaining. */
            quotaError?: string;
            /** The reasons for the range error */
            rangeError?: string;
            /** The reasons for the reach plan error */
            reachPlanError?: string;
            /** The reasons for error in applying a recommendation */
            recommendationError?: string;
            /** The reasons for the region code error */
            regionCodeError?: string;
            /** An error caused by the request */
            requestError?: string;
            /** The reasons for the resource access denied error */
            resourceAccessDeniedError?: string;
            /** The reasons for the resource count limit exceeded error */
            resourceCountLimitExceededError?: string;
            /** The reasons for the setting error */
            settingError?: string;
            /** The reasons for the shared criterion error */
            sharedCriterionError?: string;
            /** The reasons for the shared set error */
            sharedSetError?: string;
            /** The reasons for the size limit error */
            sizeLimitError?: string;
            /** The reasons for the string format error */
            stringFormatError?: string;
            /** The reasons for the string length error */
            stringLengthError?: string;
            /** The reasons for the third party app analytics link mutate error */
            thirdPartyAppAnalyticsLinkError?: string;
            /** The reasons for the time zone error */
            timeZoneError?: string;
            /** An error with a URL field mutate. */
            urlFieldError?: string;
            /** The reasons for the user data error. */
            userDataError?: string;
            /** The reasons for the user list error */
            userListError?: string;
            /** The reasons for YouTube video registration errors. */
            youtubeVideoRegistrationError?: string;
        }
        interface GoogleAdsGoogleadsV11Errors__ErrorDetails {
            /** Describes policy violation findings. */
            policyFindingDetails?: GoogleAdsGoogleadsV11Errors__PolicyFindingDetails;
            /** Describes an ad policy violation. */
            policyViolationDetails?: GoogleAdsGoogleadsV11Errors__PolicyViolationDetails;
            /** Details on the quota error, including the scope (account or developer), the rate bucket name and the retry delay. */
            quotaErrorDetails?: GoogleAdsGoogleadsV11Errors__QuotaErrorDetails;
            /** Details for a resource count limit exceeded error. */
            resourceCountDetails?: GoogleAdsGoogleadsV11Errors__ResourceCountDetails;
            /** The error code that should have been returned, but wasn't. This is used when the error code is not published in the client specified version. */
            unpublishedErrorCode?: string;
        }
        interface GoogleAdsGoogleadsV11Errors__ErrorLocation {
            /** A field path that indicates which field was invalid in the request. */
            fieldPathElements?: GoogleAdsGoogleadsV11Errors_ErrorLocation_FieldPathElement[];
        }
        interface GoogleAdsGoogleadsV11Errors__GoogleAdsError {
            /** Additional error details, which are returned by certain error codes. Most error codes do not include details. */
            details?: GoogleAdsGoogleadsV11Errors__ErrorDetails;
            /** An enum value that indicates which error occurred. */
            errorCode?: GoogleAdsGoogleadsV11Errors__ErrorCode;
            /** Describes the part of the request proto that caused the error. */
            location?: GoogleAdsGoogleadsV11Errors__ErrorLocation;
            /** A human-readable description of the error. */
            message?: string;
            /** The value that triggered the error. */
            trigger?: GoogleAdsGoogleadsV11Common__Value;
        }
        interface GoogleAdsGoogleadsV11Errors__GoogleAdsFailure {
            /** The list of errors that occurred. */
            errors?: GoogleAdsGoogleadsV11Errors__GoogleAdsError[];
            /** The unique ID of the request that is used for debugging purposes. */
            requestId?: string;
        }
        interface GoogleAdsGoogleadsV11Errors__PolicyFindingDetails {
            /**
             * The list of policy topics for the resource. Contains the PROHIBITED or FULLY_LIMITED policy topic entries that prevented the resource from being saved (among any other entries the
             * resource may also have).
             */
            policyTopicEntries?: GoogleAdsGoogleadsV11Common__PolicyTopicEntry[];
        }
        interface GoogleAdsGoogleadsV11Errors__PolicyViolationDetails {
            /** Human readable description of policy violation. */
            externalPolicyDescription?: string;
            /** Human readable name of the policy. */
            externalPolicyName?: string;
            /** Whether user can file an exemption request for this violation. */
            isExemptible?: boolean;
            /** Unique identifier for this violation. If policy is exemptible, this key may be used to request exemption. */
            key?: GoogleAdsGoogleadsV11Common__PolicyViolationKey;
        }
        interface GoogleAdsGoogleadsV11Errors__QuotaErrorDetails {
            /** The high level description of the quota bucket. Examples are "Get requests for standard access" or "Requests per account". */
            rateName?: string;
            /** The rate scope of the quota limit. */
            rateScope?: string;
            /** Backoff period that customers should wait before sending next request. */
            retryDelay?: string;
        }
        interface GoogleAdsGoogleadsV11Errors__ResourceCountDetails {
            /** The ID of the resource whose limit was exceeded. External customer ID if the limit is for a customer. */
            enclosingId?: string;
            /** The name of the resource (Customer, Campaign etc.) whose limit was exceeded. */
            enclosingResource?: string;
            /** The count of existing entities. */
            existingCount?: number;
            /** The limit which was exceeded. */
            limit?: number;
            /** The resource limit type which was exceeded. */
            limitType?: string;
        }
        interface GoogleAdsGoogleadsV11Errors_ErrorLocation_FieldPathElement {
            /** The name of a field or a oneof */
            fieldName?: string;
            /** If field_name is a repeated field, this is the element that failed */
            index?: number;
        }
        interface GoogleAdsGoogleadsV11Resources_BatchJob_BatchJobMetadata {
            /** Output only. The time when this batch job was completed. Formatted as yyyy-MM-dd HH:mm:ss. Example: "2018-03-05 09:16:00" */
            completionDateTime?: string;
            /** Output only. The time when this batch job was created. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:00" */
            creationDateTime?: string;
            /** Output only. The fraction (between 0.0 and 1.0) of mutates that have been processed. This is empty if the job hasn't started running yet. */
            estimatedCompletionRatio?: number;
            /** Output only. The number of mutate operations executed by the batch job. Present only if the job has started running. */
            executedOperationCount?: string;
            /** Output only. The number of mutate operations in the batch job. */
            operationCount?: string;
            /** Output only. The time when this batch job started running. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:30" */
            startDateTime?: string;
        }
        interface GoogleAdsGoogleadsV11Services__CreateCampaignExperimentMetadata {
            /** Resource name of campaign experiment created. */
            campaignExperiment?: string;
        }
        interface GoogleAdsGoogleadsV11Services__PromoteExperimentMetadata {
            /** Required. The promoted experiment. */
            experiment?: string;
        }
        interface GoogleAdsGoogleadsV11Services__ScheduleExperimentMetadata {
            /** Required. The scheduled experiment. */
            experiment?: string;
        }
        interface GoogleAdsGoogleadsV7Common__PolicyTopicConstraint {
            /** Countries where the resource's domain is not covered by the certificates associated with it. */
            certificateDomainMismatchInCountryList?: GoogleAdsGoogleadsV7Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where a certificate is required for serving. */
            certificateMissingInCountryList?: GoogleAdsGoogleadsV7Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where the resource cannot serve. */
            countryConstraintList?: GoogleAdsGoogleadsV7Common_PolicyTopicConstraint_CountryConstraintList;
            /** Reseller constraint. */
            resellerConstraint?: any;
        }
        interface GoogleAdsGoogleadsV7Common__PolicyTopicEntry {
            /** Indicates how serving of this resource may be affected (for example, not serving in a country). */
            constraints?: GoogleAdsGoogleadsV7Common__PolicyTopicConstraint[];
            /** Additional information that explains policy finding (for example, the brand name for a trademark finding). */
            evidences?: GoogleAdsGoogleadsV7Common__PolicyTopicEvidence[];
            /**
             * Policy topic this finding refers to. For example, "ALCOHOL", "TRADEMARKS_IN_AD_TEXT", or "DESTINATION_NOT_WORKING". The set of possible policy topics is not fixed for a particular
             * API version and may change at any time.
             */
            topic?: string;
            /** Describes the negative or positive effect this policy will have on serving. */
            type?: string;
        }
        interface GoogleAdsGoogleadsV7Common__PolicyTopicEvidence {
            /** Mismatch between the destinations of a resource's URLs. */
            destinationMismatch?: GoogleAdsGoogleadsV7Common_PolicyTopicEvidence_DestinationMismatch;
            /** Details when the destination is returning an HTTP error code or isn't functional in all locations for commonly used devices. */
            destinationNotWorking?: GoogleAdsGoogleadsV7Common_PolicyTopicEvidence_DestinationNotWorking;
            /** The text in the destination of the resource that is causing a policy finding. */
            destinationTextList?: GoogleAdsGoogleadsV7Common_PolicyTopicEvidence_DestinationTextList;
            /** The language the resource was detected to be written in. This is an IETF language tag such as "en-US". */
            languageCode?: string;
            /** List of evidence found in the text of a resource. */
            textList?: GoogleAdsGoogleadsV7Common_PolicyTopicEvidence_TextList;
            /** List of websites linked with this resource. */
            websiteList?: GoogleAdsGoogleadsV7Common_PolicyTopicEvidence_WebsiteList;
        }
        interface GoogleAdsGoogleadsV7Common__PolicyViolationKey {
            /** Unique ID of the violated policy. */
            policyName?: string;
            /**
             * The text that violates the policy if specified. Otherwise, refers to the policy in general (for example, when requesting to be exempt from the whole policy). If not specified for
             * criterion exemptions, the whole policy is implied. Must be specified for ad exemptions.
             */
            violatingText?: string;
        }
        interface GoogleAdsGoogleadsV7Common__Value {
            /** A boolean. */
            booleanValue?: boolean;
            /** A double. */
            doubleValue?: number;
            /** A float. */
            floatValue?: number;
            /** An int64. */
            int64Value?: string;
            /** A string. */
            stringValue?: string;
        }
        interface GoogleAdsGoogleadsV7Common_PolicyTopicConstraint_CountryConstraint {
            /** Geo target constant resource name of the country in which serving is constrained. */
            countryCriterion?: string;
        }
        interface GoogleAdsGoogleadsV7Common_PolicyTopicConstraint_CountryConstraintList {
            /** Countries in which serving is restricted. */
            countries?: GoogleAdsGoogleadsV7Common_PolicyTopicConstraint_CountryConstraint[];
            /** Total number of countries targeted by the resource. */
            totalTargetedCountries?: number;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV7Common_PolicyTopicConstraint_ResellerConstraint {
        }
        interface GoogleAdsGoogleadsV7Common_PolicyTopicEvidence_DestinationMismatch {
            /** The set of URLs that did not match each other. */
            urlTypes?: string[];
        }
        interface GoogleAdsGoogleadsV7Common_PolicyTopicEvidence_DestinationNotWorking {
            /** The type of device that failed to load the URL. */
            device?: string;
            /** The type of DNS error. */
            dnsErrorType?: string;
            /** The full URL that didn't work. */
            expandedUrl?: string;
            /** The HTTP error code. */
            httpErrorCode?: string;
            /** The time the URL was last checked. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30" */
            lastCheckedDateTime?: string;
        }
        interface GoogleAdsGoogleadsV7Common_PolicyTopicEvidence_DestinationTextList {
            /** List of text found in the resource's destination page. */
            destinationTexts?: string[];
        }
        interface GoogleAdsGoogleadsV7Common_PolicyTopicEvidence_TextList {
            /** The fragments of text from the resource that caused the policy finding. */
            texts?: string[];
        }
        interface GoogleAdsGoogleadsV7Common_PolicyTopicEvidence_WebsiteList {
            /** Websites that caused the policy finding. */
            websites?: string[];
        }
        interface GoogleAdsGoogleadsV7Errors__ErrorCode {
            /** The reasons for the access invitation error */
            accessInvitationError?: string;
            /** The reasons for account budget proposal errors. */
            accountBudgetProposalError?: string;
            /** The reasons for the account link status change error */
            accountLinkError?: string;
            /** The reasons for the ad customizer error */
            adCustomizerError?: string;
            /** An error with an Ad Group Ad mutate. */
            adError?: string;
            /** The reasons for the ad group ad error */
            adGroupAdError?: string;
            /** The reasons for the ad group bid modifier error */
            adGroupBidModifierError?: string;
            /** Indicates failure to properly authenticate user. */
            adGroupCriterionError?: string;
            /** An error with an Ad Group mutate. */
            adGroupError?: string;
            /** The reasons for the ad group feed error */
            adGroupFeedError?: string;
            /** The reasons for the ad parameter error */
            adParameterError?: string;
            /** The reasons for the ad sharing error */
            adSharingError?: string;
            /** The reasons for the adx error */
            adxError?: string;
            /** The reasons for the asset error */
            assetError?: string;
            /** The reasons for the asset link error */
            assetLinkError?: string;
            /** Indicates failure to properly authenticate user. */
            authenticationError?: string;
            /** An error encountered when trying to authorize a user. */
            authorizationError?: string;
            /** The reasons for the batch job error */
            batchJobError?: string;
            /** The reasons for the bidding errors */
            biddingError?: string;
            /** An error with a Bidding Strategy mutate. */
            biddingStrategyError?: string;
            /** The reasons for the billing setup error */
            billingSetupError?: string;
            /** An error with a Campaign Budget mutate. */
            campaignBudgetError?: string;
            /** The reasons for the campaign criterion error */
            campaignCriterionError?: string;
            /** The reasons for the campaign draft error */
            campaignDraftError?: string;
            /** An error with a Campaign mutate. */
            campaignError?: string;
            /** The reasons for the campaign experiment error */
            campaignExperimentError?: string;
            /** The reasons for the campaign feed error */
            campaignFeedError?: string;
            /** The reasons for the campaign shared set error */
            campaignSharedSetError?: string;
            /** The reasons for the change event error */
            changeEventError?: string;
            /** The reasons for the change status error */
            changeStatusError?: string;
            /** The reasons for the collection size error */
            collectionSizeError?: string;
            /** The reasons for the context error */
            contextError?: string;
            /** The reasons for the conversion action error */
            conversionActionError?: string;
            /** The reasons for the conversion adjustment upload error */
            conversionAdjustmentUploadError?: string;
            /** The reasons for the conversion custom variable error */
            conversionCustomVariableError?: string;
            /** The reasons for the conversion upload error */
            conversionUploadError?: string;
            /** The reasons for the country code error */
            countryCodeError?: string;
            /** The reasons for the criterion error */
            criterionError?: string;
            /** The reasons for the currency code error */
            currencyCodeError?: string;
            /** The reasons for the custom audience error */
            customAudienceError?: string;
            /** The reasons for the customer client link error */
            customerClientLinkError?: string;
            /** The reasons for the customer error */
            customerError?: string;
            /** The reasons for the customer feed error */
            customerFeedError?: string;
            /** The reasons for the customer manager link error */
            customerManagerLinkError?: string;
            /** The reasons for the customer user access mutate error */
            customerUserAccessError?: string;
            /** The reasons for the custom interest error */
            customInterestError?: string;
            /** The reasons for the database error. */
            databaseError?: string;
            /** The reasons for the date error */
            dateError?: string;
            /** The reasons for the date range error */
            dateRangeError?: string;
            /** The reasons for the distinct error */
            distinctError?: string;
            /** The reason for enum error. */
            enumError?: string;
            /** The reasons for the extension feed item error */
            extensionFeedItemError?: string;
            /** The reasons for the extension setting error */
            extensionSettingError?: string;
            /** The reasons for the feed attribute reference error */
            feedAttributeReferenceError?: string;
            /** The reasons for the feed error */
            feedError?: string;
            /** The reasons for the feed item error */
            feedItemError?: string;
            /** The reasons for the feed item set error */
            feedItemSetError?: string;
            /** The reasons for the feed item set link error */
            feedItemSetLinkError?: string;
            /** The reasons for the feed item target error */
            feedItemTargetError?: string;
            /** The reasons for the feed item validation error */
            feedItemValidationError?: string;
            /** The reasons for the feed mapping error */
            feedMappingError?: string;
            /** The reasons for the field error */
            fieldError?: string;
            /** An error with a field mask */
            fieldMaskError?: string;
            /** The reasons for the function error */
            functionError?: string;
            /** The reasons for the function parsing error */
            functionParsingError?: string;
            /** The reasons for the geo target constant suggestion error. */
            geoTargetConstantSuggestionError?: string;
            /** The reasons for the header error. */
            headerError?: string;
            /** The reasons for the id error */
            idError?: string;
            /** The reasons for the image error */
            imageError?: string;
            /** An unexpected server-side error. */
            internalError?: string;
            /** The reasons for the invoice error */
            invoiceError?: string;
            /** The reason for keyword plan ad group error. */
            keywordPlanAdGroupError?: string;
            /** The reason for keyword plan ad group keyword error. */
            keywordPlanAdGroupKeywordError?: string;
            /** The reason for keyword plan campaign error. */
            keywordPlanCampaignError?: string;
            /** The reason for keyword plan campaign keyword error. */
            keywordPlanCampaignKeywordError?: string;
            /** The reason for keyword plan error. */
            keywordPlanError?: string;
            /** The reason for keyword idea error. */
            keywordPlanIdeaError?: string;
            /** The reason for the label error. */
            labelError?: string;
            /** The reasons for the language code error */
            languageCodeError?: string;
            /** An error with a list operation. */
            listOperationError?: string;
            /** The reasons for the manager link error */
            managerLinkError?: string;
            /** The reasons for the media bundle error */
            mediaBundleError?: string;
            /** The reasons for the media file error */
            mediaFileError?: string;
            /** The reasons for media uploading errors. */
            mediaUploadError?: string;
            /** The reasons for the multiplier error */
            multiplierError?: string;
            /** An error with a mutate */
            mutateError?: string;
            /** The reasons for the new resource creation error */
            newResourceCreationError?: string;
            /** The reasons for the not allowlisted error */
            notAllowlistedError?: string;
            /** The reasons for the not empty error */
            notEmptyError?: string;
            /** The reasons for the null error */
            nullError?: string;
            /** The reasons for the offline user data job error. */
            offlineUserDataJobError?: string;
            /** The reasons for the operation access denied error */
            operationAccessDeniedError?: string;
            /** The reasons for the operator error */
            operatorError?: string;
            /** The reasons for the mutate job error */
            partialFailureError?: string;
            /** The reasons for errors in payments accounts service */
            paymentsAccountError?: string;
            /** The reasons for the policy finding error. */
            policyFindingError?: string;
            /** The reasons for the policy validation parameter error */
            policyValidationParameterError?: string;
            /** The reasons for the policy violation error */
            policyViolationError?: string;
            /** An error with an AWQL query */
            queryError?: string;
            /** An error with the amonut of quota remaining. */
            quotaError?: string;
            /** The reasons for the range error */
            rangeError?: string;
            /** The reasons for the reach plan error */
            reachPlanError?: string;
            /** The reasons for error in applying a recommendation */
            recommendationError?: string;
            /** The reasons for the region code error */
            regionCodeError?: string;
            /** An error caused by the request */
            requestError?: string;
            /** The reasons for the resource access denied error */
            resourceAccessDeniedError?: string;
            /** The reasons for the resource count limit exceeded error */
            resourceCountLimitExceededError?: string;
            /** The reasons for the setting error */
            settingError?: string;
            /** The reasons for the shared criterion error */
            sharedCriterionError?: string;
            /** The reasons for the shared set error */
            sharedSetError?: string;
            /** The reasons for the size limit error */
            sizeLimitError?: string;
            /** The reasons for the string format error */
            stringFormatError?: string;
            /** The reasons for the string length error */
            stringLengthError?: string;
            /** The reasons for the third party app analytics link mutate error */
            thirdPartyAppAnalyticsLinkError?: string;
            /** The reasons for the time zone error */
            timeZoneError?: string;
            /** An error with a URL field mutate. */
            urlFieldError?: string;
            /** The reasons for the user data error. */
            userDataError?: string;
            /** The reasons for the user list error */
            userListError?: string;
            /** The reasons for YouTube video registration errors. */
            youtubeVideoRegistrationError?: string;
        }
        interface GoogleAdsGoogleadsV7Errors__ErrorDetails {
            /** Describes policy violation findings. */
            policyFindingDetails?: GoogleAdsGoogleadsV7Errors__PolicyFindingDetails;
            /** Describes an ad policy violation. */
            policyViolationDetails?: GoogleAdsGoogleadsV7Errors__PolicyViolationDetails;
            /** Details on the quota error, including the scope (account or developer), the rate bucket name and the retry delay. */
            quotaErrorDetails?: GoogleAdsGoogleadsV7Errors__QuotaErrorDetails;
            /** Details for a resource count limit exceeded error. */
            resourceCountDetails?: GoogleAdsGoogleadsV7Errors__ResourceCountDetails;
            /** The error code that should have been returned, but wasn't. This is used when the error code is not published in the client specified version. */
            unpublishedErrorCode?: string;
        }
        interface GoogleAdsGoogleadsV7Errors__ErrorLocation {
            /** A field path that indicates which field was invalid in the request. */
            fieldPathElements?: GoogleAdsGoogleadsV7Errors_ErrorLocation_FieldPathElement[];
        }
        interface GoogleAdsGoogleadsV7Errors__GoogleAdsError {
            /** Additional error details, which are returned by certain error codes. Most error codes do not include details. */
            details?: GoogleAdsGoogleadsV7Errors__ErrorDetails;
            /** An enum value that indicates which error occurred. */
            errorCode?: GoogleAdsGoogleadsV7Errors__ErrorCode;
            /** Describes the part of the request proto that caused the error. */
            location?: GoogleAdsGoogleadsV7Errors__ErrorLocation;
            /** A human-readable description of the error. */
            message?: string;
            /** The value that triggered the error. */
            trigger?: GoogleAdsGoogleadsV7Common__Value;
        }
        interface GoogleAdsGoogleadsV7Errors__GoogleAdsFailure {
            /** The list of errors that occurred. */
            errors?: GoogleAdsGoogleadsV7Errors__GoogleAdsError[];
            /** The unique ID of the request that is used for debugging purposes. */
            requestId?: string;
        }
        interface GoogleAdsGoogleadsV7Errors__PolicyFindingDetails {
            /**
             * The list of policy topics for the resource. Contains the PROHIBITED or FULLY_LIMITED policy topic entries that prevented the resource from being saved (among any other entries the
             * resource may also have).
             */
            policyTopicEntries?: GoogleAdsGoogleadsV7Common__PolicyTopicEntry[];
        }
        interface GoogleAdsGoogleadsV7Errors__PolicyViolationDetails {
            /** Human readable description of policy violation. */
            externalPolicyDescription?: string;
            /** Human readable name of the policy. */
            externalPolicyName?: string;
            /** Whether user can file an exemption request for this violation. */
            isExemptible?: boolean;
            /** Unique identifier for this violation. If policy is exemptible, this key may be used to request exemption. */
            key?: GoogleAdsGoogleadsV7Common__PolicyViolationKey;
        }
        interface GoogleAdsGoogleadsV7Errors__QuotaErrorDetails {
            /** The high level description of the quota bucket. Examples are "Get requests for standard access" or "Requests per account". */
            rateName?: string;
            /** The rate scope of the quota limit. */
            rateScope?: string;
            /** Backoff period that customers should wait before sending next request. */
            retryDelay?: string;
        }
        interface GoogleAdsGoogleadsV7Errors__ResourceCountDetails {
            /** The ID of the resource whose limit was exceeded. External customer ID if the limit is for a customer. */
            enclosingId?: string;
            /** The name of the resource (Customer, Campaign etc.) whose limit was exceeded. */
            enclosingResource?: string;
            /** The count of existing entities. */
            existingCount?: number;
            /** The limit which was exceeded. */
            limit?: number;
            /** The resource limit type which was exceeded. */
            limitType?: string;
        }
        interface GoogleAdsGoogleadsV7Errors_ErrorLocation_FieldPathElement {
            /** The name of a field or a oneof */
            fieldName?: string;
            /** If field_name is a repeated field, this is the element that failed */
            index?: number;
        }
        interface GoogleAdsGoogleadsV7Resources_BatchJob_BatchJobMetadata {
            /** Output only. The time when this batch job was completed. Formatted as yyyy-MM-dd HH:mm:ss. Example: "2018-03-05 09:16:00" */
            completionDateTime?: string;
            /** Output only. The time when this batch job was created. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:00" */
            creationDateTime?: string;
            /** Output only. The fraction (between 0.0 and 1.0) of mutates that have been processed. This is empty if the job hasn't started running yet. */
            estimatedCompletionRatio?: number;
            /** Output only. The number of mutate operations executed by the batch job. Present only if the job has started running. */
            executedOperationCount?: string;
            /** Output only. The number of mutate operations in the batch job. */
            operationCount?: string;
            /** Output only. The time when this batch job started running. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:30" */
            startDateTime?: string;
        }
        interface GoogleAdsGoogleadsV7Services__CreateCampaignExperimentMetadata {
            /** Resource name of campaign experiment created. */
            campaignExperiment?: string;
        }
        interface GoogleAdsGoogleadsV8Common__PolicyTopicConstraint {
            /** Countries where the resource's domain is not covered by the certificates associated with it. */
            certificateDomainMismatchInCountryList?: GoogleAdsGoogleadsV8Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where a certificate is required for serving. */
            certificateMissingInCountryList?: GoogleAdsGoogleadsV8Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where the resource cannot serve. */
            countryConstraintList?: GoogleAdsGoogleadsV8Common_PolicyTopicConstraint_CountryConstraintList;
            /** Reseller constraint. */
            resellerConstraint?: any;
        }
        interface GoogleAdsGoogleadsV8Common__PolicyTopicEntry {
            /** Indicates how serving of this resource may be affected (for example, not serving in a country). */
            constraints?: GoogleAdsGoogleadsV8Common__PolicyTopicConstraint[];
            /** Additional information that explains policy finding (for example, the brand name for a trademark finding). */
            evidences?: GoogleAdsGoogleadsV8Common__PolicyTopicEvidence[];
            /**
             * Policy topic this finding refers to. For example, "ALCOHOL", "TRADEMARKS_IN_AD_TEXT", or "DESTINATION_NOT_WORKING". The set of possible policy topics is not fixed for a particular
             * API version and may change at any time.
             */
            topic?: string;
            /** Describes the negative or positive effect this policy will have on serving. */
            type?: string;
        }
        interface GoogleAdsGoogleadsV8Common__PolicyTopicEvidence {
            /** Mismatch between the destinations of a resource's URLs. */
            destinationMismatch?: GoogleAdsGoogleadsV8Common_PolicyTopicEvidence_DestinationMismatch;
            /** Details when the destination is returning an HTTP error code or isn't functional in all locations for commonly used devices. */
            destinationNotWorking?: GoogleAdsGoogleadsV8Common_PolicyTopicEvidence_DestinationNotWorking;
            /** The text in the destination of the resource that is causing a policy finding. */
            destinationTextList?: GoogleAdsGoogleadsV8Common_PolicyTopicEvidence_DestinationTextList;
            /** The language the resource was detected to be written in. This is an IETF language tag such as "en-US". */
            languageCode?: string;
            /** List of evidence found in the text of a resource. */
            textList?: GoogleAdsGoogleadsV8Common_PolicyTopicEvidence_TextList;
            /** List of websites linked with this resource. */
            websiteList?: GoogleAdsGoogleadsV8Common_PolicyTopicEvidence_WebsiteList;
        }
        interface GoogleAdsGoogleadsV8Common__PolicyViolationKey {
            /** Unique ID of the violated policy. */
            policyName?: string;
            /**
             * The text that violates the policy if specified. Otherwise, refers to the policy in general (for example, when requesting to be exempt from the whole policy). If not specified for
             * criterion exemptions, the whole policy is implied. Must be specified for ad exemptions.
             */
            violatingText?: string;
        }
        interface GoogleAdsGoogleadsV8Common__Value {
            /** A boolean. */
            booleanValue?: boolean;
            /** A double. */
            doubleValue?: number;
            /** A float. */
            floatValue?: number;
            /** An int64. */
            int64Value?: string;
            /** A string. */
            stringValue?: string;
        }
        interface GoogleAdsGoogleadsV8Common_PolicyTopicConstraint_CountryConstraint {
            /** Geo target constant resource name of the country in which serving is constrained. */
            countryCriterion?: string;
        }
        interface GoogleAdsGoogleadsV8Common_PolicyTopicConstraint_CountryConstraintList {
            /** Countries in which serving is restricted. */
            countries?: GoogleAdsGoogleadsV8Common_PolicyTopicConstraint_CountryConstraint[];
            /** Total number of countries targeted by the resource. */
            totalTargetedCountries?: number;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV8Common_PolicyTopicConstraint_ResellerConstraint {
        }
        interface GoogleAdsGoogleadsV8Common_PolicyTopicEvidence_DestinationMismatch {
            /** The set of URLs that did not match each other. */
            urlTypes?: string[];
        }
        interface GoogleAdsGoogleadsV8Common_PolicyTopicEvidence_DestinationNotWorking {
            /** The type of device that failed to load the URL. */
            device?: string;
            /** The type of DNS error. */
            dnsErrorType?: string;
            /** The full URL that didn't work. */
            expandedUrl?: string;
            /** The HTTP error code. */
            httpErrorCode?: string;
            /** The time the URL was last checked. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30" */
            lastCheckedDateTime?: string;
        }
        interface GoogleAdsGoogleadsV8Common_PolicyTopicEvidence_DestinationTextList {
            /** List of text found in the resource's destination page. */
            destinationTexts?: string[];
        }
        interface GoogleAdsGoogleadsV8Common_PolicyTopicEvidence_TextList {
            /** The fragments of text from the resource that caused the policy finding. */
            texts?: string[];
        }
        interface GoogleAdsGoogleadsV8Common_PolicyTopicEvidence_WebsiteList {
            /** Websites that caused the policy finding. */
            websites?: string[];
        }
        interface GoogleAdsGoogleadsV8Errors__ErrorCode {
            /** The reasons for the access invitation error */
            accessInvitationError?: string;
            /** The reasons for account budget proposal errors. */
            accountBudgetProposalError?: string;
            /** The reasons for the account link status change error */
            accountLinkError?: string;
            /** The reasons for the ad customizer error */
            adCustomizerError?: string;
            /** An error with an Ad Group Ad mutate. */
            adError?: string;
            /** The reasons for the ad group ad error */
            adGroupAdError?: string;
            /** The reasons for the ad group bid modifier error */
            adGroupBidModifierError?: string;
            /** Indicates failure to properly authenticate user. */
            adGroupCriterionError?: string;
            /** An error with an Ad Group mutate. */
            adGroupError?: string;
            /** The reasons for the ad group feed error */
            adGroupFeedError?: string;
            /** The reasons for the ad parameter error */
            adParameterError?: string;
            /** The reasons for the ad sharing error */
            adSharingError?: string;
            /** The reasons for the adx error */
            adxError?: string;
            /** The reasons for the asset error */
            assetError?: string;
            /** The reasons for the asset link error */
            assetLinkError?: string;
            /** Indicates failure to properly authenticate user. */
            authenticationError?: string;
            /** An error encountered when trying to authorize a user. */
            authorizationError?: string;
            /** The reasons for the batch job error */
            batchJobError?: string;
            /** The reasons for the bidding errors */
            biddingError?: string;
            /** An error with a Bidding Strategy mutate. */
            biddingStrategyError?: string;
            /** The reasons for the billing setup error */
            billingSetupError?: string;
            /** An error with a Campaign Budget mutate. */
            campaignBudgetError?: string;
            /** The reasons for the campaign criterion error */
            campaignCriterionError?: string;
            /** The reasons for the campaign draft error */
            campaignDraftError?: string;
            /** An error with a Campaign mutate. */
            campaignError?: string;
            /** The reasons for the campaign experiment error */
            campaignExperimentError?: string;
            /** The reasons for the campaign feed error */
            campaignFeedError?: string;
            /** The reasons for the campaign shared set error */
            campaignSharedSetError?: string;
            /** The reasons for the change event error */
            changeEventError?: string;
            /** The reasons for the change status error */
            changeStatusError?: string;
            /** The reasons for the collection size error */
            collectionSizeError?: string;
            /** The reasons for the context error */
            contextError?: string;
            /** The reasons for the conversion action error */
            conversionActionError?: string;
            /** The reasons for the conversion adjustment upload error */
            conversionAdjustmentUploadError?: string;
            /** The reasons for the conversion custom variable error */
            conversionCustomVariableError?: string;
            /** The reasons for the conversion upload error */
            conversionUploadError?: string;
            /** The reasons for the conversion value rule error */
            conversionValueRuleError?: string;
            /** The reasons for the conversion value rule set error */
            conversionValueRuleSetError?: string;
            /** The reasons for the country code error */
            countryCodeError?: string;
            /** The reasons for the criterion error */
            criterionError?: string;
            /** The reasons for the currency code error */
            currencyCodeError?: string;
            /** The reasons for the custom audience error */
            customAudienceError?: string;
            /** The reasons for the customer client link error */
            customerClientLinkError?: string;
            /** The reasons for the customer error */
            customerError?: string;
            /** The reasons for the customer feed error */
            customerFeedError?: string;
            /** The reasons for the customer manager link error */
            customerManagerLinkError?: string;
            /** The reasons for the customer user access mutate error */
            customerUserAccessError?: string;
            /** The reasons for the custom interest error */
            customInterestError?: string;
            /** The reasons for the database error. */
            databaseError?: string;
            /** The reasons for the date error */
            dateError?: string;
            /** The reasons for the date range error */
            dateRangeError?: string;
            /** The reasons for the distinct error */
            distinctError?: string;
            /** The reason for enum error. */
            enumError?: string;
            /** The reasons for the extension feed item error */
            extensionFeedItemError?: string;
            /** The reasons for the extension setting error */
            extensionSettingError?: string;
            /** The reasons for the feed attribute reference error */
            feedAttributeReferenceError?: string;
            /** The reasons for the feed error */
            feedError?: string;
            /** The reasons for the feed item error */
            feedItemError?: string;
            /** The reasons for the feed item set error */
            feedItemSetError?: string;
            /** The reasons for the feed item set link error */
            feedItemSetLinkError?: string;
            /** The reasons for the feed item target error */
            feedItemTargetError?: string;
            /** The reasons for the feed item validation error */
            feedItemValidationError?: string;
            /** The reasons for the feed mapping error */
            feedMappingError?: string;
            /** The reasons for the field error */
            fieldError?: string;
            /** An error with a field mask */
            fieldMaskError?: string;
            /** The reasons for the function error */
            functionError?: string;
            /** The reasons for the function parsing error */
            functionParsingError?: string;
            /** The reasons for the geo target constant suggestion error. */
            geoTargetConstantSuggestionError?: string;
            /** The reasons for the header error. */
            headerError?: string;
            /** The reasons for the id error */
            idError?: string;
            /** The reasons for the image error */
            imageError?: string;
            /** An unexpected server-side error. */
            internalError?: string;
            /** The reasons for the invoice error */
            invoiceError?: string;
            /** The reason for keyword plan ad group error. */
            keywordPlanAdGroupError?: string;
            /** The reason for keyword plan ad group keyword error. */
            keywordPlanAdGroupKeywordError?: string;
            /** The reason for keyword plan campaign error. */
            keywordPlanCampaignError?: string;
            /** The reason for keyword plan campaign keyword error. */
            keywordPlanCampaignKeywordError?: string;
            /** The reason for keyword plan error. */
            keywordPlanError?: string;
            /** The reason for keyword idea error. */
            keywordPlanIdeaError?: string;
            /** The reason for the label error. */
            labelError?: string;
            /** The reasons for the language code error */
            languageCodeError?: string;
            /** An error with a list operation. */
            listOperationError?: string;
            /** The reasons for the manager link error */
            managerLinkError?: string;
            /** The reasons for the media bundle error */
            mediaBundleError?: string;
            /** The reasons for the media file error */
            mediaFileError?: string;
            /** The reasons for media uploading errors. */
            mediaUploadError?: string;
            /** The reasons for the multiplier error */
            multiplierError?: string;
            /** An error with a mutate */
            mutateError?: string;
            /** The reasons for the new resource creation error */
            newResourceCreationError?: string;
            /** The reasons for the not allowlisted error */
            notAllowlistedError?: string;
            /** The reasons for the not empty error */
            notEmptyError?: string;
            /** The reasons for the null error */
            nullError?: string;
            /** The reasons for the offline user data job error. */
            offlineUserDataJobError?: string;
            /** The reasons for the operation access denied error */
            operationAccessDeniedError?: string;
            /** The reasons for the operator error */
            operatorError?: string;
            /** The reasons for the mutate job error */
            partialFailureError?: string;
            /** The reasons for errors in payments accounts service */
            paymentsAccountError?: string;
            /** The reasons for the policy finding error. */
            policyFindingError?: string;
            /** The reasons for the policy validation parameter error */
            policyValidationParameterError?: string;
            /** The reasons for the policy violation error */
            policyViolationError?: string;
            /** An error with an AWQL query */
            queryError?: string;
            /** An error with the amonut of quota remaining. */
            quotaError?: string;
            /** The reasons for the range error */
            rangeError?: string;
            /** The reasons for the reach plan error */
            reachPlanError?: string;
            /** The reasons for error in applying a recommendation */
            recommendationError?: string;
            /** The reasons for the region code error */
            regionCodeError?: string;
            /** An error caused by the request */
            requestError?: string;
            /** The reasons for the resource access denied error */
            resourceAccessDeniedError?: string;
            /** The reasons for the resource count limit exceeded error */
            resourceCountLimitExceededError?: string;
            /** The reasons for the setting error */
            settingError?: string;
            /** The reasons for the shared criterion error */
            sharedCriterionError?: string;
            /** The reasons for the shared set error */
            sharedSetError?: string;
            /** The reasons for the size limit error */
            sizeLimitError?: string;
            /** The reasons for the string format error */
            stringFormatError?: string;
            /** The reasons for the string length error */
            stringLengthError?: string;
            /** The reasons for the third party app analytics link mutate error */
            thirdPartyAppAnalyticsLinkError?: string;
            /** The reasons for the time zone error */
            timeZoneError?: string;
            /** An error with a URL field mutate. */
            urlFieldError?: string;
            /** The reasons for the user data error. */
            userDataError?: string;
            /** The reasons for the user list error */
            userListError?: string;
            /** The reasons for YouTube video registration errors. */
            youtubeVideoRegistrationError?: string;
        }
        interface GoogleAdsGoogleadsV8Errors__ErrorDetails {
            /** Describes policy violation findings. */
            policyFindingDetails?: GoogleAdsGoogleadsV8Errors__PolicyFindingDetails;
            /** Describes an ad policy violation. */
            policyViolationDetails?: GoogleAdsGoogleadsV8Errors__PolicyViolationDetails;
            /** Details on the quota error, including the scope (account or developer), the rate bucket name and the retry delay. */
            quotaErrorDetails?: GoogleAdsGoogleadsV8Errors__QuotaErrorDetails;
            /** Details for a resource count limit exceeded error. */
            resourceCountDetails?: GoogleAdsGoogleadsV8Errors__ResourceCountDetails;
            /** The error code that should have been returned, but wasn't. This is used when the error code is not published in the client specified version. */
            unpublishedErrorCode?: string;
        }
        interface GoogleAdsGoogleadsV8Errors__ErrorLocation {
            /** A field path that indicates which field was invalid in the request. */
            fieldPathElements?: GoogleAdsGoogleadsV8Errors_ErrorLocation_FieldPathElement[];
        }
        interface GoogleAdsGoogleadsV8Errors__GoogleAdsError {
            /** Additional error details, which are returned by certain error codes. Most error codes do not include details. */
            details?: GoogleAdsGoogleadsV8Errors__ErrorDetails;
            /** An enum value that indicates which error occurred. */
            errorCode?: GoogleAdsGoogleadsV8Errors__ErrorCode;
            /** Describes the part of the request proto that caused the error. */
            location?: GoogleAdsGoogleadsV8Errors__ErrorLocation;
            /** A human-readable description of the error. */
            message?: string;
            /** The value that triggered the error. */
            trigger?: GoogleAdsGoogleadsV8Common__Value;
        }
        interface GoogleAdsGoogleadsV8Errors__GoogleAdsFailure {
            /** The list of errors that occurred. */
            errors?: GoogleAdsGoogleadsV8Errors__GoogleAdsError[];
            /** The unique ID of the request that is used for debugging purposes. */
            requestId?: string;
        }
        interface GoogleAdsGoogleadsV8Errors__PolicyFindingDetails {
            /**
             * The list of policy topics for the resource. Contains the PROHIBITED or FULLY_LIMITED policy topic entries that prevented the resource from being saved (among any other entries the
             * resource may also have).
             */
            policyTopicEntries?: GoogleAdsGoogleadsV8Common__PolicyTopicEntry[];
        }
        interface GoogleAdsGoogleadsV8Errors__PolicyViolationDetails {
            /** Human readable description of policy violation. */
            externalPolicyDescription?: string;
            /** Human readable name of the policy. */
            externalPolicyName?: string;
            /** Whether user can file an exemption request for this violation. */
            isExemptible?: boolean;
            /** Unique identifier for this violation. If policy is exemptible, this key may be used to request exemption. */
            key?: GoogleAdsGoogleadsV8Common__PolicyViolationKey;
        }
        interface GoogleAdsGoogleadsV8Errors__QuotaErrorDetails {
            /** The high level description of the quota bucket. Examples are "Get requests for standard access" or "Requests per account". */
            rateName?: string;
            /** The rate scope of the quota limit. */
            rateScope?: string;
            /** Backoff period that customers should wait before sending next request. */
            retryDelay?: string;
        }
        interface GoogleAdsGoogleadsV8Errors__ResourceCountDetails {
            /** The ID of the resource whose limit was exceeded. External customer ID if the limit is for a customer. */
            enclosingId?: string;
            /** The name of the resource (Customer, Campaign etc.) whose limit was exceeded. */
            enclosingResource?: string;
            /** The count of existing entities. */
            existingCount?: number;
            /** The limit which was exceeded. */
            limit?: number;
            /** The resource limit type which was exceeded. */
            limitType?: string;
        }
        interface GoogleAdsGoogleadsV8Errors_ErrorLocation_FieldPathElement {
            /** The name of a field or a oneof */
            fieldName?: string;
            /** If field_name is a repeated field, this is the element that failed */
            index?: number;
        }
        interface GoogleAdsGoogleadsV8Resources_BatchJob_BatchJobMetadata {
            /** Output only. The time when this batch job was completed. Formatted as yyyy-MM-dd HH:mm:ss. Example: "2018-03-05 09:16:00" */
            completionDateTime?: string;
            /** Output only. The time when this batch job was created. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:00" */
            creationDateTime?: string;
            /** Output only. The fraction (between 0.0 and 1.0) of mutates that have been processed. This is empty if the job hasn't started running yet. */
            estimatedCompletionRatio?: number;
            /** Output only. The number of mutate operations executed by the batch job. Present only if the job has started running. */
            executedOperationCount?: string;
            /** Output only. The number of mutate operations in the batch job. */
            operationCount?: string;
            /** Output only. The time when this batch job started running. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:30" */
            startDateTime?: string;
        }
        interface GoogleAdsGoogleadsV8Services__CreateCampaignExperimentMetadata {
            /** Resource name of campaign experiment created. */
            campaignExperiment?: string;
        }
        interface GoogleAdsGoogleadsV9Common__PolicyTopicConstraint {
            /** Countries where the resource's domain is not covered by the certificates associated with it. */
            certificateDomainMismatchInCountryList?: GoogleAdsGoogleadsV9Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where a certificate is required for serving. */
            certificateMissingInCountryList?: GoogleAdsGoogleadsV9Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where the resource cannot serve. */
            countryConstraintList?: GoogleAdsGoogleadsV9Common_PolicyTopicConstraint_CountryConstraintList;
            /** Reseller constraint. */
            resellerConstraint?: any;
        }
        interface GoogleAdsGoogleadsV9Common__PolicyTopicEntry {
            /** Indicates how serving of this resource may be affected (for example, not serving in a country). */
            constraints?: GoogleAdsGoogleadsV9Common__PolicyTopicConstraint[];
            /** Additional information that explains policy finding (for example, the brand name for a trademark finding). */
            evidences?: GoogleAdsGoogleadsV9Common__PolicyTopicEvidence[];
            /**
             * Policy topic this finding refers to. For example, "ALCOHOL", "TRADEMARKS_IN_AD_TEXT", or "DESTINATION_NOT_WORKING". The set of possible policy topics is not fixed for a particular
             * API version and may change at any time.
             */
            topic?: string;
            /** Describes the negative or positive effect this policy will have on serving. */
            type?: string;
        }
        interface GoogleAdsGoogleadsV9Common__PolicyTopicEvidence {
            /** Mismatch between the destinations of a resource's URLs. */
            destinationMismatch?: GoogleAdsGoogleadsV9Common_PolicyTopicEvidence_DestinationMismatch;
            /** Details when the destination is returning an HTTP error code or isn't functional in all locations for commonly used devices. */
            destinationNotWorking?: GoogleAdsGoogleadsV9Common_PolicyTopicEvidence_DestinationNotWorking;
            /** The text in the destination of the resource that is causing a policy finding. */
            destinationTextList?: GoogleAdsGoogleadsV9Common_PolicyTopicEvidence_DestinationTextList;
            /** The language the resource was detected to be written in. This is an IETF language tag such as "en-US". */
            languageCode?: string;
            /** List of evidence found in the text of a resource. */
            textList?: GoogleAdsGoogleadsV9Common_PolicyTopicEvidence_TextList;
            /** List of websites linked with this resource. */
            websiteList?: GoogleAdsGoogleadsV9Common_PolicyTopicEvidence_WebsiteList;
        }
        interface GoogleAdsGoogleadsV9Common__PolicyViolationKey {
            /** Unique ID of the violated policy. */
            policyName?: string;
            /**
             * The text that violates the policy if specified. Otherwise, refers to the policy in general (for example, when requesting to be exempt from the whole policy). If not specified for
             * criterion exemptions, the whole policy is implied. Must be specified for ad exemptions.
             */
            violatingText?: string;
        }
        interface GoogleAdsGoogleadsV9Common__Value {
            /** A boolean. */
            booleanValue?: boolean;
            /** A double. */
            doubleValue?: number;
            /** A float. */
            floatValue?: number;
            /** An int64. */
            int64Value?: string;
            /** A string. */
            stringValue?: string;
        }
        interface GoogleAdsGoogleadsV9Common_PolicyTopicConstraint_CountryConstraint {
            /** Geo target constant resource name of the country in which serving is constrained. */
            countryCriterion?: string;
        }
        interface GoogleAdsGoogleadsV9Common_PolicyTopicConstraint_CountryConstraintList {
            /** Countries in which serving is restricted. */
            countries?: GoogleAdsGoogleadsV9Common_PolicyTopicConstraint_CountryConstraint[];
            /** Total number of countries targeted by the resource. */
            totalTargetedCountries?: number;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV9Common_PolicyTopicConstraint_ResellerConstraint {
        }
        interface GoogleAdsGoogleadsV9Common_PolicyTopicEvidence_DestinationMismatch {
            /** The set of URLs that did not match each other. */
            urlTypes?: string[];
        }
        interface GoogleAdsGoogleadsV9Common_PolicyTopicEvidence_DestinationNotWorking {
            /** The type of device that failed to load the URL. */
            device?: string;
            /** The type of DNS error. */
            dnsErrorType?: string;
            /** The full URL that didn't work. */
            expandedUrl?: string;
            /** The HTTP error code. */
            httpErrorCode?: string;
            /** The time the URL was last checked. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30" */
            lastCheckedDateTime?: string;
        }
        interface GoogleAdsGoogleadsV9Common_PolicyTopicEvidence_DestinationTextList {
            /** List of text found in the resource's destination page. */
            destinationTexts?: string[];
        }
        interface GoogleAdsGoogleadsV9Common_PolicyTopicEvidence_TextList {
            /** The fragments of text from the resource that caused the policy finding. */
            texts?: string[];
        }
        interface GoogleAdsGoogleadsV9Common_PolicyTopicEvidence_WebsiteList {
            /** Websites that caused the policy finding. */
            websites?: string[];
        }
        interface GoogleAdsGoogleadsV9Errors__ErrorCode {
            /** The reasons for the access invitation error */
            accessInvitationError?: string;
            /** The reasons for account budget proposal errors. */
            accountBudgetProposalError?: string;
            /** The reasons for the account link status change error */
            accountLinkError?: string;
            /** The reasons for the ad customizer error */
            adCustomizerError?: string;
            /** An error with an Ad Group Ad mutate. */
            adError?: string;
            /** The reasons for the ad group ad error */
            adGroupAdError?: string;
            /** The reasons for the ad group bid modifier error */
            adGroupBidModifierError?: string;
            /** The reasons for the ad group criterion customizer error. */
            adGroupCriterionCustomizerError?: string;
            /** Indicates failure to properly authenticate user. */
            adGroupCriterionError?: string;
            /** The reasons for the ad group customizer error. */
            adGroupCustomizerError?: string;
            /** An error with an Ad Group mutate. */
            adGroupError?: string;
            /** The reasons for the ad group feed error */
            adGroupFeedError?: string;
            /** The reasons for the ad parameter error */
            adParameterError?: string;
            /** The reasons for the ad sharing error */
            adSharingError?: string;
            /** The reasons for the adx error */
            adxError?: string;
            /** The reasons for the asset error */
            assetError?: string;
            /** The reasons for the asset group asset error */
            assetGroupAssetError?: string;
            /** The reasons for the asset group error */
            assetGroupError?: string;
            /** The reasons for the asset group listing group filter error */
            assetGroupListingGroupFilterError?: string;
            /** The reasons for the asset link error */
            assetLinkError?: string;
            /** The reasons for the asset set asset error */
            assetSetAssetError?: string;
            /** The reasons for the asset set error */
            assetSetError?: string;
            /** The reasons for the asset set link error */
            assetSetLinkError?: string;
            /** Indicates failure to properly authenticate user. */
            authenticationError?: string;
            /** An error encountered when trying to authorize a user. */
            authorizationError?: string;
            /** The reasons for the batch job error */
            batchJobError?: string;
            /** The reasons for the bidding errors */
            biddingError?: string;
            /** An error with a Bidding Strategy mutate. */
            biddingStrategyError?: string;
            /** The reasons for the billing setup error */
            billingSetupError?: string;
            /** An error with a Campaign Budget mutate. */
            campaignBudgetError?: string;
            /** The reasons for the campaign criterion error */
            campaignCriterionError?: string;
            /** The reasons for the campaign customizer error. */
            campaignCustomizerError?: string;
            /** The reasons for the campaign draft error */
            campaignDraftError?: string;
            /** An error with a Campaign mutate. */
            campaignError?: string;
            /** The reasons for the campaign experiment error */
            campaignExperimentError?: string;
            /** The reasons for the campaign feed error */
            campaignFeedError?: string;
            /** The reasons for the campaign shared set error */
            campaignSharedSetError?: string;
            /** The reasons for the change event error */
            changeEventError?: string;
            /** The reasons for the change status error */
            changeStatusError?: string;
            /** The reasons for the collection size error */
            collectionSizeError?: string;
            /** The reasons for the context error */
            contextError?: string;
            /** The reasons for the conversion action error */
            conversionActionError?: string;
            /** The reasons for the conversion adjustment upload error */
            conversionAdjustmentUploadError?: string;
            /** The reasons for the conversion custom variable error */
            conversionCustomVariableError?: string;
            /** The reasons for the conversion upload error */
            conversionUploadError?: string;
            /** The reasons for the conversion value rule error */
            conversionValueRuleError?: string;
            /** The reasons for the conversion value rule set error */
            conversionValueRuleSetError?: string;
            /** The reasons for the country code error */
            countryCodeError?: string;
            /** The reasons for the criterion error */
            criterionError?: string;
            /** The reasons for the currency code error */
            currencyCodeError?: string;
            /** The reasons for the custom audience error */
            customAudienceError?: string;
            /** The reasons for the custom conversion goal error */
            customConversionGoalError?: string;
            /** The reasons for the customer client link error */
            customerClientLinkError?: string;
            /** The reasons for the customer customizer error. */
            customerCustomizerError?: string;
            /** The reasons for the customer error */
            customerError?: string;
            /** The reasons for the customer feed error */
            customerFeedError?: string;
            /** The reasons for the customer manager link error */
            customerManagerLinkError?: string;
            /** The reasons for the customer user access mutate error */
            customerUserAccessError?: string;
            /** The reasons for the custom interest error */
            customInterestError?: string;
            /** The reasons for the customizer attribute error. */
            customizerAttributeError?: string;
            /** The reasons for the database error. */
            databaseError?: string;
            /** The reasons for the date error */
            dateError?: string;
            /** The reasons for the date range error */
            dateRangeError?: string;
            /** The reasons for the distinct error */
            distinctError?: string;
            /** The reason for enum error. */
            enumError?: string;
            /** The reasons for the extension feed item error */
            extensionFeedItemError?: string;
            /** The reasons for the extension setting error */
            extensionSettingError?: string;
            /** The reasons for the feed attribute reference error */
            feedAttributeReferenceError?: string;
            /** The reasons for the feed error */
            feedError?: string;
            /** The reasons for the feed item error */
            feedItemError?: string;
            /** The reasons for the feed item set error */
            feedItemSetError?: string;
            /** The reasons for the feed item set link error */
            feedItemSetLinkError?: string;
            /** The reasons for the feed item target error */
            feedItemTargetError?: string;
            /** The reasons for the feed item validation error */
            feedItemValidationError?: string;
            /** The reasons for the feed mapping error */
            feedMappingError?: string;
            /** The reasons for the field error */
            fieldError?: string;
            /** An error with a field mask */
            fieldMaskError?: string;
            /** The reasons for the function error */
            functionError?: string;
            /** The reasons for the function parsing error */
            functionParsingError?: string;
            /** The reasons for the geo target constant suggestion error. */
            geoTargetConstantSuggestionError?: string;
            /** The reasons for the header error. */
            headerError?: string;
            /** The reasons for the id error */
            idError?: string;
            /** The reasons for the image error */
            imageError?: string;
            /** An unexpected server-side error. */
            internalError?: string;
            /** The reasons for the invoice error */
            invoiceError?: string;
            /** The reason for keyword plan ad group error. */
            keywordPlanAdGroupError?: string;
            /** The reason for keyword plan ad group keyword error. */
            keywordPlanAdGroupKeywordError?: string;
            /** The reason for keyword plan campaign error. */
            keywordPlanCampaignError?: string;
            /** The reason for keyword plan campaign keyword error. */
            keywordPlanCampaignKeywordError?: string;
            /** The reason for keyword plan error. */
            keywordPlanError?: string;
            /** The reason for keyword idea error. */
            keywordPlanIdeaError?: string;
            /** The reason for the label error. */
            labelError?: string;
            /** The reasons for the language code error */
            languageCodeError?: string;
            /** An error with a list operation. */
            listOperationError?: string;
            /** The reasons for the manager link error */
            managerLinkError?: string;
            /** The reasons for the media bundle error */
            mediaBundleError?: string;
            /** The reasons for the media file error */
            mediaFileError?: string;
            /** The reasons for media uploading errors. */
            mediaUploadError?: string;
            /** Container for enum describing possible merchant center errors. */
            merchantCenterError?: string;
            /** The reasons for the multiplier error */
            multiplierError?: string;
            /** An error with a mutate */
            mutateError?: string;
            /** The reasons for the new resource creation error */
            newResourceCreationError?: string;
            /** The reasons for the not allowlisted error */
            notAllowlistedError?: string;
            /** The reasons for the not empty error */
            notEmptyError?: string;
            /** The reasons for the null error */
            nullError?: string;
            /** The reasons for the offline user data job error. */
            offlineUserDataJobError?: string;
            /** The reasons for the operation access denied error */
            operationAccessDeniedError?: string;
            /** The reasons for the operator error */
            operatorError?: string;
            /** The reasons for the mutate job error */
            partialFailureError?: string;
            /** The reasons for errors in payments accounts service */
            paymentsAccountError?: string;
            /** The reasons for the policy finding error. */
            policyFindingError?: string;
            /** The reasons for the policy validation parameter error */
            policyValidationParameterError?: string;
            /** The reasons for the policy violation error */
            policyViolationError?: string;
            /** An error with an AWQL query */
            queryError?: string;
            /** An error with the amonut of quota remaining. */
            quotaError?: string;
            /** The reasons for the range error */
            rangeError?: string;
            /** The reasons for the reach plan error */
            reachPlanError?: string;
            /** The reasons for error in applying a recommendation */
            recommendationError?: string;
            /** The reasons for the region code error */
            regionCodeError?: string;
            /** An error caused by the request */
            requestError?: string;
            /** The reasons for the resource access denied error */
            resourceAccessDeniedError?: string;
            /** The reasons for the resource count limit exceeded error */
            resourceCountLimitExceededError?: string;
            /** The reasons for the setting error */
            settingError?: string;
            /** The reasons for the shared criterion error */
            sharedCriterionError?: string;
            /** The reasons for the shared set error */
            sharedSetError?: string;
            /** The reasons for the size limit error */
            sizeLimitError?: string;
            /** The reasons for the string format error */
            stringFormatError?: string;
            /** The reasons for the string length error */
            stringLengthError?: string;
            /** The reasons for the third party app analytics link mutate error */
            thirdPartyAppAnalyticsLinkError?: string;
            /** The reasons for the time zone error */
            timeZoneError?: string;
            /** An error with a URL field mutate. */
            urlFieldError?: string;
            /** The reasons for the user data error. */
            userDataError?: string;
            /** The reasons for the user list error */
            userListError?: string;
            /** The reasons for YouTube video registration errors. */
            youtubeVideoRegistrationError?: string;
        }
        interface GoogleAdsGoogleadsV9Errors__ErrorDetails {
            /** Describes policy violation findings. */
            policyFindingDetails?: GoogleAdsGoogleadsV9Errors__PolicyFindingDetails;
            /** Describes an ad policy violation. */
            policyViolationDetails?: GoogleAdsGoogleadsV9Errors__PolicyViolationDetails;
            /** Details on the quota error, including the scope (account or developer), the rate bucket name and the retry delay. */
            quotaErrorDetails?: GoogleAdsGoogleadsV9Errors__QuotaErrorDetails;
            /** Details for a resource count limit exceeded error. */
            resourceCountDetails?: GoogleAdsGoogleadsV9Errors__ResourceCountDetails;
            /** The error code that should have been returned, but wasn't. This is used when the error code is not published in the client specified version. */
            unpublishedErrorCode?: string;
        }
        interface GoogleAdsGoogleadsV9Errors__ErrorLocation {
            /** A field path that indicates which field was invalid in the request. */
            fieldPathElements?: GoogleAdsGoogleadsV9Errors_ErrorLocation_FieldPathElement[];
        }
        interface GoogleAdsGoogleadsV9Errors__GoogleAdsError {
            /** Additional error details, which are returned by certain error codes. Most error codes do not include details. */
            details?: GoogleAdsGoogleadsV9Errors__ErrorDetails;
            /** An enum value that indicates which error occurred. */
            errorCode?: GoogleAdsGoogleadsV9Errors__ErrorCode;
            /** Describes the part of the request proto that caused the error. */
            location?: GoogleAdsGoogleadsV9Errors__ErrorLocation;
            /** A human-readable description of the error. */
            message?: string;
            /** The value that triggered the error. */
            trigger?: GoogleAdsGoogleadsV9Common__Value;
        }
        interface GoogleAdsGoogleadsV9Errors__GoogleAdsFailure {
            /** The list of errors that occurred. */
            errors?: GoogleAdsGoogleadsV9Errors__GoogleAdsError[];
            /** The unique ID of the request that is used for debugging purposes. */
            requestId?: string;
        }
        interface GoogleAdsGoogleadsV9Errors__PolicyFindingDetails {
            /**
             * The list of policy topics for the resource. Contains the PROHIBITED or FULLY_LIMITED policy topic entries that prevented the resource from being saved (among any other entries the
             * resource may also have).
             */
            policyTopicEntries?: GoogleAdsGoogleadsV9Common__PolicyTopicEntry[];
        }
        interface GoogleAdsGoogleadsV9Errors__PolicyViolationDetails {
            /** Human readable description of policy violation. */
            externalPolicyDescription?: string;
            /** Human readable name of the policy. */
            externalPolicyName?: string;
            /** Whether user can file an exemption request for this violation. */
            isExemptible?: boolean;
            /** Unique identifier for this violation. If policy is exemptible, this key may be used to request exemption. */
            key?: GoogleAdsGoogleadsV9Common__PolicyViolationKey;
        }
        interface GoogleAdsGoogleadsV9Errors__QuotaErrorDetails {
            /** The high level description of the quota bucket. Examples are "Get requests for standard access" or "Requests per account". */
            rateName?: string;
            /** The rate scope of the quota limit. */
            rateScope?: string;
            /** Backoff period that customers should wait before sending next request. */
            retryDelay?: string;
        }
        interface GoogleAdsGoogleadsV9Errors__ResourceCountDetails {
            /** The ID of the resource whose limit was exceeded. External customer ID if the limit is for a customer. */
            enclosingId?: string;
            /** The name of the resource (Customer, Campaign etc.) whose limit was exceeded. */
            enclosingResource?: string;
            /** The count of existing entities. */
            existingCount?: number;
            /** The limit which was exceeded. */
            limit?: number;
            /** The resource limit type which was exceeded. */
            limitType?: string;
        }
        interface GoogleAdsGoogleadsV9Errors_ErrorLocation_FieldPathElement {
            /** The name of a field or a oneof */
            fieldName?: string;
            /** If field_name is a repeated field, this is the element that failed */
            index?: number;
        }
        interface GoogleAdsGoogleadsV9Resources_BatchJob_BatchJobMetadata {
            /** Output only. The time when this batch job was completed. Formatted as yyyy-MM-dd HH:mm:ss. Example: "2018-03-05 09:16:00" */
            completionDateTime?: string;
            /** Output only. The time when this batch job was created. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:00" */
            creationDateTime?: string;
            /** Output only. The fraction (between 0.0 and 1.0) of mutates that have been processed. This is empty if the job hasn't started running yet. */
            estimatedCompletionRatio?: number;
            /** Output only. The number of mutate operations executed by the batch job. Present only if the job has started running. */
            executedOperationCount?: string;
            /** Output only. The number of mutate operations in the batch job. */
            operationCount?: string;
            /** Output only. The time when this batch job started running. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:30" */
            startDateTime?: string;
        }
        interface GoogleAdsGoogleadsV9Services__CreateCampaignExperimentMetadata {
            /** Resource name of campaign experiment created. */
            campaignExperiment?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleLongrunning__CancelOperationRequest {
        }
        interface GoogleLongrunning__ListOperationsResponse {
            /** The standard List next-page token. */
            nextPageToken?: string;
            /** A list of operations that matches the specified filter in the request. */
            operations?: GoogleLongrunning__Operation[];
        }
        interface GoogleLongrunning__Operation {
            /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
            done?: boolean;
            /** The error result of the operation in case of failure or cancellation. */
            error?: GoogleRpc__Status;
            /**
             * Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such
             * metadata. Any method that returns a long-running operation should document the metadata type, if any.
             */
            metadata?: { [P in string]: any };
            /**
             * The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending
             * with `operations/{unique_id}`.
             */
            name?: string;
            /**
             * The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the
             * original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the
             * original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
             */
            response?: { [P in string]: any };
        }
        interface GoogleLongrunning__WaitOperationRequest {
            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also
             * specified, the shorter one will be used.
             */
            timeout?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleProtobuf__Empty {
        }
        interface GoogleRpc__Status {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?: number;
            /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
            details?: Array<{ [P in string]: any }>;
            /**
             * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the
             * client.
             */
            message?: string;
        }
        interface OperationsResource {
            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support
             * this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the
             * operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a
             * google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
             */
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleLongrunning__CancelOperationRequest;
            }): Request<{}>;
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleLongrunning__CancelOperationRequest): Request<{}>;
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't
             * support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be deleted. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunning__Operation>;
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services
             * to override the binding to use different resource name schemes, such as `users/*‍/operations`. To override the binding, API services can add a binding such as
             * `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must
             * ensure the name binding is the parent resource, without the operations collection id.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** The standard list filter. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation's parent resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The standard list page size. */
                pageSize?: number;
                /** The standard list page token. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunning__ListOperationsResponse>;
            /**
             * Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even
             * an immediate response is no guarantee that the operation is done.
             */
            wait(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to wait on. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleLongrunning__WaitOperationRequest;
            }): Request<GoogleLongrunning__Operation>;
            wait(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to wait on. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleLongrunning__WaitOperationRequest): Request<GoogleLongrunning__Operation>;
        }
        interface CustomersResource {
            operations: OperationsResource;
        }

        const customers: CustomersResource;
    }
}
