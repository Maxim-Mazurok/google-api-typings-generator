/* Type definitions for non-npm package API hub API v1 0.0 */
// Project: https://cloud.google.com/apigee/docs/api-hub/what-is-api-hub
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://apihub.googleapis.com/$discovery/rest?version=v1
// Revision: 20250701

/// <reference types="gapi.client" />

declare namespace gapi.client {
  /** Load API hub API v1 */
  function load(
    urlOrObject: 'https://apihub.googleapis.com/$discovery/rest?version=v1',
  ): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(name: 'apihub', version: 'v1'): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(name: 'apihub', version: 'v1', callback: () => any): void;

  namespace apihub {
    interface Empty {}
    interface GoogleCloudApihubV1ActionExecutionDetail {
      /** Required. The action id of the plugin to execute. */
      actionId?: string;
    }
    interface GoogleCloudApihubV1AllowedValue {
      /** Optional. The detailed description of the allowed value. */
      description?: string;
      /** Required. The display name of the allowed value. */
      displayName?: string;
      /** Required. The ID of the allowed value. * If provided, the same will be used. The service will throw an error if the specified id is already used by another allowed value in the same attribute resource. * If not provided, a system generated id derived from the display name will be used. In this case, the service will handle conflict resolution by adding a system generated suffix in case of duplicates. This value should be 4-63 characters, and valid characters are /a-z-/. */
      id?: string;
      /** Optional. When set to true, the allowed value cannot be updated or deleted by the user. It can only be true for System defined attributes. */
      immutable?: boolean;
    }
    interface GoogleCloudApihubV1Api {
      /** Optional. The api functional requirements associated with the API resource. Carinality is 1 for this attribute. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-api-functional-requirements` attribute. The value of the attribute should be a proper URI, and in case of Cloud Storage URI, it should point to a Cloud Storage object, not a directory. */
      apiFunctionalRequirements?: GoogleCloudApihubV1AttributeValues;
      /** Optional. The api requirement doc associated with the API resource. Carinality is 1 for this attribute. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-api-requirements` attribute. The value of the attribute should be a proper URI, and in case of Cloud Storage URI, it should point to a Cloud Storage object, not a directory. */
      apiRequirements?: GoogleCloudApihubV1AttributeValues;
      /** Optional. The style of the API. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-api-style` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute. */
      apiStyle?: GoogleCloudApihubV1AttributeValues;
      /** Optional. The api technical requirements associated with the API resource. Carinality is 1 for this attribute. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-api-technical-requirements` attribute. The value of the attribute should be a proper URI, and in case of Cloud Storage URI, it should point to a Cloud Storage object, not a directory. */
      apiTechnicalRequirements?: GoogleCloudApihubV1AttributeValues;
      /** Optional. The list of user defined attributes associated with the API resource. The key is the attribute name. It will be of the format: `projects/{project}/locations/{location}/attributes/{attribute}`. The value is the attribute values associated with the resource. */
      attributes?: {[P in string]: GoogleCloudApihubV1AttributeValues};
      /** Optional. The business unit owning the API. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-business-unit` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute. */
      businessUnit?: GoogleCloudApihubV1AttributeValues;
      /** Output only. The time at which the API resource was created. */
      createTime?: string;
      /** Optional. The description of the API resource. */
      description?: string;
      /** Required. The display name of the API resource. */
      displayName?: string;
      /** Optional. The documentation for the API resource. */
      documentation?: GoogleCloudApihubV1Documentation;
      /** Optional. Fingerprint of the API resource. */
      fingerprint?: string;
      /** Optional. The maturity level of the API. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-maturity-level` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute. */
      maturityLevel?: GoogleCloudApihubV1AttributeValues;
      /** Identifier. The name of the API resource in the API Hub. Format: `projects/{project}/locations/{location}/apis/{api}` */
      name?: string;
      /** Optional. Owner details for the API resource. */
      owner?: GoogleCloudApihubV1Owner;
      /** Optional. The selected version for an API resource. This can be used when special handling is needed on client side for particular version of the API. Format is `projects/{project}/locations/{location}/apis/{api}/versions/{version}` */
      selectedVersion?: string;
      /** Output only. The list of sources and metadata from the sources of the API resource. */
      sourceMetadata?: GoogleCloudApihubV1SourceMetadata[];
      /** Optional. The target users for the API. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-target-user` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute. */
      targetUser?: GoogleCloudApihubV1AttributeValues;
      /** Optional. The team owning the API. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-team` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute. */
      team?: GoogleCloudApihubV1AttributeValues;
      /** Output only. The time at which the API resource was last updated. */
      updateTime?: string;
      /** Output only. The list of versions present in an API resource. Note: An API resource can be associated with more than 1 version. Format is `projects/{project}/locations/{location}/apis/{api}/versions/{version}` */
      versions?: string[];
    }
    interface GoogleCloudApihubV1ApiData {
      /** Optional. The list of API metadata. */
      apiMetadataList?: GoogleCloudApihubV1ApiMetadataList;
    }
    interface GoogleCloudApihubV1ApiHubInstance {
      /** Required. Config of the ApiHub instance. */
      config?: GoogleCloudApihubV1Config;
      /** Output only. Creation timestamp. */
      createTime?: string;
      /** Optional. Description of the ApiHub instance. */
      description?: string;
      /** Optional. Instance labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources */
      labels?: {[P in string]: string};
      /** Identifier. Format: `projects/{project}/locations/{location}/apiHubInstances/{apiHubInstance}`. */
      name?: string;
      /** Output only. The current state of the ApiHub instance. */
      state?: string;
      /** Output only. Extra information about ApiHub instance state. Currently the message would be populated when state is `FAILED`. */
      stateMessage?: string;
      /** Output only. Last update timestamp. */
      updateTime?: string;
    }
    interface GoogleCloudApihubV1ApiHubResource {
      /** This represents Api resource in search results. Only name, display_name, description and owner fields are populated in search results. */
      api?: GoogleCloudApihubV1Api;
      /** This represents Definition resource in search results. Only name field is populated in search results. */
      definition?: GoogleCloudApihubV1Definition;
      /** This represents Deployment resource in search results. Only name, display_name, description, deployment_type and api_versions fields are populated in search results. */
      deployment?: GoogleCloudApihubV1Deployment;
      /** This represents ApiOperation resource in search results. Only name, description, spec and details fields are populated in search results. */
      operation?: GoogleCloudApihubV1ApiOperation;
      /** This represents Spec resource in search results. Only name, display_name, description, spec_type and documentation fields are populated in search results. */
      spec?: GoogleCloudApihubV1Spec;
      /** This represents Version resource in search results. Only name, display_name, description, lifecycle, compliance and accreditation fields are populated in search results. */
      version?: GoogleCloudApihubV1Version;
    }
    interface GoogleCloudApihubV1ApiKeyConfig {
      /** Required. The name of the SecretManager secret version resource storing the API key. Format: `projects/{project}/secrets/{secrete}/versions/{version}`. The `secretmanager.versions.access` permission should be granted to the service account accessing the secret. */
      apiKey?: GoogleCloudApihubV1Secret;
      /** Required. The location of the API key. The default value is QUERY. */
      httpElementLocation?: string;
      /** Required. The parameter name of the API key. E.g. If the API request is "https://example.com/act?api_key=", "api_key" would be the parameter name. */
      name?: string;
    }
    interface GoogleCloudApihubV1APIMetadata {
      /** Required. The API resource to be pushed to Hub's collect layer. The ID of the API resource will be generated by Hub to ensure uniqueness across all APIs across systems. */
      api?: GoogleCloudApihubV1Api;
      /** Optional. Timestamp indicating when the API was created at the source. */
      originalCreateTime?: string;
      /** Optional. The unique identifier of the API in the system where it was originally created. */
      originalId?: string;
      /** Required. Timestamp indicating when the API was last updated at the source. */
      originalUpdateTime?: string;
      /** Optional. The list of versions present in an API resource. */
      versions?: GoogleCloudApihubV1VersionMetadata[];
    }
    interface GoogleCloudApihubV1ApiMetadataList {
      /** Required. The list of API metadata. */
      apiMetadata?: GoogleCloudApihubV1APIMetadata[];
    }
    interface GoogleCloudApihubV1ApiOperation {
      /** Optional. The list of user defined attributes associated with the API operation resource. The key is the attribute name. It will be of the format: `projects/{project}/locations/{location}/attributes/{attribute}`. The value is the attribute values associated with the resource. */
      attributes?: {[P in string]: GoogleCloudApihubV1AttributeValues};
      /** Output only. The time at which the operation was created. */
      createTime?: string;
      /** Optional. Operation details. Note: Even though this field is optional, it is required for CreateApiOperation API and we will fail the request if not provided. */
      details?: GoogleCloudApihubV1OperationDetails;
      /** Identifier. The name of the operation. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}` */
      name?: string;
      /** Output only. The list of sources and metadata from the sources of the API operation. */
      sourceMetadata?: GoogleCloudApihubV1SourceMetadata[];
      /** Output only. The name of the spec will be of the format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}` Note:The name of the spec will be empty if the operation is created via CreateApiOperation API. */
      spec?: string;
      /** Output only. The time at which the operation was last updated. */
      updateTime?: string;
    }
    interface GoogleCloudApihubV1ApplicationIntegrationEndpointDetails {
      /** Required. The API trigger ID of the Application Integration workflow. */
      triggerId?: string;
      /** Required. The endpoint URI should be a valid REST URI for triggering an Application Integration. Format: `https://integrations.googleapis.com/v1/{name=projects/*‍/locations/*‍/integrations/*}:execute` or `https://{location}-integrations.googleapis.com/v1/{name=projects/*‍/locations/*‍/integrations/*}:execute` */
      uri?: string;
    }
    interface GoogleCloudApihubV1Attribute {
      /** Optional. The list of allowed values when the attribute value is of type enum. This is required when the data_type of the attribute is ENUM. The maximum number of allowed values of an attribute will be 1000. */
      allowedValues?: GoogleCloudApihubV1AllowedValue[];
      /** Optional. The maximum number of values that the attribute can have when associated with an API Hub resource. Cardinality 1 would represent a single-valued attribute. It must not be less than 1 or greater than 20. If not specified, the cardinality would be set to 1 by default and represent a single-valued attribute. */
      cardinality?: number;
      /** Output only. The time at which the attribute was created. */
      createTime?: string;
      /** Required. The type of the data of the attribute. */
      dataType?: string;
      /** Output only. The definition type of the attribute. */
      definitionType?: string;
      /** Optional. The description of the attribute. */
      description?: string;
      /** Required. The display name of the attribute. */
      displayName?: string;
      /** Output only. When mandatory is true, the attribute is mandatory for the resource specified in the scope. Only System defined attributes can be mandatory. */
      mandatory?: boolean;
      /** Identifier. The name of the attribute in the API Hub. Format: `projects/{project}/locations/{location}/attributes/{attribute}` */
      name?: string;
      /** Required. The scope of the attribute. It represents the resource in the API Hub to which the attribute can be linked. */
      scope?: string;
      /** Output only. The time at which the attribute was last updated. */
      updateTime?: string;
    }
    interface GoogleCloudApihubV1AttributeValues {
      /** Output only. The name of the attribute. Format: projects/{project}/locations/{location}/attributes/{attribute} */
      attribute?: string;
      /** The attribute values associated with a resource in case attribute data type is enum. */
      enumValues?: GoogleCloudApihubV1EnumAttributeValues;
      /** The attribute values associated with a resource in case attribute data type is JSON. */
      jsonValues?: GoogleCloudApihubV1StringAttributeValues;
      /** The attribute values associated with a resource in case attribute data type is string. */
      stringValues?: GoogleCloudApihubV1StringAttributeValues;
      /** The attribute values associated with a resource in case attribute data type is URL, URI or IP, like gs://bucket-name/object-name. */
      uriValues?: GoogleCloudApihubV1StringAttributeValues;
    }
    interface GoogleCloudApihubV1AuthConfig {
      /** Api Key Config. */
      apiKeyConfig?: GoogleCloudApihubV1ApiKeyConfig;
      /** Required. The authentication type. */
      authType?: string;
      /** Google Service Account. */
      googleServiceAccountConfig?: GoogleCloudApihubV1GoogleServiceAccountConfig;
      /** Oauth2.0 Client Credentials. */
      oauth2ClientCredentialsConfig?: GoogleCloudApihubV1Oauth2ClientCredentialsConfig;
      /** User Password. */
      userPasswordConfig?: GoogleCloudApihubV1UserPasswordConfig;
    }
    interface GoogleCloudApihubV1AuthConfigTemplate {
      /** Optional. The service account of the plugin hosting service. This service account should be granted the required permissions on the Auth Config parameters provided while creating the plugin instances corresponding to this plugin. For example, if the plugin instance auth config requires a secret manager secret, the service account should be granted the secretmanager.versions.access permission on the corresponding secret, if the plugin instance auth config contains a service account, the service account should be granted the iam.serviceAccounts.getAccessToken permission on the corresponding service account. */
      serviceAccount?: GoogleCloudApihubV1GoogleServiceAccountConfig;
      /** Required. The list of authentication types supported by the plugin. */
      supportedAuthTypes?: string[];
    }
    interface GoogleCloudApihubV1CollectApiDataRequest {
      /** Required. The action ID to be used for collecting the API data. This should map to one of the action IDs specified in action configs in the plugin. */
      actionId?: string;
      /** Required. The API data to be collected. */
      apiData?: GoogleCloudApihubV1ApiData;
      /** Required. The type of collection. Applies to all entries in api_data. */
      collectionType?: string;
      /** Required. The plugin instance collecting the API data. Format: `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}`. */
      pluginInstance?: string;
    }
    interface GoogleCloudApihubV1Config {
      /** Optional. The Customer Managed Encryption Key (CMEK) used for data encryption. The CMEK name should follow the format of `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`, where the location must match the instance location. If the CMEK is not provided, a GMEK will be created for the instance. */
      cmekKeyName?: string;
      /** Optional. If true, the search will be disabled for the instance. The default value is false. */
      disableSearch?: boolean;
      /** Optional. Encryption type for the region. If the encryption type is CMEK, the cmek_key_name must be provided. If no encryption type is provided, GMEK will be used. */
      encryptionType?: string;
      /** Optional. The name of the Vertex AI location where the data store is stored. */
      vertexLocation?: string;
    }
    interface GoogleCloudApihubV1ConfigTemplate {
      /** Optional. The list of additional configuration variables for the plugin's configuration. */
      additionalConfigTemplate?: GoogleCloudApihubV1ConfigVariableTemplate[];
      /** Optional. The authentication template for the plugin. */
      authConfigTemplate?: GoogleCloudApihubV1AuthConfigTemplate;
    }
    interface GoogleCloudApihubV1ConfigValueOption {
      /** Optional. Description of the option. */
      description?: string;
      /** Required. Display name of the option. */
      displayName?: string;
      /** Required. Id of the option. */
      id?: string;
    }
    interface GoogleCloudApihubV1ConfigVariable {
      /** Optional. The config variable value in case of config variable of type boolean. */
      boolValue?: boolean;
      /** Optional. The config variable value in case of config variable of type enum. */
      enumValue?: GoogleCloudApihubV1ConfigValueOption;
      /** Optional. The config variable value in case of config variable of type integer. */
      intValue?: string;
      /** Output only. Key will be the id to uniquely identify the config variable. */
      key?: string;
      /** Optional. The config variable value in case of config variable of type multi integer. */
      multiIntValues?: GoogleCloudApihubV1MultiIntValues;
      /** Optional. The config variable value in case of config variable of type multi select. */
      multiSelectValues?: GoogleCloudApihubV1MultiSelectValues;
      /** Optional. The config variable value in case of config variable of type multi string. */
      multiStringValues?: GoogleCloudApihubV1MultiStringValues;
      /** Optional. The config variable value in case of config variable of type secret. */
      secretValue?: GoogleCloudApihubV1Secret;
      /** Optional. The config variable value in case of config variable of type string. */
      stringValue?: string;
    }
    interface GoogleCloudApihubV1ConfigVariableTemplate {
      /** Optional. Description. */
      description?: string;
      /** Optional. Enum options. To be populated if `ValueType` is `ENUM`. */
      enumOptions?: GoogleCloudApihubV1ConfigValueOption[];
      /** Required. ID of the config variable. Must be unique within the configuration. */
      id?: string;
      /** Optional. Multi select options. To be populated if `ValueType` is `MULTI_SELECT`. */
      multiSelectOptions?: GoogleCloudApihubV1ConfigValueOption[];
      /** Optional. Flag represents that this `ConfigVariable` must be provided for a PluginInstance. */
      required?: boolean;
      /** Optional. Regular expression in RE2 syntax used for validating the `value` of a `ConfigVariable`. */
      validationRegex?: string;
      /** Required. Type of the parameter: string, int, bool etc. */
      valueType?: string;
    }
    interface GoogleCloudApihubV1Curation {
      /** Output only. The time at which the curation was created. */
      createTime?: string;
      /** Optional. The description of the curation. */
      description?: string;
      /** Required. The display name of the curation. */
      displayName?: string;
      /** Required. The endpoint to be triggered for curation. */
      endpoint?: GoogleCloudApihubV1Endpoint;
      /** Output only. The error code of the last execution of the curation. The error code is populated only when the last execution state is failed. */
      lastExecutionErrorCode?: string;
      /** Output only. Error message describing the failure, if any, during the last execution of the curation. */
      lastExecutionErrorMessage?: string;
      /** Output only. The last execution state of the curation. */
      lastExecutionState?: string;
      /** Identifier. The name of the curation. Format: `projects/{project}/locations/{location}/curations/{curation}` */
      name?: string;
      /** Output only. The plugin instances and associated actions that are using the curation. Note: A particular curation could be used by multiple plugin instances or multiple actions in a plugin instance. */
      pluginInstanceActions?: GoogleCloudApihubV1PluginInstanceActionID[];
      /** Output only. The time at which the curation was last updated. */
      updateTime?: string;
    }
    interface GoogleCloudApihubV1CurationConfig {
      /** Required. The curation type for this plugin instance. */
      curationType?: string;
      /** Optional. Custom curation information for this plugin instance. */
      customCuration?: GoogleCloudApihubV1CustomCuration;
    }
    interface GoogleCloudApihubV1CustomCuration {
      /** Required. The unique name of the curation resource. This will be the name of the curation resource in the format: `projects/{project}/locations/{location}/curations/{curation}` */
      curation?: string;
    }
    interface GoogleCloudApihubV1Definition {
      /** Optional. The list of user defined attributes associated with the definition resource. The key is the attribute name. It will be of the format: `projects/{project}/locations/{location}/attributes/{attribute}`. The value is the attribute values associated with the resource. */
      attributes?: {[P in string]: GoogleCloudApihubV1AttributeValues};
      /** Output only. The time at which the definition was created. */
      createTime?: string;
      /** Identifier. The name of the definition. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/definitions/{definition}` */
      name?: string;
      /** Output only. The value of a schema definition. */
      schema?: GoogleCloudApihubV1Schema;
      /** Output only. The name of the spec from where the definition was parsed. Format is `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}` */
      spec?: string;
      /** Output only. The type of the definition. */
      type?: string;
      /** Output only. The time at which the definition was last updated. */
      updateTime?: string;
    }
    interface GoogleCloudApihubV1Dependency {
      /** Optional. The list of user defined attributes associated with the dependency resource. The key is the attribute name. It will be of the format: `projects/{project}/locations/{location}/attributes/{attribute}`. The value is the attribute values associated with the resource. */
      attributes?: {[P in string]: GoogleCloudApihubV1AttributeValues};
      /** Required. Immutable. The entity acting as the consumer in the dependency. */
      consumer?: GoogleCloudApihubV1DependencyEntityReference;
      /** Output only. The time at which the dependency was created. */
      createTime?: string;
      /** Optional. Human readable description corresponding of the dependency. */
      description?: string;
      /** Output only. Discovery mode of the dependency. */
      discoveryMode?: string;
      /** Output only. Error details of a dependency if the system has detected it internally. */
      errorDetail?: GoogleCloudApihubV1DependencyErrorDetail;
      /** Identifier. The name of the dependency in the API Hub. Format: `projects/{project}/locations/{location}/dependencies/{dependency}` */
      name?: string;
      /** Output only. State of the dependency. */
      state?: string;
      /** Required. Immutable. The entity acting as the supplier in the dependency. */
      supplier?: GoogleCloudApihubV1DependencyEntityReference;
      /** Output only. The time at which the dependency was last updated. */
      updateTime?: string;
    }
    interface GoogleCloudApihubV1DependencyEntityReference {
      /** Output only. Display name of the entity. */
      displayName?: string;
      /** The resource name of an external API in the API Hub. Format: `projects/{project}/locations/{location}/externalApis/{external_api}` */
      externalApiResourceName?: string;
      /** The resource name of an operation in the API Hub. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}` */
      operationResourceName?: string;
    }
    interface GoogleCloudApihubV1DependencyErrorDetail {
      /** Optional. Error in the dependency. */
      error?: string;
      /** Optional. Timestamp at which the error was found. */
      errorTime?: string;
    }
    interface GoogleCloudApihubV1Deployment {
      /** Output only. The API versions linked to this deployment. Note: A particular deployment could be linked to multiple different API versions (of same or different APIs). */
      apiVersions?: string[];
      /** Optional. The list of user defined attributes associated with the deployment resource. The key is the attribute name. It will be of the format: `projects/{project}/locations/{location}/attributes/{attribute}`. The value is the attribute values associated with the resource. */
      attributes?: {[P in string]: GoogleCloudApihubV1AttributeValues};
      /** Output only. The time at which the deployment was created. */
      createTime?: string;
      /** Required. The type of deployment. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-deployment-type` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute. */
      deploymentType?: GoogleCloudApihubV1AttributeValues;
      /** Optional. The description of the deployment. */
      description?: string;
      /** Required. The display name of the deployment. */
      displayName?: string;
      /** Optional. The documentation of the deployment. */
      documentation?: GoogleCloudApihubV1Documentation;
      /** Required. The endpoints at which this deployment resource is listening for API requests. This could be a list of complete URIs, hostnames or an IP addresses. */
      endpoints?: string[];
      /** Optional. The environment mapping to this deployment. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-environment` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute. */
      environment?: GoogleCloudApihubV1AttributeValues;
      /** Optional. The uri where users can navigate to for the management of the deployment. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-management-url` The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. */
      managementUrl?: GoogleCloudApihubV1AttributeValues;
      /** Identifier. The name of the deployment. Format: `projects/{project}/locations/{location}/deployments/{deployment}` */
      name?: string;
      /** Required. A uri that uniquely identfies the deployment within a particular gateway. For example, if the runtime resource is of type APIGEE_PROXY, then this field will be a combination of org, proxy name and environment. */
      resourceUri?: string;
      /** Optional. The SLO for this deployment. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-slo` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute. */
      slo?: GoogleCloudApihubV1AttributeValues;
      /** Optional. The environment at source for the deployment. For example: prod, dev, staging, etc. */
      sourceEnvironment?: string;
      /** Output only. The list of sources and metadata from the sources of the deployment. */
      sourceMetadata?: GoogleCloudApihubV1SourceMetadata[];
      /** Optional. The project to which the deployment belongs. For GCP gateways, this will refer to the project identifier. For others like Edge/OPDK, this will refer to the org identifier. */
      sourceProject?: string;
      /** Optional. The uri where additional source specific information for this deployment can be found. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-source-uri` The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. */
      sourceUri?: GoogleCloudApihubV1AttributeValues;
      /** Output only. The time at which the deployment was last updated. */
      updateTime?: string;
    }
    interface GoogleCloudApihubV1DeploymentMetadata {
      /** Required. The deployment resource to be pushed to Hub's collect layer. The ID of the deployment will be generated by Hub. */
      deployment?: GoogleCloudApihubV1Deployment;
      /** Optional. Timestamp indicating when the deployment was created at the source. */
      originalCreateTime?: string;
      /** Optional. The unique identifier of the deployment in the system where it was originally created. */
      originalId?: string;
      /** Required. Timestamp indicating when the deployment was last updated at the source. */
      originalUpdateTime?: string;
    }
    interface GoogleCloudApihubV1DisablePluginInstanceActionRequest {
      /** Required. The action id to disable. */
      actionId?: string;
    }
    interface GoogleCloudApihubV1DisablePluginRequest {}
    interface GoogleCloudApihubV1Documentation {
      /** Optional. The uri of the externally hosted documentation. */
      externalUri?: string;
    }
    interface GoogleCloudApihubV1EnablePluginInstanceActionRequest {
      /** Required. The action id to enable. */
      actionId?: string;
    }
    interface GoogleCloudApihubV1EnablePluginRequest {}
    interface GoogleCloudApihubV1Endpoint {
      /** Required. The details of the Application Integration endpoint to be triggered for curation. */
      applicationIntegrationEndpointDetails?: GoogleCloudApihubV1ApplicationIntegrationEndpointDetails;
    }
    interface GoogleCloudApihubV1EnumAttributeValues {
      /** Required. The attribute values in case attribute data type is enum. */
      values?: GoogleCloudApihubV1AllowedValue[];
    }
    interface GoogleCloudApihubV1ExecutePluginInstanceActionRequest {
      /** Required. The execution details for the action to execute. */
      actionExecutionDetail?: GoogleCloudApihubV1ActionExecutionDetail;
    }
    interface GoogleCloudApihubV1ExecutionStatus {
      /** Output only. The current state of the execution. */
      currentExecutionState?: string;
      /** Output only. The last execution of the plugin instance. */
      lastExecution?: GoogleCloudApihubV1LastExecution;
    }
    interface GoogleCloudApihubV1ExternalApi {
      /** Optional. The list of user defined attributes associated with the Version resource. The key is the attribute name. It will be of the format: `projects/{project}/locations/{location}/attributes/{attribute}`. The value is the attribute values associated with the resource. */
      attributes?: {[P in string]: GoogleCloudApihubV1AttributeValues};
      /** Output only. Creation timestamp. */
      createTime?: string;
      /** Optional. Description of the external API. Max length is 2000 characters (Unicode Code Points). */
      description?: string;
      /** Required. Display name of the external API. Max length is 63 characters (Unicode Code Points). */
      displayName?: string;
      /** Optional. Documentation of the external API. */
      documentation?: GoogleCloudApihubV1Documentation;
      /** Optional. List of endpoints on which this API is accessible. */
      endpoints?: string[];
      /** Identifier. Format: `projects/{project}/locations/{location}/externalApi/{externalApi}`. */
      name?: string;
      /** Optional. List of paths served by this API. */
      paths?: string[];
      /** Output only. Last update timestamp. */
      updateTime?: string;
    }
    interface GoogleCloudApihubV1GoogleServiceAccountConfig {
      /** Required. The service account to be used for authenticating request. The `iam.serviceAccounts.getAccessToken` permission should be granted on this service account to the impersonator service account. */
      serviceAccount?: string;
    }
    interface GoogleCloudApihubV1HostingService {
      /** Optional. The URI of the service implemented by the plugin developer, used to invoke the plugin's functionality. This information is only required for user defined plugins. */
      serviceUri?: string;
    }
    interface GoogleCloudApihubV1HostProjectRegistration {
      /** Output only. The time at which the host project registration was created. */
      createTime?: string;
      /** Required. Immutable. Google cloud project name in the format: "projects/abc" or "projects/123". As input, project name with either project id or number are accepted. As output, this field will contain project number. */
      gcpProject?: string;
      /** Identifier. The name of the host project registration. Format: "projects/{project}/locations/{location}/hostProjectRegistrations/{host_project_registration}". */
      name?: string;
    }
    interface GoogleCloudApihubV1HttpOperation {
      /** Optional. Operation method Note: Even though this field is optional, it is required for CreateApiOperation API and we will fail the request if not provided. */
      method?: string;
      /** Optional. The path details for the Operation. Note: Even though this field is optional, it is required for CreateApiOperation API and we will fail the request if not provided. */
      path?: GoogleCloudApihubV1Path;
    }
    interface GoogleCloudApihubV1Issue {
      /** Required. Rule code unique to each rule defined in linter. */
      code?: string;
      /** Required. Human-readable message describing the issue found by the linter. */
      message?: string;
      /** Required. An array of strings indicating the location in the analyzed document where the rule was triggered. */
      path?: string[];
      /** Required. Object describing where in the file the issue was found. */
      range?: GoogleCloudApihubV1Range;
      /** Required. Severity level of the rule violation. */
      severity?: string;
    }
    interface GoogleCloudApihubV1LastExecution {
      /** Output only. The last execution end time of the plugin instance. */
      endTime?: string;
      /** Output only. Error message describing the failure, if any, during the last execution. */
      errorMessage?: string;
      /** Output only. The result of the last execution of the plugin instance. */
      result?: string;
      /** Output only. The last execution start time of the plugin instance. */
      startTime?: string;
    }
    interface GoogleCloudApihubV1LintResponse {
      /** Required. Timestamp when the linting response was generated. */
      createTime?: string;
      /** Optional. Array of issues found in the analyzed document. */
      issues?: GoogleCloudApihubV1Issue[];
      /** Required. Name of the linter used. */
      linter?: string;
      /** Required. Name of the linting application. */
      source?: string;
      /** Required. Lint state represents success or failure for linting. */
      state?: string;
      /** Optional. Summary of all issue types and counts for each severity level. */
      summary?: GoogleCloudApihubV1SummaryEntry[];
    }
    interface GoogleCloudApihubV1LintSpecRequest {}
    interface GoogleCloudApihubV1ListApiOperationsResponse {
      /** The operations corresponding to an API version. */
      apiOperations?: GoogleCloudApihubV1ApiOperation[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudApihubV1ListApisResponse {
      /** The API resources present in the API hub. */
      apis?: GoogleCloudApihubV1Api[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudApihubV1ListAttributesResponse {
      /** The list of all attributes. */
      attributes?: GoogleCloudApihubV1Attribute[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudApihubV1ListCurationsResponse {
      /** The curation resources present in the API hub. */
      curations?: GoogleCloudApihubV1Curation[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudApihubV1ListDependenciesResponse {
      /** The dependency resources present in the API hub. */
      dependencies?: GoogleCloudApihubV1Dependency[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudApihubV1ListDeploymentsResponse {
      /** The deployment resources present in the API hub. */
      deployments?: GoogleCloudApihubV1Deployment[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudApihubV1ListExternalApisResponse {
      /** The External API resources present in the API hub. */
      externalApis?: GoogleCloudApihubV1ExternalApi[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudApihubV1ListHostProjectRegistrationsResponse {
      /** The list of host project registrations. */
      hostProjectRegistrations?: GoogleCloudApihubV1HostProjectRegistration[];
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
    }
    interface GoogleCloudApihubV1ListPluginInstancesResponse {
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** The plugin instances from the specified parent resource. */
      pluginInstances?: GoogleCloudApihubV1PluginInstance[];
    }
    interface GoogleCloudApihubV1ListPluginsResponse {
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** The plugins from the specified parent resource. */
      plugins?: GoogleCloudApihubV1Plugin[];
    }
    interface GoogleCloudApihubV1ListRuntimeProjectAttachmentsResponse {
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** List of runtime project attachments. */
      runtimeProjectAttachments?: GoogleCloudApihubV1RuntimeProjectAttachment[];
    }
    interface GoogleCloudApihubV1ListSpecsResponse {
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** The specs corresponding to an API Version. */
      specs?: GoogleCloudApihubV1Spec[];
    }
    interface GoogleCloudApihubV1ListVersionsResponse {
      /** A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. */
      nextPageToken?: string;
      /** The versions corresponding to an API. */
      versions?: GoogleCloudApihubV1Version[];
    }
    interface GoogleCloudApihubV1LookupApiHubInstanceResponse {
      /** API Hub instance for a project if it exists, empty otherwise. */
      apiHubInstance?: GoogleCloudApihubV1ApiHubInstance;
    }
    interface GoogleCloudApihubV1LookupRuntimeProjectAttachmentResponse {
      /** Runtime project attachment for a project if exists, empty otherwise. */
      runtimeProjectAttachment?: GoogleCloudApihubV1RuntimeProjectAttachment;
    }
    interface GoogleCloudApihubV1MultiIntValues {
      /** Optional. The config variable value of data type multi int. */
      values?: number[];
    }
    interface GoogleCloudApihubV1MultiSelectValues {
      /** Optional. The config variable value of data type multi select. */
      values?: GoogleCloudApihubV1ConfigValueOption[];
    }
    interface GoogleCloudApihubV1MultiStringValues {
      /** Optional. The config variable value of data type multi string. */
      values?: string[];
    }
    interface GoogleCloudApihubV1Oauth2ClientCredentialsConfig {
      /** Required. The client identifier. */
      clientId?: string;
      /** Required. Secret version reference containing the client secret. The `secretmanager.versions.access` permission should be granted to the service account accessing the secret. */
      clientSecret?: GoogleCloudApihubV1Secret;
    }
    interface GoogleCloudApihubV1OpenApiSpecDetails {
      /** Output only. The format of the spec. */
      format?: string;
      /** Output only. Owner details for the spec. This maps to `info.contact` in OpenAPI spec. */
      owner?: GoogleCloudApihubV1Owner;
      /** Output only. The version in the spec. This maps to `info.version` in OpenAPI spec. */
      version?: string;
    }
    interface GoogleCloudApihubV1OperationDetails {
      /** Optional. For OpenAPI spec, this will be set if `operation.deprecated`is marked as `true` in the spec. */
      deprecated?: boolean;
      /** Optional. Description of the operation behavior. For OpenAPI spec, this will map to `operation.description` in the spec, in case description is empty, `operation.summary` will be used. */
      description?: string;
      /** Optional. Additional external documentation for this operation. For OpenAPI spec, this will map to `operation.documentation` in the spec. */
      documentation?: GoogleCloudApihubV1Documentation;
      /** The HTTP Operation. */
      httpOperation?: GoogleCloudApihubV1HttpOperation;
    }
    interface GoogleCloudApihubV1OperationMetadata {
      /** Output only. API version used to start the operation. */
      apiVersion?: string;
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
      requestedCancellation?: boolean;
      /** Output only. Human-readable status of the operation, if any. */
      statusMessage?: string;
      /** Output only. Server-defined resource path for the target of the operation. */
      target?: string;
      /** Output only. Name of the verb executed by the operation. */
      verb?: string;
    }
    interface GoogleCloudApihubV1Owner {
      /** Optional. The name of the owner. */
      displayName?: string;
      /** Required. The email of the owner. */
      email?: string;
    }
    interface GoogleCloudApihubV1Path {
      /** Optional. A short description for the path applicable to all operations. */
      description?: string;
      /** Optional. Complete path relative to server endpoint. Note: Even though this field is optional, it is required for CreateApiOperation API and we will fail the request if not provided. */
      path?: string;
    }
    interface GoogleCloudApihubV1Plugin {
      /** Optional. The configuration of actions supported by the plugin. */
      actionsConfig?: GoogleCloudApihubV1PluginActionConfig[];
      /** Optional. The configuration template for the plugin. */
      configTemplate?: GoogleCloudApihubV1ConfigTemplate;
      /** Output only. Timestamp indicating when the plugin was created. */
      createTime?: string;
      /** Optional. The plugin description. Max length is 2000 characters (Unicode code points). */
      description?: string;
      /** Required. The display name of the plugin. Max length is 50 characters (Unicode code points). */
      displayName?: string;
      /** Optional. The documentation of the plugin, that explains how to set up and use the plugin. */
      documentation?: GoogleCloudApihubV1Documentation;
      /** Optional. The type of the gateway. */
      gatewayType?: string;
      /** Optional. This field is optional. It is used to notify the plugin hosting service for any lifecycle changes of the plugin instance and trigger execution of plugin instance actions in case of API hub managed actions. This field should be provided if the plugin instance lifecycle of the developed plugin needs to be managed from API hub. Also, in this case the plugin hosting service interface needs to be implemented. This field should not be provided if the plugin wants to manage plugin instance lifecycle events outside of hub interface and use plugin framework for only registering of plugin and plugin instances to capture the source of data into hub. Note, in this case the plugin hosting service interface is not required to be implemented. Also, the plugin instance lifecycle actions will be disabled from API hub's UI. */
      hostingService?: GoogleCloudApihubV1HostingService;
      /** Identifier. The name of the plugin. Format: `projects/{project}/locations/{location}/plugins/{plugin}` */
      name?: string;
      /** Output only. The type of the plugin, indicating whether it is 'SYSTEM_OWNED' or 'USER_OWNED'. */
      ownershipType?: string;
      /** Optional. The category of the plugin, identifying its primary category or purpose. This field is required for all plugins. */
      pluginCategory?: string;
      /** Output only. Represents the state of the plugin. Note this field will not be set for plugins developed via plugin framework as the state will be managed at plugin instance level. */
      state?: string;
      /** Optional. The type of the API. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-plugin-type` attribute. The number of allowed values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute. Note this field is not required for plugins developed via plugin framework. */
      type?: GoogleCloudApihubV1AttributeValues;
      /** Output only. Timestamp indicating when the plugin was last updated. */
      updateTime?: string;
    }
    interface GoogleCloudApihubV1PluginActionConfig {
      /** Required. The description of the operation performed by the action. */
      description?: string;
      /** Required. The display name of the action. */
      displayName?: string;
      /** Required. The id of the action. */
      id?: string;
      /** Required. The trigger mode supported by the action. */
      triggerMode?: string;
    }
    interface GoogleCloudApihubV1PluginInstance {
      /** Required. The action status for the plugin instance. */
      actions?: GoogleCloudApihubV1PluginInstanceAction[];
      /** Optional. The additional information for this plugin instance corresponding to the additional config template of the plugin. This information will be sent to plugin hosting service on each call to plugin hosted service. The key will be the config_variable_template.display_name to uniquely identify the config variable. */
      additionalConfig?: {[P in string]: GoogleCloudApihubV1ConfigVariable};
      /** Optional. The authentication information for this plugin instance. */
      authConfig?: GoogleCloudApihubV1AuthConfig;
      /** Output only. Timestamp indicating when the plugin instance was created. */
      createTime?: string;
      /** Required. The display name for this plugin instance. Max length is 255 characters. */
      displayName?: string;
      /** Output only. Error message describing the failure, if any, during Create, Delete or ApplyConfig operation corresponding to the plugin instance.This field will only be populated if the plugin instance is in the ERROR or FAILED state. */
      errorMessage?: string;
      /** Identifier. The unique name of the plugin instance resource. Format: `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}` */
      name?: string;
      /** Optional. The source project id of the plugin instance. This will be the id of runtime project in case of gcp based plugins and org id in case of non gcp based plugins. This is a required field. */
      sourceProjectId?: string;
      /** Output only. The current state of the plugin instance (e.g., enabled, disabled, provisioning). */
      state?: string;
      /** Output only. Timestamp indicating when the plugin instance was last updated. */
      updateTime?: string;
    }
    interface GoogleCloudApihubV1PluginInstanceAction {
      /** Required. This should map to one of the action id specified in actions_config in the plugin. */
      actionId?: string;
      /** Optional. This configuration should be provided if the plugin action is publishing data to API hub curate layer. */
      curationConfig?: GoogleCloudApihubV1CurationConfig;
      /** Optional. The execution information for the plugin instance action done corresponding to an API hub instance. */
      hubInstanceAction?: GoogleCloudApihubV1ExecutionStatus;
      /** Output only. The configuration of resources created for a given plugin instance action. Note these will be returned only in case of Non-GCP plugins like OPDK. */
      resourceConfig?: GoogleCloudApihubV1ResourceConfig;
      /** Optional. The schedule for this plugin instance action. This can only be set if the plugin supports API_HUB_SCHEDULE_TRIGGER mode for this action. */
      scheduleCronExpression?: string;
      /** Optional. The time zone for the schedule cron expression. If not provided, UTC will be used. */
      scheduleTimeZone?: string;
      /** Optional. The service account used to publish data. Note, the service account will only be accepted for non GCP plugins like OPDK. */
      serviceAccount?: string;
      /** Output only. The current state of the plugin action in the plugin instance. */
      state?: string;
    }
    interface GoogleCloudApihubV1PluginInstanceActionID {
      /** Output only. The action ID that is using the curation. This should map to one of the action IDs specified in action configs in the plugin. */
      actionId?: string;
      /** Output only. Plugin instance that is using the curation. Format is `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}` */
      pluginInstance?: string;
    }
    interface GoogleCloudApihubV1PluginInstanceActionSource {
      /** Output only. The id of the plugin instance action. */
      actionId?: string;
      /** Output only. The resource name of the source plugin instance. Format is `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}` */
      pluginInstance?: string;
    }
    interface GoogleCloudApihubV1Point {
      /** Required. Character position within the line (zero-indexed). */
      character?: number;
      /** Required. Line number (zero-indexed). */
      line?: number;
    }
    interface GoogleCloudApihubV1Range {
      /** Required. End of the issue. */
      end?: GoogleCloudApihubV1Point;
      /** Required. Start of the issue. */
      start?: GoogleCloudApihubV1Point;
    }
    interface GoogleCloudApihubV1ResourceConfig {
      /** Output only. The type of the action. */
      actionType?: string;
      /** Output only. The pubsub topic to publish the data to. Format is projects/{project}/topics/{topic} */
      pubsubTopic?: string;
    }
    interface GoogleCloudApihubV1RuntimeProjectAttachment {
      /** Output only. Create time. */
      createTime?: string;
      /** Identifier. The resource name of a runtime project attachment. Format: "projects/{project}/locations/{location}/runtimeProjectAttachments/{runtime_project_attachment}". */
      name?: string;
      /** Required. Immutable. Google cloud project name in the format: "projects/abc" or "projects/123". As input, project name with either project id or number are accepted. As output, this field will contain project number. */
      runtimeProject?: string;
    }
    interface GoogleCloudApihubV1Schema {
      /** Output only. The display name of the schema. This will map to the name of the schema in the spec. */
      displayName?: string;
      /** Output only. The raw value of the schema definition corresponding to the schema name in the spec. */
      rawValue?: string;
    }
    interface GoogleCloudApihubV1SearchResourcesRequest {
      /** Optional. An expression that filters the list of search results. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string, a number, or a boolean. The comparison operator must be `=`. Filters are not case sensitive. The following field names are eligible for filtering: * `resource_type` - The type of resource in the search results. Must be one of the following: `Api`, `ApiOperation`, `Deployment`, `Definition`, `Spec` or `Version`. This field can only be specified once in the filter. Here are is an example: * `resource_type = Api` - The resource_type is _Api_. */
      filter?: string;
      /** Optional. The maximum number of search results to return. The service may return fewer than this value. If unspecified at most 10 search results will be returned. If value is negative then `INVALID_ARGUMENT` error is returned. The maximum value is 25; values above 25 will be coerced to 25. While paginating, you can specify a new page size parameter for each page of search results to be listed. */
      pageSize?: number;
      /** Optional. A page token, received from a previous SearchResources call. Specify this parameter to retrieve the next page of transactions. When paginating, you must specify the `page_token` parameter and all the other parameters except page_size should be specified with the same value which was used in the previous call. If the other fields are set with a different value than the previous call then `INVALID_ARGUMENT` error is returned. */
      pageToken?: string;
      /** Required. The free text search query. This query can contain keywords which could be related to any detail of the API-Hub resources such display names, descriptions, attributes etc. */
      query?: string;
    }
    interface GoogleCloudApihubV1SearchResourcesResponse {
      /** Pass this token in the SearchResourcesRequest to continue to list results. If all results have been returned, this field is an empty string or not present in the response. */
      nextPageToken?: string;
      /** List of search results according to the filter and search query specified. The order of search results represents the ranking. */
      searchResults?: GoogleCloudApihubV1SearchResult[];
    }
    interface GoogleCloudApihubV1SearchResult {
      /** This represents the ApiHubResource. Note: Only selected fields of the resources are populated in response. */
      resource?: GoogleCloudApihubV1ApiHubResource;
    }
    interface GoogleCloudApihubV1Secret {
      /** Required. The resource name of the secret version in the format, format as: `projects/*‍/secrets/*‍/versions/*`. */
      secretVersion?: string;
    }
    interface GoogleCloudApihubV1SourceMetadata {
      /** Output only. The time at which the resource was created at the source. */
      originalResourceCreateTime?: string;
      /** Output only. The unique identifier of the resource at the source. */
      originalResourceId?: string;
      /** Output only. The time at which the resource was last updated at the source. */
      originalResourceUpdateTime?: string;
      /** Output only. The source of the resource is a plugin instance action. */
      pluginInstanceActionSource?: GoogleCloudApihubV1PluginInstanceActionSource;
      /** Output only. The type of the source. */
      sourceType?: string;
    }
    interface GoogleCloudApihubV1Spec {
      /** Optional. The list of user defined attributes associated with the spec. The key is the attribute name. It will be of the format: `projects/{project}/locations/{location}/attributes/{attribute}`. The value is the attribute values associated with the resource. */
      attributes?: {[P in string]: GoogleCloudApihubV1AttributeValues};
      /** Optional. Input only. The contents of the uploaded spec. */
      contents?: GoogleCloudApihubV1SpecContents;
      /** Output only. The time at which the spec was created. */
      createTime?: string;
      /** Output only. Details parsed from the spec. */
      details?: GoogleCloudApihubV1SpecDetails;
      /** Required. The display name of the spec. This can contain the file name of the spec. */
      displayName?: string;
      /** Optional. The documentation of the spec. For OpenAPI spec, this will be populated from `externalDocs` in OpenAPI spec. */
      documentation?: GoogleCloudApihubV1Documentation;
      /** Optional. The lint response for the spec. */
      lintResponse?: GoogleCloudApihubV1LintResponse;
      /** Identifier. The name of the spec. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}` */
      name?: string;
      /** Optional. Input only. Enum specifying the parsing mode for OpenAPI Specification (OAS) parsing. */
      parsingMode?: string;
      /** Output only. The list of sources and metadata from the sources of the spec. */
      sourceMetadata?: GoogleCloudApihubV1SourceMetadata[];
      /** Optional. The URI of the spec source in case file is uploaded from an external version control system. */
      sourceUri?: string;
      /** Required. The type of spec. The value should be one of the allowed values defined for `projects/{project}/locations/{location}/attributes/system-spec-type` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. Note, this field is mandatory if content is provided. */
      specType?: GoogleCloudApihubV1AttributeValues;
      /** Output only. The time at which the spec was last updated. */
      updateTime?: string;
    }
    interface GoogleCloudApihubV1SpecContents {
      /** Required. The contents of the spec. */
      contents?: string;
      /** Required. The mime type of the content for example application/json, application/yaml, application/wsdl etc. */
      mimeType?: string;
    }
    interface GoogleCloudApihubV1SpecDetails {
      /** Output only. The description of the spec. */
      description?: string;
      /** Output only. Additional details apart from `OperationDetails` parsed from an OpenAPI spec. The OperationDetails parsed from the spec can be obtained by using ListAPIOperations method. */
      openApiSpecDetails?: GoogleCloudApihubV1OpenApiSpecDetails;
    }
    interface GoogleCloudApihubV1SpecMetadata {
      /** Optional. Timestamp indicating when the spec was created at the source. */
      originalCreateTime?: string;
      /** Optional. The unique identifier of the spec in the system where it was originally created. */
      originalId?: string;
      /** Required. Timestamp indicating when the spec was last updated at the source. */
      originalUpdateTime?: string;
      /** Required. The spec resource to be pushed to Hub's collect layer. The ID of the spec will be generated by Hub. */
      spec?: GoogleCloudApihubV1Spec;
    }
    interface GoogleCloudApihubV1StringAttributeValues {
      /** Required. The attribute values in case attribute data type is string or JSON. */
      values?: string[];
    }
    interface GoogleCloudApihubV1StyleGuide {
      /** Required. Input only. The contents of the uploaded style guide. */
      contents?: GoogleCloudApihubV1StyleGuideContents;
      /** Required. Target linter for the style guide. */
      linter?: string;
      /** Identifier. The name of the style guide. Format: `projects/{project}/locations/{location}/plugins/{plugin}/styleGuide` */
      name?: string;
    }
    interface GoogleCloudApihubV1StyleGuideContents {
      /** Required. The contents of the style guide. */
      contents?: string;
      /** Required. The mime type of the content. */
      mimeType?: string;
    }
    interface GoogleCloudApihubV1SummaryEntry {
      /** Required. Count of issues with the given severity. */
      count?: number;
      /** Required. Severity of the issue. */
      severity?: string;
    }
    interface GoogleCloudApihubV1UserPasswordConfig {
      /** Required. Secret version reference containing the password. The `secretmanager.versions.access` permission should be granted to the service account accessing the secret. */
      password?: GoogleCloudApihubV1Secret;
      /** Required. Username. */
      username?: string;
    }
    interface GoogleCloudApihubV1Version {
      /** Optional. The accreditations associated with the API version. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-accreditation` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute. */
      accreditation?: GoogleCloudApihubV1AttributeValues;
      /** Output only. The operations contained in the API version. These operations will be added to the version when a new spec is added or when an existing spec is updated. Format is `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}` */
      apiOperations?: string[];
      /** Optional. The list of user defined attributes associated with the Version resource. The key is the attribute name. It will be of the format: `projects/{project}/locations/{location}/attributes/{attribute}`. The value is the attribute values associated with the resource. */
      attributes?: {[P in string]: GoogleCloudApihubV1AttributeValues};
      /** Optional. The compliance associated with the API version. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-compliance` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute. */
      compliance?: GoogleCloudApihubV1AttributeValues;
      /** Output only. The time at which the version was created. */
      createTime?: string;
      /** Output only. The definitions contained in the API version. These definitions will be added to the version when a new spec is added or when an existing spec is updated. Format is `projects/{project}/locations/{location}/apis/{api}/versions/{version}/definitions/{definition}` */
      definitions?: string[];
      /** Optional. The deployments linked to this API version. Note: A particular API version could be deployed to multiple deployments (for dev deployment, UAT deployment, etc) Format is `projects/{project}/locations/{location}/deployments/{deployment}` */
      deployments?: string[];
      /** Optional. The description of the version. */
      description?: string;
      /** Required. The display name of the version. */
      displayName?: string;
      /** Optional. The documentation of the version. */
      documentation?: GoogleCloudApihubV1Documentation;
      /** Optional. The lifecycle of the API version. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-lifecycle` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute. */
      lifecycle?: GoogleCloudApihubV1AttributeValues;
      /** Identifier. The name of the version. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}` */
      name?: string;
      /** Optional. The selected deployment for a Version resource. This can be used when special handling is needed on client side for a particular deployment linked to the version. Format is `projects/{project}/locations/{location}/deployments/{deployment}` */
      selectedDeployment?: string;
      /** Output only. The list of sources and metadata from the sources of the version. */
      sourceMetadata?: GoogleCloudApihubV1SourceMetadata[];
      /** Output only. The specs associated with this version. Note that an API version can be associated with multiple specs. Format is `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}` */
      specs?: string[];
      /** Output only. The time at which the version was last updated. */
      updateTime?: string;
    }
    interface GoogleCloudApihubV1VersionMetadata {
      /** Optional. The deployments linked to this API version. Note: A particular API version could be deployed to multiple deployments (for dev deployment, UAT deployment, etc.) */
      deployments?: GoogleCloudApihubV1DeploymentMetadata[];
      /** Optional. Timestamp indicating when the version was created at the source. */
      originalCreateTime?: string;
      /** Optional. The unique identifier of the version in the system where it was originally created. */
      originalId?: string;
      /** Required. Timestamp indicating when the version was last updated at the source. */
      originalUpdateTime?: string;
      /** Optional. The specs associated with this version. Note that an API version can be associated with multiple specs. */
      specs?: GoogleCloudApihubV1SpecMetadata[];
      /** Required. Represents a version of the API resource in API hub. The ID of the version will be generated by Hub. */
      version?: GoogleCloudApihubV1Version;
    }
    interface GoogleCloudCommonOperationMetadata {
      /** Output only. API version used to start the operation. */
      apiVersion?: string;
      /** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have google.longrunning.Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`. */
      cancelRequested?: boolean;
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Output only. Human-readable status of the operation, if any. */
      statusDetail?: string;
      /** Output only. Server-defined resource path for the target of the operation. */
      target?: string;
      /** Output only. Name of the verb executed by the operation. */
      verb?: string;
    }
    interface GoogleCloudLocationListLocationsResponse {
      /** A list of locations that matches the specified filter in the request. */
      locations?: GoogleCloudLocationLocation[];
      /** The standard List next-page token. */
      nextPageToken?: string;
    }
    interface GoogleCloudLocationLocation {
      /** The friendly name for this location, typically a nearby city name. For example, "Tokyo". */
      displayName?: string;
      /** Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"} */
      labels?: {[P in string]: string};
      /** The canonical id for this location. For example: `"us-east1"`. */
      locationId?: string;
      /** Service-specific metadata. For example the available capacity at the given location. */
      metadata?: {[P in string]: any};
      /** Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"` */
      name?: string;
    }
    interface GoogleLongrunningCancelOperationRequest {}
    interface GoogleLongrunningListOperationsResponse {
      /** The standard List next-page token. */
      nextPageToken?: string;
      /** A list of operations that matches the specified filter in the request. */
      operations?: GoogleLongrunningOperation[];
    }
    interface GoogleLongrunningOperation {
      /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
      done?: boolean;
      /** The error result of the operation in case of failure or cancellation. */
      error?: GoogleRpcStatus;
      /** Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any. */
      metadata?: {[P in string]: any};
      /** The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`. */
      name?: string;
      /** The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`. */
      response?: {[P in string]: any};
    }
    interface GoogleRpcStatus {
      /** The status code, which should be an enum value of google.rpc.Code. */
      code?: number;
      /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
      details?: Array<{[P in string]: any}>;
      /** A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client. */
      message?: string;
    }
    interface ApiHubInstancesResource {
      /** Provisions instance resources for the API Hub. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** Optional. Identifier to assign to the Api Hub instance. Must be unique within scope of the parent resource. If the field is not provided, system generated id will be used. This value should be 4-40 characters, and valid characters are `/a-z[0-9]-_/`. */
        apiHubInstanceId?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for the Api Hub instance resource. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1ApiHubInstance;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** Optional. Identifier to assign to the Api Hub instance. Must be unique within scope of the parent resource. If the field is not provided, system generated id will be used. This value should be 4-40 characters, and valid characters are `/a-z[0-9]-_/`. */
          apiHubInstanceId?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for the Api Hub instance resource. Format: `projects/{project}/locations/{location}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1ApiHubInstance,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes the API hub instance. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the Api Hub instance to delete. Format: `projects/{project}/locations/{location}/apiHubInstances/{apiHubInstance}`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Gets details of a single API Hub instance. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the Api Hub instance to retrieve. Format: `projects/{project}/locations/{location}/apiHubInstances/{apiHubInstance}`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1ApiHubInstance>;
      /** Looks up an Api Hub instance in a given GCP project. There will always be only one Api Hub instance for a GCP project across all locations. */
      lookup(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. There will always be only one Api Hub instance for a GCP project across all locations. The parent resource for the Api Hub instance resource. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1LookupApiHubInstanceResponse>;
    }
    interface DefinitionsResource {
      /** Get details about a definition in an API version. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the definition to retrieve. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/definitions/{definition}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1Definition>;
    }
    interface OperationsResource {
      /** Create an apiOperation in an API version. An apiOperation can be created only if the version has no apiOperations which were created by parsing a spec. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** Optional. The ID to use for the operation resource, which will become the final component of the operation's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another operation resource in the API hub. * If not provided, a system generated id will be used. This value should be 4-500 characters, overall resource name which will be of format `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}`, its length is limited to 700 characters, and valid characters are /a-z[0-9]-_/. */
        apiOperationId?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for the operation resource. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1ApiOperation;
      }): Request<GoogleCloudApihubV1ApiOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** Optional. The ID to use for the operation resource, which will become the final component of the operation's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another operation resource in the API hub. * If not provided, a system generated id will be used. This value should be 4-500 characters, overall resource name which will be of format `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}`, its length is limited to 700 characters, and valid characters are /a-z[0-9]-_/. */
          apiOperationId?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for the operation resource. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1ApiOperation,
      ): Request<GoogleCloudApihubV1ApiOperation>;
      /** Delete an operation in an API version and we can delete only the operations created via create API. If the operation was created by parsing the spec, then it can be deleted by editing or deleting the spec. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the operation resource to delete. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get details about a particular operation in API version. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the operation to retrieve. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1ApiOperation>;
      /** List operations in an API version. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. An expression that filters the list of ApiOperations. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string or a boolean. The comparison operator must be one of: `<`, `>` or `=`. Filters are not case sensitive. The following fields in the `ApiOperation` are eligible for filtering: * `name` - The ApiOperation resource name. Allowed comparison operators: `=`. * `details.http_operation.path.path` - The http operation's complete path relative to server endpoint. Allowed comparison operators: `=`. * `details.http_operation.method` - The http operation method type. Allowed comparison operators: `=`. * `details.deprecated` - Indicates if the ApiOperation is deprecated. Allowed values are True / False indicating the deprycation status of the ApiOperation. Allowed comparison operators: `=`. * `create_time` - The time at which the ApiOperation was created. The value should be in the (RFC3339)[https://tools.ietf.org/html/rfc3339] format. Allowed comparison operators: `>` and `<`. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.enum_values.values.id` - The allowed value id of the user defined enum attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-enum-id is a placeholder that can be replaced with any user defined enum attribute name. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.enum_values.values.display_name` - The allowed value display name of the user defined enum attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-enum-display-name is a placeholder that can be replaced with any user defined enum attribute enum name. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.string_values.values` - The allowed value of the user defined string attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-string is a placeholder that can be replaced with any user defined string attribute name. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.json_values.values` - The allowed value of the user defined JSON attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-json is a placeholder that can be replaced with any user defined JSON attribute name. Expressions are combined with either `AND` logic operator or `OR` logical operator but not both of them together i.e. only one of the `AND` or `OR` operator can be used throughout the filter string and both the operators cannot be used together. No other logical operators are supported. At most three filter fields are allowed in the filter string and if provided more than that then `INVALID_ARGUMENT` error is returned by the API. Here are a few examples: * `details.deprecated = True` - The ApiOperation is deprecated. * `details.http_operation.method = GET AND create_time < \"2021-08-15T14:50:00Z\" AND create_time > \"2021-08-10T12:00:00Z\"` - The method of the http operation of the ApiOperation is _GET_ and the spec was created before _2021-08-15 14:50:00 UTC_ and after _2021-08-10 12:00:00 UTC_. * `details.http_operation.method = GET OR details.http_operation.method = POST`. - The http operation of the method of ApiOperation is _GET_ or _POST_. * `details.deprecated = True AND attributes.projects/test-project-id/locations/test-location-id/ attributes/17650f90-4a29-4971-b3c0-d5532da3764b.string_values.values: test` - The filter string specifies that the ApiOperation is deprecated and the value of the user defined attribute of type string is _test_. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of operations to return. The service may return fewer than this value. If unspecified, at most 50 operations will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListApiOperations` call. Provide this to retrieve the subsequent page. When paginating, all other parameters (except page_size) provided to `ListApiOperations` must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent which owns this collection of operations i.e., the API version. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1ListApiOperationsResponse>;
      /** Update an operation in an API version. The following fields in the ApiOperation resource can be updated: * details.description * details.documentation * details.http_operation.path * details.http_operation.method * details.deprecated * attributes The update_mask should be used to specify the fields being updated. An operation can be updated only if the operation was created via CreateApiOperation API. If the operation was created by parsing the spec, then it can be edited by updating the spec. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The name of the operation. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The list of fields to update. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1ApiOperation;
      }): Request<GoogleCloudApihubV1ApiOperation>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The name of the operation. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The list of fields to update. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1ApiOperation,
      ): Request<GoogleCloudApihubV1ApiOperation>;
    }
    interface SpecsResource {
      /** Add a spec to an API version in the API hub. Multiple specs can be added to an API version. Note, while adding a spec, at least one of `contents` or `source_uri` must be provided. If `contents` is provided, then `spec_type` must also be provided. On adding a spec with contents to the version, the operations present in it will be added to the version.Note that the file contents in the spec should be of the same type as defined in the `projects/{project}/locations/{location}/attributes/system-spec-type` attribute associated with spec resource. Note that specs of various types can be uploaded, however parsing of details is supported for OpenAPI spec currently. In order to access the information parsed from the spec, use the GetSpec method. In order to access the raw contents for a particular spec, use the GetSpecContents method. In order to access the operations parsed from the spec, use the ListAPIOperations method. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for Spec. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. The ID to use for the spec, which will become the final component of the spec's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another spec in the API resource. * If not provided, a system generated id will be used. This value should be 4-500 characters, overall resource name which will be of format `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}`, its length is limited to 1000 characters and valid characters are /a-z[0-9]-_/. */
        specId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1Spec;
      }): Request<GoogleCloudApihubV1Spec>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for Spec. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. The ID to use for the spec, which will become the final component of the spec's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another spec in the API resource. * If not provided, a system generated id will be used. This value should be 4-500 characters, overall resource name which will be of format `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}`, its length is limited to 1000 characters and valid characters are /a-z[0-9]-_/. */
          specId?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1Spec,
      ): Request<GoogleCloudApihubV1Spec>;
      /** Delete a spec. Deleting a spec will also delete the associated operations from the version. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the spec to delete. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get details about the information parsed from a spec. Note that this method does not return the raw spec contents. Use GetSpecContents method to retrieve the same. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the spec to retrieve. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1Spec>;
      /** Get spec contents. */
      getContents(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the spec whose contents need to be retrieved. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1SpecContents>;
      /** Lints the requested spec and updates the corresponding API Spec with the lint response. This lint response will be available in all subsequent Get and List Spec calls to Core service. */
      lint(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the spec to be linted. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1LintSpecRequest;
      }): Request<{}>;
      lint(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the spec to be linted. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1LintSpecRequest,
      ): Request<{}>;
      /** List specs corresponding to a particular API resource. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. An expression that filters the list of Specs. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string. The comparison operator must be one of: `<`, `>`, `:` or `=`. Filters are not case sensitive. The following fields in the `Spec` are eligible for filtering: * `display_name` - The display name of the Spec. Allowed comparison operators: `=`. * `create_time` - The time at which the Spec was created. The value should be in the (RFC3339)[https://tools.ietf.org/html/rfc3339] format. Allowed comparison operators: `>` and `<`. * `spec_type.enum_values.values.id` - The allowed value id of the spec_type attribute associated with the Spec. Allowed comparison operators: `:`. * `spec_type.enum_values.values.display_name` - The allowed value display name of the spec_type attribute associated with the Spec. Allowed comparison operators: `:`. * `lint_response.json_values.values` - The json value of the lint_response attribute associated with the Spec. Allowed comparison operators: `:`. * `mime_type` - The MIME type of the Spec. Allowed comparison operators: `=`. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.enum_values.values.id` - The allowed value id of the user defined enum attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-enum-id is a placeholder that can be replaced with any user defined enum attribute name. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.enum_values.values.display_name` - The allowed value display name of the user defined enum attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-enum-display-name is a placeholder that can be replaced with any user defined enum attribute enum name. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.string_values.values` - The allowed value of the user defined string attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-string is a placeholder that can be replaced with any user defined string attribute name. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.json_values.values` - The allowed value of the user defined JSON attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-json is a placeholder that can be replaced with any user defined JSON attribute name. Expressions are combined with either `AND` logic operator or `OR` logical operator but not both of them together i.e. only one of the `AND` or `OR` operator can be used throughout the filter string and both the operators cannot be used together. No other logical operators are supported. At most three filter fields are allowed in the filter string and if provided more than that then `INVALID_ARGUMENT` error is returned by the API. Here are a few examples: * `spec_type.enum_values.values.id: rest-id` - The filter string specifies that the id of the allowed value associated with the spec_type attribute is _rest-id_. * `spec_type.enum_values.values.display_name: \"Rest Display Name\"` - The filter string specifies that the display name of the allowed value associated with the spec_type attribute is `Rest Display Name`. * `spec_type.enum_values.values.id: grpc-id AND create_time < \"2021-08-15T14:50:00Z\" AND create_time > \"2021-08-10T12:00:00Z\"` - The id of the allowed value associated with the spec_type attribute is _grpc-id_ and the spec was created before _2021-08-15 14:50:00 UTC_ and after _2021-08-10 12:00:00 UTC_. * `spec_type.enum_values.values.id: rest-id OR spec_type.enum_values.values.id: grpc-id` - The id of the allowed value associated with the spec_type attribute is _rest-id_ or _grpc-id_. * `spec_type.enum_values.values.id: rest-id AND attributes.projects/test-project-id/locations/test-location-id/ attributes/17650f90-4a29-4971-b3c0-d5532da3764b.enum_values.values.id: test` - The filter string specifies that the id of the allowed value associated with the spec_type attribute is _rest-id_ and the id of the allowed value associated with the user defined attribute of type enum is _test_. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of specs to return. The service may return fewer than this value. If unspecified, at most 50 specs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListSpecs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSpecs` must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent, which owns this collection of specs. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1ListSpecsResponse>;
      /** Update spec. The following fields in the spec can be updated: * display_name * source_uri * lint_response * attributes * contents * spec_type In case of an OAS spec, updating spec contents can lead to: 1. Creation, deletion and update of operations. 2. Creation, deletion and update of definitions. 3. Update of other info parsed out from the new spec. In case of contents or source_uri being present in update mask, spec_type must also be present. Also, spec_type can not be present in update mask if contents or source_uri is not present. The update_mask should be used to specify the fields being updated. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The name of the spec. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The list of fields to update. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1Spec;
      }): Request<GoogleCloudApihubV1Spec>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The name of the spec. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The list of fields to update. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1Spec,
      ): Request<GoogleCloudApihubV1Spec>;
    }
    interface VersionsResource {
      /** Create an API version for an API resource in the API hub. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for API version. Format: `projects/{project}/locations/{location}/apis/{api}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Optional. The ID to use for the API version, which will become the final component of the version's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another version in the API resource. * If not provided, a system generated id will be used. This value should be 4-500 characters, overall resource name which will be of format `projects/{project}/locations/{location}/apis/{api}/versions/{version}`, its length is limited to 700 characters and valid characters are /a-z[0-9]-_/. */
        versionId?: string;
        /** Request body */
        resource: GoogleCloudApihubV1Version;
      }): Request<GoogleCloudApihubV1Version>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for API version. Format: `projects/{project}/locations/{location}/apis/{api}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
          /** Optional. The ID to use for the API version, which will become the final component of the version's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another version in the API resource. * If not provided, a system generated id will be used. This value should be 4-500 characters, overall resource name which will be of format `projects/{project}/locations/{location}/apis/{api}/versions/{version}`, its length is limited to 700 characters and valid characters are /a-z[0-9]-_/. */
          versionId?: string;
        },
        body: GoogleCloudApihubV1Version,
      ): Request<GoogleCloudApihubV1Version>;
      /** Delete an API version. Version can only be deleted if all underlying specs, operations, definitions and linked deployments are deleted. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. If set to true, any specs from this version will also be deleted. Otherwise, the request will only work if the version has no specs. */
        force?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the version to delete. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get details about the API version of an API resource. This will include information about the specs and operations present in the API version as well as the deployments linked to it. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the API version to retrieve. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1Version>;
      /** List API versions of an API resource in the API hub. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. An expression that filters the list of Versions. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string, a number, or a boolean. The comparison operator must be one of: `<`, `>` or `=`. Filters are not case sensitive. The following fields in the `Version` are eligible for filtering: * `display_name` - The display name of the Version. Allowed comparison operators: `=`. * `create_time` - The time at which the Version was created. The value should be in the (RFC3339)[https://tools.ietf.org/html/rfc3339] format. Allowed comparison operators: `>` and `<`. * `lifecycle.enum_values.values.id` - The allowed value id of the lifecycle attribute associated with the Version. Allowed comparison operators: `:`. * `lifecycle.enum_values.values.display_name` - The allowed value display name of the lifecycle attribute associated with the Version. Allowed comparison operators: `:`. * `compliance.enum_values.values.id` - The allowed value id of the compliances attribute associated with the Version. Allowed comparison operators: `:`. * `compliance.enum_values.values.display_name` - The allowed value display name of the compliances attribute associated with the Version. Allowed comparison operators: `:`. * `accreditation.enum_values.values.id` - The allowed value id of the accreditations attribute associated with the Version. Allowed comparison operators: `:`. * `accreditation.enum_values.values.display_name` - The allowed value display name of the accreditations attribute associated with the Version. Allowed comparison operators: `:`. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.enum_values.values.id` - The allowed value id of the user defined enum attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-enum-id is a placeholder that can be replaced with any user defined enum attribute name. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.enum_values.values.display_name` - The allowed value display name of the user defined enum attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-enum-display-name is a placeholder that can be replaced with any user defined enum attribute enum name. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.string_values.values` - The allowed value of the user defined string attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-string is a placeholder that can be replaced with any user defined string attribute name. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.json_values.values` - The allowed value of the user defined JSON attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-json is a placeholder that can be replaced with any user defined JSON attribute name. Expressions are combined with either `AND` logic operator or `OR` logical operator but not both of them together i.e. only one of the `AND` or `OR` operator can be used throughout the filter string and both the operators cannot be used together. No other logical operators are supported. At most three filter fields are allowed in the filter string and if provided more than that then `INVALID_ARGUMENT` error is returned by the API. Here are a few examples: * `lifecycle.enum_values.values.id: preview-id` - The filter string specifies that the id of the allowed value associated with the lifecycle attribute of the Version is _preview-id_. * `lifecycle.enum_values.values.display_name: \"Preview Display Name\"` - The filter string specifies that the display name of the allowed value associated with the lifecycle attribute of the Version is `Preview Display Name`. * `lifecycle.enum_values.values.id: preview-id AND create_time < \"2021-08-15T14:50:00Z\" AND create_time > \"2021-08-10T12:00:00Z\"` - The id of the allowed value associated with the lifecycle attribute of the Version is _preview-id_ and it was created before _2021-08-15 14:50:00 UTC_ and after _2021-08-10 12:00:00 UTC_. * `compliance.enum_values.values.id: gdpr-id OR compliance.enum_values.values.id: pci-dss-id` - The id of the allowed value associated with the compliance attribute is _gdpr-id_ or _pci-dss-id_. * `lifecycle.enum_values.values.id: preview-id AND attributes.projects/test-project-id/locations/test-location-id/ attributes/17650f90-4a29-4971-b3c0-d5532da3764b.string_values.values: test` - The filter string specifies that the id of the allowed value associated with the lifecycle attribute of the Version is _preview-id_ and the value of the user defined attribute of type string is _test_. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of versions to return. The service may return fewer than this value. If unspecified, at most 50 versions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListVersions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters (except page_size) provided to `ListVersions` must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent which owns this collection of API versions i.e., the API resource Format: `projects/{project}/locations/{location}/apis/{api}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1ListVersionsResponse>;
      /** Update API version. The following fields in the version can be updated currently: * display_name * description * documentation * deployments * lifecycle * compliance * accreditation * attributes The update_mask should be used to specify the fields being updated. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The name of the version. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The list of fields to update. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1Version;
      }): Request<GoogleCloudApihubV1Version>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The name of the version. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The list of fields to update. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1Version,
      ): Request<GoogleCloudApihubV1Version>;
      definitions: DefinitionsResource;
      operations: OperationsResource;
      specs: SpecsResource;
    }
    interface ApisResource {
      /** Create an API resource in the API hub. Once an API resource is created, versions can be added to it. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** Optional. The ID to use for the API resource, which will become the final component of the API's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another API resource in the API hub. * If not provided, a system generated id will be used. This value should be 4-500 characters, and valid characters are /a-z[0-9]-_/. */
        apiId?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for the API resource. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1Api;
      }): Request<GoogleCloudApihubV1Api>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** Optional. The ID to use for the API resource, which will become the final component of the API's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another API resource in the API hub. * If not provided, a system generated id will be used. This value should be 4-500 characters, and valid characters are /a-z[0-9]-_/. */
          apiId?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for the API resource. Format: `projects/{project}/locations/{location}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1Api,
      ): Request<GoogleCloudApihubV1Api>;
      /** Delete an API resource in the API hub. API can only be deleted if all underlying versions are deleted. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. If set to true, any versions from this API will also be deleted. Otherwise, the request will only work if the API has no versions. */
        force?: boolean;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the API resource to delete. Format: `projects/{project}/locations/{location}/apis/{api}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get API resource details including the API versions contained in it. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the API resource to retrieve. Format: `projects/{project}/locations/{location}/apis/{api}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1Api>;
      /** List API resources in the API hub. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. An expression that filters the list of ApiResources. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string. The comparison operator must be one of: `<`, `>`, `:` or `=`. Filters are not case sensitive. The following fields in the `ApiResource` are eligible for filtering: * `owner.email` - The email of the team which owns the ApiResource. Allowed comparison operators: `=`. * `create_time` - The time at which the ApiResource was created. The value should be in the (RFC3339)[https://tools.ietf.org/html/rfc3339] format. Allowed comparison operators: `>` and `<`. * `display_name` - The display name of the ApiResource. Allowed comparison operators: `=`. * `target_user.enum_values.values.id` - The allowed value id of the target users attribute associated with the ApiResource. Allowed comparison operator is `:`. * `target_user.enum_values.values.display_name` - The allowed value display name of the target users attribute associated with the ApiResource. Allowed comparison operator is `:`. * `team.enum_values.values.id` - The allowed value id of the team attribute associated with the ApiResource. Allowed comparison operator is `:`. * `team.enum_values.values.display_name` - The allowed value display name of the team attribute associated with the ApiResource. Allowed comparison operator is `:`. * `business_unit.enum_values.values.id` - The allowed value id of the business unit attribute associated with the ApiResource. Allowed comparison operator is `:`. * `business_unit.enum_values.values.display_name` - The allowed value display name of the business unit attribute associated with the ApiResource. Allowed comparison operator is `:`. * `maturity_level.enum_values.values.id` - The allowed value id of the maturity level attribute associated with the ApiResource. Allowed comparison operator is `:`. * `maturity_level.enum_values.values.display_name` - The allowed value display name of the maturity level attribute associated with the ApiResource. Allowed comparison operator is `:`. * `api_style.enum_values.values.id` - The allowed value id of the api style attribute associated with the ApiResource. Allowed comparison operator is `:`. * `api_style.enum_values.values.display_name` - The allowed value display name of the api style attribute associated with the ApiResource. Allowed comparison operator is `:`. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.enum_values.values.id` - The allowed value id of the user defined enum attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-enum-id is a placeholder that can be replaced with any user defined enum attribute name. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.enum_values.values.display_name` - The allowed value display name of the user defined enum attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-enum-display-name is a placeholder that can be replaced with any user defined enum attribute enum name. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.string_values.values` - The allowed value of the user defined string attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-string is a placeholder that can be replaced with any user defined string attribute name. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.json_values.values` - The allowed value of the user defined JSON attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-json is a placeholder that can be replaced with any user defined JSON attribute name. A filter function is also supported in the filter string. The filter function is `id(name)`. The `id(name)` function returns the id of the resource name. For example, `id(name) = \"api-1\"` is equivalent to `name = \"projects/test-project-id/locations/test-location-id/apis/api-1\"` provided the parent is `projects/test-project-id/locations/test-location-id`. Expressions are combined with either `AND` logic operator or `OR` logical operator but not both of them together i.e. only one of the `AND` or `OR` operator can be used throughout the filter string and both the operators cannot be used together. No other logical operators are supported. At most three filter fields are allowed in the filter string and if provided more than that then `INVALID_ARGUMENT` error is returned by the API. Here are a few examples: * `owner.email = \"apihub@google.com\"` - - The owner team email is _apihub@google.com_. * `owner.email = \"apihub@google.com\" AND create_time < \"2021-08-15T14:50:00Z\" AND create_time > \"2021-08-10T12:00:00Z\"` - The owner team email is _apihub@google.com_ and the api was created before _2021-08-15 14:50:00 UTC_ and after _2021-08-10 12:00:00 UTC_. * `owner.email = \"apihub@google.com\" OR team.enum_values.values.id: apihub-team-id` - The filter string specifies the APIs where the owner team email is _apihub@google.com_ or the id of the allowed value associated with the team attribute is _apihub-team-id_. * `owner.email = \"apihub@google.com\" OR team.enum_values.values.display_name: ApiHub Team` - The filter string specifies the APIs where the owner team email is _apihub@google.com_ or the display name of the allowed value associated with the team attribute is `ApiHub Team`. * `owner.email = \"apihub@google.com\" AND attributes.projects/test-project-id/locations/test-location-id/ attributes/17650f90-4a29-4971-b3c0-d5532da3764b.enum_values.values.id: test_enum_id AND attributes.projects/test-project-id/locations/test-location-id/ attributes/1765\0f90-4a29-5431-b3d0-d5532da3764c.string_values.values: test_string_value` - The filter string specifies the APIs where the owner team email is _apihub@google.com_ and the id of the allowed value associated with the user defined attribute of type enum is _test_enum_id_ and the value of the user defined attribute of type string is _test_.. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of API resources to return. The service may return fewer than this value. If unspecified, at most 50 Apis will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListApis` call. Provide this to retrieve the subsequent page. When paginating, all other parameters (except page_size) provided to `ListApis` must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent, which owns this collection of API resources. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1ListApisResponse>;
      /** Update an API resource in the API hub. The following fields in the API can be updated: * display_name * description * owner * documentation * target_user * team * business_unit * maturity_level * api_style * attributes The update_mask should be used to specify the fields being updated. Updating the owner field requires complete owner message and updates both owner and email fields. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The name of the API resource in the API Hub. Format: `projects/{project}/locations/{location}/apis/{api}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The list of fields to update. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1Api;
      }): Request<GoogleCloudApihubV1Api>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The name of the API resource in the API Hub. Format: `projects/{project}/locations/{location}/apis/{api}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The list of fields to update. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1Api,
      ): Request<GoogleCloudApihubV1Api>;
      versions: VersionsResource;
    }
    interface AttributesResource {
      /** Create a user defined attribute. Certain pre defined attributes are already created by the API hub. These attributes will have type as `SYSTEM_DEFINED` and can be listed via ListAttributes method. Allowed values for the same can be updated via UpdateAttribute method. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** Optional. The ID to use for the attribute, which will become the final component of the attribute's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another attribute resource in the API hub. * If not provided, a system generated id will be used. This value should be 4-500 characters, and valid characters are /a-z[0-9]-_/. */
        attributeId?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for Attribute. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1Attribute;
      }): Request<GoogleCloudApihubV1Attribute>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** Optional. The ID to use for the attribute, which will become the final component of the attribute's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another attribute resource in the API hub. * If not provided, a system generated id will be used. This value should be 4-500 characters, and valid characters are /a-z[0-9]-_/. */
          attributeId?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for Attribute. Format: `projects/{project}/locations/{location}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1Attribute,
      ): Request<GoogleCloudApihubV1Attribute>;
      /** Delete an attribute. Note: System defined attributes cannot be deleted. All associations of the attribute being deleted with any API hub resource will also get deleted. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the attribute to delete. Format: `projects/{project}/locations/{location}/attributes/{attribute}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get details about the attribute. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the attribute to retrieve. Format: `projects/{project}/locations/{location}/attributes/{attribute}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1Attribute>;
      /** List all attributes. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. An expression that filters the list of Attributes. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string or a boolean. The comparison operator must be one of: `<`, `>` or `=`. Filters are not case sensitive. The following fields in the `Attribute` are eligible for filtering: * `display_name` - The display name of the Attribute. Allowed comparison operators: `=`. * `definition_type` - The definition type of the attribute. Allowed comparison operators: `=`. * `scope` - The scope of the attribute. Allowed comparison operators: `=`. * `data_type` - The type of the data of the attribute. Allowed comparison operators: `=`. * `mandatory` - Denotes whether the attribute is mandatory or not. Allowed comparison operators: `=`. * `create_time` - The time at which the Attribute was created. The value should be in the (RFC3339)[https://tools.ietf.org/html/rfc3339] format. Allowed comparison operators: `>` and `<`. Expressions are combined with either `AND` logic operator or `OR` logical operator but not both of them together i.e. only one of the `AND` or `OR` operator can be used throughout the filter string and both the operators cannot be used together. No other logical operators are supported. At most three filter fields are allowed in the filter string and if provided more than that then `INVALID_ARGUMENT` error is returned by the API. Here are a few examples: * `display_name = production` - - The display name of the attribute is _production_. * `(display_name = production) AND (create_time < \"2021-08-15T14:50:00Z\") AND (create_time > \"2021-08-10T12:00:00Z\")` - The display name of the attribute is _production_ and the attribute was created before _2021-08-15 14:50:00 UTC_ and after _2021-08-10 12:00:00 UTC_. * `display_name = production OR scope = api` - The attribute where the display name is _production_ or the scope is _api_. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of attribute resources to return. The service may return fewer than this value. If unspecified, at most 50 attributes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListAttributes` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListAttributes` must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent resource for Attribute. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1ListAttributesResponse>;
      /** Update the attribute. The following fields in the Attribute resource can be updated: * display_name The display name can be updated for user defined attributes only. * description The description can be updated for user defined attributes only. * allowed_values To update the list of allowed values, clients need to use the fetched list of allowed values and add or remove values to or from the same list. The mutable allowed values can be updated for both user defined and System defined attributes. The immutable allowed values cannot be updated or deleted. The updated list of allowed values cannot be empty. If an allowed value that is already used by some resource's attribute is deleted, then the association between the resource and the attribute value will also be deleted. * cardinality The cardinality can be updated for user defined attributes only. Cardinality can only be increased during an update. The update_mask should be used to specify the fields being updated. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The name of the attribute in the API Hub. Format: `projects/{project}/locations/{location}/attributes/{attribute}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The list of fields to update. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1Attribute;
      }): Request<GoogleCloudApihubV1Attribute>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The name of the attribute in the API Hub. Format: `projects/{project}/locations/{location}/attributes/{attribute}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The list of fields to update. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1Attribute,
      ): Request<GoogleCloudApihubV1Attribute>;
    }
    interface CurationsResource {
      /** Create a curation resource in the API hub. Once a curation resource is created, plugin instances can start using it. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Optional. The ID to use for the curation resource, which will become the final component of the curations's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified ID is already used by another curation resource in the API hub. * If not provided, a system generated ID will be used. This value should be 4-500 characters, and valid characters are /a-z[0-9]-_/. */
        curationId?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for the curation resource. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1Curation;
      }): Request<GoogleCloudApihubV1Curation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Optional. The ID to use for the curation resource, which will become the final component of the curations's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified ID is already used by another curation resource in the API hub. * If not provided, a system generated ID will be used. This value should be 4-500 characters, and valid characters are /a-z[0-9]-_/. */
          curationId?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for the curation resource. Format: `projects/{project}/locations/{location}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1Curation,
      ): Request<GoogleCloudApihubV1Curation>;
      /** Delete a curation resource in the API hub. A curation can only be deleted if it's not being used by any plugin instance. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the curation resource to delete. Format: `projects/{project}/locations/{location}/curations/{curation}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get curation resource details. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the curation resource to retrieve. Format: `projects/{project}/locations/{location}/curations/{curation}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1Curation>;
      /** List curation resources in the API hub. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. An expression that filters the list of curation resources. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string. The comparison operator must be one of: `<`, `>`, `:` or `=`. Filters are case insensitive. The following fields in the `curation resource` are eligible for filtering: * `create_time` - The time at which the curation was created. The value should be in the (RFC3339)[https://tools.ietf.org/html/rfc3339] format. Allowed comparison operators: `>` and `<`. * `display_name` - The display name of the curation. Allowed comparison operators: `=`. * `state` - The state of the curation. Allowed comparison operators: `=`. Expressions are combined with either `AND` logic operator or `OR` logical operator but not both of them together i.e. only one of the `AND` or `OR` operator can be used throughout the filter string and both the operators cannot be used together. No other logical operators are supported. At most three filter fields are allowed in the filter string and if provided more than that then `INVALID_ARGUMENT` error is returned by the API. Here are a few examples: * `create_time < \"2021-08-15T14:50:00Z\" AND create_time > \"2021-08-10T12:00:00Z\"` - The curation resource was created before _2021-08-15 14:50:00 UTC_ and after _2021-08-10 12:00:00 UTC_. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of curation resources to return. The service may return fewer than this value. If unspecified, at most 50 curations will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListCurations` call. Provide this to retrieve the subsequent page. When paginating, all other parameters (except page_size) provided to `ListCurations` must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent, which owns this collection of curation resources. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1ListCurationsResponse>;
      /** Update a curation resource in the API hub. The following fields in the curation can be updated: * display_name * description The update_mask should be used to specify the fields being updated. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The name of the curation. Format: `projects/{project}/locations/{location}/curations/{curation}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. The list of fields to update. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1Curation;
      }): Request<GoogleCloudApihubV1Curation>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The name of the curation. Format: `projects/{project}/locations/{location}/curations/{curation}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. The list of fields to update. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1Curation,
      ): Request<GoogleCloudApihubV1Curation>;
    }
    interface DependenciesResource {
      /** Create a dependency between two entities in the API hub. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Optional. The ID to use for the dependency resource, which will become the final component of the dependency's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if duplicate id is provided by the client. * If not provided, a system generated id will be used. This value should be 4-500 characters, and valid characters are `a-z[0-9]-_`. */
        dependencyId?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for the dependency resource. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1Dependency;
      }): Request<GoogleCloudApihubV1Dependency>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Optional. The ID to use for the dependency resource, which will become the final component of the dependency's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if duplicate id is provided by the client. * If not provided, a system generated id will be used. This value should be 4-500 characters, and valid characters are `a-z[0-9]-_`. */
          dependencyId?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for the dependency resource. Format: `projects/{project}/locations/{location}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1Dependency,
      ): Request<GoogleCloudApihubV1Dependency>;
      /** Delete the dependency resource. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the dependency resource to delete. Format: `projects/{project}/locations/{location}/dependencies/{dependency}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get details about a dependency resource in the API hub. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the dependency resource to retrieve. Format: `projects/{project}/locations/{location}/dependencies/{dependency}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1Dependency>;
      /** List dependencies based on the provided filter and pagination parameters. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. An expression that filters the list of Dependencies. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string. Allowed comparison operator is `=`. Filters are not case sensitive. The following fields in the `Dependency` are eligible for filtering: * `consumer.operation_resource_name` - The operation resource name for the consumer entity involved in a dependency. Allowed comparison operators: `=`. * `consumer.external_api_resource_name` - The external api resource name for the consumer entity involved in a dependency. Allowed comparison operators: `=`. * `supplier.operation_resource_name` - The operation resource name for the supplier entity involved in a dependency. Allowed comparison operators: `=`. * `supplier.external_api_resource_name` - The external api resource name for the supplier entity involved in a dependency. Allowed comparison operators: `=`. Expressions are combined with either `AND` logic operator or `OR` logical operator but not both of them together i.e. only one of the `AND` or `OR` operator can be used throughout the filter string and both the operators cannot be used together. No other logical operators are supported. At most three filter fields are allowed in the filter string and if provided more than that then `INVALID_ARGUMENT` error is returned by the API. For example, `consumer.operation_resource_name = \"projects/p1/locations/global/apis/a1/versions/v1/operations/o1\" OR supplier.operation_resource_name = \"projects/p1/locations/global/apis/a1/versions/v1/operations/o1\"` - The dependencies with either consumer or supplier operation resource name as _projects/p1/locations/global/apis/a1/versions/v1/operations/o1_. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of dependency resources to return. The service may return fewer than this value. If unspecified, at most 50 dependencies will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListDependencies` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDependencies` must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent which owns this collection of dependency resources. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1ListDependenciesResponse>;
      /** Update a dependency based on the update_mask provided in the request. The following fields in the dependency can be updated: * description */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The name of the dependency in the API Hub. Format: `projects/{project}/locations/{location}/dependencies/{dependency}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The list of fields to update. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1Dependency;
      }): Request<GoogleCloudApihubV1Dependency>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The name of the dependency in the API Hub. Format: `projects/{project}/locations/{location}/dependencies/{dependency}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The list of fields to update. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1Dependency,
      ): Request<GoogleCloudApihubV1Dependency>;
    }
    interface DeploymentsResource {
      /** Create a deployment resource in the API hub. Once a deployment resource is created, it can be associated with API versions. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Optional. The ID to use for the deployment resource, which will become the final component of the deployment's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another deployment resource in the API hub. * If not provided, a system generated id will be used. This value should be 4-500 characters, and valid characters are /a-z[0-9]-_/. */
        deploymentId?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for the deployment resource. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1Deployment;
      }): Request<GoogleCloudApihubV1Deployment>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Optional. The ID to use for the deployment resource, which will become the final component of the deployment's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another deployment resource in the API hub. * If not provided, a system generated id will be used. This value should be 4-500 characters, and valid characters are /a-z[0-9]-_/. */
          deploymentId?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for the deployment resource. Format: `projects/{project}/locations/{location}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1Deployment,
      ): Request<GoogleCloudApihubV1Deployment>;
      /** Delete a deployment resource in the API hub. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the deployment resource to delete. Format: `projects/{project}/locations/{location}/deployments/{deployment}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get details about a deployment and the API versions linked to it. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the deployment resource to retrieve. Format: `projects/{project}/locations/{location}/deployments/{deployment}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1Deployment>;
      /** List deployment resources in the API hub. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. An expression that filters the list of Deployments. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string. The comparison operator must be one of: `<`, `>` or `=`. Filters are not case sensitive. The following fields in the `Deployments` are eligible for filtering: * `display_name` - The display name of the Deployment. Allowed comparison operators: `=`. * `create_time` - The time at which the Deployment was created. The value should be in the (RFC3339)[https://tools.ietf.org/html/rfc3339] format. Allowed comparison operators: `>` and `<`. * `resource_uri` - A URI to the deployment resource. Allowed comparison operators: `=`. * `api_versions` - The API versions linked to this deployment. Allowed comparison operators: `:`. * `deployment_type.enum_values.values.id` - The allowed value id of the deployment_type attribute associated with the Deployment. Allowed comparison operators: `:`. * `deployment_type.enum_values.values.display_name` - The allowed value display name of the deployment_type attribute associated with the Deployment. Allowed comparison operators: `:`. * `slo.string_values.values` -The allowed string value of the slo attribute associated with the deployment. Allowed comparison operators: `:`. * `environment.enum_values.values.id` - The allowed value id of the environment attribute associated with the deployment. Allowed comparison operators: `:`. * `environment.enum_values.values.display_name` - The allowed value display name of the environment attribute associated with the deployment. Allowed comparison operators: `:`. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.enum_values.values.id` - The allowed value id of the user defined enum attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-enum-id is a placeholder that can be replaced with any user defined enum attribute name. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.enum_values.values.display_name` - The allowed value display name of the user defined enum attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-enum-display-name is a placeholder that can be replaced with any user defined enum attribute enum name. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.string_values.values` - The allowed value of the user defined string attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-string is a placeholder that can be replaced with any user defined string attribute name. * `attributes.projects/test-project-id/locations/test-location-id/ attributes/user-defined-attribute-id.json_values.values` - The allowed value of the user defined JSON attribute associated with the Resource. Allowed comparison operator is `:`. Here user-defined-attribute-json is a placeholder that can be replaced with any user defined JSON attribute name. A filter function is also supported in the filter string. The filter function is `id(name)`. The `id(name)` function returns the id of the resource name. For example, `id(name) = \"deployment-1\"` is equivalent to `name = \"projects/test-project-id/locations/test-location-id/deployments/deployment-1\"` provided the parent is `projects/test-project-id/locations/test-location-id`. Expressions are combined with either `AND` logic operator or `OR` logical operator but not both of them together i.e. only one of the `AND` or `OR` operator can be used throughout the filter string and both the operators cannot be used together. No other logical operators are supported. At most three filter fields are allowed in the filter string and if provided more than that then `INVALID_ARGUMENT` error is returned by the API. Here are a few examples: * `environment.enum_values.values.id: staging-id` - The allowed value id of the environment attribute associated with the Deployment is _staging-id_. * `environment.enum_values.values.display_name: \"Staging Deployment\"` - The allowed value display name of the environment attribute associated with the Deployment is `Staging Deployment`. * `environment.enum_values.values.id: production-id AND create_time < \"2021-08-15T14:50:00Z\" AND create_time > \"2021-08-10T12:00:00Z\"` - The allowed value id of the environment attribute associated with the Deployment is _production-id_ and Deployment was created before _2021-08-15 14:50:00 UTC_ and after _2021-08-10 12:00:00 UTC_. * `environment.enum_values.values.id: production-id OR slo.string_values.values: \"99.99%\"` - The allowed value id of the environment attribute Deployment is _production-id_ or string value of the slo attribute is _99.99%_. * `environment.enum_values.values.id: staging-id AND attributes.projects/test-project-id/locations/test-location-id/ attributes/17650f90-4a29-4971-b3c0-d5532da3764b.string_values.values: test` - The filter string specifies that the allowed value id of the environment attribute associated with the Deployment is _staging-id_ and the value of the user defined attribute of type string is _test_. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of deployment resources to return. The service may return fewer than this value. If unspecified, at most 50 deployments will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListDeployments` call. Provide this to retrieve the subsequent page. When paginating, all other parameters (except page_size) provided to `ListDeployments` must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent, which owns this collection of deployment resources. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1ListDeploymentsResponse>;
      /** Update a deployment resource in the API hub. The following fields in the deployment resource can be updated: * display_name * description * documentation * deployment_type * resource_uri * endpoints * slo * environment * attributes * source_project * source_environment * management_url * source_uri The update_mask should be used to specify the fields being updated. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The name of the deployment. Format: `projects/{project}/locations/{location}/deployments/{deployment}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The list of fields to update. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1Deployment;
      }): Request<GoogleCloudApihubV1Deployment>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The name of the deployment. Format: `projects/{project}/locations/{location}/deployments/{deployment}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The list of fields to update. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1Deployment,
      ): Request<GoogleCloudApihubV1Deployment>;
    }
    interface ExternalApisResource {
      /** Create an External API resource in the API hub. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Optional. The ID to use for the External API resource, which will become the final component of the External API's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another External API resource in the API hub. * If not provided, a system generated id will be used. This value should be 4-500 characters, and valid characters are /a-z[0-9]-_/. */
        externalApiId?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for the External API resource. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1ExternalApi;
      }): Request<GoogleCloudApihubV1ExternalApi>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Optional. The ID to use for the External API resource, which will become the final component of the External API's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another External API resource in the API hub. * If not provided, a system generated id will be used. This value should be 4-500 characters, and valid characters are /a-z[0-9]-_/. */
          externalApiId?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for the External API resource. Format: `projects/{project}/locations/{location}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1ExternalApi,
      ): Request<GoogleCloudApihubV1ExternalApi>;
      /** Delete an External API resource in the API hub. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the External API resource to delete. Format: `projects/{project}/locations/{location}/externalApis/{externalApi}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Get details about an External API resource in the API hub. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the External API resource to retrieve. Format: `projects/{project}/locations/{location}/externalApis/{externalApi}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1ExternalApi>;
      /** List External API resources in the API hub. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of External API resources to return. The service may return fewer than this value. If unspecified, at most 50 ExternalApis will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListExternalApis` call. Provide this to retrieve the subsequent page. When paginating, all other parameters (except page_size) provided to `ListExternalApis` must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent, which owns this collection of External API resources. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1ListExternalApisResponse>;
      /** Update an External API resource in the API hub. The following fields can be updated: * display_name * description * documentation * endpoints * paths The update_mask should be used to specify the fields being updated. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. Format: `projects/{project}/locations/{location}/externalApi/{externalApi}`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The list of fields to update. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1ExternalApi;
      }): Request<GoogleCloudApihubV1ExternalApi>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. Format: `projects/{project}/locations/{location}/externalApi/{externalApi}`. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The list of fields to update. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1ExternalApi,
      ): Request<GoogleCloudApihubV1ExternalApi>;
    }
    interface HostProjectRegistrationsResource {
      /** Create a host project registration. A Google cloud project can be registered as a host project if it is not attached as a runtime project to another host project. A project can be registered as a host project only once. Subsequent register calls for the same project will fail. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Required. The ID to use for the Host Project Registration, which will become the final component of the host project registration's resource name. The ID must be the same as the Google cloud project specified in the host_project_registration.gcp_project field. */
        hostProjectRegistrationId?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for the host project. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1HostProjectRegistration;
      }): Request<GoogleCloudApihubV1HostProjectRegistration>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Required. The ID to use for the Host Project Registration, which will become the final component of the host project registration's resource name. The ID must be the same as the Google cloud project specified in the host_project_registration.gcp_project field. */
          hostProjectRegistrationId?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for the host project. Format: `projects/{project}/locations/{location}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1HostProjectRegistration,
      ): Request<GoogleCloudApihubV1HostProjectRegistration>;
      /** Get a host project registration. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Host project registration resource name. projects/{project}/locations/{location}/hostProjectRegistrations/{host_project_registration_id} */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1HostProjectRegistration>;
      /** Lists host project registrations. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. An expression that filters the list of HostProjectRegistrations. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string. All standard operators as documented at https://google.aip.dev/160 are supported. The following fields in the `HostProjectRegistration` are eligible for filtering: * `name` - The name of the HostProjectRegistration. * `create_time` - The time at which the HostProjectRegistration was created. The value should be in the (RFC3339)[https://tools.ietf.org/html/rfc3339] format. * `gcp_project` - The Google cloud project associated with the HostProjectRegistration. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. Hint for how to order the results. */
        orderBy?: string;
        /** Optional. The maximum number of host project registrations to return. The service may return fewer than this value. If unspecified, at most 50 host project registrations will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListHostProjectRegistrations` call. Provide this to retrieve the subsequent page. When paginating, all other parameters (except page_size) provided to `ListHostProjectRegistrations` must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent, which owns this collection of host projects. Format: `projects/*‍/locations/*` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1ListHostProjectRegistrationsResponse>;
    }
    interface OperationsResource {
      /** Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`. */
      cancel(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource to be cancelled. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleLongrunningCancelOperationRequest;
      }): Request<{}>;
      cancel(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** The name of the operation resource to be cancelled. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleLongrunningCancelOperationRequest,
      ): Request<{}>;
      /** Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource to be deleted. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The standard list filter. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The name of the operation's parent resource. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The standard list page size. */
        pageSize?: number;
        /** The standard list page token. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningListOperationsResponse>;
    }
    interface InstancesResource {
      /** Creates a Plugin instance in the API hub. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent of the plugin instance resource. Format: `projects/{project}/locations/{location}/plugins/{plugin}` */
        parent: string;
        /** Optional. The ID to use for the plugin instance, which will become the final component of the plugin instance's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another plugin instance in the plugin resource. * If not provided, a system generated id will be used. This value should be 4-63 characters, and valid characters are /a-z[0-9]-_/. */
        pluginInstanceId?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1PluginInstance;
      }): Request<GoogleLongrunningOperation>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent of the plugin instance resource. Format: `projects/{project}/locations/{location}/plugins/{plugin}` */
          parent: string;
          /** Optional. The ID to use for the plugin instance, which will become the final component of the plugin instance's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another plugin instance in the plugin resource. * If not provided, a system generated id will be used. This value should be 4-63 characters, and valid characters are /a-z[0-9]-_/. */
          pluginInstanceId?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1PluginInstance,
      ): Request<GoogleLongrunningOperation>;
      /** Deletes a plugin instance in the API hub. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the plugin instance to delete. Format: `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Disables a plugin instance in the API hub. */
      disableAction(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the plugin instance to disable. Format: `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1DisablePluginInstanceActionRequest;
      }): Request<GoogleLongrunningOperation>;
      disableAction(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the plugin instance to disable. Format: `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1DisablePluginInstanceActionRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Enables a plugin instance in the API hub. */
      enableAction(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the plugin instance to enable. Format: `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1EnablePluginInstanceActionRequest;
      }): Request<GoogleLongrunningOperation>;
      enableAction(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the plugin instance to enable. Format: `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1EnablePluginInstanceActionRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Executes a plugin instance in the API hub. */
      executeAction(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the plugin instance to execute. Format: `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1ExecutePluginInstanceActionRequest;
      }): Request<GoogleLongrunningOperation>;
      executeAction(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the plugin instance to execute. Format: `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1ExecutePluginInstanceActionRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Get an API Hub plugin instance. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the plugin instance to retrieve. Format: `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1PluginInstance>;
      /** List all the plugins in a given project and location. `-` can be used as wildcard value for {plugin_id} */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. An expression that filters the list of plugin instances. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string. The comparison operator must be one of: `<`, `>` or `=`. Filters are not case sensitive. The following fields in the `PluginInstances` are eligible for filtering: * `state` - The state of the Plugin Instance. Allowed comparison operators: `=`. A filter function is also supported in the filter string. The filter function is `id(name)`. The `id(name)` function returns the id of the resource name. For example, `id(name) = \"plugin-instance-1\"` is equivalent to `name = \"projects/test-project-id/locations/test-location-id/plugins/plugin-1/instances/plugin-instance-1\"` provided the parent is `projects/test-project-id/locations/test-location-id/plugins/plugin-1`. Expressions are combined with either `AND` logic operator or `OR` logical operator but not both of them together i.e. only one of the `AND` or `OR` operator can be used throughout the filter string and both the operators cannot be used together. No other logical operators are supported. At most three filter fields are allowed in the filter string and if provided more than that then `INVALID_ARGUMENT` error is returned by the API. Here are a few examples: * `state = ENABLED` - The plugin instance is in enabled state. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of hub plugins to return. The service may return fewer than this value. If unspecified, at most 50 hub plugins will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListPluginInstances` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPluginInstances` must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent resource where this plugin will be created. Format: `projects/{project}/locations/{location}/plugins/{plugin}`. To list plugin instances for multiple plugins, use the - character instead of the plugin ID. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1ListPluginInstancesResponse>;
      /** Updates a plugin instance in the API hub. The following fields in the plugin_instance can be updated currently: * display_name * schedule_cron_expression The update_mask should be used to specify the fields being updated. To update the auth_config and additional_config of the plugin instance, use the ApplyPluginInstanceConfig method. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The unique name of the plugin instance resource. Format: `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. The list of fields to update. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1PluginInstance;
      }): Request<GoogleCloudApihubV1PluginInstance>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The unique name of the plugin instance resource. Format: `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. The list of fields to update. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1PluginInstance,
      ): Request<GoogleCloudApihubV1PluginInstance>;
    }
    interface StyleGuideResource {
      /** Get the contents of the style guide. */
      getContents(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the StyleGuide whose contents need to be retrieved. There is exactly one style guide resource per project per location. The expected format is `projects/{project}/locations/{location}/plugins/{plugin}/styleGuide`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1StyleGuideContents>;
    }
    interface PluginsResource {
      /** Create an API Hub plugin resource in the API hub. Once a plugin is created, it can be used to create plugin instances. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource where this plugin will be created. Format: `projects/{project}/locations/{location}`. */
        parent: string;
        /** Optional. The ID to use for the Plugin resource, which will become the final component of the Plugin's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another Plugin resource in the API hub instance. * If not provided, a system generated id will be used. This value should be 4-63 characters, overall resource name which will be of format `projects/{project}/locations/{location}/plugins/{plugin}`, its length is limited to 1000 characters and valid characters are /a-z[0-9]-_/. */
        pluginId?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1Plugin;
      }): Request<GoogleCloudApihubV1Plugin>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource where this plugin will be created. Format: `projects/{project}/locations/{location}`. */
          parent: string;
          /** Optional. The ID to use for the Plugin resource, which will become the final component of the Plugin's resource name. This field is optional. * If provided, the same will be used. The service will throw an error if the specified id is already used by another Plugin resource in the API hub instance. * If not provided, a system generated id will be used. This value should be 4-63 characters, overall resource name which will be of format `projects/{project}/locations/{location}/plugins/{plugin}`, its length is limited to 1000 characters and valid characters are /a-z[0-9]-_/. */
          pluginId?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1Plugin,
      ): Request<GoogleCloudApihubV1Plugin>;
      /** Delete a Plugin in API hub. Note, only user owned plugins can be deleted via this method. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the Plugin resource to delete. Format: `projects/{project}/locations/{location}/plugins/{plugin}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleLongrunningOperation>;
      /** Disables a plugin. The `state` of the plugin after disabling is `DISABLED` */
      disable(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the plugin to disable. Format: `projects/{project}/locations/{location}/plugins/{plugin}`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1DisablePluginRequest;
      }): Request<GoogleCloudApihubV1Plugin>;
      disable(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the plugin to disable. Format: `projects/{project}/locations/{location}/plugins/{plugin}`. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1DisablePluginRequest,
      ): Request<GoogleCloudApihubV1Plugin>;
      /** Enables a plugin. The `state` of the plugin after enabling is `ENABLED` */
      enable(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the plugin to enable. Format: `projects/{project}/locations/{location}/plugins/{plugin}`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1EnablePluginRequest;
      }): Request<GoogleCloudApihubV1Plugin>;
      enable(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The name of the plugin to enable. Format: `projects/{project}/locations/{location}/plugins/{plugin}`. */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1EnablePluginRequest,
      ): Request<GoogleCloudApihubV1Plugin>;
      /** Get an API Hub plugin. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the plugin to retrieve. Format: `projects/{project}/locations/{location}/plugins/{plugin}`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1Plugin>;
      /** Get the style guide being used for linting. */
      getStyleGuide(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the spec to retrieve. Format: `projects/{project}/locations/{location}/plugins/{plugin}/styleGuide`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1StyleGuide>;
      /** List all the plugins in a given project and location. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. An expression that filters the list of plugins. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string. The comparison operator must be one of: `<`, `>` or `=`. Filters are not case sensitive. The following fields in the `Plugins` are eligible for filtering: * `plugin_category` - The category of the Plugin. Allowed comparison operators: `=`. Expressions are combined with either `AND` logic operator or `OR` logical operator but not both of them together i.e. only one of the `AND` or `OR` operator can be used throughout the filter string and both the operators cannot be used together. No other logical operators are supported. At most three filter fields are allowed in the filter string and if provided more than that then `INVALID_ARGUMENT` error is returned by the API. Here are a few examples: * `plugin_category = ON_RAMP` - The plugin is of category on ramp. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of hub plugins to return. The service may return fewer than this value. If unspecified, at most 50 hub plugins will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListPlugins` call. Provide this to retrieve the subsequent page. When paginating, all other parameters (except page_size) provided to `ListPlugins` must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent resource where this plugin will be created. Format: `projects/{project}/locations/{location}`. */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1ListPluginsResponse>;
      /** Update the styleGuide to be used for liniting in by API hub. */
      updateStyleGuide(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Identifier. The name of the style guide. Format: `projects/{project}/locations/{location}/plugins/{plugin}/styleGuide` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. The list of fields to update. */
        updateMask?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1StyleGuide;
      }): Request<GoogleCloudApihubV1StyleGuide>;
      updateStyleGuide(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Identifier. The name of the style guide. Format: `projects/{project}/locations/{location}/plugins/{plugin}/styleGuide` */
          name: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Optional. The list of fields to update. */
          updateMask?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1StyleGuide,
      ): Request<GoogleCloudApihubV1StyleGuide>;
      instances: InstancesResource;
      styleGuide: StyleGuideResource;
    }
    interface RuntimeProjectAttachmentsResource {
      /** Attaches a runtime project to the host project. */
      create(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Required. The parent resource for the Runtime Project Attachment. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Required. The ID to use for the Runtime Project Attachment, which will become the final component of the Runtime Project Attachment's name. The ID must be the same as the project ID of the Google cloud project specified in the runtime_project_attachment.runtime_project field. */
        runtimeProjectAttachmentId?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1RuntimeProjectAttachment;
      }): Request<GoogleCloudApihubV1RuntimeProjectAttachment>;
      create(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Required. The parent resource for the Runtime Project Attachment. Format: `projects/{project}/locations/{location}` */
          parent: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Required. The ID to use for the Runtime Project Attachment, which will become the final component of the Runtime Project Attachment's name. The ID must be the same as the project ID of the Google cloud project specified in the runtime_project_attachment.runtime_project field. */
          runtimeProjectAttachmentId?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1RuntimeProjectAttachment,
      ): Request<GoogleCloudApihubV1RuntimeProjectAttachment>;
      /** Delete a runtime project attachment in the API Hub. This call will detach the runtime project from the host project. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the Runtime Project Attachment to delete. Format: `projects/{project}/locations/{location}/runtimeProjectAttachments/{runtime_project_attachment}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Gets a runtime project attachment. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The name of the API resource to retrieve. Format: `projects/{project}/locations/{location}/runtimeProjectAttachments/{runtime_project_attachment}` */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1RuntimeProjectAttachment>;
      /** List runtime projects attached to the host project. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. An expression that filters the list of RuntimeProjectAttachments. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string. All standard operators as documented at https://google.aip.dev/160 are supported. The following fields in the `RuntimeProjectAttachment` are eligible for filtering: * `name` - The name of the RuntimeProjectAttachment. * `create_time` - The time at which the RuntimeProjectAttachment was created. The value should be in the (RFC3339)[https://tools.ietf.org/html/rfc3339] format. * `runtime_project` - The Google cloud project associated with the RuntimeProjectAttachment. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. Hint for how to order the results. */
        orderBy?: string;
        /** Optional. The maximum number of runtime project attachments to return. The service may return fewer than this value. If unspecified, at most 50 runtime project attachments will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. */
        pageSize?: number;
        /** Optional. A page token, received from a previous `ListRuntimeProjectAttachments` call. Provide this to retrieve the subsequent page. When paginating, all other parameters (except page_size) provided to `ListRuntimeProjectAttachments` must match the call that provided the page token. */
        pageToken?: string;
        /** Required. The parent, which owns this collection of runtime project attachments. Format: `projects/{project}/locations/{location}` */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1ListRuntimeProjectAttachmentsResponse>;
    }
    interface LocationsResource {
      /** Collect API data from a source and push it to Hub's collect layer. */
      collectApiData(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The regional location of the API hub instance and its resources. Format: `projects/{project}/locations/{location}` */
        location: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1CollectApiDataRequest;
      }): Request<GoogleLongrunningOperation>;
      collectApiData(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The regional location of the API hub instance and its resources. Format: `projects/{project}/locations/{location}` */
          location: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1CollectApiDataRequest,
      ): Request<GoogleLongrunningOperation>;
      /** Gets information about a location. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Resource name for the location. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudLocationLocation>;
      /** Lists information about the supported locations for this service. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Optional. A list of extra location types that should be used as conditions for controlling the visibility of the locations. */
        extraLocationTypes?: string | string[];
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160). */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The resource that owns the locations collection, if applicable. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** The maximum number of results to return. If not set, the service selects a default. */
        pageSize?: number;
        /** A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudLocationListLocationsResponse>;
      /** Look up a runtime project attachment. This API can be called in the context of any project. */
      lookupRuntimeProjectAttachment(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. Runtime project ID to look up runtime project attachment for. Lookup happens across all regions. Expected format: `projects/{project}/locations/{location}`. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudApihubV1LookupRuntimeProjectAttachmentResponse>;
      /** Search across API-Hub resources. */
      searchResources(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Required. The resource name of the location which will be of the type `projects/{project_id}/locations/{location_id}`. This field is used to identify the instance of API-Hub in which resources should be searched. */
        location: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GoogleCloudApihubV1SearchResourcesRequest;
      }): Request<GoogleCloudApihubV1SearchResourcesResponse>;
      searchResources(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Required. The resource name of the location which will be of the type `projects/{project_id}/locations/{location_id}`. This field is used to identify the instance of API-Hub in which resources should be searched. */
          location: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GoogleCloudApihubV1SearchResourcesRequest,
      ): Request<GoogleCloudApihubV1SearchResourcesResponse>;
      apiHubInstances: ApiHubInstancesResource;
      apis: ApisResource;
      attributes: AttributesResource;
      curations: CurationsResource;
      dependencies: DependenciesResource;
      deployments: DeploymentsResource;
      externalApis: ExternalApisResource;
      hostProjectRegistrations: HostProjectRegistrationsResource;
      operations: OperationsResource;
      plugins: PluginsResource;
      runtimeProjectAttachments: RuntimeProjectAttachmentsResource;
    }
    interface ProjectsResource {
      locations: LocationsResource;
    }

    const projects: ProjectsResource;
  }
}
