/* Type definitions for non-npm package Google Ads API v7 0.0 */
// Project: https://developers.google.com/google-ads/api/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://googleads.googleapis.com/$discovery/rest?version=v7
// Revision: 20231018

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Google Ads API v7 */
    function load(urlOrObject: "https://googleads.googleapis.com/$discovery/rest?version=v7"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "googleads", version: "v7"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "googleads", version: "v7", callback: () => any): void;

    namespace googleads {
        interface GoogleAdsGoogleadsV11Common__PolicyTopicConstraint {
            /** Countries where the resource's domain is not covered by the certificates associated with it. */
            certificateDomainMismatchInCountryList?:
                GoogleAdsGoogleadsV11Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where a certificate is required for serving. */
            certificateMissingInCountryList?:
                GoogleAdsGoogleadsV11Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where the resource cannot serve. */
            countryConstraintList?:
                GoogleAdsGoogleadsV11Common_PolicyTopicConstraint_CountryConstraintList;
            /** Reseller constraint. */
            resellerConstraint?:
                any;
        }
        interface GoogleAdsGoogleadsV11Common__PolicyTopicEntry {
            /** Indicates how serving of this resource may be affected (for example, not serving in a country). */
            constraints?:
                GoogleAdsGoogleadsV11Common__PolicyTopicConstraint[];
            /** Additional information that explains policy finding (for example, the brand name for a trademark finding). */
            evidences?:
                GoogleAdsGoogleadsV11Common__PolicyTopicEvidence[];
            /**
             * Policy topic this finding refers to. For example, "ALCOHOL", "TRADEMARKS_IN_AD_TEXT", or "DESTINATION_NOT_WORKING". The set of possible policy topics is not fixed for a particular
             * API version and may change at any time.
             */
            topic?:
                string;
            /** Describes the negative or positive effect this policy will have on serving. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV11Common__PolicyTopicEvidence {
            /** Mismatch between the destinations of a resource's URLs. */
            destinationMismatch?:
                GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_DestinationMismatch;
            /** Details when the destination is returning an HTTP error code or isn't functional in all locations for commonly used devices. */
            destinationNotWorking?:
                GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_DestinationNotWorking;
            /** The text in the destination of the resource that is causing a policy finding. */
            destinationTextList?:
                GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_DestinationTextList;
            /** The language the resource was detected to be written in. This is an IETF language tag such as "en-US". */
            languageCode?:
                string;
            /** List of evidence found in the text of a resource. */
            textList?:
                GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_TextList;
            /** List of websites linked with this resource. */
            websiteList?:
                GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_WebsiteList;
        }
        interface GoogleAdsGoogleadsV11Common__PolicyViolationKey {
            /** Unique ID of the violated policy. */
            policyName?:
                string;
            /**
             * The text that violates the policy if specified. Otherwise, refers to the policy in general (for example, when requesting to be exempt from the whole policy). If not specified for
             * criterion exemptions, the whole policy is implied. Must be specified for ad exemptions.
             */
            violatingText?:
                string;
        }
        interface GoogleAdsGoogleadsV11Common__Value {
            /** A boolean. */
            booleanValue?:
                boolean;
            /** A double. */
            doubleValue?:
                number;
            /** A float. */
            floatValue?:
                number;
            /** An int64. */
            int64Value?:
                string;
            /** A string. */
            stringValue?:
                string;
        }
        interface GoogleAdsGoogleadsV11Common_PolicyTopicConstraint_CountryConstraint {
            /** Geo target constant resource name of the country in which serving is constrained. */
            countryCriterion?:
                string;
        }
        interface GoogleAdsGoogleadsV11Common_PolicyTopicConstraint_CountryConstraintList {
            /** Countries in which serving is restricted. */
            countries?:
                GoogleAdsGoogleadsV11Common_PolicyTopicConstraint_CountryConstraint[];
            /** Total number of countries targeted by the resource. */
            totalTargetedCountries?:
                number;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV11Common_PolicyTopicConstraint_ResellerConstraint {
        }
        interface GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_DestinationMismatch {
            /** The set of URLs that did not match each other. */
            urlTypes?:
                string[];
        }
        interface GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_DestinationNotWorking {
            /** The type of device that failed to load the URL. */
            device?:
                string;
            /** The type of DNS error. */
            dnsErrorType?:
                string;
            /** The full URL that didn't work. */
            expandedUrl?:
                string;
            /** The HTTP error code. */
            httpErrorCode?:
                string;
            /** The time the URL was last checked. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30" */
            lastCheckedDateTime?:
                string;
        }
        interface GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_DestinationTextList {
            /** List of text found in the resource's destination page. */
            destinationTexts?:
                string[];
        }
        interface GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_TextList {
            /** The fragments of text from the resource that caused the policy finding. */
            texts?:
                string[];
        }
        interface GoogleAdsGoogleadsV11Common_PolicyTopicEvidence_WebsiteList {
            /** Websites that caused the policy finding. */
            websites?:
                string[];
        }
        interface GoogleAdsGoogleadsV11Errors__ErrorCode {
            /** The reasons for the access invitation error */
            accessInvitationError?:
                string;
            /** The reasons for account budget proposal errors. */
            accountBudgetProposalError?:
                string;
            /** The reasons for the account link status change error */
            accountLinkError?:
                string;
            /** The reasons for the ad customizer error */
            adCustomizerError?:
                string;
            /** An error with an Ad Group Ad mutate. */
            adError?:
                string;
            /** The reasons for the ad group ad error */
            adGroupAdError?:
                string;
            /** The reasons for the ad group bid modifier error */
            adGroupBidModifierError?:
                string;
            /** The reasons for the ad group criterion customizer error. */
            adGroupCriterionCustomizerError?:
                string;
            /** Indicates failure to properly authenticate user. */
            adGroupCriterionError?:
                string;
            /** The reasons for the ad group customizer error. */
            adGroupCustomizerError?:
                string;
            /** An error with an Ad Group mutate. */
            adGroupError?:
                string;
            /** The reasons for the ad group feed error */
            adGroupFeedError?:
                string;
            /** The reasons for the ad parameter error */
            adParameterError?:
                string;
            /** The reasons for the ad sharing error */
            adSharingError?:
                string;
            /** The reasons for the adx error */
            adxError?:
                string;
            /** The reasons for the asset error */
            assetError?:
                string;
            /** The reasons for the asset group asset error */
            assetGroupAssetError?:
                string;
            /** The reasons for the asset group error */
            assetGroupError?:
                string;
            /** The reasons for the asset group listing group filter error */
            assetGroupListingGroupFilterError?:
                string;
            /** The reasons for the asset link error */
            assetLinkError?:
                string;
            /** The reasons for the asset set asset error */
            assetSetAssetError?:
                string;
            /** The reasons for the asset set error */
            assetSetError?:
                string;
            /** The reasons for the asset set link error */
            assetSetLinkError?:
                string;
            /** The reasons for the audience error */
            audienceError?:
                string;
            /** The reasons for the Audience Insights error */
            audienceInsightsError?:
                string;
            /** Indicates failure to properly authenticate user. */
            authenticationError?:
                string;
            /** An error encountered when trying to authorize a user. */
            authorizationError?:
                string;
            /** The reasons for the batch job error */
            batchJobError?:
                string;
            /** The reasons for the bidding errors */
            biddingError?:
                string;
            /** An error with a Bidding Strategy mutate. */
            biddingStrategyError?:
                string;
            /** The reasons for the billing setup error */
            billingSetupError?:
                string;
            /** An error with a Campaign Budget mutate. */
            campaignBudgetError?:
                string;
            /** The reasons for the campaign conversion goal error */
            campaignConversionGoalError?:
                string;
            /** The reasons for the campaign criterion error */
            campaignCriterionError?:
                string;
            /** The reasons for the campaign customizer error. */
            campaignCustomizerError?:
                string;
            /** The reasons for the campaign draft error */
            campaignDraftError?:
                string;
            /** An error with a Campaign mutate. */
            campaignError?:
                string;
            /** The reasons for the campaign experiment error */
            campaignExperimentError?:
                string;
            /** The reasons for the campaign feed error */
            campaignFeedError?:
                string;
            /** The reasons for the campaign shared set error */
            campaignSharedSetError?:
                string;
            /** The reasons for the change event error */
            changeEventError?:
                string;
            /** The reasons for the change status error */
            changeStatusError?:
                string;
            /** The reasons for the collection size error */
            collectionSizeError?:
                string;
            /** The reasons for the context error */
            contextError?:
                string;
            /** The reasons for the conversion action error */
            conversionActionError?:
                string;
            /** The reasons for the conversion adjustment upload error */
            conversionAdjustmentUploadError?:
                string;
            /** The reasons for the conversion custom variable error */
            conversionCustomVariableError?:
                string;
            /** The reasons for the conversion goal campaign config error */
            conversionGoalCampaignConfigError?:
                string;
            /** The reasons for the conversion upload error */
            conversionUploadError?:
                string;
            /** The reasons for the conversion value rule error */
            conversionValueRuleError?:
                string;
            /** The reasons for the conversion value rule set error */
            conversionValueRuleSetError?:
                string;
            /** The reasons for the country code error */
            countryCodeError?:
                string;
            /** The reasons for the criterion error */
            criterionError?:
                string;
            /** The reasons for the currency code error */
            currencyCodeError?:
                string;
            /** The reasons for the custom audience error */
            customAudienceError?:
                string;
            /** The reasons for the custom conversion goal error */
            customConversionGoalError?:
                string;
            /** The reasons for the customer client link error */
            customerClientLinkError?:
                string;
            /** The reasons for the customer customizer error. */
            customerCustomizerError?:
                string;
            /** The reasons for the customer error */
            customerError?:
                string;
            /** The reasons for the customer feed error */
            customerFeedError?:
                string;
            /** The reasons for the customer manager link error */
            customerManagerLinkError?:
                string;
            /** The reasons for the customer user access mutate error */
            customerUserAccessError?:
                string;
            /** The reasons for the custom interest error */
            customInterestError?:
                string;
            /** The reasons for the customizer attribute error. */
            customizerAttributeError?:
                string;
            /** The reasons for the database error. */
            databaseError?:
                string;
            /** The reasons for the date error */
            dateError?:
                string;
            /** The reasons for the date range error */
            dateRangeError?:
                string;
            /** The reasons for the distinct error */
            distinctError?:
                string;
            /** The reason for enum error. */
            enumError?:
                string;
            /** The reasons for the experiment arm error */
            experimentArmError?:
                string;
            /** The reasons for the experiment error */
            experimentError?:
                string;
            /** The reasons for the extension feed item error */
            extensionFeedItemError?:
                string;
            /** The reasons for the extension setting error */
            extensionSettingError?:
                string;
            /** The reasons for the feed attribute reference error */
            feedAttributeReferenceError?:
                string;
            /** The reasons for the feed error */
            feedError?:
                string;
            /** The reasons for the feed item error */
            feedItemError?:
                string;
            /** The reasons for the feed item set error */
            feedItemSetError?:
                string;
            /** The reasons for the feed item set link error */
            feedItemSetLinkError?:
                string;
            /** The reasons for the feed item target error */
            feedItemTargetError?:
                string;
            /** The reasons for the feed item validation error */
            feedItemValidationError?:
                string;
            /** The reasons for the feed mapping error */
            feedMappingError?:
                string;
            /** The reasons for the field error */
            fieldError?:
                string;
            /** An error with a field mask */
            fieldMaskError?:
                string;
            /** The reasons for the function error */
            functionError?:
                string;
            /** The reasons for the function parsing error */
            functionParsingError?:
                string;
            /** The reasons for the geo target constant suggestion error. */
            geoTargetConstantSuggestionError?:
                string;
            /** The reasons for the header error. */
            headerError?:
                string;
            /** The reasons for the id error */
            idError?:
                string;
            /** The reasons for the image error */
            imageError?:
                string;
            /** An unexpected server-side error. */
            internalError?:
                string;
            /** The reasons for the invoice error */
            invoiceError?:
                string;
            /** The reason for keyword plan ad group error. */
            keywordPlanAdGroupError?:
                string;
            /** The reason for keyword plan ad group keyword error. */
            keywordPlanAdGroupKeywordError?:
                string;
            /** The reason for keyword plan campaign error. */
            keywordPlanCampaignError?:
                string;
            /** The reason for keyword plan campaign keyword error. */
            keywordPlanCampaignKeywordError?:
                string;
            /** The reason for keyword plan error. */
            keywordPlanError?:
                string;
            /** The reason for keyword idea error. */
            keywordPlanIdeaError?:
                string;
            /** The reason for the label error. */
            labelError?:
                string;
            /** The reasons for the language code error */
            languageCodeError?:
                string;
            /** An error with a list operation. */
            listOperationError?:
                string;
            /** The reasons for the manager link error */
            managerLinkError?:
                string;
            /** The reasons for the media bundle error */
            mediaBundleError?:
                string;
            /** The reasons for the media file error */
            mediaFileError?:
                string;
            /** The reasons for media uploading errors. */
            mediaUploadError?:
                string;
            /** Container for enum describing possible merchant center errors. */
            merchantCenterError?:
                string;
            /** The reasons for the multiplier error */
            multiplierError?:
                string;
            /** An error with a mutate */
            mutateError?:
                string;
            /** The reasons for the new resource creation error */
            newResourceCreationError?:
                string;
            /** The reasons for the not allowlisted error */
            notAllowlistedError?:
                string;
            /** The reasons for the not empty error */
            notEmptyError?:
                string;
            /** The reasons for the null error */
            nullError?:
                string;
            /** The reasons for the offline user data job error. */
            offlineUserDataJobError?:
                string;
            /** The reasons for the operation access denied error */
            operationAccessDeniedError?:
                string;
            /** The reasons for the operator error */
            operatorError?:
                string;
            /** The reasons for the mutate job error */
            partialFailureError?:
                string;
            /** The reasons for errors in payments accounts service */
            paymentsAccountError?:
                string;
            /** The reasons for the policy finding error. */
            policyFindingError?:
                string;
            /** The reasons for the policy validation parameter error */
            policyValidationParameterError?:
                string;
            /** The reasons for the policy violation error */
            policyViolationError?:
                string;
            /** An error with an AWQL query */
            queryError?:
                string;
            /** An error with the amount of quota remaining. */
            quotaError?:
                string;
            /** The reasons for the range error */
            rangeError?:
                string;
            /** The reasons for the reach plan error */
            reachPlanError?:
                string;
            /** The reasons for error in applying a recommendation */
            recommendationError?:
                string;
            /** The reasons for the region code error */
            regionCodeError?:
                string;
            /** An error caused by the request */
            requestError?:
                string;
            /** The reasons for the resource access denied error */
            resourceAccessDeniedError?:
                string;
            /** The reasons for the resource count limit exceeded error */
            resourceCountLimitExceededError?:
                string;
            /** The reasons for the setting error */
            settingError?:
                string;
            /** The reasons for the shared criterion error */
            sharedCriterionError?:
                string;
            /** The reasons for the shared set error */
            sharedSetError?:
                string;
            /** The reasons for the size limit error */
            sizeLimitError?:
                string;
            /** The reasons for the string format error */
            stringFormatError?:
                string;
            /** The reasons for the string length error */
            stringLengthError?:
                string;
            /** The reasons for the third party app analytics link mutate error */
            thirdPartyAppAnalyticsLinkError?:
                string;
            /** The reasons for the time zone error */
            timeZoneError?:
                string;
            /** An error with a URL field mutate. */
            urlFieldError?:
                string;
            /** The reasons for the user data error. */
            userDataError?:
                string;
            /** The reasons for the user list error */
            userListError?:
                string;
            /** The reasons for YouTube video registration errors. */
            youtubeVideoRegistrationError?:
                string;
        }
        interface GoogleAdsGoogleadsV11Errors__ErrorDetails {
            /** Describes policy violation findings. */
            policyFindingDetails?:
                GoogleAdsGoogleadsV11Errors__PolicyFindingDetails;
            /** Describes an ad policy violation. */
            policyViolationDetails?:
                GoogleAdsGoogleadsV11Errors__PolicyViolationDetails;
            /** Details on the quota error, including the scope (account or developer), the rate bucket name and the retry delay. */
            quotaErrorDetails?:
                GoogleAdsGoogleadsV11Errors__QuotaErrorDetails;
            /** Details for a resource count limit exceeded error. */
            resourceCountDetails?:
                GoogleAdsGoogleadsV11Errors__ResourceCountDetails;
            /** The error code that should have been returned, but wasn't. This is used when the error code is not published in the client specified version. */
            unpublishedErrorCode?:
                string;
        }
        interface GoogleAdsGoogleadsV11Errors__ErrorLocation {
            /** A field path that indicates which field was invalid in the request. */
            fieldPathElements?:
                GoogleAdsGoogleadsV11Errors_ErrorLocation_FieldPathElement[];
        }
        interface GoogleAdsGoogleadsV11Errors__GoogleAdsError {
            /** Additional error details, which are returned by certain error codes. Most error codes do not include details. */
            details?:
                GoogleAdsGoogleadsV11Errors__ErrorDetails;
            /** An enum value that indicates which error occurred. */
            errorCode?:
                GoogleAdsGoogleadsV11Errors__ErrorCode;
            /** Describes the part of the request proto that caused the error. */
            location?:
                GoogleAdsGoogleadsV11Errors__ErrorLocation;
            /** A human-readable description of the error. */
            message?:
                string;
            /** The value that triggered the error. */
            trigger?:
                GoogleAdsGoogleadsV11Common__Value;
        }
        interface GoogleAdsGoogleadsV11Errors__GoogleAdsFailure {
            /** The list of errors that occurred. */
            errors?:
                GoogleAdsGoogleadsV11Errors__GoogleAdsError[];
            /** The unique ID of the request that is used for debugging purposes. */
            requestId?:
                string;
        }
        interface GoogleAdsGoogleadsV11Errors__PolicyFindingDetails {
            /**
             * The list of policy topics for the resource. Contains the PROHIBITED or FULLY_LIMITED policy topic entries that prevented the resource from being saved (among any other entries the
             * resource may also have).
             */
            policyTopicEntries?:
                GoogleAdsGoogleadsV11Common__PolicyTopicEntry[];
        }
        interface GoogleAdsGoogleadsV11Errors__PolicyViolationDetails {
            /** Human readable description of policy violation. */
            externalPolicyDescription?:
                string;
            /** Human readable name of the policy. */
            externalPolicyName?:
                string;
            /** Whether user can file an exemption request for this violation. */
            isExemptible?:
                boolean;
            /** Unique identifier for this violation. If policy is exemptible, this key may be used to request exemption. */
            key?:
                GoogleAdsGoogleadsV11Common__PolicyViolationKey;
        }
        interface GoogleAdsGoogleadsV11Errors__QuotaErrorDetails {
            /** The high level description of the quota bucket. Examples are "Get requests for standard access" or "Requests per account". */
            rateName?:
                string;
            /** The rate scope of the quota limit. */
            rateScope?:
                string;
            /** Backoff period that customers should wait before sending next request. */
            retryDelay?:
                string;
        }
        interface GoogleAdsGoogleadsV11Errors__ResourceCountDetails {
            /** The ID of the resource whose limit was exceeded. External customer ID if the limit is for a customer. */
            enclosingId?:
                string;
            /** The name of the resource (Customer, Campaign etc.) whose limit was exceeded. */
            enclosingResource?:
                string;
            /** The count of existing entities. */
            existingCount?:
                number;
            /** The limit which was exceeded. */
            limit?:
                number;
            /** The resource limit type which was exceeded. */
            limitType?:
                string;
        }
        interface GoogleAdsGoogleadsV11Errors_ErrorLocation_FieldPathElement {
            /** The name of a field or a oneof */
            fieldName?:
                string;
            /** If field_name is a repeated field, this is the element that failed */
            index?:
                number;
        }
        interface GoogleAdsGoogleadsV11Resources_BatchJob_BatchJobMetadata {
            /** Output only. The time when this batch job was completed. Formatted as yyyy-MM-dd HH:mm:ss. Example: "2018-03-05 09:16:00" */
            completionDateTime?:
                string;
            /** Output only. The time when this batch job was created. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:00" */
            creationDateTime?:
                string;
            /** Output only. The fraction (between 0.0 and 1.0) of mutates that have been processed. This is empty if the job hasn't started running yet. */
            estimatedCompletionRatio?:
                number;
            /** Output only. The number of mutate operations executed by the batch job. Present only if the job has started running. */
            executedOperationCount?:
                string;
            /** Output only. The number of mutate operations in the batch job. */
            operationCount?:
                string;
            /** Output only. The time when this batch job started running. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:30" */
            startDateTime?:
                string;
        }
        interface GoogleAdsGoogleadsV11Services__CreateCampaignExperimentMetadata {
            /** Resource name of campaign experiment created. */
            campaignExperiment?:
                string;
        }
        interface GoogleAdsGoogleadsV11Services__PromoteExperimentMetadata {
            /** Required. The promoted experiment. */
            experiment?:
                string;
        }
        interface GoogleAdsGoogleadsV11Services__ScheduleExperimentMetadata {
            /** Required. The scheduled experiment. */
            experiment?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__PolicyTopicConstraint {
            /** Countries where the resource's domain is not covered by the certificates associated with it. */
            certificateDomainMismatchInCountryList?:
                GoogleAdsGoogleadsV12Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where a certificate is required for serving. */
            certificateMissingInCountryList?:
                GoogleAdsGoogleadsV12Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where the resource cannot serve. */
            countryConstraintList?:
                GoogleAdsGoogleadsV12Common_PolicyTopicConstraint_CountryConstraintList;
            /** Reseller constraint. */
            resellerConstraint?:
                any;
        }
        interface GoogleAdsGoogleadsV12Common__PolicyTopicEntry {
            /** Indicates how serving of this resource may be affected (for example, not serving in a country). */
            constraints?:
                GoogleAdsGoogleadsV12Common__PolicyTopicConstraint[];
            /** Additional information that explains policy finding (for example, the brand name for a trademark finding). */
            evidences?:
                GoogleAdsGoogleadsV12Common__PolicyTopicEvidence[];
            /**
             * Policy topic this finding refers to. For example, "ALCOHOL", "TRADEMARKS_IN_AD_TEXT", or "DESTINATION_NOT_WORKING". The set of possible policy topics is not fixed for a particular
             * API version and may change at any time.
             */
            topic?:
                string;
            /** Describes the negative or positive effect this policy will have on serving. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__PolicyTopicEvidence {
            /** Mismatch between the destinations of a resource's URLs. */
            destinationMismatch?:
                GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_DestinationMismatch;
            /** Details when the destination is returning an HTTP error code or isn't functional in all locations for commonly used devices. */
            destinationNotWorking?:
                GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_DestinationNotWorking;
            /** The text in the destination of the resource that is causing a policy finding. */
            destinationTextList?:
                GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_DestinationTextList;
            /** The language the resource was detected to be written in. This is an IETF language tag such as "en-US". */
            languageCode?:
                string;
            /** List of evidence found in the text of a resource. */
            textList?:
                GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_TextList;
            /** List of websites linked with this resource. */
            websiteList?:
                GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_WebsiteList;
        }
        interface GoogleAdsGoogleadsV12Common__PolicyViolationKey {
            /** Unique ID of the violated policy. */
            policyName?:
                string;
            /**
             * The text that violates the policy if specified. Otherwise, refers to the policy in general (for example, when requesting to be exempt from the whole policy). If not specified for
             * criterion exemptions, the whole policy is implied. Must be specified for ad exemptions.
             */
            violatingText?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common__Value {
            /** A boolean. */
            booleanValue?:
                boolean;
            /** A double. */
            doubleValue?:
                number;
            /** A float. */
            floatValue?:
                number;
            /** An int64. */
            int64Value?:
                string;
            /** A string. */
            stringValue?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common_PolicyTopicConstraint_CountryConstraint {
            /** Geo target constant resource name of the country in which serving is constrained. */
            countryCriterion?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common_PolicyTopicConstraint_CountryConstraintList {
            /** Countries in which serving is restricted. */
            countries?:
                GoogleAdsGoogleadsV12Common_PolicyTopicConstraint_CountryConstraint[];
            /** Total number of countries targeted by the resource. */
            totalTargetedCountries?:
                number;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV12Common_PolicyTopicConstraint_ResellerConstraint {
        }
        interface GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_DestinationMismatch {
            /** The set of URLs that did not match each other. */
            urlTypes?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_DestinationNotWorking {
            /** The type of device that failed to load the URL. */
            device?:
                string;
            /** The type of DNS error. */
            dnsErrorType?:
                string;
            /** The full URL that didn't work. */
            expandedUrl?:
                string;
            /** The HTTP error code. */
            httpErrorCode?:
                string;
            /** The time the URL was last checked. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30" */
            lastCheckedDateTime?:
                string;
        }
        interface GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_DestinationTextList {
            /** List of text found in the resource's destination page. */
            destinationTexts?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_TextList {
            /** The fragments of text from the resource that caused the policy finding. */
            texts?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Common_PolicyTopicEvidence_WebsiteList {
            /** Websites that caused the policy finding. */
            websites?:
                string[];
        }
        interface GoogleAdsGoogleadsV12Errors__ErrorCode {
            /** The reasons for the access invitation error */
            accessInvitationError?:
                string;
            /** The reasons for account budget proposal errors. */
            accountBudgetProposalError?:
                string;
            /** The reasons for the account link status change error */
            accountLinkError?:
                string;
            /** The reasons for the ad customizer error */
            adCustomizerError?:
                string;
            /** An error with an Ad Group Ad mutate. */
            adError?:
                string;
            /** The reasons for the ad group ad error */
            adGroupAdError?:
                string;
            /** The reasons for the ad group bid modifier error */
            adGroupBidModifierError?:
                string;
            /** The reasons for the ad group criterion customizer error. */
            adGroupCriterionCustomizerError?:
                string;
            /** Indicates failure to properly authenticate user. */
            adGroupCriterionError?:
                string;
            /** The reasons for the ad group customizer error. */
            adGroupCustomizerError?:
                string;
            /** An error with an Ad Group mutate. */
            adGroupError?:
                string;
            /** The reasons for the ad group feed error */
            adGroupFeedError?:
                string;
            /** The reasons for the ad parameter error */
            adParameterError?:
                string;
            /** The reasons for the ad sharing error */
            adSharingError?:
                string;
            /** The reasons for the adx error */
            adxError?:
                string;
            /** The reasons for the asset error */
            assetError?:
                string;
            /** The reasons for the asset group asset error */
            assetGroupAssetError?:
                string;
            /** The reasons for the asset group error */
            assetGroupError?:
                string;
            /** The reasons for the asset group listing group filter error */
            assetGroupListingGroupFilterError?:
                string;
            /** The reasons for the asset link error */
            assetLinkError?:
                string;
            /** The reasons for the asset set asset error */
            assetSetAssetError?:
                string;
            /** The reasons for the asset set error */
            assetSetError?:
                string;
            /** The reasons for the asset set link error */
            assetSetLinkError?:
                string;
            /** The reasons for the audience error */
            audienceError?:
                string;
            /** The reasons for the Audience Insights error */
            audienceInsightsError?:
                string;
            /** Indicates failure to properly authenticate user. */
            authenticationError?:
                string;
            /** An error encountered when trying to authorize a user. */
            authorizationError?:
                string;
            /** The reasons for the batch job error */
            batchJobError?:
                string;
            /** The reasons for the bidding errors */
            biddingError?:
                string;
            /** An error with a Bidding Strategy mutate. */
            biddingStrategyError?:
                string;
            /** The reasons for the billing setup error */
            billingSetupError?:
                string;
            /** An error with a Campaign Budget mutate. */
            campaignBudgetError?:
                string;
            /** The reasons for the campaign conversion goal error */
            campaignConversionGoalError?:
                string;
            /** The reasons for the campaign criterion error */
            campaignCriterionError?:
                string;
            /** The reasons for the campaign customizer error. */
            campaignCustomizerError?:
                string;
            /** The reasons for the campaign draft error */
            campaignDraftError?:
                string;
            /** An error with a Campaign mutate. */
            campaignError?:
                string;
            /** The reasons for the campaign experiment error */
            campaignExperimentError?:
                string;
            /** The reasons for the campaign feed error */
            campaignFeedError?:
                string;
            /** The reasons for the campaign shared set error */
            campaignSharedSetError?:
                string;
            /** The reasons for the change event error */
            changeEventError?:
                string;
            /** The reasons for the change status error */
            changeStatusError?:
                string;
            /** The reasons for the collection size error */
            collectionSizeError?:
                string;
            /** The reasons for the context error */
            contextError?:
                string;
            /** The reasons for the conversion action error */
            conversionActionError?:
                string;
            /** The reasons for the conversion adjustment upload error */
            conversionAdjustmentUploadError?:
                string;
            /** The reasons for the conversion custom variable error */
            conversionCustomVariableError?:
                string;
            /** The reasons for the conversion goal campaign config error */
            conversionGoalCampaignConfigError?:
                string;
            /** The reasons for the conversion upload error */
            conversionUploadError?:
                string;
            /** The reasons for the conversion value rule error */
            conversionValueRuleError?:
                string;
            /** The reasons for the conversion value rule set error */
            conversionValueRuleSetError?:
                string;
            /** The reasons for the country code error */
            countryCodeError?:
                string;
            /** The reasons for the criterion error */
            criterionError?:
                string;
            /** The reasons for the currency code error */
            currencyCodeError?:
                string;
            /** The reasons for the custom audience error */
            customAudienceError?:
                string;
            /** The reasons for the custom conversion goal error */
            customConversionGoalError?:
                string;
            /** The reasons for the customer client link error */
            customerClientLinkError?:
                string;
            /** The reasons for the customer customizer error. */
            customerCustomizerError?:
                string;
            /** The reasons for the customer error */
            customerError?:
                string;
            /** The reasons for the customer feed error */
            customerFeedError?:
                string;
            /** The reasons for the customer manager link error */
            customerManagerLinkError?:
                string;
            /** The reasons for the customer user access mutate error */
            customerUserAccessError?:
                string;
            /** The reasons for the custom interest error */
            customInterestError?:
                string;
            /** The reasons for the customizer attribute error. */
            customizerAttributeError?:
                string;
            /** The reasons for the database error. */
            databaseError?:
                string;
            /** The reasons for the date error */
            dateError?:
                string;
            /** The reasons for the date range error */
            dateRangeError?:
                string;
            /** The reasons for the distinct error */
            distinctError?:
                string;
            /** The reason for enum error. */
            enumError?:
                string;
            /** The reasons for the experiment arm error */
            experimentArmError?:
                string;
            /** The reasons for the experiment error */
            experimentError?:
                string;
            /** The reasons for the extension feed item error */
            extensionFeedItemError?:
                string;
            /** The reasons for the extension setting error */
            extensionSettingError?:
                string;
            /** The reasons for the feed attribute reference error */
            feedAttributeReferenceError?:
                string;
            /** The reasons for the feed error */
            feedError?:
                string;
            /** The reasons for the feed item error */
            feedItemError?:
                string;
            /** The reasons for the feed item set error */
            feedItemSetError?:
                string;
            /** The reasons for the feed item set link error */
            feedItemSetLinkError?:
                string;
            /** The reasons for the feed item target error */
            feedItemTargetError?:
                string;
            /** The reasons for the feed item validation error */
            feedItemValidationError?:
                string;
            /** The reasons for the feed mapping error */
            feedMappingError?:
                string;
            /** The reasons for the field error */
            fieldError?:
                string;
            /** An error with a field mask */
            fieldMaskError?:
                string;
            /** The reasons for the function error */
            functionError?:
                string;
            /** The reasons for the function parsing error */
            functionParsingError?:
                string;
            /** The reasons for the geo target constant suggestion error. */
            geoTargetConstantSuggestionError?:
                string;
            /** The reasons for the header error. */
            headerError?:
                string;
            /** The reasons for the id error */
            idError?:
                string;
            /** The reasons for the image error */
            imageError?:
                string;
            /** An unexpected server-side error. */
            internalError?:
                string;
            /** The reasons for the invoice error */
            invoiceError?:
                string;
            /** The reason for keyword plan ad group error. */
            keywordPlanAdGroupError?:
                string;
            /** The reason for keyword plan ad group keyword error. */
            keywordPlanAdGroupKeywordError?:
                string;
            /** The reason for keyword plan campaign error. */
            keywordPlanCampaignError?:
                string;
            /** The reason for keyword plan campaign keyword error. */
            keywordPlanCampaignKeywordError?:
                string;
            /** The reason for keyword plan error. */
            keywordPlanError?:
                string;
            /** The reason for keyword idea error. */
            keywordPlanIdeaError?:
                string;
            /** The reason for the label error. */
            labelError?:
                string;
            /** The reasons for the language code error */
            languageCodeError?:
                string;
            /** An error with a list operation. */
            listOperationError?:
                string;
            /** The reasons for the manager link error */
            managerLinkError?:
                string;
            /** The reasons for the media bundle error */
            mediaBundleError?:
                string;
            /** The reasons for the media file error */
            mediaFileError?:
                string;
            /** The reasons for media uploading errors. */
            mediaUploadError?:
                string;
            /** Container for enum describing possible merchant center errors. */
            merchantCenterError?:
                string;
            /** The reasons for the multiplier error */
            multiplierError?:
                string;
            /** An error with a mutate */
            mutateError?:
                string;
            /** The reasons for the new resource creation error */
            newResourceCreationError?:
                string;
            /** The reasons for the not allowlisted error */
            notAllowlistedError?:
                string;
            /** The reasons for the not empty error */
            notEmptyError?:
                string;
            /** The reasons for the null error */
            nullError?:
                string;
            /** The reasons for the offline user data job error. */
            offlineUserDataJobError?:
                string;
            /** The reasons for the operation access denied error */
            operationAccessDeniedError?:
                string;
            /** The reasons for the operator error */
            operatorError?:
                string;
            /** The reasons for the mutate job error */
            partialFailureError?:
                string;
            /** The reasons for errors in payments accounts service */
            paymentsAccountError?:
                string;
            /** The reasons for the policy finding error. */
            policyFindingError?:
                string;
            /** The reasons for the policy validation parameter error */
            policyValidationParameterError?:
                string;
            /** The reasons for the policy violation error */
            policyViolationError?:
                string;
            /** An error with an AWQL query */
            queryError?:
                string;
            /** An error with the amount of quota remaining. */
            quotaError?:
                string;
            /** The reasons for the range error */
            rangeError?:
                string;
            /** The reasons for the reach plan error */
            reachPlanError?:
                string;
            /** The reasons for error in applying a recommendation */
            recommendationError?:
                string;
            /** The reasons for the region code error */
            regionCodeError?:
                string;
            /** An error caused by the request */
            requestError?:
                string;
            /** The reasons for the resource access denied error */
            resourceAccessDeniedError?:
                string;
            /** The reasons for the resource count limit exceeded error */
            resourceCountLimitExceededError?:
                string;
            /** The reasons for the setting error */
            settingError?:
                string;
            /** The reasons for the shared criterion error */
            sharedCriterionError?:
                string;
            /** The reasons for the shared set error */
            sharedSetError?:
                string;
            /** The reasons for the size limit error */
            sizeLimitError?:
                string;
            /** The reasons for the Smart campaign error */
            smartCampaignError?:
                string;
            /** The reasons for the string format error */
            stringFormatError?:
                string;
            /** The reasons for the string length error */
            stringLengthError?:
                string;
            /** The reasons for the third party app analytics link mutate error */
            thirdPartyAppAnalyticsLinkError?:
                string;
            /** The reasons for the time zone error */
            timeZoneError?:
                string;
            /** An error with a URL field mutate. */
            urlFieldError?:
                string;
            /** The reasons for the user data error. */
            userDataError?:
                string;
            /** The reasons for the user list error */
            userListError?:
                string;
            /** The reasons for YouTube video registration errors. */
            youtubeVideoRegistrationError?:
                string;
        }
        interface GoogleAdsGoogleadsV12Errors__ErrorDetails {
            /** Describes policy violation findings. */
            policyFindingDetails?:
                GoogleAdsGoogleadsV12Errors__PolicyFindingDetails;
            /** Describes an ad policy violation. */
            policyViolationDetails?:
                GoogleAdsGoogleadsV12Errors__PolicyViolationDetails;
            /** Details on the quota error, including the scope (account or developer), the rate bucket name and the retry delay. */
            quotaErrorDetails?:
                GoogleAdsGoogleadsV12Errors__QuotaErrorDetails;
            /** Details for a resource count limit exceeded error. */
            resourceCountDetails?:
                GoogleAdsGoogleadsV12Errors__ResourceCountDetails;
            /** The error code that should have been returned, but wasn't. This is used when the error code is not published in the client specified version. */
            unpublishedErrorCode?:
                string;
        }
        interface GoogleAdsGoogleadsV12Errors__ErrorLocation {
            /** A field path that indicates which field was invalid in the request. */
            fieldPathElements?:
                GoogleAdsGoogleadsV12Errors_ErrorLocation_FieldPathElement[];
        }
        interface GoogleAdsGoogleadsV12Errors__GoogleAdsError {
            /** Additional error details, which are returned by certain error codes. Most error codes do not include details. */
            details?:
                GoogleAdsGoogleadsV12Errors__ErrorDetails;
            /** An enum value that indicates which error occurred. */
            errorCode?:
                GoogleAdsGoogleadsV12Errors__ErrorCode;
            /** Describes the part of the request proto that caused the error. */
            location?:
                GoogleAdsGoogleadsV12Errors__ErrorLocation;
            /** A human-readable description of the error. */
            message?:
                string;
            /** The value that triggered the error. */
            trigger?:
                GoogleAdsGoogleadsV12Common__Value;
        }
        interface GoogleAdsGoogleadsV12Errors__GoogleAdsFailure {
            /** The list of errors that occurred. */
            errors?:
                GoogleAdsGoogleadsV12Errors__GoogleAdsError[];
            /** The unique ID of the request that is used for debugging purposes. */
            requestId?:
                string;
        }
        interface GoogleAdsGoogleadsV12Errors__PolicyFindingDetails {
            /**
             * The list of policy topics for the resource. Contains the PROHIBITED or FULLY_LIMITED policy topic entries that prevented the resource from being saved (among any other entries the
             * resource may also have).
             */
            policyTopicEntries?:
                GoogleAdsGoogleadsV12Common__PolicyTopicEntry[];
        }
        interface GoogleAdsGoogleadsV12Errors__PolicyViolationDetails {
            /** Human readable description of policy violation. */
            externalPolicyDescription?:
                string;
            /** Human readable name of the policy. */
            externalPolicyName?:
                string;
            /** Whether user can file an exemption request for this violation. */
            isExemptible?:
                boolean;
            /** Unique identifier for this violation. If policy is exemptible, this key may be used to request exemption. */
            key?:
                GoogleAdsGoogleadsV12Common__PolicyViolationKey;
        }
        interface GoogleAdsGoogleadsV12Errors__QuotaErrorDetails {
            /** The high level description of the quota bucket. Examples are "Get requests for standard access" or "Requests per account". */
            rateName?:
                string;
            /** The rate scope of the quota limit. */
            rateScope?:
                string;
            /** Backoff period that customers should wait before sending next request. */
            retryDelay?:
                string;
        }
        interface GoogleAdsGoogleadsV12Errors__ResourceCountDetails {
            /** The ID of the resource whose limit was exceeded. External customer ID if the limit is for a customer. */
            enclosingId?:
                string;
            /** The name of the resource (Customer, Campaign etc.) whose limit was exceeded. */
            enclosingResource?:
                string;
            /** The count of existing entities. */
            existingCount?:
                number;
            /** The limit which was exceeded. */
            limit?:
                number;
            /** The resource limit type which was exceeded. */
            limitType?:
                string;
        }
        interface GoogleAdsGoogleadsV12Errors_ErrorLocation_FieldPathElement {
            /** The name of a field or a oneof */
            fieldName?:
                string;
            /** If field_name is a repeated field, this is the element that failed */
            index?:
                number;
        }
        interface GoogleAdsGoogleadsV12Resources_BatchJob_BatchJobMetadata {
            /** Output only. The time when this batch job was completed. Formatted as yyyy-MM-dd HH:mm:ss. Example: "2018-03-05 09:16:00" */
            completionDateTime?:
                string;
            /** Output only. The time when this batch job was created. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:00" */
            creationDateTime?:
                string;
            /** Output only. The fraction (between 0.0 and 1.0) of mutates that have been processed. This is empty if the job hasn't started running yet. */
            estimatedCompletionRatio?:
                number;
            /** Output only. The number of mutate operations executed by the batch job. Present only if the job has started running. */
            executedOperationCount?:
                string;
            /** Output only. The number of mutate operations in the batch job. */
            operationCount?:
                string;
            /** Output only. The time when this batch job started running. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:30" */
            startDateTime?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__PromoteExperimentMetadata {
            /** Required. The promoted experiment. */
            experiment?:
                string;
        }
        interface GoogleAdsGoogleadsV12Services__ScheduleExperimentMetadata {
            /** Required. The scheduled experiment. */
            experiment?:
                string;
        }
        interface GoogleAdsGoogleadsV13Common__PolicyTopicConstraint {
            /** Countries where the resource's domain is not covered by the certificates associated with it. */
            certificateDomainMismatchInCountryList?:
                GoogleAdsGoogleadsV13Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where a certificate is required for serving. */
            certificateMissingInCountryList?:
                GoogleAdsGoogleadsV13Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where the resource cannot serve. */
            countryConstraintList?:
                GoogleAdsGoogleadsV13Common_PolicyTopicConstraint_CountryConstraintList;
            /** Reseller constraint. */
            resellerConstraint?:
                any;
        }
        interface GoogleAdsGoogleadsV13Common__PolicyTopicEntry {
            /** Indicates how serving of this resource may be affected (for example, not serving in a country). */
            constraints?:
                GoogleAdsGoogleadsV13Common__PolicyTopicConstraint[];
            /** Additional information that explains policy finding (for example, the brand name for a trademark finding). */
            evidences?:
                GoogleAdsGoogleadsV13Common__PolicyTopicEvidence[];
            /**
             * Policy topic this finding refers to. For example, "ALCOHOL", "TRADEMARKS_IN_AD_TEXT", or "DESTINATION_NOT_WORKING". The set of possible policy topics is not fixed for a particular
             * API version and may change at any time.
             */
            topic?:
                string;
            /** Describes the negative or positive effect this policy will have on serving. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV13Common__PolicyTopicEvidence {
            /** Mismatch between the destinations of a resource's URLs. */
            destinationMismatch?:
                GoogleAdsGoogleadsV13Common_PolicyTopicEvidence_DestinationMismatch;
            /** Details when the destination is returning an HTTP error code or isn't functional in all locations for commonly used devices. */
            destinationNotWorking?:
                GoogleAdsGoogleadsV13Common_PolicyTopicEvidence_DestinationNotWorking;
            /** The text in the destination of the resource that is causing a policy finding. */
            destinationTextList?:
                GoogleAdsGoogleadsV13Common_PolicyTopicEvidence_DestinationTextList;
            /** The language the resource was detected to be written in. This is an IETF language tag such as "en-US". */
            languageCode?:
                string;
            /** List of evidence found in the text of a resource. */
            textList?:
                GoogleAdsGoogleadsV13Common_PolicyTopicEvidence_TextList;
            /** List of websites linked with this resource. */
            websiteList?:
                GoogleAdsGoogleadsV13Common_PolicyTopicEvidence_WebsiteList;
        }
        interface GoogleAdsGoogleadsV13Common__PolicyViolationKey {
            /** Unique ID of the violated policy. */
            policyName?:
                string;
            /**
             * The text that violates the policy if specified. Otherwise, refers to the policy in general (for example, when requesting to be exempt from the whole policy). If not specified for
             * criterion exemptions, the whole policy is implied. Must be specified for ad exemptions.
             */
            violatingText?:
                string;
        }
        interface GoogleAdsGoogleadsV13Common__Value {
            /** A boolean. */
            booleanValue?:
                boolean;
            /** A double. */
            doubleValue?:
                number;
            /** A float. */
            floatValue?:
                number;
            /** An int64. */
            int64Value?:
                string;
            /** A string. */
            stringValue?:
                string;
        }
        interface GoogleAdsGoogleadsV13Common_PolicyTopicConstraint_CountryConstraint {
            /** Geo target constant resource name of the country in which serving is constrained. */
            countryCriterion?:
                string;
        }
        interface GoogleAdsGoogleadsV13Common_PolicyTopicConstraint_CountryConstraintList {
            /** Countries in which serving is restricted. */
            countries?:
                GoogleAdsGoogleadsV13Common_PolicyTopicConstraint_CountryConstraint[];
            /** Total number of countries targeted by the resource. */
            totalTargetedCountries?:
                number;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV13Common_PolicyTopicConstraint_ResellerConstraint {
        }
        interface GoogleAdsGoogleadsV13Common_PolicyTopicEvidence_DestinationMismatch {
            /** The set of URLs that did not match each other. */
            urlTypes?:
                string[];
        }
        interface GoogleAdsGoogleadsV13Common_PolicyTopicEvidence_DestinationNotWorking {
            /** The type of device that failed to load the URL. */
            device?:
                string;
            /** The type of DNS error. */
            dnsErrorType?:
                string;
            /** The full URL that didn't work. */
            expandedUrl?:
                string;
            /** The HTTP error code. */
            httpErrorCode?:
                string;
            /** The time the URL was last checked. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30" */
            lastCheckedDateTime?:
                string;
        }
        interface GoogleAdsGoogleadsV13Common_PolicyTopicEvidence_DestinationTextList {
            /** List of text found in the resource's destination page. */
            destinationTexts?:
                string[];
        }
        interface GoogleAdsGoogleadsV13Common_PolicyTopicEvidence_TextList {
            /** The fragments of text from the resource that caused the policy finding. */
            texts?:
                string[];
        }
        interface GoogleAdsGoogleadsV13Common_PolicyTopicEvidence_WebsiteList {
            /** Websites that caused the policy finding. */
            websites?:
                string[];
        }
        interface GoogleAdsGoogleadsV13Errors__ErrorCode {
            /** The reasons for the access invitation error */
            accessInvitationError?:
                string;
            /** The reasons for account budget proposal errors. */
            accountBudgetProposalError?:
                string;
            /** The reasons for the account link status change error */
            accountLinkError?:
                string;
            /** The reasons for the ad customizer error */
            adCustomizerError?:
                string;
            /** An error with an Ad Group Ad mutate. */
            adError?:
                string;
            /** The reasons for the ad group ad error */
            adGroupAdError?:
                string;
            /** The reasons for the ad group bid modifier error */
            adGroupBidModifierError?:
                string;
            /** The reasons for the ad group criterion customizer error. */
            adGroupCriterionCustomizerError?:
                string;
            /** Indicates failure to properly authenticate user. */
            adGroupCriterionError?:
                string;
            /** The reasons for the ad group customizer error. */
            adGroupCustomizerError?:
                string;
            /** An error with an Ad Group mutate. */
            adGroupError?:
                string;
            /** The reasons for the ad group feed error */
            adGroupFeedError?:
                string;
            /** The reasons for the ad parameter error */
            adParameterError?:
                string;
            /** The reasons for the ad sharing error */
            adSharingError?:
                string;
            /** The reasons for the adx error */
            adxError?:
                string;
            /** The reasons for the asset error */
            assetError?:
                string;
            /** The reasons for the asset group asset error */
            assetGroupAssetError?:
                string;
            /** The reasons for the asset group error */
            assetGroupError?:
                string;
            /** The reasons for the asset group listing group filter error */
            assetGroupListingGroupFilterError?:
                string;
            /** The reasons for the asset link error */
            assetLinkError?:
                string;
            /** The reasons for the asset set asset error */
            assetSetAssetError?:
                string;
            /** The reasons for the asset set error */
            assetSetError?:
                string;
            /** The reasons for the asset set link error */
            assetSetLinkError?:
                string;
            /** The reasons for the audience error */
            audienceError?:
                string;
            /** The reasons for the Audience Insights error */
            audienceInsightsError?:
                string;
            /** Indicates failure to properly authenticate user. */
            authenticationError?:
                string;
            /** An error encountered when trying to authorize a user. */
            authorizationError?:
                string;
            /** The reasons for the batch job error */
            batchJobError?:
                string;
            /** The reasons for the bidding errors */
            biddingError?:
                string;
            /** An error with a Bidding Strategy mutate. */
            biddingStrategyError?:
                string;
            /** The reasons for the billing setup error */
            billingSetupError?:
                string;
            /** An error with a Campaign Budget mutate. */
            campaignBudgetError?:
                string;
            /** The reasons for the campaign conversion goal error */
            campaignConversionGoalError?:
                string;
            /** The reasons for the campaign criterion error */
            campaignCriterionError?:
                string;
            /** The reasons for the campaign customizer error. */
            campaignCustomizerError?:
                string;
            /** The reasons for the campaign draft error */
            campaignDraftError?:
                string;
            /** An error with a Campaign mutate. */
            campaignError?:
                string;
            /** The reasons for the campaign experiment error */
            campaignExperimentError?:
                string;
            /** The reasons for the campaign feed error */
            campaignFeedError?:
                string;
            /** The reasons for the campaign shared set error */
            campaignSharedSetError?:
                string;
            /** The reasons for the change event error */
            changeEventError?:
                string;
            /** The reasons for the change status error */
            changeStatusError?:
                string;
            /** The reasons for the collection size error */
            collectionSizeError?:
                string;
            /** The reasons for the context error */
            contextError?:
                string;
            /** The reasons for the conversion action error */
            conversionActionError?:
                string;
            /** The reasons for the conversion adjustment upload error */
            conversionAdjustmentUploadError?:
                string;
            /** The reasons for the conversion custom variable error */
            conversionCustomVariableError?:
                string;
            /** The reasons for the conversion goal campaign config error */
            conversionGoalCampaignConfigError?:
                string;
            /** The reasons for the conversion upload error */
            conversionUploadError?:
                string;
            /** The reasons for the conversion value rule error */
            conversionValueRuleError?:
                string;
            /** The reasons for the conversion value rule set error */
            conversionValueRuleSetError?:
                string;
            /** The reasons for the country code error */
            countryCodeError?:
                string;
            /** The reasons for the criterion error */
            criterionError?:
                string;
            /** The reasons for the currency code error */
            currencyCodeError?:
                string;
            /** The reasons for the currency errors. */
            currencyError?:
                string;
            /** The reasons for the custom audience error */
            customAudienceError?:
                string;
            /** The reasons for the custom conversion goal error */
            customConversionGoalError?:
                string;
            /** The reasons for the customer client link error */
            customerClientLinkError?:
                string;
            /** The reasons for the customer customizer error. */
            customerCustomizerError?:
                string;
            /** The reasons for the customer error */
            customerError?:
                string;
            /** The reasons for the customer feed error */
            customerFeedError?:
                string;
            /** The reasons for the customer manager link error */
            customerManagerLinkError?:
                string;
            /** The reasons for the customer SK Ad network conversion value schema error */
            customerSkAdNetworkConversionValueSchemaError?:
                string;
            /** The reasons for the customer user access mutate error */
            customerUserAccessError?:
                string;
            /** The reasons for the custom interest error */
            customInterestError?:
                string;
            /** The reasons for the customizer attribute error. */
            customizerAttributeError?:
                string;
            /** The reasons for the database error. */
            databaseError?:
                string;
            /** The reasons for the date error */
            dateError?:
                string;
            /** The reasons for the date range error */
            dateRangeError?:
                string;
            /** The reasons for the distinct error */
            distinctError?:
                string;
            /** The reason for enum error. */
            enumError?:
                string;
            /** The reasons for the experiment arm error */
            experimentArmError?:
                string;
            /** The reasons for the experiment error */
            experimentError?:
                string;
            /** The reasons for the extension feed item error */
            extensionFeedItemError?:
                string;
            /** The reasons for the extension setting error */
            extensionSettingError?:
                string;
            /** The reasons for the feed attribute reference error */
            feedAttributeReferenceError?:
                string;
            /** The reasons for the feed error */
            feedError?:
                string;
            /** The reasons for the feed item error */
            feedItemError?:
                string;
            /** The reasons for the feed item set error */
            feedItemSetError?:
                string;
            /** The reasons for the feed item set link error */
            feedItemSetLinkError?:
                string;
            /** The reasons for the feed item target error */
            feedItemTargetError?:
                string;
            /** The reasons for the feed item validation error */
            feedItemValidationError?:
                string;
            /** The reasons for the feed mapping error */
            feedMappingError?:
                string;
            /** The reasons for the field error */
            fieldError?:
                string;
            /** An error with a field mask */
            fieldMaskError?:
                string;
            /** The reasons for the function error */
            functionError?:
                string;
            /** The reasons for the function parsing error */
            functionParsingError?:
                string;
            /** The reasons for the geo target constant suggestion error. */
            geoTargetConstantSuggestionError?:
                string;
            /** The reasons for the header error. */
            headerError?:
                string;
            /** The reasons for the id error */
            idError?:
                string;
            /** The reasons for the image error */
            imageError?:
                string;
            /** An unexpected server-side error. */
            internalError?:
                string;
            /** The reasons for the invoice error */
            invoiceError?:
                string;
            /** The reason for keyword plan ad group error. */
            keywordPlanAdGroupError?:
                string;
            /** The reason for keyword plan ad group keyword error. */
            keywordPlanAdGroupKeywordError?:
                string;
            /** The reason for keyword plan campaign error. */
            keywordPlanCampaignError?:
                string;
            /** The reason for keyword plan campaign keyword error. */
            keywordPlanCampaignKeywordError?:
                string;
            /** The reason for keyword plan error. */
            keywordPlanError?:
                string;
            /** The reason for keyword idea error. */
            keywordPlanIdeaError?:
                string;
            /** The reason for the label error. */
            labelError?:
                string;
            /** The reasons for the language code error */
            languageCodeError?:
                string;
            /** An error with a list operation. */
            listOperationError?:
                string;
            /** The reasons for the manager link error */
            managerLinkError?:
                string;
            /** The reasons for the media bundle error */
            mediaBundleError?:
                string;
            /** The reasons for the media file error */
            mediaFileError?:
                string;
            /** The reasons for media uploading errors. */
            mediaUploadError?:
                string;
            /** Container for enum describing possible merchant center errors. */
            merchantCenterError?:
                string;
            /** The reasons for the multiplier error */
            multiplierError?:
                string;
            /** An error with a mutate */
            mutateError?:
                string;
            /** The reasons for the new resource creation error */
            newResourceCreationError?:
                string;
            /** The reasons for the not allowlisted error */
            notAllowlistedError?:
                string;
            /** The reasons for the not empty error */
            notEmptyError?:
                string;
            /** The reasons for the null error */
            nullError?:
                string;
            /** The reasons for the offline user data job error. */
            offlineUserDataJobError?:
                string;
            /** The reasons for the operation access denied error */
            operationAccessDeniedError?:
                string;
            /** The reasons for the operator error */
            operatorError?:
                string;
            /** The reasons for the mutate job error */
            partialFailureError?:
                string;
            /** The reasons for errors in payments accounts service */
            paymentsAccountError?:
                string;
            /** The reasons for the policy finding error. */
            policyFindingError?:
                string;
            /** The reasons for the policy validation parameter error */
            policyValidationParameterError?:
                string;
            /** The reasons for the policy violation error */
            policyViolationError?:
                string;
            /** An error with an AWQL query */
            queryError?:
                string;
            /** An error with the amount of quota remaining. */
            quotaError?:
                string;
            /** The reasons for the range error */
            rangeError?:
                string;
            /** The reasons for the reach plan error */
            reachPlanError?:
                string;
            /** The reasons for error in applying a recommendation */
            recommendationError?:
                string;
            /** The reasons for the region code error */
            regionCodeError?:
                string;
            /** An error caused by the request */
            requestError?:
                string;
            /** The reasons for the resource access denied error */
            resourceAccessDeniedError?:
                string;
            /** The reasons for the resource count limit exceeded error */
            resourceCountLimitExceededError?:
                string;
            /** The reasons for the setting error */
            settingError?:
                string;
            /** The reasons for the shared criterion error */
            sharedCriterionError?:
                string;
            /** The reasons for the shared set error */
            sharedSetError?:
                string;
            /** The reasons for the size limit error */
            sizeLimitError?:
                string;
            /** The reasons for the Smart campaign error */
            smartCampaignError?:
                string;
            /** The reasons for the string format error */
            stringFormatError?:
                string;
            /** The reasons for the string length error */
            stringLengthError?:
                string;
            /** The reasons for the third party app analytics link mutate error */
            thirdPartyAppAnalyticsLinkError?:
                string;
            /** The reasons for the time zone error */
            timeZoneError?:
                string;
            /** An error with a URL field mutate. */
            urlFieldError?:
                string;
            /** The reasons for the user data error. */
            userDataError?:
                string;
            /** The reasons for the user list error */
            userListError?:
                string;
            /** The reasons for YouTube video registration errors. */
            youtubeVideoRegistrationError?:
                string;
        }
        interface GoogleAdsGoogleadsV13Errors__ErrorDetails {
            /** Describes policy violation findings. */
            policyFindingDetails?:
                GoogleAdsGoogleadsV13Errors__PolicyFindingDetails;
            /** Describes an ad policy violation. */
            policyViolationDetails?:
                GoogleAdsGoogleadsV13Errors__PolicyViolationDetails;
            /** Details on the quota error, including the scope (account or developer), the rate bucket name and the retry delay. */
            quotaErrorDetails?:
                GoogleAdsGoogleadsV13Errors__QuotaErrorDetails;
            /** Details for a resource count limit exceeded error. */
            resourceCountDetails?:
                GoogleAdsGoogleadsV13Errors__ResourceCountDetails;
            /** The error code that should have been returned, but wasn't. This is used when the error code is not published in the client specified version. */
            unpublishedErrorCode?:
                string;
        }
        interface GoogleAdsGoogleadsV13Errors__ErrorLocation {
            /** A field path that indicates which field was invalid in the request. */
            fieldPathElements?:
                GoogleAdsGoogleadsV13Errors_ErrorLocation_FieldPathElement[];
        }
        interface GoogleAdsGoogleadsV13Errors__GoogleAdsError {
            /** Additional error details, which are returned by certain error codes. Most error codes do not include details. */
            details?:
                GoogleAdsGoogleadsV13Errors__ErrorDetails;
            /** An enum value that indicates which error occurred. */
            errorCode?:
                GoogleAdsGoogleadsV13Errors__ErrorCode;
            /** Describes the part of the request proto that caused the error. */
            location?:
                GoogleAdsGoogleadsV13Errors__ErrorLocation;
            /** A human-readable description of the error. */
            message?:
                string;
            /** The value that triggered the error. */
            trigger?:
                GoogleAdsGoogleadsV13Common__Value;
        }
        interface GoogleAdsGoogleadsV13Errors__GoogleAdsFailure {
            /** The list of errors that occurred. */
            errors?:
                GoogleAdsGoogleadsV13Errors__GoogleAdsError[];
            /** The unique ID of the request that is used for debugging purposes. */
            requestId?:
                string;
        }
        interface GoogleAdsGoogleadsV13Errors__PolicyFindingDetails {
            /**
             * The list of policy topics for the resource. Contains the PROHIBITED or FULLY_LIMITED policy topic entries that prevented the resource from being saved (among any other entries the
             * resource may also have).
             */
            policyTopicEntries?:
                GoogleAdsGoogleadsV13Common__PolicyTopicEntry[];
        }
        interface GoogleAdsGoogleadsV13Errors__PolicyViolationDetails {
            /** Human readable description of policy violation. */
            externalPolicyDescription?:
                string;
            /** Human readable name of the policy. */
            externalPolicyName?:
                string;
            /** Whether user can file an exemption request for this violation. */
            isExemptible?:
                boolean;
            /** Unique identifier for this violation. If policy is exemptible, this key may be used to request exemption. */
            key?:
                GoogleAdsGoogleadsV13Common__PolicyViolationKey;
        }
        interface GoogleAdsGoogleadsV13Errors__QuotaErrorDetails {
            /** The high level description of the quota bucket. Examples are "Get requests for standard access" or "Requests per account". */
            rateName?:
                string;
            /** The rate scope of the quota limit. */
            rateScope?:
                string;
            /** Backoff period that customers should wait before sending next request. */
            retryDelay?:
                string;
        }
        interface GoogleAdsGoogleadsV13Errors__ResourceCountDetails {
            /** The ID of the resource whose limit was exceeded. External customer ID if the limit is for a customer. */
            enclosingId?:
                string;
            /** The name of the resource (Customer, Campaign etc.) whose limit was exceeded. */
            enclosingResource?:
                string;
            /** The count of existing entities. */
            existingCount?:
                number;
            /** The limit which was exceeded. */
            limit?:
                number;
            /** The resource limit type which was exceeded. */
            limitType?:
                string;
        }
        interface GoogleAdsGoogleadsV13Errors_ErrorLocation_FieldPathElement {
            /** The name of a field or a oneof */
            fieldName?:
                string;
            /** If field_name is a repeated field, this is the element that failed */
            index?:
                number;
        }
        interface GoogleAdsGoogleadsV13Resources_BatchJob_BatchJobMetadata {
            /** Output only. The time when this batch job was completed. Formatted as yyyy-MM-dd HH:mm:ss. Example: "2018-03-05 09:16:00" */
            completionDateTime?:
                string;
            /** Output only. The time when this batch job was created. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:00" */
            creationDateTime?:
                string;
            /** Output only. The fraction (between 0.0 and 1.0) of mutates that have been processed. This is empty if the job hasn't started running yet. */
            estimatedCompletionRatio?:
                number;
            /** Output only. The number of mutate operations executed by the batch job. Present only if the job has started running. */
            executedOperationCount?:
                string;
            /** Immutable. The approximate upper bound for how long a batch job can be executed, in seconds. If the job runs more than the given upper bound, the job will be canceled. */
            executionLimitSeconds?:
                number;
            /** Output only. The number of mutate operations in the batch job. */
            operationCount?:
                string;
            /** Output only. The time when this batch job started running. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:30" */
            startDateTime?:
                string;
        }
        interface GoogleAdsGoogleadsV13Services__PromoteExperimentMetadata {
            /** Required. The promoted experiment. */
            experiment?:
                string;
        }
        interface GoogleAdsGoogleadsV13Services__ScheduleExperimentMetadata {
            /** Required. The scheduled experiment. */
            experiment?:
                string;
        }
        interface GoogleAdsGoogleadsV14Common__PolicyTopicConstraint {
            /** Countries where the resource's domain is not covered by the certificates associated with it. */
            certificateDomainMismatchInCountryList?:
                GoogleAdsGoogleadsV14Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where a certificate is required for serving. */
            certificateMissingInCountryList?:
                GoogleAdsGoogleadsV14Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where the resource cannot serve. */
            countryConstraintList?:
                GoogleAdsGoogleadsV14Common_PolicyTopicConstraint_CountryConstraintList;
            /** Reseller constraint. */
            resellerConstraint?:
                any;
        }
        interface GoogleAdsGoogleadsV14Common__PolicyTopicEntry {
            /** Indicates how serving of this resource may be affected (for example, not serving in a country). */
            constraints?:
                GoogleAdsGoogleadsV14Common__PolicyTopicConstraint[];
            /** Additional information that explains policy finding (for example, the brand name for a trademark finding). */
            evidences?:
                GoogleAdsGoogleadsV14Common__PolicyTopicEvidence[];
            /**
             * Policy topic this finding refers to. For example, "ALCOHOL", "TRADEMARKS_IN_AD_TEXT", or "DESTINATION_NOT_WORKING". The set of possible policy topics is not fixed for a particular
             * API version and may change at any time.
             */
            topic?:
                string;
            /** Describes the negative or positive effect this policy will have on serving. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV14Common__PolicyTopicEvidence {
            /** Mismatch between the destinations of a resource's URLs. */
            destinationMismatch?:
                GoogleAdsGoogleadsV14Common_PolicyTopicEvidence_DestinationMismatch;
            /** Details when the destination is returning an HTTP error code or isn't functional in all locations for commonly used devices. */
            destinationNotWorking?:
                GoogleAdsGoogleadsV14Common_PolicyTopicEvidence_DestinationNotWorking;
            /** The text in the destination of the resource that is causing a policy finding. */
            destinationTextList?:
                GoogleAdsGoogleadsV14Common_PolicyTopicEvidence_DestinationTextList;
            /** The language the resource was detected to be written in. This is an IETF language tag such as "en-US". */
            languageCode?:
                string;
            /** List of evidence found in the text of a resource. */
            textList?:
                GoogleAdsGoogleadsV14Common_PolicyTopicEvidence_TextList;
            /** List of websites linked with this resource. */
            websiteList?:
                GoogleAdsGoogleadsV14Common_PolicyTopicEvidence_WebsiteList;
        }
        interface GoogleAdsGoogleadsV14Common__PolicyViolationKey {
            /** Unique ID of the violated policy. */
            policyName?:
                string;
            /**
             * The text that violates the policy if specified. Otherwise, refers to the policy in general (for example, when requesting to be exempt from the whole policy). If not specified for
             * criterion exemptions, the whole policy is implied. Must be specified for ad exemptions.
             */
            violatingText?:
                string;
        }
        interface GoogleAdsGoogleadsV14Common__Value {
            /** A boolean. */
            booleanValue?:
                boolean;
            /** A double. */
            doubleValue?:
                number;
            /** A float. */
            floatValue?:
                number;
            /** An int64. */
            int64Value?:
                string;
            /** A string. */
            stringValue?:
                string;
        }
        interface GoogleAdsGoogleadsV14Common_PolicyTopicConstraint_CountryConstraint {
            /** Geo target constant resource name of the country in which serving is constrained. */
            countryCriterion?:
                string;
        }
        interface GoogleAdsGoogleadsV14Common_PolicyTopicConstraint_CountryConstraintList {
            /** Countries in which serving is restricted. */
            countries?:
                GoogleAdsGoogleadsV14Common_PolicyTopicConstraint_CountryConstraint[];
            /** Total number of countries targeted by the resource. */
            totalTargetedCountries?:
                number;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV14Common_PolicyTopicConstraint_ResellerConstraint {
        }
        interface GoogleAdsGoogleadsV14Common_PolicyTopicEvidence_DestinationMismatch {
            /** The set of URLs that did not match each other. */
            urlTypes?:
                string[];
        }
        interface GoogleAdsGoogleadsV14Common_PolicyTopicEvidence_DestinationNotWorking {
            /** The type of device that failed to load the URL. */
            device?:
                string;
            /** The type of DNS error. */
            dnsErrorType?:
                string;
            /** The full URL that didn't work. */
            expandedUrl?:
                string;
            /** The HTTP error code. */
            httpErrorCode?:
                string;
            /** The time the URL was last checked. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30" */
            lastCheckedDateTime?:
                string;
        }
        interface GoogleAdsGoogleadsV14Common_PolicyTopicEvidence_DestinationTextList {
            /** List of text found in the resource's destination page. */
            destinationTexts?:
                string[];
        }
        interface GoogleAdsGoogleadsV14Common_PolicyTopicEvidence_TextList {
            /** The fragments of text from the resource that caused the policy finding. */
            texts?:
                string[];
        }
        interface GoogleAdsGoogleadsV14Common_PolicyTopicEvidence_WebsiteList {
            /** Websites that caused the policy finding. */
            websites?:
                string[];
        }
        interface GoogleAdsGoogleadsV14Errors__ErrorCode {
            /** The reasons for the access invitation error */
            accessInvitationError?:
                string;
            /** The reasons for account budget proposal errors. */
            accountBudgetProposalError?:
                string;
            /** The reasons for the account link status change error */
            accountLinkError?:
                string;
            /** The reasons for the ad customizer error */
            adCustomizerError?:
                string;
            /** An error with an Ad Group Ad mutate. */
            adError?:
                string;
            /** The reasons for the ad group ad error */
            adGroupAdError?:
                string;
            /** The reasons for the ad group bid modifier error */
            adGroupBidModifierError?:
                string;
            /** The reasons for the ad group criterion customizer error. */
            adGroupCriterionCustomizerError?:
                string;
            /** Indicates failure to properly authenticate user. */
            adGroupCriterionError?:
                string;
            /** The reasons for the ad group customizer error. */
            adGroupCustomizerError?:
                string;
            /** An error with an Ad Group mutate. */
            adGroupError?:
                string;
            /** The reasons for the ad group feed error */
            adGroupFeedError?:
                string;
            /** The reasons for the ad parameter error */
            adParameterError?:
                string;
            /** The reasons for the ad sharing error */
            adSharingError?:
                string;
            /** The reasons for the adx error */
            adxError?:
                string;
            /** The reasons for the asset error */
            assetError?:
                string;
            /** The reasons for the asset group asset error */
            assetGroupAssetError?:
                string;
            /** The reasons for the asset group error */
            assetGroupError?:
                string;
            /** The reasons for the asset group listing group filter error */
            assetGroupListingGroupFilterError?:
                string;
            /** The reasons for the asset link error */
            assetLinkError?:
                string;
            /** The reasons for the asset set asset error */
            assetSetAssetError?:
                string;
            /** The reasons for the asset set error */
            assetSetError?:
                string;
            /** The reasons for the asset set link error */
            assetSetLinkError?:
                string;
            /** The reasons for the audience error */
            audienceError?:
                string;
            /** The reasons for the Audience Insights error */
            audienceInsightsError?:
                string;
            /** Indicates failure to properly authenticate user. */
            authenticationError?:
                string;
            /** An error encountered when trying to authorize a user. */
            authorizationError?:
                string;
            /** The reasons for the batch job error */
            batchJobError?:
                string;
            /** The reasons for the bidding errors */
            biddingError?:
                string;
            /** An error with a Bidding Strategy mutate. */
            biddingStrategyError?:
                string;
            /** The reasons for the billing setup error */
            billingSetupError?:
                string;
            /** An error with a Campaign Budget mutate. */
            campaignBudgetError?:
                string;
            /** The reasons for the campaign conversion goal error */
            campaignConversionGoalError?:
                string;
            /** The reasons for the campaign criterion error */
            campaignCriterionError?:
                string;
            /** The reasons for the campaign customizer error. */
            campaignCustomizerError?:
                string;
            /** The reasons for the campaign draft error */
            campaignDraftError?:
                string;
            /** An error with a Campaign mutate. */
            campaignError?:
                string;
            /** The reasons for the campaign experiment error */
            campaignExperimentError?:
                string;
            /** The reasons for the campaign feed error */
            campaignFeedError?:
                string;
            /** The reasons for the campaign shared set error */
            campaignSharedSetError?:
                string;
            /** The reasons for the change event error */
            changeEventError?:
                string;
            /** The reasons for the change status error */
            changeStatusError?:
                string;
            /** The reasons for the collection size error */
            collectionSizeError?:
                string;
            /** The reasons for the context error */
            contextError?:
                string;
            /** The reasons for the conversion action error */
            conversionActionError?:
                string;
            /** The reasons for the conversion adjustment upload error */
            conversionAdjustmentUploadError?:
                string;
            /** The reasons for the conversion custom variable error */
            conversionCustomVariableError?:
                string;
            /** The reasons for the conversion goal campaign config error */
            conversionGoalCampaignConfigError?:
                string;
            /** The reasons for the conversion upload error */
            conversionUploadError?:
                string;
            /** The reasons for the conversion value rule error */
            conversionValueRuleError?:
                string;
            /** The reasons for the conversion value rule set error */
            conversionValueRuleSetError?:
                string;
            /** The reasons for the country code error */
            countryCodeError?:
                string;
            /** The reasons for the criterion error */
            criterionError?:
                string;
            /** The reasons for the currency code error */
            currencyCodeError?:
                string;
            /** The reasons for the currency errors. */
            currencyError?:
                string;
            /** The reasons for the custom audience error */
            customAudienceError?:
                string;
            /** The reasons for the custom conversion goal error */
            customConversionGoalError?:
                string;
            /** The reasons for the customer client link error */
            customerClientLinkError?:
                string;
            /** The reasons for the customer customizer error. */
            customerCustomizerError?:
                string;
            /** The reasons for the customer error */
            customerError?:
                string;
            /** The reasons for the customer feed error */
            customerFeedError?:
                string;
            /** The reasons for the customer manager link error */
            customerManagerLinkError?:
                string;
            /** The reasons for the customer SK Ad network conversion value schema error */
            customerSkAdNetworkConversionValueSchemaError?:
                string;
            /** The reasons for the customer user access mutate error */
            customerUserAccessError?:
                string;
            /** The reasons for the custom interest error */
            customInterestError?:
                string;
            /** The reasons for the customizer attribute error. */
            customizerAttributeError?:
                string;
            /** The reasons for the database error. */
            databaseError?:
                string;
            /** The reasons for the date error */
            dateError?:
                string;
            /** The reasons for the date range error */
            dateRangeError?:
                string;
            /** The reasons for the distinct error */
            distinctError?:
                string;
            /** The reason for enum error. */
            enumError?:
                string;
            /** The reasons for the experiment arm error */
            experimentArmError?:
                string;
            /** The reasons for the experiment error */
            experimentError?:
                string;
            /** The reasons for the extension feed item error */
            extensionFeedItemError?:
                string;
            /** The reasons for the extension setting error */
            extensionSettingError?:
                string;
            /** The reasons for the feed attribute reference error */
            feedAttributeReferenceError?:
                string;
            /** The reasons for the feed error */
            feedError?:
                string;
            /** The reasons for the feed item error */
            feedItemError?:
                string;
            /** The reasons for the feed item set error */
            feedItemSetError?:
                string;
            /** The reasons for the feed item set link error */
            feedItemSetLinkError?:
                string;
            /** The reasons for the feed item target error */
            feedItemTargetError?:
                string;
            /** The reasons for the feed item validation error */
            feedItemValidationError?:
                string;
            /** The reasons for the feed mapping error */
            feedMappingError?:
                string;
            /** The reasons for the field error */
            fieldError?:
                string;
            /** An error with a field mask */
            fieldMaskError?:
                string;
            /** The reasons for the function error */
            functionError?:
                string;
            /** The reasons for the function parsing error */
            functionParsingError?:
                string;
            /** The reasons for the geo target constant suggestion error. */
            geoTargetConstantSuggestionError?:
                string;
            /** The reasons for the header error. */
            headerError?:
                string;
            /** The reasons for the id error */
            idError?:
                string;
            /** The reasons for the image error */
            imageError?:
                string;
            /** An unexpected server-side error. */
            internalError?:
                string;
            /** The reasons for the invoice error */
            invoiceError?:
                string;
            /** The reason for keyword plan ad group error. */
            keywordPlanAdGroupError?:
                string;
            /** The reason for keyword plan ad group keyword error. */
            keywordPlanAdGroupKeywordError?:
                string;
            /** The reason for keyword plan campaign error. */
            keywordPlanCampaignError?:
                string;
            /** The reason for keyword plan campaign keyword error. */
            keywordPlanCampaignKeywordError?:
                string;
            /** The reason for keyword plan error. */
            keywordPlanError?:
                string;
            /** The reason for keyword idea error. */
            keywordPlanIdeaError?:
                string;
            /** The reason for the label error. */
            labelError?:
                string;
            /** The reasons for the language code error */
            languageCodeError?:
                string;
            /** An error with a list operation. */
            listOperationError?:
                string;
            /** The reasons for the manager link error */
            managerLinkError?:
                string;
            /** The reasons for the media bundle error */
            mediaBundleError?:
                string;
            /** The reasons for the media file error */
            mediaFileError?:
                string;
            /** The reasons for media uploading errors. */
            mediaUploadError?:
                string;
            /** Container for enum describing possible merchant center errors. */
            merchantCenterError?:
                string;
            /** The reasons for the multiplier error */
            multiplierError?:
                string;
            /** An error with a mutate */
            mutateError?:
                string;
            /** The reasons for the new resource creation error */
            newResourceCreationError?:
                string;
            /** The reasons for the not allowlisted error */
            notAllowlistedError?:
                string;
            /** The reasons for the not empty error */
            notEmptyError?:
                string;
            /** The reasons for the null error */
            nullError?:
                string;
            /** The reasons for the offline user data job error. */
            offlineUserDataJobError?:
                string;
            /** The reasons for the operation access denied error */
            operationAccessDeniedError?:
                string;
            /** The reasons for the operator error */
            operatorError?:
                string;
            /** The reasons for the mutate job error */
            partialFailureError?:
                string;
            /** The reasons for errors in payments accounts service */
            paymentsAccountError?:
                string;
            /** The reasons for the policy finding error. */
            policyFindingError?:
                string;
            /** The reasons for the policy validation parameter error */
            policyValidationParameterError?:
                string;
            /** The reasons for the policy violation error */
            policyViolationError?:
                string;
            /** An error with an AWQL query */
            queryError?:
                string;
            /** An error with the amount of quota remaining. */
            quotaError?:
                string;
            /** The reasons for the range error */
            rangeError?:
                string;
            /** The reasons for the reach plan error */
            reachPlanError?:
                string;
            /** The reasons for error in applying a recommendation */
            recommendationError?:
                string;
            /** The reasons for the region code error */
            regionCodeError?:
                string;
            /** An error caused by the request */
            requestError?:
                string;
            /** The reasons for the resource access denied error */
            resourceAccessDeniedError?:
                string;
            /** The reasons for the resource count limit exceeded error */
            resourceCountLimitExceededError?:
                string;
            /** The reasons for the Search term insight error */
            searchTermInsightError?:
                string;
            /** The reasons for the setting error */
            settingError?:
                string;
            /** The reasons for the shared criterion error */
            sharedCriterionError?:
                string;
            /** The reasons for the shared set error */
            sharedSetError?:
                string;
            /** The reasons for the size limit error */
            sizeLimitError?:
                string;
            /** The reasons for the Smart campaign error */
            smartCampaignError?:
                string;
            /** The reasons for the string format error */
            stringFormatError?:
                string;
            /** The reasons for the string length error */
            stringLengthError?:
                string;
            /** The reasons for the third party app analytics link mutate error */
            thirdPartyAppAnalyticsLinkError?:
                string;
            /** The reasons for the time zone error */
            timeZoneError?:
                string;
            /** An error with a URL field mutate. */
            urlFieldError?:
                string;
            /** The reasons for the user data error. */
            userDataError?:
                string;
            /** The reasons for the user list error */
            userListError?:
                string;
            /** The reasons for YouTube video registration errors. */
            youtubeVideoRegistrationError?:
                string;
        }
        interface GoogleAdsGoogleadsV14Errors__ErrorDetails {
            /** Describes policy violation findings. */
            policyFindingDetails?:
                GoogleAdsGoogleadsV14Errors__PolicyFindingDetails;
            /** Describes an ad policy violation. */
            policyViolationDetails?:
                GoogleAdsGoogleadsV14Errors__PolicyViolationDetails;
            /** Details on the quota error, including the scope (account or developer), the rate bucket name and the retry delay. */
            quotaErrorDetails?:
                GoogleAdsGoogleadsV14Errors__QuotaErrorDetails;
            /** Details for a resource count limit exceeded error. */
            resourceCountDetails?:
                GoogleAdsGoogleadsV14Errors__ResourceCountDetails;
            /** The error code that should have been returned, but wasn't. This is used when the error code is not published in the client specified version. */
            unpublishedErrorCode?:
                string;
        }
        interface GoogleAdsGoogleadsV14Errors__ErrorLocation {
            /** A field path that indicates which field was invalid in the request. */
            fieldPathElements?:
                GoogleAdsGoogleadsV14Errors_ErrorLocation_FieldPathElement[];
        }
        interface GoogleAdsGoogleadsV14Errors__GoogleAdsError {
            /** Additional error details, which are returned by certain error codes. Most error codes do not include details. */
            details?:
                GoogleAdsGoogleadsV14Errors__ErrorDetails;
            /** An enum value that indicates which error occurred. */
            errorCode?:
                GoogleAdsGoogleadsV14Errors__ErrorCode;
            /** Describes the part of the request proto that caused the error. */
            location?:
                GoogleAdsGoogleadsV14Errors__ErrorLocation;
            /** A human-readable description of the error. */
            message?:
                string;
            /** The value that triggered the error. */
            trigger?:
                GoogleAdsGoogleadsV14Common__Value;
        }
        interface GoogleAdsGoogleadsV14Errors__GoogleAdsFailure {
            /** The list of errors that occurred. */
            errors?:
                GoogleAdsGoogleadsV14Errors__GoogleAdsError[];
            /** The unique ID of the request that is used for debugging purposes. */
            requestId?:
                string;
        }
        interface GoogleAdsGoogleadsV14Errors__PolicyFindingDetails {
            /**
             * The list of policy topics for the resource. Contains the PROHIBITED or FULLY_LIMITED policy topic entries that prevented the resource from being saved (among any other entries the
             * resource may also have).
             */
            policyTopicEntries?:
                GoogleAdsGoogleadsV14Common__PolicyTopicEntry[];
        }
        interface GoogleAdsGoogleadsV14Errors__PolicyViolationDetails {
            /** Human readable description of policy violation. */
            externalPolicyDescription?:
                string;
            /** Human readable name of the policy. */
            externalPolicyName?:
                string;
            /** Whether user can file an exemption request for this violation. */
            isExemptible?:
                boolean;
            /** Unique identifier for this violation. If policy is exemptible, this key may be used to request exemption. */
            key?:
                GoogleAdsGoogleadsV14Common__PolicyViolationKey;
        }
        interface GoogleAdsGoogleadsV14Errors__QuotaErrorDetails {
            /** The high level description of the quota bucket. Examples are "Get requests for standard access" or "Requests per account". */
            rateName?:
                string;
            /** The rate scope of the quota limit. */
            rateScope?:
                string;
            /** Backoff period that customers should wait before sending next request. */
            retryDelay?:
                string;
        }
        interface GoogleAdsGoogleadsV14Errors__ResourceCountDetails {
            /** The ID of the resource whose limit was exceeded. External customer ID if the limit is for a customer. */
            enclosingId?:
                string;
            /** The name of the resource (Customer, Campaign etc.) whose limit was exceeded. */
            enclosingResource?:
                string;
            /** The count of existing entities. */
            existingCount?:
                number;
            /** The limit which was exceeded. */
            limit?:
                number;
            /** The resource limit type which was exceeded. */
            limitType?:
                string;
        }
        interface GoogleAdsGoogleadsV14Errors_ErrorLocation_FieldPathElement {
            /** The name of a field or a oneof */
            fieldName?:
                string;
            /** If field_name is a repeated field, this is the element that failed */
            index?:
                number;
        }
        interface GoogleAdsGoogleadsV14Resources__OfflineUserDataJobMetadata {
            /**
             * Output only. Match rate of the Customer Match user list upload. Describes the estimated match rate when the status of the job is "RUNNING" and final match rate when the final match
             * rate is available after the status of the job is "SUCCESS/FAILED".
             */
            matchRateRange?:
                string;
        }
        interface GoogleAdsGoogleadsV14Resources_BatchJob_BatchJobMetadata {
            /** Output only. The time when this batch job was completed. Formatted as yyyy-MM-dd HH:mm:ss. Example: "2018-03-05 09:16:00" */
            completionDateTime?:
                string;
            /** Output only. The time when this batch job was created. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:00" */
            creationDateTime?:
                string;
            /** Output only. The fraction (between 0.0 and 1.0) of mutates that have been processed. This is empty if the job hasn't started running yet. */
            estimatedCompletionRatio?:
                number;
            /** Output only. The number of mutate operations executed by the batch job. Present only if the job has started running. */
            executedOperationCount?:
                string;
            /** Immutable. The approximate upper bound for how long a batch job can be executed, in seconds. If the job runs more than the given upper bound, the job will be canceled. */
            executionLimitSeconds?:
                number;
            /** Output only. The number of mutate operations in the batch job. */
            operationCount?:
                string;
            /** Output only. The time when this batch job started running. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:30" */
            startDateTime?:
                string;
        }
        interface GoogleAdsGoogleadsV14Services__PromoteExperimentMetadata {
            /** Required. The promoted experiment. */
            experiment?:
                string;
        }
        interface GoogleAdsGoogleadsV14Services__ScheduleExperimentMetadata {
            /** Required. The scheduled experiment. */
            experiment?:
                string;
        }
        interface GoogleAdsGoogleadsV15Common__PolicyTopicConstraint {
            /** Countries where the resource's domain is not covered by the certificates associated with it. */
            certificateDomainMismatchInCountryList?:
                GoogleAdsGoogleadsV15Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where a certificate is required for serving. */
            certificateMissingInCountryList?:
                GoogleAdsGoogleadsV15Common_PolicyTopicConstraint_CountryConstraintList;
            /** Countries where the resource cannot serve. */
            countryConstraintList?:
                GoogleAdsGoogleadsV15Common_PolicyTopicConstraint_CountryConstraintList;
            /** Reseller constraint. */
            resellerConstraint?:
                any;
        }
        interface GoogleAdsGoogleadsV15Common__PolicyTopicEntry {
            /** Indicates how serving of this resource may be affected (for example, not serving in a country). */
            constraints?:
                GoogleAdsGoogleadsV15Common__PolicyTopicConstraint[];
            /** Additional information that explains policy finding (for example, the brand name for a trademark finding). */
            evidences?:
                GoogleAdsGoogleadsV15Common__PolicyTopicEvidence[];
            /**
             * Policy topic this finding refers to. For example, "ALCOHOL", "TRADEMARKS_IN_AD_TEXT", or "DESTINATION_NOT_WORKING". The set of possible policy topics is not fixed for a particular
             * API version and may change at any time.
             */
            topic?:
                string;
            /** Describes the negative or positive effect this policy will have on serving. */
            type?:
                string;
        }
        interface GoogleAdsGoogleadsV15Common__PolicyTopicEvidence {
            /** Mismatch between the destinations of a resource's URLs. */
            destinationMismatch?:
                GoogleAdsGoogleadsV15Common_PolicyTopicEvidence_DestinationMismatch;
            /** Details when the destination is returning an HTTP error code or isn't functional in all locations for commonly used devices. */
            destinationNotWorking?:
                GoogleAdsGoogleadsV15Common_PolicyTopicEvidence_DestinationNotWorking;
            /** The text in the destination of the resource that is causing a policy finding. */
            destinationTextList?:
                GoogleAdsGoogleadsV15Common_PolicyTopicEvidence_DestinationTextList;
            /** The language the resource was detected to be written in. This is an IETF language tag such as "en-US". */
            languageCode?:
                string;
            /** List of evidence found in the text of a resource. */
            textList?:
                GoogleAdsGoogleadsV15Common_PolicyTopicEvidence_TextList;
            /** List of websites linked with this resource. */
            websiteList?:
                GoogleAdsGoogleadsV15Common_PolicyTopicEvidence_WebsiteList;
        }
        interface GoogleAdsGoogleadsV15Common__PolicyViolationKey {
            /** Unique ID of the violated policy. */
            policyName?:
                string;
            /**
             * The text that violates the policy if specified. Otherwise, refers to the policy in general (for example, when requesting to be exempt from the whole policy). If not specified for
             * criterion exemptions, the whole policy is implied. Must be specified for ad exemptions.
             */
            violatingText?:
                string;
        }
        interface GoogleAdsGoogleadsV15Common__Value {
            /** A boolean. */
            booleanValue?:
                boolean;
            /** A double. */
            doubleValue?:
                number;
            /** A float. */
            floatValue?:
                number;
            /** An int64. */
            int64Value?:
                string;
            /** A string. */
            stringValue?:
                string;
        }
        interface GoogleAdsGoogleadsV15Common_PolicyTopicConstraint_CountryConstraint {
            /** Geo target constant resource name of the country in which serving is constrained. */
            countryCriterion?:
                string;
        }
        interface GoogleAdsGoogleadsV15Common_PolicyTopicConstraint_CountryConstraintList {
            /** Countries in which serving is restricted. */
            countries?:
                GoogleAdsGoogleadsV15Common_PolicyTopicConstraint_CountryConstraint[];
            /** Total number of countries targeted by the resource. */
            totalTargetedCountries?:
                number;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleAdsGoogleadsV15Common_PolicyTopicConstraint_ResellerConstraint {
        }
        interface GoogleAdsGoogleadsV15Common_PolicyTopicEvidence_DestinationMismatch {
            /** The set of URLs that did not match each other. */
            urlTypes?:
                string[];
        }
        interface GoogleAdsGoogleadsV15Common_PolicyTopicEvidence_DestinationNotWorking {
            /** The type of device that failed to load the URL. */
            device?:
                string;
            /** The type of DNS error. */
            dnsErrorType?:
                string;
            /** The full URL that didn't work. */
            expandedUrl?:
                string;
            /** The HTTP error code. */
            httpErrorCode?:
                string;
            /** The time the URL was last checked. The format is "YYYY-MM-DD HH:MM:SS". Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30" */
            lastCheckedDateTime?:
                string;
        }
        interface GoogleAdsGoogleadsV15Common_PolicyTopicEvidence_DestinationTextList {
            /** List of text found in the resource's destination page. */
            destinationTexts?:
                string[];
        }
        interface GoogleAdsGoogleadsV15Common_PolicyTopicEvidence_TextList {
            /** The fragments of text from the resource that caused the policy finding. */
            texts?:
                string[];
        }
        interface GoogleAdsGoogleadsV15Common_PolicyTopicEvidence_WebsiteList {
            /** Websites that caused the policy finding. */
            websites?:
                string[];
        }
        interface GoogleAdsGoogleadsV15Errors__ErrorCode {
            /** The reasons for the access invitation error */
            accessInvitationError?:
                string;
            /** The reasons for account budget proposal errors. */
            accountBudgetProposalError?:
                string;
            /** The reasons for the account link status change error */
            accountLinkError?:
                string;
            /** The reasons for the ad customizer error */
            adCustomizerError?:
                string;
            /** An error with an Ad Group Ad mutate. */
            adError?:
                string;
            /** The reasons for the ad group ad error */
            adGroupAdError?:
                string;
            /** The reasons for the ad group bid modifier error */
            adGroupBidModifierError?:
                string;
            /** The reasons for the ad group criterion customizer error. */
            adGroupCriterionCustomizerError?:
                string;
            /** Indicates failure to properly authenticate user. */
            adGroupCriterionError?:
                string;
            /** The reasons for the ad group customizer error. */
            adGroupCustomizerError?:
                string;
            /** An error with an Ad Group mutate. */
            adGroupError?:
                string;
            /** The reasons for the ad group feed error */
            adGroupFeedError?:
                string;
            /** The reasons for the ad parameter error */
            adParameterError?:
                string;
            /** The reasons for the ad sharing error */
            adSharingError?:
                string;
            /** The reasons for the adx error */
            adxError?:
                string;
            /** The reasons for the asset error */
            assetError?:
                string;
            /** The reasons for the asset group asset error */
            assetGroupAssetError?:
                string;
            /** The reasons for the asset group error */
            assetGroupError?:
                string;
            /** The reasons for the asset group listing group filter error */
            assetGroupListingGroupFilterError?:
                string;
            /** The reasons for the asset group hint error */
            assetGroupSignalError?:
                string;
            /** The reasons for the asset link error */
            assetLinkError?:
                string;
            /** The reasons for the asset set asset error */
            assetSetAssetError?:
                string;
            /** The reasons for the asset set error */
            assetSetError?:
                string;
            /** The reasons for the asset set link error */
            assetSetLinkError?:
                string;
            /** The reasons for the audience error */
            audienceError?:
                string;
            /** The reasons for the Audience Insights error */
            audienceInsightsError?:
                string;
            /** Indicates failure to properly authenticate user. */
            authenticationError?:
                string;
            /** An error encountered when trying to authorize a user. */
            authorizationError?:
                string;
            /** The reasons for the batch job error */
            batchJobError?:
                string;
            /** The reasons for the bidding errors */
            biddingError?:
                string;
            /** An error with a Bidding Strategy mutate. */
            biddingStrategyError?:
                string;
            /** The reasons for the billing setup error */
            billingSetupError?:
                string;
            /** An error with a Campaign Budget mutate. */
            campaignBudgetError?:
                string;
            /** The reasons for the campaign conversion goal error */
            campaignConversionGoalError?:
                string;
            /** The reasons for the campaign criterion error */
            campaignCriterionError?:
                string;
            /** The reasons for the campaign customizer error. */
            campaignCustomizerError?:
                string;
            /** The reasons for the campaign draft error */
            campaignDraftError?:
                string;
            /** An error with a Campaign mutate. */
            campaignError?:
                string;
            /** The reasons for the campaign experiment error */
            campaignExperimentError?:
                string;
            /** The reasons for the campaign feed error */
            campaignFeedError?:
                string;
            /** The reasons for the campaign lifecycle goal error */
            campaignLifecycleGoalError?:
                string;
            /** The reasons for the campaign shared set error */
            campaignSharedSetError?:
                string;
            /** The reasons for the change event error */
            changeEventError?:
                string;
            /** The reasons for the change status error */
            changeStatusError?:
                string;
            /** The reasons for the collection size error */
            collectionSizeError?:
                string;
            /** The reasons for the context error */
            contextError?:
                string;
            /** The reasons for the conversion action error */
            conversionActionError?:
                string;
            /** The reasons for the conversion adjustment upload error */
            conversionAdjustmentUploadError?:
                string;
            /** The reasons for the conversion custom variable error */
            conversionCustomVariableError?:
                string;
            /** The reasons for the conversion goal campaign config error */
            conversionGoalCampaignConfigError?:
                string;
            /** The reasons for the conversion upload error */
            conversionUploadError?:
                string;
            /** The reasons for the conversion value rule error */
            conversionValueRuleError?:
                string;
            /** The reasons for the conversion value rule set error */
            conversionValueRuleSetError?:
                string;
            /** The reasons for the country code error */
            countryCodeError?:
                string;
            /** The reasons for the criterion error */
            criterionError?:
                string;
            /** The reasons for the currency code error */
            currencyCodeError?:
                string;
            /** The reasons for the currency errors. */
            currencyError?:
                string;
            /** The reasons for the custom audience error */
            customAudienceError?:
                string;
            /** The reasons for the custom conversion goal error */
            customConversionGoalError?:
                string;
            /** The reasons for the customer client link error */
            customerClientLinkError?:
                string;
            /** The reasons for the customer customizer error. */
            customerCustomizerError?:
                string;
            /** The reasons for the customer error */
            customerError?:
                string;
            /** The reasons for the customer feed error */
            customerFeedError?:
                string;
            /** The reasons for the customer lifecycle goal error */
            customerLifecycleGoalError?:
                string;
            /** The reasons for the customer manager link error */
            customerManagerLinkError?:
                string;
            /** The reasons for the customer SK Ad network conversion value schema error */
            customerSkAdNetworkConversionValueSchemaError?:
                string;
            /** The reasons for the customer user access mutate error */
            customerUserAccessError?:
                string;
            /** The reasons for the custom interest error */
            customInterestError?:
                string;
            /** The reasons for the customizer attribute error. */
            customizerAttributeError?:
                string;
            /** The reasons for the database error. */
            databaseError?:
                string;
            /** The reasons for the date error */
            dateError?:
                string;
            /** The reasons for the date range error */
            dateRangeError?:
                string;
            /** The reasons for the distinct error */
            distinctError?:
                string;
            /** The reason for enum error. */
            enumError?:
                string;
            /** The reasons for the experiment arm error */
            experimentArmError?:
                string;
            /** The reasons for the experiment error */
            experimentError?:
                string;
            /** The reasons for the extension feed item error */
            extensionFeedItemError?:
                string;
            /** The reasons for the extension setting error */
            extensionSettingError?:
                string;
            /** The reasons for the feed attribute reference error */
            feedAttributeReferenceError?:
                string;
            /** The reasons for the feed error */
            feedError?:
                string;
            /** The reasons for the feed item error */
            feedItemError?:
                string;
            /** The reasons for the feed item set error */
            feedItemSetError?:
                string;
            /** The reasons for the feed item set link error */
            feedItemSetLinkError?:
                string;
            /** The reasons for the feed item target error */
            feedItemTargetError?:
                string;
            /** The reasons for the feed item validation error */
            feedItemValidationError?:
                string;
            /** The reasons for the feed mapping error */
            feedMappingError?:
                string;
            /** The reasons for the field error */
            fieldError?:
                string;
            /** An error with a field mask */
            fieldMaskError?:
                string;
            /** The reasons for the function error */
            functionError?:
                string;
            /** The reasons for the function parsing error */
            functionParsingError?:
                string;
            /** The reasons for the geo target constant suggestion error. */
            geoTargetConstantSuggestionError?:
                string;
            /** The reasons for the header error. */
            headerError?:
                string;
            /** The reasons for the id error */
            idError?:
                string;
            /** The reasons for the image error */
            imageError?:
                string;
            /** An unexpected server-side error. */
            internalError?:
                string;
            /** The reasons for the invoice error */
            invoiceError?:
                string;
            /** The reason for keyword plan ad group error. */
            keywordPlanAdGroupError?:
                string;
            /** The reason for keyword plan ad group keyword error. */
            keywordPlanAdGroupKeywordError?:
                string;
            /** The reason for keyword plan campaign error. */
            keywordPlanCampaignError?:
                string;
            /** The reason for keyword plan campaign keyword error. */
            keywordPlanCampaignKeywordError?:
                string;
            /** The reason for keyword plan error. */
            keywordPlanError?:
                string;
            /** The reason for keyword idea error. */
            keywordPlanIdeaError?:
                string;
            /** The reason for the label error. */
            labelError?:
                string;
            /** The reasons for the language code error */
            languageCodeError?:
                string;
            /** An error with a list operation. */
            listOperationError?:
                string;
            /** The reasons for the manager link error */
            managerLinkError?:
                string;
            /** The reasons for the media bundle error */
            mediaBundleError?:
                string;
            /** The reasons for the media file error */
            mediaFileError?:
                string;
            /** The reasons for media uploading errors. */
            mediaUploadError?:
                string;
            /** Container for enum describing possible merchant center errors. */
            merchantCenterError?:
                string;
            /** The reasons for the multiplier error */
            multiplierError?:
                string;
            /** An error with a mutate */
            mutateError?:
                string;
            /** The reasons for the new resource creation error */
            newResourceCreationError?:
                string;
            /** The reasons for the not allowlisted error */
            notAllowlistedError?:
                string;
            /** The reasons for the not empty error */
            notEmptyError?:
                string;
            /** The reasons for the null error */
            nullError?:
                string;
            /** The reasons for the offline user data job error. */
            offlineUserDataJobError?:
                string;
            /** The reasons for the operation access denied error */
            operationAccessDeniedError?:
                string;
            /** The reasons for the operator error */
            operatorError?:
                string;
            /** The reasons for the mutate job error */
            partialFailureError?:
                string;
            /** The reasons for errors in payments accounts service */
            paymentsAccountError?:
                string;
            /** The reasons for the policy finding error. */
            policyFindingError?:
                string;
            /** The reasons for the policy validation parameter error */
            policyValidationParameterError?:
                string;
            /** The reasons for the policy violation error */
            policyViolationError?:
                string;
            /** The reasons for the product link error */
            productLinkError?:
                string;
            /** The reasons for the product link invitation error */
            productLinkInvitationError?:
                string;
            /** An error with an AWQL query */
            queryError?:
                string;
            /** An error with the amount of quota remaining. */
            quotaError?:
                string;
            /** The reasons for the range error */
            rangeError?:
                string;
            /** The reasons for the reach plan error */
            reachPlanError?:
                string;
            /** The reasons for error in applying a recommendation */
            recommendationError?:
                string;
            /** The reasons for the recommendation subscription error. */
            recommendationSubscriptionError?:
                string;
            /** The reasons for the region code error */
            regionCodeError?:
                string;
            /** An error caused by the request */
            requestError?:
                string;
            /** The reasons for the resource access denied error */
            resourceAccessDeniedError?:
                string;
            /** The reasons for the resource count limit exceeded error */
            resourceCountLimitExceededError?:
                string;
            /** The reasons for the Search term insight error */
            searchTermInsightError?:
                string;
            /** The reasons for the setting error */
            settingError?:
                string;
            /** The reasons for the shared criterion error */
            sharedCriterionError?:
                string;
            /** The reasons for the shared set error */
            sharedSetError?:
                string;
            /** The reasons for the size limit error */
            sizeLimitError?:
                string;
            /** The reasons for the Smart campaign error */
            smartCampaignError?:
                string;
            /** The reasons for the string format error */
            stringFormatError?:
                string;
            /** The reasons for the string length error */
            stringLengthError?:
                string;
            /** The reasons for the third party app analytics link mutate error */
            thirdPartyAppAnalyticsLinkError?:
                string;
            /** The reasons for the time zone error */
            timeZoneError?:
                string;
            /** An error with a URL field mutate. */
            urlFieldError?:
                string;
            /** The reasons for the user data error. */
            userDataError?:
                string;
            /** The reasons for the user list error */
            userListError?:
                string;
            /** The reasons for YouTube video registration errors. */
            youtubeVideoRegistrationError?:
                string;
        }
        interface GoogleAdsGoogleadsV15Errors__ErrorDetails {
            /** Describes policy violation findings. */
            policyFindingDetails?:
                GoogleAdsGoogleadsV15Errors__PolicyFindingDetails;
            /** Describes an ad policy violation. */
            policyViolationDetails?:
                GoogleAdsGoogleadsV15Errors__PolicyViolationDetails;
            /** Details on the quota error, including the scope (account or developer), the rate bucket name and the retry delay. */
            quotaErrorDetails?:
                GoogleAdsGoogleadsV15Errors__QuotaErrorDetails;
            /** Details for a resource count limit exceeded error. */
            resourceCountDetails?:
                GoogleAdsGoogleadsV15Errors__ResourceCountDetails;
            /** The error code that should have been returned, but wasn't. This is used when the error code is not published in the client specified version. */
            unpublishedErrorCode?:
                string;
        }
        interface GoogleAdsGoogleadsV15Errors__ErrorLocation {
            /** A field path that indicates which field was invalid in the request. */
            fieldPathElements?:
                GoogleAdsGoogleadsV15Errors_ErrorLocation_FieldPathElement[];
        }
        interface GoogleAdsGoogleadsV15Errors__GoogleAdsError {
            /** Additional error details, which are returned by certain error codes. Most error codes do not include details. */
            details?:
                GoogleAdsGoogleadsV15Errors__ErrorDetails;
            /** An enum value that indicates which error occurred. */
            errorCode?:
                GoogleAdsGoogleadsV15Errors__ErrorCode;
            /** Describes the part of the request proto that caused the error. */
            location?:
                GoogleAdsGoogleadsV15Errors__ErrorLocation;
            /** A human-readable description of the error. */
            message?:
                string;
            /** The value that triggered the error. */
            trigger?:
                GoogleAdsGoogleadsV15Common__Value;
        }
        interface GoogleAdsGoogleadsV15Errors__GoogleAdsFailure {
            /** The list of errors that occurred. */
            errors?:
                GoogleAdsGoogleadsV15Errors__GoogleAdsError[];
            /** The unique ID of the request that is used for debugging purposes. */
            requestId?:
                string;
        }
        interface GoogleAdsGoogleadsV15Errors__PolicyFindingDetails {
            /**
             * The list of policy topics for the resource. Contains the PROHIBITED or FULLY_LIMITED policy topic entries that prevented the resource from being saved (among any other entries the
             * resource may also have).
             */
            policyTopicEntries?:
                GoogleAdsGoogleadsV15Common__PolicyTopicEntry[];
        }
        interface GoogleAdsGoogleadsV15Errors__PolicyViolationDetails {
            /** Human readable description of policy violation. */
            externalPolicyDescription?:
                string;
            /** Human readable name of the policy. */
            externalPolicyName?:
                string;
            /** Whether user can file an exemption request for this violation. */
            isExemptible?:
                boolean;
            /** Unique identifier for this violation. If policy is exemptible, this key may be used to request exemption. */
            key?:
                GoogleAdsGoogleadsV15Common__PolicyViolationKey;
        }
        interface GoogleAdsGoogleadsV15Errors__QuotaErrorDetails {
            /** The high level description of the quota bucket. Examples are "Get requests for standard access" or "Requests per account". */
            rateName?:
                string;
            /** The rate scope of the quota limit. */
            rateScope?:
                string;
            /** Backoff period that customers should wait before sending next request. */
            retryDelay?:
                string;
        }
        interface GoogleAdsGoogleadsV15Errors__ResourceCountDetails {
            /** The ID of the resource whose limit was exceeded. External customer ID if the limit is for a customer. */
            enclosingId?:
                string;
            /** The name of the resource (Customer, Campaign etc.) whose limit was exceeded. */
            enclosingResource?:
                string;
            /** The count of existing entities. */
            existingCount?:
                number;
            /** The limit which was exceeded. */
            limit?:
                number;
            /** The resource limit type which was exceeded. */
            limitType?:
                string;
        }
        interface GoogleAdsGoogleadsV15Errors_ErrorLocation_FieldPathElement {
            /** The name of a field or a oneof */
            fieldName?:
                string;
            /** If field_name is a repeated field, this is the element that failed */
            index?:
                number;
        }
        interface GoogleAdsGoogleadsV15Resources__OfflineUserDataJobMetadata {
            /**
             * Output only. Match rate of the Customer Match user list upload. Describes the estimated match rate when the status of the job is "RUNNING" and final match rate when the final match
             * rate is available after the status of the job is "SUCCESS/FAILED".
             */
            matchRateRange?:
                string;
        }
        interface GoogleAdsGoogleadsV15Resources_BatchJob_BatchJobMetadata {
            /** Output only. The time when this batch job was completed. Formatted as yyyy-MM-dd HH:mm:ss. Example: "2018-03-05 09:16:00" */
            completionDateTime?:
                string;
            /** Output only. The time when this batch job was created. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:00" */
            creationDateTime?:
                string;
            /** Output only. The fraction (between 0.0 and 1.0) of mutates that have been processed. This is empty if the job hasn't started running yet. */
            estimatedCompletionRatio?:
                number;
            /** Output only. The number of mutate operations executed by the batch job. Present only if the job has started running. */
            executedOperationCount?:
                string;
            /** Immutable. The approximate upper bound for how long a batch job can be executed, in seconds. If the job runs more than the given upper bound, the job will be canceled. */
            executionLimitSeconds?:
                number;
            /** Output only. The number of mutate operations in the batch job. */
            operationCount?:
                string;
            /** Output only. The time when this batch job started running. Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:30" */
            startDateTime?:
                string;
        }
        interface GoogleAdsGoogleadsV15Services__PromoteExperimentMetadata {
            /** Required. The promoted experiment. */
            experiment?:
                string;
        }
        interface GoogleAdsGoogleadsV15Services__ScheduleExperimentMetadata {
            /** Required. The scheduled experiment. */
            experiment?:
                string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleLongrunning__CancelOperationRequest {
        }
        interface GoogleLongrunning__ListOperationsResponse {
            /** The standard List next-page token. */
            nextPageToken?:
                string;
            /** A list of operations that matches the specified filter in the request. */
            operations?:
                GoogleLongrunning__Operation[];
        }
        interface GoogleLongrunning__Operation {
            /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
            done?:
                boolean;
            /** The error result of the operation in case of failure or cancellation. */
            error?:
                GoogleRpc__Status;
            /**
             * Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such
             * metadata. Any method that returns a long-running operation should document the metadata type, if any.
             */
            metadata?:
                { [P in string]: any };
            /**
             * The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending
             * with `operations/{unique_id}`.
             */
            name?:
                string;
            /**
             * The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original
             * method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original
             * method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
             */
            response?:
                { [P in string]: any };
        }
        interface GoogleLongrunning__WaitOperationRequest {
            /**
             * The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also
             * specified, the shorter one will be used.
             */
            timeout?:
                string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleProtobuf__Empty {
        }
        interface GoogleRpc__Status {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?:
                number;
            /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
            details?:
                Array<{ [P in string]: any }>;
            /**
             * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the
             * client.
             */
            message?:
                string;
        }
        interface OperationsResource {
            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support
             * this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the
             * operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a
             * google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
             */
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource to be cancelled. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleLongrunning__CancelOperationRequest;
            }): Request<{}>;
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource to be cancelled. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleLongrunning__CancelOperationRequest): Request<{}>;
            /**
             * Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't
             * support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource to be deleted. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<{}>;
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleLongrunning__Operation>;
            /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** The standard list filter. */
                filter?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation's parent resource. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** The standard list page size. */
                pageSize?:
                    number;
                /** The standard list page token. */
                pageToken?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            }): Request<GoogleLongrunning__ListOperationsResponse>;
            /**
             * Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is
             * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even
             * an immediate response is no guarantee that the operation is done.
             */
            wait(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource to wait on. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
                /** Request body */
                resource:
                    GoogleLongrunning__WaitOperationRequest;
            }): Request<GoogleLongrunning__Operation>;
            wait(request: {
                /** V1 error format. */
                "$.xgafv"?:
                    string;
                /** OAuth access token. */
                access_token?:
                    string;
                /** Data format for response. */
                alt?:
                    string;
                /** JSONP */
                callback?:
                    string;
                /** Selector specifying which fields to include in a partial response. */
                fields?:
                    string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?:
                    string;
                /** The name of the operation resource to wait on. */
                name:
                    string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?:
                    string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?:
                    boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?:
                    string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?:
                    string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?:
                    string;
            },
            body: GoogleLongrunning__WaitOperationRequest): Request<GoogleLongrunning__Operation>;
        }
        interface CustomersResource {
            operations:
                OperationsResource;
        }

        const customers: CustomersResource;
    }
}
