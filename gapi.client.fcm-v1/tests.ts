/* This is stub file for gapi.client.fcm-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20250804

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://fcm.googleapis.com/$discovery/rest?version=v1',
  );
  /** now we can use gapi.client.fcm */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
    'https://www.googleapis.com/auth/cloud-platform',
    /** Send messages and manage messaging subscriptions for your Firebase applications */
    'https://www.googleapis.com/auth/firebase.messaging',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Send a message to specified target (a registration token, topic or condition). */
    await gapi.client.fcm.projects.messages.send(
      {
        parent: 'Test string',
      },
      {
        message: {
          android: {
            bandwidthConstrainedOk: true,
            collapseKey: 'Test string',
            data: {
              A: 'Test string',
            },
            directBootOk: true,
            fcmOptions: {
              analyticsLabel: 'Test string',
            },
            notification: {
              body: 'Test string',
              bodyLocArgs: ['Test string'],
              bodyLocKey: 'Test string',
              bypassProxyNotification: true,
              channelId: 'Test string',
              clickAction: 'Test string',
              color: 'Test string',
              defaultLightSettings: true,
              defaultSound: true,
              defaultVibrateTimings: true,
              eventTime: 'Test string',
              icon: 'Test string',
              image: 'Test string',
              lightSettings: {
                color: {
                  alpha: 42,
                  blue: 42,
                  green: 42,
                  red: 42,
                },
                lightOffDuration: 'Test string',
                lightOnDuration: 'Test string',
              },
              localOnly: true,
              notificationCount: 42,
              notificationPriority: 'Test string',
              proxy: 'Test string',
              sound: 'Test string',
              sticky: true,
              tag: 'Test string',
              ticker: 'Test string',
              title: 'Test string',
              titleLocArgs: ['Test string'],
              titleLocKey: 'Test string',
              vibrateTimings: ['Test string'],
              visibility: 'Test string',
            },
            priority: 'Test string',
            restrictedPackageName: 'Test string',
            restrictedSatelliteOk: true,
            ttl: 'Test string',
          },
          apns: {
            fcmOptions: {
              analyticsLabel: 'Test string',
              image: 'Test string',
            },
            headers: {
              A: 'Test string',
            },
            liveActivityToken: 'Test string',
            payload: {
              A: 42,
            },
          },
          condition: 'Test string',
          data: {
            A: 'Test string',
          },
          fcmOptions: {
            analyticsLabel: 'Test string',
          },
          name: 'Test string',
          notification: {
            body: 'Test string',
            image: 'Test string',
            title: 'Test string',
          },
          token: 'Test string',
          topic: 'Test string',
          webpush: {
            data: {
              A: 'Test string',
            },
            fcmOptions: {
              analyticsLabel: 'Test string',
              link: 'Test string',
            },
            headers: {
              A: 'Test string',
            },
            notification: {
              A: 42,
            },
          },
        },
        validateOnly: true,
      },
    );
  }
});
