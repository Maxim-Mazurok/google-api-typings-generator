/* Type definitions for non-npm package Policy Simulator API v1 1.0 */
// Project: https://cloud.google.com/iam/docs/simulating-access
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://policysimulator.googleapis.com/$discovery/rest?version=v1
// Revision: 20211105

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Policy Simulator API v1 */
    function load(name: "policysimulator", version: "v1"): PromiseLike<void>;
    function load(name: "policysimulator", version: "v1", callback: () => any): void;

    namespace policysimulator {
        interface GoogleCloudPolicysimulatorV1AccessStateDiff {
            /** How the principal's access, specified in the AccessState field, changed between the current (baseline) policies and proposed (simulated) policies. */
            accessChange?: string;
            /** The results of evaluating the access tuple under the current (baseline) policies. If the AccessState couldn't be fully evaluated, this field explains why. */
            baseline?: GoogleCloudPolicysimulatorV1ExplainedAccess;
            /** The results of evaluating the access tuple under the proposed (simulated) policies. If the AccessState couldn't be fully evaluated, this field explains why. */
            simulated?: GoogleCloudPolicysimulatorV1ExplainedAccess;
        }
        interface GoogleCloudPolicysimulatorV1AccessTuple {
            /**
             * Required. The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. For examples of
             * full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
             */
            fullResourceName?: string;
            /**
             * Required. The IAM permission to check for the specified principal and resource. For a complete list of IAM permissions, see https://cloud.google.com/iam/help/permissions/reference.
             * For a complete list of predefined IAM roles and the permissions in each role, see https://cloud.google.com/iam/help/roles/reference.
             */
            permission?: string;
            /**
             * Required. The principal whose access you want to check, in the form of the email address that represents that principal. For example, `alice@example.com` or
             * `my-service-account@my-project.iam.gserviceaccount.com`. The principal must be a Google Account or a service account. Other types of principals are not supported.
             */
            principal?: string;
        }
        interface GoogleCloudPolicysimulatorV1beta1Replay {
            /** Required. The configuration used for the `Replay`. */
            config?: GoogleCloudPolicysimulatorV1beta1ReplayConfig;
            /**
             * Output only. The resource name of the `Replay`, which has the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`, where
             * `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example:
             * `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
             */
            name?: string;
            /** Output only. Summary statistics about the replayed log entries. */
            resultsSummary?: GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary;
            /** Output only. The current state of the `Replay`. */
            state?: string;
        }
        interface GoogleCloudPolicysimulatorV1beta1ReplayConfig {
            /** The logs to use as input for the Replay. */
            logSource?: string;
            /**
             * A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example,
             * `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see
             * https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into
             * account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.
             */
            policyOverlay?: { [P in string]: GoogleIamV1Policy };
        }
        interface GoogleCloudPolicysimulatorV1beta1ReplayOperationMetadata {
            /** Time when the request was received. */
            startTime?: string;
        }
        interface GoogleCloudPolicysimulatorV1beta1ReplayResultsSummary {
            /** The number of replayed log entries with a difference between baseline and simulated policies. */
            differenceCount?: number;
            /** The number of log entries that could not be replayed. */
            errorCount?: number;
            /** The total number of log entries replayed. */
            logCount?: number;
            /** The date of the newest log entry replayed. */
            newestDate?: GoogleTypeDate;
            /** The date of the oldest log entry replayed. */
            oldestDate?: GoogleTypeDate;
            /** The number of replayed log entries with no difference between baseline and simulated policies. */
            unchangedCount?: number;
        }
        interface GoogleCloudPolicysimulatorV1BindingExplanation {
            /**
             * Required. Indicates whether _this binding_ provides the specified permission to the specified principal for the specified resource. This field does _not_ indicate whether the
             * principal actually has the permission for the resource. There might be another binding that overrides this binding. To determine whether the principal actually has the permission,
             * use the `access` field in the TroubleshootIamPolicyResponse.
             */
            access?: string;
            /**
             * A condition expression that prevents this binding from granting access unless the expression evaluates to `true`. To learn about IAM Conditions, see
             * https://cloud.google.com/iam/docs/conditions-overview.
             */
            condition?: GoogleTypeExpr;
            /**
             * Indicates whether each principal in the binding includes the principal specified in the request, either directly or indirectly. Each key identifies a principal in the binding, and
             * each value indicates whether the principal in the binding includes the principal in the request. For example, suppose that a binding includes the following principals: *
             * `user:alice@example.com` * `group:product-eng@example.com` The principal in the replayed access tuple is `user:bob@example.com`. This user is a principal of the group
             * `group:product-eng@example.com`. For the first principal in the binding, the key is `user:alice@example.com`, and the `membership` field in the value is set to
             * `MEMBERSHIP_NOT_INCLUDED`. For the second principal in the binding, the key is `group:product-eng@example.com`, and the `membership` field in the value is set to
             * `MEMBERSHIP_INCLUDED`.
             */
            memberships?: { [P in string]: GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership };
            /** The relevance of this binding to the overall determination for the entire policy. */
            relevance?: string;
            /**
             * The role that this binding grants. For example, `roles/compute.serviceAgent`. For a complete list of predefined IAM roles, as well as the permissions in each role, see
             * https://cloud.google.com/iam/help/roles/reference.
             */
            role?: string;
            /** Indicates whether the role granted by this binding contains the specified permission. */
            rolePermission?: string;
            /** The relevance of the permission's existence, or nonexistence, in the role to the overall determination for the entire policy. */
            rolePermissionRelevance?: string;
        }
        interface GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership {
            /** Indicates whether the binding includes the principal. */
            membership?: string;
            /** The relevance of the principal's status to the overall determination for the binding. */
            relevance?: string;
        }
        interface GoogleCloudPolicysimulatorV1ExplainedAccess {
            /** Whether the principal in the access tuple has permission to access the resource in the access tuple under the given policies. */
            accessState?: string;
            /**
             * If the AccessState is `UNKNOWN`, this field contains a list of errors explaining why the result is `UNKNOWN`. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is
             * omitted.
             */
            errors?: GoogleRpcStatus[];
            /** If the AccessState is `UNKNOWN`, this field contains the policies that led to that result. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted. */
            policies?: GoogleCloudPolicysimulatorV1ExplainedPolicy[];
        }
        interface GoogleCloudPolicysimulatorV1ExplainedPolicy {
            /**
             * Indicates whether _this policy_ provides the specified permission to the specified principal for the specified resource. This field does _not_ indicate whether the principal
             * actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the principal actually has the permission, use the
             * `access` field in the TroubleshootIamPolicyResponse.
             */
            access?: string;
            /**
             * Details about how each binding in the policy affects the principal's ability, or inability, to use the permission for the resource. If the user who created the Replay does not have
             * access to the policy, this field is omitted.
             */
            bindingExplanations?: GoogleCloudPolicysimulatorV1BindingExplanation[];
            /**
             * The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. If the user who created
             * the Replay does not have access to the policy, this field is omitted. For examples of full resource names for Google Cloud services, see
             * https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
             */
            fullResourceName?: string;
            /** The IAM policy attached to the resource. If the user who created the Replay does not have access to the policy, this field is empty. */
            policy?: GoogleIamV1Policy;
            /**
             * The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the user who created the Replay does not have access to the policy, this field is
             * omitted.
             */
            relevance?: string;
        }
        interface GoogleCloudPolicysimulatorV1ListReplayResultsResponse {
            /** A token that you can use to retrieve the next page of ReplayResult objects. If this field is omitted, there are no subsequent pages. */
            nextPageToken?: string;
            /** The results of running a Replay. */
            replayResults?: GoogleCloudPolicysimulatorV1ReplayResult[];
        }
        interface GoogleCloudPolicysimulatorV1Replay {
            /** Required. The configuration used for the `Replay`. */
            config?: GoogleCloudPolicysimulatorV1ReplayConfig;
            /**
             * Output only. The resource name of the `Replay`, which has the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`, where
             * `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example:
             * `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
             */
            name?: string;
            /** Output only. Summary statistics about the replayed log entries. */
            resultsSummary?: GoogleCloudPolicysimulatorV1ReplayResultsSummary;
            /** Output only. The current state of the `Replay`. */
            state?: string;
        }
        interface GoogleCloudPolicysimulatorV1ReplayConfig {
            /** The logs to use as input for the Replay. */
            logSource?: string;
            /**
             * A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example,
             * `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see
             * https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into
             * account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.
             */
            policyOverlay?: { [P in string]: GoogleIamV1Policy };
        }
        interface GoogleCloudPolicysimulatorV1ReplayDiff {
            /**
             * A summary and comparison of the principal's access under the current (baseline) policies and the proposed (simulated) policies for a single access tuple. The evaluation of the
             * principal's access is reported in the AccessState field.
             */
            accessDiff?: GoogleCloudPolicysimulatorV1AccessStateDiff;
        }
        interface GoogleCloudPolicysimulatorV1ReplayOperationMetadata {
            /** Time when the request was received. */
            startTime?: string;
        }
        interface GoogleCloudPolicysimulatorV1ReplayResult {
            /** The access tuple that was replayed. This field includes information about the principal, resource, and permission that were involved in the access attempt. */
            accessTuple?: GoogleCloudPolicysimulatorV1AccessTuple;
            /**
             * The difference between the principal's access under the current (baseline) policies and the principal's access under the proposed (simulated) policies. This field is only included
             * for access tuples that were successfully replayed and had different results under the current policies and the proposed policies.
             */
            diff?: GoogleCloudPolicysimulatorV1ReplayDiff;
            /** The error that caused the access tuple replay to fail. This field is only included for access tuples that were not replayed successfully. */
            error?: GoogleRpcStatus;
            /** The latest date this access tuple was seen in the logs. */
            lastSeenDate?: GoogleTypeDate;
            /**
             * The resource name of the `ReplayResult`, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}/results/{replay-result-id}`,
             * where `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example:
             * `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36/results/1234`
             */
            name?: string;
            /** The Replay that the access tuple was included in. */
            parent?: string;
        }
        interface GoogleCloudPolicysimulatorV1ReplayResultsSummary {
            /** The number of replayed log entries with a difference between baseline and simulated policies. */
            differenceCount?: number;
            /** The number of log entries that could not be replayed. */
            errorCount?: number;
            /** The total number of log entries replayed. */
            logCount?: number;
            /** The date of the newest log entry replayed. */
            newestDate?: GoogleTypeDate;
            /** The date of the oldest log entry replayed. */
            oldestDate?: GoogleTypeDate;
            /** The number of replayed log entries with no difference between baseline and simulated policies. */
            unchangedCount?: number;
        }
        interface GoogleIamV1AuditConfig {
            /** The configuration for logging of each type of permission. */
            auditLogConfigs?: GoogleIamV1AuditLogConfig[];
            /**
             * Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all
             * services.
             */
            service?: string;
        }
        interface GoogleIamV1AuditLogConfig {
            /** Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members. */
            exemptedMembers?: string[];
            /** The log type that this config enables. */
            logType?: string;
        }
        interface GoogleIamV1Binding {
            /**
             * The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`,
             * then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which
             * resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            condition?: GoogleTypeExpr;
            /**
             * Specifies the principals requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is
             * on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service
             * account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that
             * represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example,
             * `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example,
             * `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. *
             * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example,
             * `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service
             * account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently
             * deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in
             * the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
             */
            members?: string[];
            /** Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. */
            role?: string;
        }
        interface GoogleIamV1Policy {
            /** Specifies cloud audit logging configuration for this policy. */
            auditConfigs?: GoogleIamV1AuditConfig[];
            /**
             * Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings`
             * must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a
             * principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another
             * 1,450 principals to the `bindings` in the `Policy`.
             */
            bindings?: GoogleIamV1Binding[];
            /**
             * `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make
             * use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems
             * are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM
             * Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1`
             * policy, and all of the conditions in the version `3` policy are lost.
             */
            etag?: string;
            /**
             * Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings
             * must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a
             * policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use
             * IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1`
             * policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave
             * the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            version?: number;
        }
        interface GoogleLongrunningListOperationsResponse {
            /** The standard List next-page token. */
            nextPageToken?: string;
            /** A list of operations that matches the specified filter in the request. */
            operations?: GoogleLongrunningOperation[];
        }
        interface GoogleLongrunningOperation {
            /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
            done?: boolean;
            /** The error result of the operation in case of failure or cancellation. */
            error?: GoogleRpcStatus;
            /**
             * Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such
             * metadata. Any method that returns a long-running operation should document the metadata type, if any.
             */
            metadata?: { [P in string]: any };
            /**
             * The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending
             * with `operations/{unique_id}`.
             */
            name?: string;
            /**
             * The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the
             * original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the
             * original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
             */
            response?: { [P in string]: any };
        }
        interface GoogleRpcStatus {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?: number;
            /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
            details?: Array<{ [P in string]: any }>;
            /**
             * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the
             * client.
             */
            message?: string;
        }
        interface GoogleTypeDate {
            /** Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. */
            day?: number;
            /** Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. */
            month?: number;
            /** Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. */
            year?: number;
        }
        interface GoogleTypeExpr {
            /** Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. */
            description?: string;
            /** Textual representation of an expression in Common Expression Language syntax. */
            expression?: string;
            /** Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. */
            location?: string;
            /** Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. */
            title?: string;
        }
        interface ResultsResource {
            /** Lists the results of running a Replay. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of ReplayResult objects to return. Defaults to 5000. The maximum value is 5000; values above 5000 are rounded down to 5000. */
                pageSize?: number;
                /**
                 * A page token, received from a previous Simulator.ListReplayResults call. Provide this token to retrieve the next page of results. When paginating, all other parameters provided
                 * to [Simulator.ListReplayResults[] must match the call that provided the page token.
                 */
                pageToken?: string;
                /**
                 * Required. The Replay whose results are listed, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}` Example:
                 * `projects/my-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudPolicysimulatorV1ListReplayResultsResponse>;
        }
        interface ReplaysResource {
            /** Creates and starts a Replay using the given ReplayConfig. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The parent resource where this Replay will be created. This resource must be a project, folder, or organization with a location. Example:
                 * `projects/my-example-project/locations/global`
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudPolicysimulatorV1Replay;
            }): Request<GoogleLongrunningOperation>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The parent resource where this Replay will be created. This resource must be a project, folder, or organization with a location. Example:
                 * `projects/my-example-project/locations/global`
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudPolicysimulatorV1Replay): Request<GoogleLongrunningOperation>;
            /** Gets the specified Replay. Each `Replay` is available for at least 7 days. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the Replay to retrieve, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`, where
                 * `{resource-id}` is the ID of the project, folder, or organization that owns the `Replay`. Example:
                 * `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudPolicysimulatorV1Replay>;
            results: ResultsResource;
        }
        interface LocationsResource {
            replays: ReplaysResource;
        }
        interface FoldersResource {
            locations: LocationsResource;
        }
        interface OperationsResource {
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningOperation>;
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services
             * to override the binding to use different resource name schemes, such as `users/*‍/operations`. To override the binding, API services can add a binding such as
             * `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must
             * ensure the name binding is the parent resource, without the operations collection id.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** The standard list filter. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation's parent resource. */
                name?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The standard list page size. */
                pageSize?: number;
                /** The standard list page token. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningListOperationsResponse>;
        }
        interface ResultsResource {
            /** Lists the results of running a Replay. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of ReplayResult objects to return. Defaults to 5000. The maximum value is 5000; values above 5000 are rounded down to 5000. */
                pageSize?: number;
                /**
                 * A page token, received from a previous Simulator.ListReplayResults call. Provide this token to retrieve the next page of results. When paginating, all other parameters provided
                 * to [Simulator.ListReplayResults[] must match the call that provided the page token.
                 */
                pageToken?: string;
                /**
                 * Required. The Replay whose results are listed, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}` Example:
                 * `projects/my-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudPolicysimulatorV1ListReplayResultsResponse>;
        }
        interface ReplaysResource {
            /** Creates and starts a Replay using the given ReplayConfig. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The parent resource where this Replay will be created. This resource must be a project, folder, or organization with a location. Example:
                 * `projects/my-example-project/locations/global`
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudPolicysimulatorV1Replay;
            }): Request<GoogleLongrunningOperation>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The parent resource where this Replay will be created. This resource must be a project, folder, or organization with a location. Example:
                 * `projects/my-example-project/locations/global`
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudPolicysimulatorV1Replay): Request<GoogleLongrunningOperation>;
            /** Gets the specified Replay. Each `Replay` is available for at least 7 days. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the Replay to retrieve, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`, where
                 * `{resource-id}` is the ID of the project, folder, or organization that owns the `Replay`. Example:
                 * `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudPolicysimulatorV1Replay>;
            results: ResultsResource;
        }
        interface LocationsResource {
            replays: ReplaysResource;
        }
        interface OrganizationsResource {
            locations: LocationsResource;
        }
        interface ResultsResource {
            /** Lists the results of running a Replay. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of ReplayResult objects to return. Defaults to 5000. The maximum value is 5000; values above 5000 are rounded down to 5000. */
                pageSize?: number;
                /**
                 * A page token, received from a previous Simulator.ListReplayResults call. Provide this token to retrieve the next page of results. When paginating, all other parameters provided
                 * to [Simulator.ListReplayResults[] must match the call that provided the page token.
                 */
                pageToken?: string;
                /**
                 * Required. The Replay whose results are listed, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}` Example:
                 * `projects/my-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudPolicysimulatorV1ListReplayResultsResponse>;
        }
        interface ReplaysResource {
            /** Creates and starts a Replay using the given ReplayConfig. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The parent resource where this Replay will be created. This resource must be a project, folder, or organization with a location. Example:
                 * `projects/my-example-project/locations/global`
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudPolicysimulatorV1Replay;
            }): Request<GoogleLongrunningOperation>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The parent resource where this Replay will be created. This resource must be a project, folder, or organization with a location. Example:
                 * `projects/my-example-project/locations/global`
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudPolicysimulatorV1Replay): Request<GoogleLongrunningOperation>;
            /** Gets the specified Replay. Each `Replay` is available for at least 7 days. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The name of the Replay to retrieve, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`, where
                 * `{resource-id}` is the ID of the project, folder, or organization that owns the `Replay`. Example:
                 * `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudPolicysimulatorV1Replay>;
            results: ResultsResource;
        }
        interface LocationsResource {
            replays: ReplaysResource;
        }
        interface ProjectsResource {
            locations: LocationsResource;
        }

        const folders: FoldersResource;

        const operations: OperationsResource;

        const organizations: OrganizationsResource;

        const projects: ProjectsResource;
    }
}
