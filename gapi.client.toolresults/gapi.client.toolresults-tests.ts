/* This is stub file for gapi.client.toolresults definition tests */
/* IMPORTANT.
* This file was automatically generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
* In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
**/
gapi.load('client', () => {
    /** now we can use gapi.client */
    gapi.client.load('toolresults', 'v1beta3', () => {
        /** now we can use gapi.client.toolresults */

        /** don't forget to authenticate your client before sending any request to resources: */
        /** declare client_id registered in Google Developers Console */
        const client_id = '<<PUT YOUR CLIENT ID HERE>>';
        const scope = [
            /** View and manage your data across Google Cloud Platform services */
            'https://www.googleapis.com/auth/cloud-platform',
        ];
        const immediate = false;
        gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
            if (authResult && !authResult.error) {
                /** handle successful authorization */
                run();
            } else {
                /** handle authorization error */
            }
        });
    });

    async function run() {
        /** Gets the Tool Results settings for a project. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from project */
        await gapi.client.toolresults.projects.getSettings({
            projectId: "Test string",
        });
        /**
         * Creates a History. The returned History will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to
         * project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing project does not exist
         */
        await gapi.client.toolresults.projects.histories.create({
            projectId: "Test string",
            requestId: "Test string",
        }, {
            displayName: "Test string",
            historyId: "Test string",
            name: "Test string",
            testPlatform: "Test string",
        });
        /**
         * Creates an Execution. The returned Execution will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to
         * project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.create({
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionDefinitions: [
                {
                }            ],
            executionId: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            specification: {
                androidTest: {
                    androidAppInfo: {
                        name: "Test string",
                        packageName: "Test string",
                        versionCode: "Test string",
                        versionName: "Test string",
                    },
                    androidInstrumentationTest: {
                        testPackageId: "Test string",
                        testRunnerClass: "Test string",
                        testTargets: [
                            "Test string"                        ],
                        useOrchestrator: true,
                    },
                    androidRoboTest: {
                        appInitialActivity: "Test string",
                        bootstrapPackageId: "Test string",
                        bootstrapRunnerClass: "Test string",
                        maxDepth: 42,
                        maxSteps: 42,
                    },
                    androidTestLoop: {
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                iosTest: {
                    iosAppInfo: {
                        name: "Test string",
                    },
                    iosRoboTest: {
                    },
                    iosTestLoop: {
                        bundleId: "Test string",
                    },
                    iosXcTest: {
                        bundleId: "Test string",
                        xcodeVersion: "Test string",
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
            },
            state: "Test string",
            testExecutionMatrixId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets an Execution. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Executions for a given History. The executions are sorted by creation_time in descending order. The execution_id key will be used to order the executions with the same
         * creation_time. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.list({
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Execution with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to
         * project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionDefinitions: [
                {
                }            ],
            executionId: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            specification: {
                androidTest: {
                    androidAppInfo: {
                        name: "Test string",
                        packageName: "Test string",
                        versionCode: "Test string",
                        versionName: "Test string",
                    },
                    androidInstrumentationTest: {
                        testPackageId: "Test string",
                        testRunnerClass: "Test string",
                        testTargets: [
                            "Test string"                        ],
                        useOrchestrator: true,
                    },
                    androidRoboTest: {
                        appInitialActivity: "Test string",
                        bootstrapPackageId: "Test string",
                        bootstrapRunnerClass: "Test string",
                        maxDepth: 42,
                        maxSteps: 42,
                    },
                    androidTestLoop: {
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                iosTest: {
                    iosAppInfo: {
                        name: "Test string",
                    },
                    iosRoboTest: {
                    },
                    iosTestLoop: {
                        bundleId: "Test string",
                    },
                    iosXcTest: {
                        bundleId: "Test string",
                        xcodeVersion: "Test string",
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
            },
            state: "Test string",
            testExecutionMatrixId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a History. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the History does not exist
         */
        await gapi.client.toolresults.projects.histories.get({
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates an Execution. The returned Execution will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to
         * project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.create({
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionDefinitions: [
                {
                }            ],
            executionId: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            specification: {
                androidTest: {
                    androidAppInfo: {
                        name: "Test string",
                        packageName: "Test string",
                        versionCode: "Test string",
                        versionName: "Test string",
                    },
                    androidInstrumentationTest: {
                        testPackageId: "Test string",
                        testRunnerClass: "Test string",
                        testTargets: [
                            "Test string"                        ],
                        useOrchestrator: true,
                    },
                    androidRoboTest: {
                        appInitialActivity: "Test string",
                        bootstrapPackageId: "Test string",
                        bootstrapRunnerClass: "Test string",
                        maxDepth: 42,
                        maxSteps: 42,
                    },
                    androidTestLoop: {
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                iosTest: {
                    iosAppInfo: {
                        name: "Test string",
                    },
                    iosRoboTest: {
                    },
                    iosTestLoop: {
                        bundleId: "Test string",
                    },
                    iosXcTest: {
                        bundleId: "Test string",
                        xcodeVersion: "Test string",
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
            },
            state: "Test string",
            testExecutionMatrixId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets an Execution. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Executions for a given History. The executions are sorted by creation_time in descending order. The execution_id key will be used to order the executions with the same
         * creation_time. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.list({
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Execution with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to
         * project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionDefinitions: [
                {
                }            ],
            executionId: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            specification: {
                androidTest: {
                    androidAppInfo: {
                        name: "Test string",
                        packageName: "Test string",
                        versionCode: "Test string",
                        versionName: "Test string",
                    },
                    androidInstrumentationTest: {
                        testPackageId: "Test string",
                        testRunnerClass: "Test string",
                        testTargets: [
                            "Test string"                        ],
                        useOrchestrator: true,
                    },
                    androidRoboTest: {
                        appInitialActivity: "Test string",
                        bootstrapPackageId: "Test string",
                        bootstrapRunnerClass: "Test string",
                        maxDepth: 42,
                        maxSteps: 42,
                    },
                    androidTestLoop: {
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                iosTest: {
                    iosAppInfo: {
                        name: "Test string",
                    },
                    iosRoboTest: {
                    },
                    iosTestLoop: {
                        bundleId: "Test string",
                    },
                    iosXcTest: {
                        bundleId: "Test string",
                        xcodeVersion: "Test string",
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
            },
            state: "Test string",
            testExecutionMatrixId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Histories for a given Project. The histories are sorted by modification time in descending order. The history_id key will be used to order the history with the same modification
         * time. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed -
         * NOT_FOUND - if the History does not exist
         */
        await gapi.client.toolresults.projects.histories.list({
            filterByName: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates an Execution. The returned Execution will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to
         * project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.create({
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionDefinitions: [
                {
                }            ],
            executionId: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            specification: {
                androidTest: {
                    androidAppInfo: {
                        name: "Test string",
                        packageName: "Test string",
                        versionCode: "Test string",
                        versionName: "Test string",
                    },
                    androidInstrumentationTest: {
                        testPackageId: "Test string",
                        testRunnerClass: "Test string",
                        testTargets: [
                            "Test string"                        ],
                        useOrchestrator: true,
                    },
                    androidRoboTest: {
                        appInitialActivity: "Test string",
                        bootstrapPackageId: "Test string",
                        bootstrapRunnerClass: "Test string",
                        maxDepth: 42,
                        maxSteps: 42,
                    },
                    androidTestLoop: {
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                iosTest: {
                    iosAppInfo: {
                        name: "Test string",
                    },
                    iosRoboTest: {
                    },
                    iosTestLoop: {
                        bundleId: "Test string",
                    },
                    iosXcTest: {
                        bundleId: "Test string",
                        xcodeVersion: "Test string",
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
            },
            state: "Test string",
            testExecutionMatrixId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets an Execution. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Executions for a given History. The executions are sorted by creation_time in descending order. The execution_id key will be used to order the executions with the same
         * creation_time. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.list({
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Execution with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to
         * project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionDefinitions: [
                {
                }            ],
            executionId: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            specification: {
                androidTest: {
                    androidAppInfo: {
                        name: "Test string",
                        packageName: "Test string",
                        versionCode: "Test string",
                        versionName: "Test string",
                    },
                    androidInstrumentationTest: {
                        testPackageId: "Test string",
                        testRunnerClass: "Test string",
                        testTargets: [
                            "Test string"                        ],
                        useOrchestrator: true,
                    },
                    androidRoboTest: {
                        appInitialActivity: "Test string",
                        bootstrapPackageId: "Test string",
                        bootstrapRunnerClass: "Test string",
                        maxDepth: 42,
                        maxSteps: 42,
                    },
                    androidTestLoop: {
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                iosTest: {
                    iosAppInfo: {
                        name: "Test string",
                    },
                    iosRoboTest: {
                    },
                    iosTestLoop: {
                        bundleId: "Test string",
                    },
                    iosXcTest: {
                        bundleId: "Test string",
                        xcodeVersion: "Test string",
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
            },
            state: "Test string",
            testExecutionMatrixId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates resources for settings which have not yet been set. Currently, this creates a single resource: a Google Cloud Storage bucket, to be used as the default bucket for this project.
         * The bucket is created in an FTL-own storage project. Except for in rare cases, calling this method in parallel from multiple clients will only create a single bucket. In order to avoid
         * unnecessary storage charges, the bucket is configured to automatically delete objects older than 90 days. The bucket is created with the following permissions: - Owner access for owners
         * of central storage project (FTL-owned) - Writer access for owners/editors of customer project - Reader access for viewers of customer project The default ACL on objects created in the
         * bucket is: - Owner access for owners of central storage project - Reader access for owners/editors/viewers of customer project See Google Cloud Storage documentation for more details.
         * If there is already a default bucket set and the project can access the bucket, this call does nothing. However, if the project doesn't have the permission to access the bucket or the
         * bucket is deleted, a new bucket will be created. May return any canonical error codes, including the following: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * Any error code raised by Google Cloud Storage
         */
        await gapi.client.toolresults.projects.initializeSettings({
            projectId: "Test string",
        });
        /**
         * Creates a History. The returned History will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to
         * project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing project does not exist
         */
        await gapi.client.toolresults.projects.histories.create({
            projectId: "Test string",
            requestId: "Test string",
        }, {
            displayName: "Test string",
            historyId: "Test string",
            name: "Test string",
            testPlatform: "Test string",
        });
        /**
         * Creates an Execution. The returned Execution will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to
         * project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.create({
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionDefinitions: [
                {
                }            ],
            executionId: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            specification: {
                androidTest: {
                    androidAppInfo: {
                        name: "Test string",
                        packageName: "Test string",
                        versionCode: "Test string",
                        versionName: "Test string",
                    },
                    androidInstrumentationTest: {
                        testPackageId: "Test string",
                        testRunnerClass: "Test string",
                        testTargets: [
                            "Test string"                        ],
                        useOrchestrator: true,
                    },
                    androidRoboTest: {
                        appInitialActivity: "Test string",
                        bootstrapPackageId: "Test string",
                        bootstrapRunnerClass: "Test string",
                        maxDepth: 42,
                        maxSteps: 42,
                    },
                    androidTestLoop: {
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                iosTest: {
                    iosAppInfo: {
                        name: "Test string",
                    },
                    iosRoboTest: {
                    },
                    iosTestLoop: {
                        bundleId: "Test string",
                    },
                    iosXcTest: {
                        bundleId: "Test string",
                        xcodeVersion: "Test string",
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
            },
            state: "Test string",
            testExecutionMatrixId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets an Execution. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Executions for a given History. The executions are sorted by creation_time in descending order. The execution_id key will be used to order the executions with the same
         * creation_time. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.list({
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Execution with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to
         * project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionDefinitions: [
                {
                }            ],
            executionId: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            specification: {
                androidTest: {
                    androidAppInfo: {
                        name: "Test string",
                        packageName: "Test string",
                        versionCode: "Test string",
                        versionName: "Test string",
                    },
                    androidInstrumentationTest: {
                        testPackageId: "Test string",
                        testRunnerClass: "Test string",
                        testTargets: [
                            "Test string"                        ],
                        useOrchestrator: true,
                    },
                    androidRoboTest: {
                        appInitialActivity: "Test string",
                        bootstrapPackageId: "Test string",
                        bootstrapRunnerClass: "Test string",
                        maxDepth: 42,
                        maxSteps: 42,
                    },
                    androidTestLoop: {
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                iosTest: {
                    iosAppInfo: {
                        name: "Test string",
                    },
                    iosRoboTest: {
                    },
                    iosTestLoop: {
                        bundleId: "Test string",
                    },
                    iosXcTest: {
                        bundleId: "Test string",
                        xcodeVersion: "Test string",
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
            },
            state: "Test string",
            testExecutionMatrixId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a History. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the History does not exist
         */
        await gapi.client.toolresults.projects.histories.get({
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates an Execution. The returned Execution will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to
         * project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.create({
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionDefinitions: [
                {
                }            ],
            executionId: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            specification: {
                androidTest: {
                    androidAppInfo: {
                        name: "Test string",
                        packageName: "Test string",
                        versionCode: "Test string",
                        versionName: "Test string",
                    },
                    androidInstrumentationTest: {
                        testPackageId: "Test string",
                        testRunnerClass: "Test string",
                        testTargets: [
                            "Test string"                        ],
                        useOrchestrator: true,
                    },
                    androidRoboTest: {
                        appInitialActivity: "Test string",
                        bootstrapPackageId: "Test string",
                        bootstrapRunnerClass: "Test string",
                        maxDepth: 42,
                        maxSteps: 42,
                    },
                    androidTestLoop: {
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                iosTest: {
                    iosAppInfo: {
                        name: "Test string",
                    },
                    iosRoboTest: {
                    },
                    iosTestLoop: {
                        bundleId: "Test string",
                    },
                    iosXcTest: {
                        bundleId: "Test string",
                        xcodeVersion: "Test string",
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
            },
            state: "Test string",
            testExecutionMatrixId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets an Execution. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Executions for a given History. The executions are sorted by creation_time in descending order. The execution_id key will be used to order the executions with the same
         * creation_time. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.list({
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Execution with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to
         * project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionDefinitions: [
                {
                }            ],
            executionId: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            specification: {
                androidTest: {
                    androidAppInfo: {
                        name: "Test string",
                        packageName: "Test string",
                        versionCode: "Test string",
                        versionName: "Test string",
                    },
                    androidInstrumentationTest: {
                        testPackageId: "Test string",
                        testRunnerClass: "Test string",
                        testTargets: [
                            "Test string"                        ],
                        useOrchestrator: true,
                    },
                    androidRoboTest: {
                        appInitialActivity: "Test string",
                        bootstrapPackageId: "Test string",
                        bootstrapRunnerClass: "Test string",
                        maxDepth: 42,
                        maxSteps: 42,
                    },
                    androidTestLoop: {
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                iosTest: {
                    iosAppInfo: {
                        name: "Test string",
                    },
                    iosRoboTest: {
                    },
                    iosTestLoop: {
                        bundleId: "Test string",
                    },
                    iosXcTest: {
                        bundleId: "Test string",
                        xcodeVersion: "Test string",
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
            },
            state: "Test string",
            testExecutionMatrixId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Histories for a given Project. The histories are sorted by modification time in descending order. The history_id key will be used to order the history with the same modification
         * time. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed -
         * NOT_FOUND - if the History does not exist
         */
        await gapi.client.toolresults.projects.histories.list({
            filterByName: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates an Execution. The returned Execution will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to
         * project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.create({
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionDefinitions: [
                {
                }            ],
            executionId: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            specification: {
                androidTest: {
                    androidAppInfo: {
                        name: "Test string",
                        packageName: "Test string",
                        versionCode: "Test string",
                        versionName: "Test string",
                    },
                    androidInstrumentationTest: {
                        testPackageId: "Test string",
                        testRunnerClass: "Test string",
                        testTargets: [
                            "Test string"                        ],
                        useOrchestrator: true,
                    },
                    androidRoboTest: {
                        appInitialActivity: "Test string",
                        bootstrapPackageId: "Test string",
                        bootstrapRunnerClass: "Test string",
                        maxDepth: 42,
                        maxSteps: 42,
                    },
                    androidTestLoop: {
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                iosTest: {
                    iosAppInfo: {
                        name: "Test string",
                    },
                    iosRoboTest: {
                    },
                    iosTestLoop: {
                        bundleId: "Test string",
                    },
                    iosXcTest: {
                        bundleId: "Test string",
                        xcodeVersion: "Test string",
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
            },
            state: "Test string",
            testExecutionMatrixId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets an Execution. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Executions for a given History. The executions are sorted by creation_time in descending order. The execution_id key will be used to order the executions with the same
         * creation_time. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.list({
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Execution with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to
         * project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal - NOT_FOUND - if the containing History does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionDefinitions: [
                {
                }            ],
            executionId: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            specification: {
                androidTest: {
                    androidAppInfo: {
                        name: "Test string",
                        packageName: "Test string",
                        versionCode: "Test string",
                        versionName: "Test string",
                    },
                    androidInstrumentationTest: {
                        testPackageId: "Test string",
                        testRunnerClass: "Test string",
                        testTargets: [
                            "Test string"                        ],
                        useOrchestrator: true,
                    },
                    androidRoboTest: {
                        appInitialActivity: "Test string",
                        bootstrapPackageId: "Test string",
                        bootstrapRunnerClass: "Test string",
                        maxDepth: 42,
                        maxSteps: 42,
                    },
                    androidTestLoop: {
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                iosTest: {
                    iosAppInfo: {
                        name: "Test string",
                    },
                    iosRoboTest: {
                    },
                    iosTestLoop: {
                        bundleId: "Test string",
                    },
                    iosXcTest: {
                        bundleId: "Test string",
                        xcodeVersion: "Test string",
                    },
                    testTimeout: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
            },
            state: "Test string",
            testExecutionMatrixId: "Test string",
        });
        /** Retrieves a single screenshot cluster by its ID */
        await gapi.client.toolresults.projects.histories.executions.clusters.get({
            clusterId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created
         * from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the
         * cluster that has screens which have the highest matching scores.
         */
        await gapi.client.toolresults.projects.histories.executions.clusters.list({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is
         * malformed - NOT_FOUND - if the Environment does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.get({
            environmentId: "Test string",
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not
         * authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.environments.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the
         * containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.accessibilityClusters({
            locale: "Test string",
            name: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed
         * - NOT_FOUND - if the Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /** Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.getPerfMetricsSummary({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any
         * of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if
         * an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project -
         * INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too
         * large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.patch({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            requestId: "Test string",
            stepId: "Test string",
        }, {
            completionTime: {
                nanos: 42,
                seconds: "Test string",
            },
            creationTime: {
                nanos: 42,
                seconds: "Test string",
            },
            description: "Test string",
            deviceUsageDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            dimensionValue: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            hasImages: true,
            labels: [
                {
                    key: "Test string",
                    value: "Test string",
                }            ],
            multiStep: {
                multistepNumber: 42,
                primaryStep: {
                    individualOutcome: [
                        {
                            multistepNumber: 42,
                            outcomeSummary: "Test string",
                            runDuration: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            stepId: "Test string",
                        }                    ],
                    rollUp: "Test string",
                },
                primaryStepId: "Test string",
            },
            name: "Test string",
            outcome: {
                failureDetail: {
                    crashed: true,
                    deviceOutOfMemory: true,
                    failedRoboscript: true,
                    notInstalled: true,
                    otherNativeCrash: true,
                    timedOut: true,
                    unableToCrawl: true,
                },
                inconclusiveDetail: {
                    abortedByUser: true,
                    hasErrorLogs: true,
                    infrastructureFailure: true,
                },
                skippedDetail: {
                    incompatibleAppVersion: true,
                    incompatibleArchitecture: true,
                    incompatibleDevice: true,
                },
                successDetail: {
                    otherNativeCrash: true,
                },
                summary: "Test string",
            },
            runDuration: {
                nanos: 42,
                seconds: "Test string",
            },
            state: "Test string",
            stepId: "Test string",
            testExecutionStep: {
                testIssues: [
                    {
                        category: "Test string",
                        errorMessage: "Test string",
                        severity: "Test string",
                        stackTrace: {
                            exception: "Test string",
                        },
                        type: "Test string",
                        warning: {
                            typeUrl: "Test string",
                            value: "Test string",
                        },
                    }                ],
                testSuiteOverviews: [
                    {
                        elapsedTime: {
                            nanos: 42,
                            seconds: "Test string",
                        },
                        errorCount: 42,
                        failureCount: 42,
                        flakyCount: 42,
                        name: "Test string",
                        skippedCount: 42,
                        totalCount: 42,
                        xmlSource: {
                            fileUri: "Test string",
                        },
                    }                ],
                testTiming: {
                    testProcessDuration: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                },
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
            toolExecutionStep: {
                toolExecution: {
                    commandLineArguments: [
                        "Test string"                    ],
                    exitCode: {
                        number: 42,
                    },
                    toolLogs: [
                        {
                            fileUri: "Test string",
                        }                    ],
                    toolOutputs: [
                        {
                            creationTime: {
                                nanos: 42,
                                seconds: "Test string",
                            },
                            output: {
                                fileUri: "Test string",
                            },
                            testCase: {
                                className: "Test string",
                                name: "Test string",
                                testSuiteName: "Test string",
                            },
                        }                    ],
                },
            },
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT -
         * if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the
         * containing Execution does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.publishXunitXmlFiles({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            xunitXmlFiles: [
                {
                    fileUri: "Test string",
                }            ],
        });
        /**
         * Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not
         * exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfMetricsSummary.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            appStartTime: {
                fullyDrawnTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
                initialDisplayTime: {
                    nanos: 42,
                    seconds: "Test string",
                },
            },
            executionId: "Test string",
            graphicsStats: {
                buckets: [
                    {
                        frameCount: "Test string",
                        renderMillis: "Test string",
                    }                ],
                highInputLatencyCount: "Test string",
                jankyFrames: "Test string",
                missedVsyncCount: "Test string",
                p50Millis: "Test string",
                p90Millis: "Test string",
                p95Millis: "Test string",
                p99Millis: "Test string",
                slowBitmapUploadCount: "Test string",
                slowDrawCount: "Test string",
                slowUiThreadCount: "Test string",
                totalFrames: "Test string",
            },
            historyId: "Test string",
            perfEnvironment: {
                cpuInfo: {
                    cpuProcessor: "Test string",
                    cpuSpeedInGhz: 42,
                    numberOfCores: 42,
                },
                memoryInfo: {
                    memoryCapInKibibyte: "Test string",
                    memoryTotalInKibibyte: "Test string",
                },
            },
            perfMetrics: [
                "Test string"            ],
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does
         * not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.create({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        }, {
            basicPerfSampleSeries: {
                perfMetricType: "Test string",
                perfUnit: "Test string",
                sampleSeriesLabel: "Test string",
            },
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /** Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting
         * PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.list({
            executionId: "Test string",
            filter: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and
         * existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which
         * already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        }, {
            perfSamples: [
                {
                    sampleTime: {
                        nanos: 42,
                        seconds: "Test string",
                    },
                    value: 42,
                }            ],
        });
        /**
         * Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The
         * response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of
         * the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The
         * containing PerfSampleSeries does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            sampleSeriesId: "Test string",
            stepId: "Test string",
        });
        /**
         * Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the
         * user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.get({
            executionId: "Test string",
            historyId: "Test string",
            projectId: "Test string",
            stepId: "Test string",
            testCaseId: "Test string",
        });
        /**
         * Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user
         * is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.testCases.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
        /**
         * Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or
         * from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist
         */
        await gapi.client.toolresults.projects.histories.executions.steps.thumbnails.list({
            executionId: "Test string",
            historyId: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            projectId: "Test string",
            stepId: "Test string",
        });
    }
});
