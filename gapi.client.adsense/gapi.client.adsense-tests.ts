/* This is stub file for gapi.client.adsense definition tests */
/* IMPORTANT.
* This file was automatically generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
* In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
**/
gapi.load('client', () => {
    /** now we can use gapi.client */
    gapi.client.load('adsense', 'v1.4', () => {
        /** now we can use gapi.client.adsense */

        /** don't forget to authenticate your client before sending any request to resources: */
        /** declare client_id registered in Google Developers Console */
        const client_id = '<<PUT YOUR CLIENT ID HERE>>';
        const scope = [
            /** View and manage your AdSense data */
            'https://www.googleapis.com/auth/adsense',
            /** View your AdSense data */
            'https://www.googleapis.com/auth/adsense.readonly',
        ];
        const immediate = false;
        gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
            if (authResult && !authResult.error) {
                /** handle successful authorization */
                run();
            } else {
                /** handle authorization error */
            }
        });
    });

    async function run() {
        /** Get information about the selected AdSense account. */
        await gapi.client.adsense.accounts.get({
            accountId: "Test string",
            tree: true,
        });
        /** Get Auto ad code for a given ad client. */
        await gapi.client.adsense.accounts.adclients.getAdCode({
            accountId: "Test string",
            adClientId: "Test string",
        });
        /** List all ad clients in the specified account. */
        await gapi.client.adsense.accounts.adclients.list({
            accountId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** Gets the specified ad unit in the specified ad client for the specified account. */
        await gapi.client.adsense.accounts.adunits.get({
            accountId: "Test string",
            adClientId: "Test string",
            adUnitId: "Test string",
        });
        /** List all custom channels which the specified ad unit belongs to. */
        await gapi.client.adsense.accounts.adunits.customchannels.list({
            accountId: "Test string",
            adClientId: "Test string",
            adUnitId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** Get ad code for the specified ad unit. */
        await gapi.client.adsense.accounts.adunits.getAdCode({
            accountId: "Test string",
            adClientId: "Test string",
            adUnitId: "Test string",
        });
        /** List all custom channels which the specified ad unit belongs to. */
        await gapi.client.adsense.accounts.adunits.customchannels.list({
            accountId: "Test string",
            adClientId: "Test string",
            adUnitId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all ad units in the specified ad client for the specified account. */
        await gapi.client.adsense.accounts.adunits.list({
            accountId: "Test string",
            adClientId: "Test string",
            includeInactive: true,
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all custom channels which the specified ad unit belongs to. */
        await gapi.client.adsense.accounts.adunits.customchannels.list({
            accountId: "Test string",
            adClientId: "Test string",
            adUnitId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** Dismiss (delete) the specified alert from the specified publisher AdSense account. */
        await gapi.client.adsense.accounts.alerts.delete({
            accountId: "Test string",
            alertId: "Test string",
        });
        /** List the alerts for the specified AdSense account. */
        await gapi.client.adsense.accounts.alerts.list({
            accountId: "Test string",
            locale: "Test string",
        });
        /** Get the specified custom channel from the specified ad client for the specified account. */
        await gapi.client.adsense.accounts.customchannels.get({
            accountId: "Test string",
            adClientId: "Test string",
            customChannelId: "Test string",
        });
        /** List all ad units in the specified custom channel. */
        await gapi.client.adsense.accounts.customchannels.adunits.list({
            accountId: "Test string",
            adClientId: "Test string",
            customChannelId: "Test string",
            includeInactive: true,
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all custom channels in the specified ad client for the specified account. */
        await gapi.client.adsense.accounts.customchannels.list({
            accountId: "Test string",
            adClientId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all ad units in the specified custom channel. */
        await gapi.client.adsense.accounts.customchannels.adunits.list({
            accountId: "Test string",
            adClientId: "Test string",
            customChannelId: "Test string",
            includeInactive: true,
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List the payments for the specified AdSense account. */
        await gapi.client.adsense.accounts.payments.list({
            accountId: "Test string",
        });
        /** Generate an AdSense report based on the report request sent in the query parameters. Returns the result as JSON; to retrieve output in CSV format specify "alt=csv" as a query parameter. */
        await gapi.client.adsense.accounts.reports.generate({
            accountId: "Test string",
            currency: "Test string",
            dimension: "Test string",
            endDate: "Test string",
            filter: "Test string",
            locale: "Test string",
            maxResults: 42,
            metric: "Test string",
            sort: "Test string",
            startDate: "Test string",
            startIndex: 42,
            useTimezoneReporting: true,
        });
        /** Generate an AdSense report based on the saved report ID sent in the query parameters. */
        await gapi.client.adsense.accounts.reports.saved.generate({
            accountId: "Test string",
            locale: "Test string",
            maxResults: 42,
            savedReportId: "Test string",
            startIndex: 42,
        });
        /** List all saved reports in the specified AdSense account. */
        await gapi.client.adsense.accounts.reports.saved.list({
            accountId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List a specific saved ad style for the specified account. */
        await gapi.client.adsense.accounts.savedadstyles.get({
            accountId: "Test string",
            savedAdStyleId: "Test string",
        });
        /** List all saved ad styles in the specified account. */
        await gapi.client.adsense.accounts.savedadstyles.list({
            accountId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all URL channels in the specified ad client for the specified account. */
        await gapi.client.adsense.accounts.urlchannels.list({
            accountId: "Test string",
            adClientId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all accounts available to this AdSense account. */
        await gapi.client.adsense.accounts.list({
            maxResults: 42,
            pageToken: "Test string",
        });
        /** Get Auto ad code for a given ad client. */
        await gapi.client.adsense.accounts.adclients.getAdCode({
            accountId: "Test string",
            adClientId: "Test string",
        });
        /** List all ad clients in the specified account. */
        await gapi.client.adsense.accounts.adclients.list({
            accountId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** Gets the specified ad unit in the specified ad client for the specified account. */
        await gapi.client.adsense.accounts.adunits.get({
            accountId: "Test string",
            adClientId: "Test string",
            adUnitId: "Test string",
        });
        /** List all custom channels which the specified ad unit belongs to. */
        await gapi.client.adsense.accounts.adunits.customchannels.list({
            accountId: "Test string",
            adClientId: "Test string",
            adUnitId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** Get ad code for the specified ad unit. */
        await gapi.client.adsense.accounts.adunits.getAdCode({
            accountId: "Test string",
            adClientId: "Test string",
            adUnitId: "Test string",
        });
        /** List all custom channels which the specified ad unit belongs to. */
        await gapi.client.adsense.accounts.adunits.customchannels.list({
            accountId: "Test string",
            adClientId: "Test string",
            adUnitId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all ad units in the specified ad client for the specified account. */
        await gapi.client.adsense.accounts.adunits.list({
            accountId: "Test string",
            adClientId: "Test string",
            includeInactive: true,
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all custom channels which the specified ad unit belongs to. */
        await gapi.client.adsense.accounts.adunits.customchannels.list({
            accountId: "Test string",
            adClientId: "Test string",
            adUnitId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** Dismiss (delete) the specified alert from the specified publisher AdSense account. */
        await gapi.client.adsense.accounts.alerts.delete({
            accountId: "Test string",
            alertId: "Test string",
        });
        /** List the alerts for the specified AdSense account. */
        await gapi.client.adsense.accounts.alerts.list({
            accountId: "Test string",
            locale: "Test string",
        });
        /** Get the specified custom channel from the specified ad client for the specified account. */
        await gapi.client.adsense.accounts.customchannels.get({
            accountId: "Test string",
            adClientId: "Test string",
            customChannelId: "Test string",
        });
        /** List all ad units in the specified custom channel. */
        await gapi.client.adsense.accounts.customchannels.adunits.list({
            accountId: "Test string",
            adClientId: "Test string",
            customChannelId: "Test string",
            includeInactive: true,
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all custom channels in the specified ad client for the specified account. */
        await gapi.client.adsense.accounts.customchannels.list({
            accountId: "Test string",
            adClientId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all ad units in the specified custom channel. */
        await gapi.client.adsense.accounts.customchannels.adunits.list({
            accountId: "Test string",
            adClientId: "Test string",
            customChannelId: "Test string",
            includeInactive: true,
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List the payments for the specified AdSense account. */
        await gapi.client.adsense.accounts.payments.list({
            accountId: "Test string",
        });
        /** Generate an AdSense report based on the report request sent in the query parameters. Returns the result as JSON; to retrieve output in CSV format specify "alt=csv" as a query parameter. */
        await gapi.client.adsense.accounts.reports.generate({
            accountId: "Test string",
            currency: "Test string",
            dimension: "Test string",
            endDate: "Test string",
            filter: "Test string",
            locale: "Test string",
            maxResults: 42,
            metric: "Test string",
            sort: "Test string",
            startDate: "Test string",
            startIndex: 42,
            useTimezoneReporting: true,
        });
        /** Generate an AdSense report based on the saved report ID sent in the query parameters. */
        await gapi.client.adsense.accounts.reports.saved.generate({
            accountId: "Test string",
            locale: "Test string",
            maxResults: 42,
            savedReportId: "Test string",
            startIndex: 42,
        });
        /** List all saved reports in the specified AdSense account. */
        await gapi.client.adsense.accounts.reports.saved.list({
            accountId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List a specific saved ad style for the specified account. */
        await gapi.client.adsense.accounts.savedadstyles.get({
            accountId: "Test string",
            savedAdStyleId: "Test string",
        });
        /** List all saved ad styles in the specified account. */
        await gapi.client.adsense.accounts.savedadstyles.list({
            accountId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all URL channels in the specified ad client for the specified account. */
        await gapi.client.adsense.accounts.urlchannels.list({
            accountId: "Test string",
            adClientId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all ad clients in this AdSense account. */
        await gapi.client.adsense.adclients.list({
            maxResults: 42,
            pageToken: "Test string",
        });
        /** Gets the specified ad unit in the specified ad client. */
        await gapi.client.adsense.adunits.get({
            adClientId: "Test string",
            adUnitId: "Test string",
        });
        /** List all custom channels which the specified ad unit belongs to. */
        await gapi.client.adsense.adunits.customchannels.list({
            adClientId: "Test string",
            adUnitId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** Get ad code for the specified ad unit. */
        await gapi.client.adsense.adunits.getAdCode({
            adClientId: "Test string",
            adUnitId: "Test string",
        });
        /** List all custom channels which the specified ad unit belongs to. */
        await gapi.client.adsense.adunits.customchannels.list({
            adClientId: "Test string",
            adUnitId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all ad units in the specified ad client for this AdSense account. */
        await gapi.client.adsense.adunits.list({
            adClientId: "Test string",
            includeInactive: true,
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all custom channels which the specified ad unit belongs to. */
        await gapi.client.adsense.adunits.customchannels.list({
            adClientId: "Test string",
            adUnitId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** Dismiss (delete) the specified alert from the publisher's AdSense account. */
        await gapi.client.adsense.alerts.delete({
            alertId: "Test string",
        });
        /** List the alerts for this AdSense account. */
        await gapi.client.adsense.alerts.list({
            locale: "Test string",
        });
        /** Get the specified custom channel from the specified ad client. */
        await gapi.client.adsense.customchannels.get({
            adClientId: "Test string",
            customChannelId: "Test string",
        });
        /** List all ad units in the specified custom channel. */
        await gapi.client.adsense.customchannels.adunits.list({
            adClientId: "Test string",
            customChannelId: "Test string",
            includeInactive: true,
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all custom channels in the specified ad client for this AdSense account. */
        await gapi.client.adsense.customchannels.list({
            adClientId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all ad units in the specified custom channel. */
        await gapi.client.adsense.customchannels.adunits.list({
            adClientId: "Test string",
            customChannelId: "Test string",
            includeInactive: true,
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List the payments for this AdSense account. */
        await gapi.client.adsense.payments.list();
        /** Generate an AdSense report based on the report request sent in the query parameters. Returns the result as JSON; to retrieve output in CSV format specify "alt=csv" as a query parameter. */
        await gapi.client.adsense.reports.generate({
            accountId: "Test string",
            currency: "Test string",
            dimension: "Test string",
            endDate: "Test string",
            filter: "Test string",
            locale: "Test string",
            maxResults: 42,
            metric: "Test string",
            sort: "Test string",
            startDate: "Test string",
            startIndex: 42,
            useTimezoneReporting: true,
        });
        /** Generate an AdSense report based on the saved report ID sent in the query parameters. */
        await gapi.client.adsense.reports.saved.generate({
            locale: "Test string",
            maxResults: 42,
            savedReportId: "Test string",
            startIndex: 42,
        });
        /** List all saved reports in this AdSense account. */
        await gapi.client.adsense.reports.saved.list({
            maxResults: 42,
            pageToken: "Test string",
        });
        /** Get a specific saved ad style from the user's account. */
        await gapi.client.adsense.savedadstyles.get({
            savedAdStyleId: "Test string",
        });
        /** List all saved ad styles in the user's account. */
        await gapi.client.adsense.savedadstyles.list({
            maxResults: 42,
            pageToken: "Test string",
        });
        /** List all URL channels in the specified ad client for this AdSense account. */
        await gapi.client.adsense.urlchannels.list({
            adClientId: "Test string",
            maxResults: 42,
            pageToken: "Test string",
        });
    }
});
