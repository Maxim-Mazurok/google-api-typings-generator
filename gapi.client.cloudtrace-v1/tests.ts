/* This is stub file for gapi.client.cloudtrace-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20250815

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://cloudtrace.googleapis.com/$discovery/rest?version=v1',
  );
  /** now we can use gapi.client.cloudtrace */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
    'https://www.googleapis.com/auth/cloud-platform',
    /** Write Trace data for a project or application */
    'https://www.googleapis.com/auth/trace.append',
    /** Read Trace data for a project or application */
    'https://www.googleapis.com/auth/trace.readonly',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Sends trace spans to Cloud Trace. Spans cannot be updated. If the trace ID and span ID already exist, an additional copy of the span will be stored. */
    await gapi.client.cloudtrace.projects.patchTraces(
      {
        projectId: 'Test string',
      },
      {
        traces: [
          {
            projectId: 'Test string',
            spans: [
              {
                endTime: 'Test string',
                kind: 'Test string',
                labels: {
                  A: 'Test string',
                },
                name: 'Test string',
                parentSpanId: 'Test string',
                spanId: 'Test string',
                startTime: 'Test string',
              },
            ],
            traceId: 'Test string',
          },
        ],
      },
    );
    /** Gets a single trace by its ID. */
    await gapi.client.cloudtrace.projects.traces.get({
      projectId: 'Test string',
      traceId: 'Test string',
    });
    /** Returns a list of traces that match the specified filter conditions. */
    await gapi.client.cloudtrace.projects.traces.list({
      endTime: 'Test string',
      filter: 'Test string',
      orderBy: 'Test string',
      pageSize: 42,
      pageToken: 'Test string',
      projectId: 'Test string',
      startTime: 'Test string',
      view: 'Test string',
    });
  }
});
