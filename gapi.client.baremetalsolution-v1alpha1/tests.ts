/* This is stub file for gapi.client.baremetalsolution-v1alpha1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20220731

gapi.load('client', async () => {
    /** now we can use gapi.client */

    await gapi.client.load('https://baremetalsolution.googleapis.com/$discovery/rest?version=v1alpha1');
    /** now we can use gapi.client.baremetalsolution */

    /** don't forget to authenticate your client before sending any request to resources: */
    /** declare client_id registered in Google Developers Console */
    const client_id = '<<PUT YOUR CLIENT ID HERE>>';
    const scope = [
        /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
        'https://www.googleapis.com/auth/cloud-platform',
    ];
    const immediate = false;
    gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
        if (authResult && !authResult.error) {
            /** handle successful authorization */
            run();
        } else {
            /** handle authorization error */
        }
    });

    async function run() {
        /** Submit a provisiong configuration for a given project. */
        await gapi.client.baremetalsolution.projects.locations.submitProvisioningConfig({
            location: "Test string",
            project: "Test string",
        }, {
            email: "Test string",
            provisioningConfig: {
                instances: [
                    {
                        clientNetwork: {
                            address: "Test string",
                            existingNetworkId: "Test string",
                            networkId: "Test string",
                        },
                        hyperthreading: true,
                        id: "Test string",
                        instanceType: "Test string",
                        location: "Test string",
                        osImage: "Test string",
                        privateNetwork: {
                            address: "Test string",
                            existingNetworkId: "Test string",
                            networkId: "Test string",
                        },
                        userNote: "Test string",
                    }
                ],
                networks: [
                    {
                        bandwidth: "Test string",
                        cidr: "Test string",
                        id: "Test string",
                        location: "Test string",
                        serviceCidr: "Test string",
                        type: "Test string",
                        userNote: "Test string",
                        vlanAttachments: [
                            {
                                id: "Test string",
                                pairingKey: "Test string",
                            }
                        ],
                    }
                ],
                ticketId: "Test string",
                volumes: [
                    {
                        id: "Test string",
                        location: "Test string",
                        lunRanges: [
                            {
                                quantity: 42,
                                sizeGb: 42,
                            }
                        ],
                        machineIds: [
                            "Test string"
                        ],
                        nfsExports: [
                            {
                                allowDev: true,
                                allowSuid: true,
                                cidr: "Test string",
                                machineId: "Test string",
                                networkId: "Test string",
                                noRootSquash: true,
                                permissions: "Test string",
                            }
                        ],
                        protocol: "Test string",
                        sizeGb: 42,
                        snapshotsEnabled: true,
                        type: "Test string",
                        userNote: "Test string",
                    }
                ],
            },
        });
        /** List the budget details to provision resources on a given project. */
        await gapi.client.baremetalsolution.projects.provisioningQuotas.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
    }
});
