/* Type definitions for non-npm package Policy Analyzer API v1beta1 0.0 */
// Project: https://www.google.com
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://policyanalyzer.googleapis.com/$discovery/rest?version=v1beta1
// Revision: 20250615

/// <reference types="gapi.client" />

declare namespace gapi.client {
  /** Load Policy Analyzer API v1beta1 */
  function load(
    urlOrObject: 'https://policyanalyzer.googleapis.com/$discovery/rest?version=v1beta1',
  ): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(name: 'policyanalyzer', version: 'v1beta1'): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(
    name: 'policyanalyzer',
    version: 'v1beta1',
    callback: () => any,
  ): void;

  namespace policyanalyzer {
    interface GoogleCloudPolicyanalyzerV1beta1Activity {
      /** A struct of custom fields to explain the activity. */
      activity?: {[P in string]: any};
      /** The type of the activity. */
      activityType?: string;
      /** The full resource name that identifies the resource. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. */
      fullResourceName?: string;
      /** The data observation period to build the activity. */
      observationPeriod?: GoogleCloudPolicyanalyzerV1beta1ObservationPeriod;
    }
    interface GoogleCloudPolicyanalyzerV1beta1ObservationPeriod {
      /** The observation end time. */
      endTime?: string;
      /** The observation start time. */
      startTime?: string;
    }
    interface GoogleCloudPolicyanalyzerV1beta1QueryActivityResponse {
      /** The set of activities that match the filter included in the request. */
      activities?: GoogleCloudPolicyanalyzerV1beta1Activity[];
      /** If there might be more results than those appearing in this response, then `nextPageToken` is included. To get the next set of results, call this method again using the value of `nextPageToken` as `pageToken`. */
      nextPageToken?: string;
    }
    interface ActivitiesResource {
      /** Queries policy activities on GCP resources. */
      query(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. Optional filter expression to restrict the activities returned. Supported filters are: - service_account_last_authn.full_resource_name {=} - service_account_key_last_authn.full_resource_name {=} */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of results to return from this request. Max limit is 1000. Non-positive values are ignored. The presence of `nextPageToken` in the response indicates that more results might be available. */
        pageSize?: number;
        /** Optional. If present, then retrieve the next batch of results from the preceding call to this method. `pageToken` must be the value of `nextPageToken` from the previous response. The values of other method parameters should be identical to those in the previous call. */
        pageToken?: string;
        /** Required. The container resource on which to execute the request. Acceptable formats: `projects/[PROJECT_ID|PROJECT_NUMBER]/locations/[LOCATION]/activityTypes/[ACTIVITY_TYPE]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudPolicyanalyzerV1beta1QueryActivityResponse>;
    }
    interface ActivityTypesResource {
      activities: ActivitiesResource;
    }
    interface LocationsResource {
      activityTypes: ActivityTypesResource;
    }
    interface FoldersResource {
      locations: LocationsResource;
    }
    interface ActivitiesResource {
      /** Queries policy activities on GCP resources. */
      query(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. Optional filter expression to restrict the activities returned. Supported filters are: - service_account_last_authn.full_resource_name {=} - service_account_key_last_authn.full_resource_name {=} */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of results to return from this request. Max limit is 1000. Non-positive values are ignored. The presence of `nextPageToken` in the response indicates that more results might be available. */
        pageSize?: number;
        /** Optional. If present, then retrieve the next batch of results from the preceding call to this method. `pageToken` must be the value of `nextPageToken` from the previous response. The values of other method parameters should be identical to those in the previous call. */
        pageToken?: string;
        /** Required. The container resource on which to execute the request. Acceptable formats: `projects/[PROJECT_ID|PROJECT_NUMBER]/locations/[LOCATION]/activityTypes/[ACTIVITY_TYPE]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudPolicyanalyzerV1beta1QueryActivityResponse>;
    }
    interface ActivityTypesResource {
      activities: ActivitiesResource;
    }
    interface LocationsResource {
      activityTypes: ActivityTypesResource;
    }
    interface OrganizationsResource {
      locations: LocationsResource;
    }
    interface ActivitiesResource {
      /** Queries policy activities on GCP resources. */
      query(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. Optional filter expression to restrict the activities returned. Supported filters are: - service_account_last_authn.full_resource_name {=} - service_account_key_last_authn.full_resource_name {=} */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Optional. The maximum number of results to return from this request. Max limit is 1000. Non-positive values are ignored. The presence of `nextPageToken` in the response indicates that more results might be available. */
        pageSize?: number;
        /** Optional. If present, then retrieve the next batch of results from the preceding call to this method. `pageToken` must be the value of `nextPageToken` from the previous response. The values of other method parameters should be identical to those in the previous call. */
        pageToken?: string;
        /** Required. The container resource on which to execute the request. Acceptable formats: `projects/[PROJECT_ID|PROJECT_NUMBER]/locations/[LOCATION]/activityTypes/[ACTIVITY_TYPE]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ */
        parent: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<GoogleCloudPolicyanalyzerV1beta1QueryActivityResponse>;
    }
    interface ActivityTypesResource {
      activities: ActivitiesResource;
    }
    interface LocationsResource {
      activityTypes: ActivityTypesResource;
    }
    interface ProjectsResource {
      locations: LocationsResource;
    }

    const folders: FoldersResource;

    const organizations: OrganizationsResource;

    const projects: ProjectsResource;
  }
}
