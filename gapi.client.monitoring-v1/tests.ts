/* This is stub file for gapi.client.monitoring-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20240513

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://monitoring.googleapis.com/$discovery/rest?version=v1'
  );
  /** now we can use gapi.client.monitoring */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
    'https://www.googleapis.com/auth/cloud-platform',
    /** View and write monitoring data for all of your Google and third-party Cloud and API projects */
    'https://www.googleapis.com/auth/monitoring',
    /** View monitoring data for all of your Google Cloud and third-party projects */
    'https://www.googleapis.com/auth/monitoring.read',
    /** Publish metric data to your Google Cloud projects */
    'https://www.googleapis.com/auth/monitoring.write',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Returns a specific Metrics Scope, including the list of projects monitored by the specified Metrics Scope. */
    await gapi.client.monitoring.locations.global.metricsScopes.get({
      name: 'Test string',
    });
    /** Returns a list of every Metrics Scope that a specific MonitoredProject has been added to. The metrics scope representing the specified monitored project will always be the first entry in the response. */
    await gapi.client.monitoring.locations.global.metricsScopes.listMetricsScopesByMonitoredProject(
      {
        monitoredResourceContainer: 'Test string',
      }
    );
    /** Adds a MonitoredProject with the given project ID to the specified Metrics Scope. */
    await gapi.client.monitoring.locations.global.metricsScopes.projects.create(
      {
        parent: 'Test string',
      },
      {
        createTime: 'Test string',
        name: 'Test string',
      }
    );
    /** Deletes a MonitoredProject from the specified Metrics Scope. */
    await gapi.client.monitoring.locations.global.metricsScopes.projects.delete(
      {
        name: 'Test string',
      }
    );
    /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
    await gapi.client.monitoring.operations.get({
      name: 'Test string',
    });
    /** Creates a new custom dashboard. For examples on how you can use this API to create dashboards, see Managing dashboards by API (https://cloud.google.com/monitoring/dashboards/api-dashboard). This method requires the monitoring.dashboards.create permission on the specified project. For more information about permissions, see Cloud Identity and Access Management (https://cloud.google.com/iam). */
    await gapi.client.monitoring.projects.dashboards.create(
      {
        parent: 'Test string',
        validateOnly: true,
      },
      {
        annotations: {
          defaultResourceNames: ['Test string'],
          eventAnnotations: [
            {
              displayName: 'Test string',
              enabled: true,
              eventType: 'Test string',
              filter: 'Test string',
              resourceNames: ['Test string'],
            },
          ],
        },
        columnLayout: {
          columns: [
            {
              weight: 'Test string',
              widgets: [
                {
                  alertChart: {
                    name: 'Test string',
                  },
                  blank: {},
                  collapsibleGroup: {
                    collapsed: true,
                  },
                  errorReportingPanel: {
                    projectNames: ['Test string'],
                    services: ['Test string'],
                    versions: ['Test string'],
                  },
                  id: 'Test string',
                  incidentList: {
                    monitoredResources: [
                      {
                        labels: {
                          A: 'Test string',
                        },
                        type: 'Test string',
                      },
                    ],
                    policyNames: ['Test string'],
                  },
                  logsPanel: {
                    filter: 'Test string',
                    resourceNames: ['Test string'],
                  },
                  pieChart: {
                    chartType: 'Test string',
                    dataSets: [
                      {
                        dimensions: [
                          {
                            column: 'Test string',
                            columnType: 'Test string',
                            floatBinSize: 42,
                            maxBinCount: 42,
                            numericBinSize: 42,
                            sortColumn: 'Test string',
                            sortOrder: 'Test string',
                            timeBinSize: 'Test string',
                          },
                        ],
                        measures: [
                          {
                            aggregationFunction: {
                              parameters: [
                                {
                                  doubleValue: 42,
                                  intValue: 'Test string',
                                },
                              ],
                              type: 'Test string',
                            },
                            column: 'Test string',
                          },
                        ],
                        minAlignmentPeriod: 'Test string',
                        sliceNameTemplate: 'Test string',
                        timeSeriesQuery: {
                          opsAnalyticsQuery: {
                            sql: 'Test string',
                          },
                          outputFullDuration: true,
                          prometheusQuery: 'Test string',
                          timeSeriesFilter: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesFilterRatio: {
                            denominator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            numerator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesQueryLanguage: 'Test string',
                          unitOverride: 'Test string',
                        },
                      },
                    ],
                    showLabels: true,
                  },
                  scorecard: {
                    blankView: {},
                    gaugeView: {
                      lowerBound: 42,
                      upperBound: 42,
                    },
                    sparkChartView: {
                      minAlignmentPeriod: 'Test string',
                      sparkChartType: 'Test string',
                    },
                    thresholds: [
                      {
                        color: 'Test string',
                        direction: 'Test string',
                        label: 'Test string',
                        targetAxis: 'Test string',
                        value: 42,
                      },
                    ],
                    timeSeriesQuery: {
                      opsAnalyticsQuery: {
                        sql: 'Test string',
                      },
                      outputFullDuration: true,
                      prometheusQuery: 'Test string',
                      timeSeriesFilter: {
                        aggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        filter: 'Test string',
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesFilterRatio: {
                        denominator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        numerator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesQueryLanguage: 'Test string',
                      unitOverride: 'Test string',
                    },
                  },
                  sectionHeader: {
                    dividerBelow: true,
                    subtitle: 'Test string',
                  },
                  singleViewGroup: {},
                  text: {
                    content: 'Test string',
                    format: 'Test string',
                    style: {
                      backgroundColor: 'Test string',
                      fontSize: 'Test string',
                      horizontalAlignment: 'Test string',
                      padding: 'Test string',
                      pointerLocation: 'Test string',
                      textColor: 'Test string',
                      verticalAlignment: 'Test string',
                    },
                  },
                  timeSeriesTable: {
                    columnSettings: [
                      {
                        column: 'Test string',
                        visible: true,
                      },
                    ],
                    dataSets: [
                      {
                        minAlignmentPeriod: 'Test string',
                        tableDisplayOptions: {
                          shownColumns: ['Test string'],
                        },
                        tableTemplate: 'Test string',
                        timeSeriesQuery: {
                          opsAnalyticsQuery: {
                            sql: 'Test string',
                          },
                          outputFullDuration: true,
                          prometheusQuery: 'Test string',
                          timeSeriesFilter: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesFilterRatio: {
                            denominator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            numerator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesQueryLanguage: 'Test string',
                          unitOverride: 'Test string',
                        },
                      },
                    ],
                    metricVisualization: 'Test string',
                  },
                  title: 'Test string',
                  xyChart: {
                    chartOptions: {
                      displayHorizontal: true,
                      mode: 'Test string',
                    },
                    dataSets: [
                      {
                        breakdowns: [
                          {
                            aggregationFunction: {
                              parameters: [
                                {
                                  doubleValue: 42,
                                  intValue: 'Test string',
                                },
                              ],
                              type: 'Test string',
                            },
                            column: 'Test string',
                            limit: 42,
                            sortOrder: 'Test string',
                          },
                        ],
                        dimensions: [
                          {
                            column: 'Test string',
                            columnType: 'Test string',
                            floatBinSize: 42,
                            maxBinCount: 42,
                            numericBinSize: 42,
                            sortColumn: 'Test string',
                            sortOrder: 'Test string',
                            timeBinSize: 'Test string',
                          },
                        ],
                        legendTemplate: 'Test string',
                        measures: [
                          {
                            aggregationFunction: {
                              parameters: [
                                {
                                  doubleValue: 42,
                                  intValue: 'Test string',
                                },
                              ],
                              type: 'Test string',
                            },
                            column: 'Test string',
                          },
                        ],
                        minAlignmentPeriod: 'Test string',
                        plotType: 'Test string',
                        targetAxis: 'Test string',
                        timeSeriesQuery: {
                          opsAnalyticsQuery: {
                            sql: 'Test string',
                          },
                          outputFullDuration: true,
                          prometheusQuery: 'Test string',
                          timeSeriesFilter: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesFilterRatio: {
                            denominator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            numerator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesQueryLanguage: 'Test string',
                          unitOverride: 'Test string',
                        },
                      },
                    ],
                    thresholds: [
                      {
                        color: 'Test string',
                        direction: 'Test string',
                        label: 'Test string',
                        targetAxis: 'Test string',
                        value: 42,
                      },
                    ],
                    timeshiftDuration: 'Test string',
                    xAxis: {
                      label: 'Test string',
                      scale: 'Test string',
                    },
                    y2Axis: {
                      label: 'Test string',
                      scale: 'Test string',
                    },
                    yAxis: {
                      label: 'Test string',
                      scale: 'Test string',
                    },
                  },
                },
              ],
            },
          ],
        },
        dashboardFilters: [
          {
            applyToNewWidgets: true,
            filterType: 'Test string',
            labelKey: 'Test string',
            stringValue: 'Test string',
            templateVariable: 'Test string',
          },
        ],
        displayName: 'Test string',
        etag: 'Test string',
        gridLayout: {
          columns: 'Test string',
          widgets: [
            {
              alertChart: {
                name: 'Test string',
              },
              blank: {},
              collapsibleGroup: {
                collapsed: true,
              },
              errorReportingPanel: {
                projectNames: ['Test string'],
                services: ['Test string'],
                versions: ['Test string'],
              },
              id: 'Test string',
              incidentList: {
                monitoredResources: [
                  {
                    labels: {
                      A: 'Test string',
                    },
                    type: 'Test string',
                  },
                ],
                policyNames: ['Test string'],
              },
              logsPanel: {
                filter: 'Test string',
                resourceNames: ['Test string'],
              },
              pieChart: {
                chartType: 'Test string',
                dataSets: [
                  {
                    dimensions: [
                      {
                        column: 'Test string',
                        columnType: 'Test string',
                        floatBinSize: 42,
                        maxBinCount: 42,
                        numericBinSize: 42,
                        sortColumn: 'Test string',
                        sortOrder: 'Test string',
                        timeBinSize: 'Test string',
                      },
                    ],
                    measures: [
                      {
                        aggregationFunction: {
                          parameters: [
                            {
                              doubleValue: 42,
                              intValue: 'Test string',
                            },
                          ],
                          type: 'Test string',
                        },
                        column: 'Test string',
                      },
                    ],
                    minAlignmentPeriod: 'Test string',
                    sliceNameTemplate: 'Test string',
                    timeSeriesQuery: {
                      opsAnalyticsQuery: {
                        sql: 'Test string',
                      },
                      outputFullDuration: true,
                      prometheusQuery: 'Test string',
                      timeSeriesFilter: {
                        aggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        filter: 'Test string',
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesFilterRatio: {
                        denominator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        numerator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesQueryLanguage: 'Test string',
                      unitOverride: 'Test string',
                    },
                  },
                ],
                showLabels: true,
              },
              scorecard: {
                blankView: {},
                gaugeView: {
                  lowerBound: 42,
                  upperBound: 42,
                },
                sparkChartView: {
                  minAlignmentPeriod: 'Test string',
                  sparkChartType: 'Test string',
                },
                thresholds: [
                  {
                    color: 'Test string',
                    direction: 'Test string',
                    label: 'Test string',
                    targetAxis: 'Test string',
                    value: 42,
                  },
                ],
                timeSeriesQuery: {
                  opsAnalyticsQuery: {
                    sql: 'Test string',
                  },
                  outputFullDuration: true,
                  prometheusQuery: 'Test string',
                  timeSeriesFilter: {
                    aggregation: {
                      alignmentPeriod: 'Test string',
                      crossSeriesReducer: 'Test string',
                      groupByFields: ['Test string'],
                      perSeriesAligner: 'Test string',
                    },
                    filter: 'Test string',
                    pickTimeSeriesFilter: {
                      direction: 'Test string',
                      interval: {
                        endTime: 'Test string',
                        startTime: 'Test string',
                      },
                      numTimeSeries: 42,
                      rankingMethod: 'Test string',
                    },
                    secondaryAggregation: {
                      alignmentPeriod: 'Test string',
                      crossSeriesReducer: 'Test string',
                      groupByFields: ['Test string'],
                      perSeriesAligner: 'Test string',
                    },
                    statisticalTimeSeriesFilter: {
                      numTimeSeries: 42,
                      rankingMethod: 'Test string',
                    },
                  },
                  timeSeriesFilterRatio: {
                    denominator: {
                      aggregation: {
                        alignmentPeriod: 'Test string',
                        crossSeriesReducer: 'Test string',
                        groupByFields: ['Test string'],
                        perSeriesAligner: 'Test string',
                      },
                      filter: 'Test string',
                    },
                    numerator: {
                      aggregation: {
                        alignmentPeriod: 'Test string',
                        crossSeriesReducer: 'Test string',
                        groupByFields: ['Test string'],
                        perSeriesAligner: 'Test string',
                      },
                      filter: 'Test string',
                    },
                    pickTimeSeriesFilter: {
                      direction: 'Test string',
                      interval: {
                        endTime: 'Test string',
                        startTime: 'Test string',
                      },
                      numTimeSeries: 42,
                      rankingMethod: 'Test string',
                    },
                    secondaryAggregation: {
                      alignmentPeriod: 'Test string',
                      crossSeriesReducer: 'Test string',
                      groupByFields: ['Test string'],
                      perSeriesAligner: 'Test string',
                    },
                    statisticalTimeSeriesFilter: {
                      numTimeSeries: 42,
                      rankingMethod: 'Test string',
                    },
                  },
                  timeSeriesQueryLanguage: 'Test string',
                  unitOverride: 'Test string',
                },
              },
              sectionHeader: {
                dividerBelow: true,
                subtitle: 'Test string',
              },
              singleViewGroup: {},
              text: {
                content: 'Test string',
                format: 'Test string',
                style: {
                  backgroundColor: 'Test string',
                  fontSize: 'Test string',
                  horizontalAlignment: 'Test string',
                  padding: 'Test string',
                  pointerLocation: 'Test string',
                  textColor: 'Test string',
                  verticalAlignment: 'Test string',
                },
              },
              timeSeriesTable: {
                columnSettings: [
                  {
                    column: 'Test string',
                    visible: true,
                  },
                ],
                dataSets: [
                  {
                    minAlignmentPeriod: 'Test string',
                    tableDisplayOptions: {
                      shownColumns: ['Test string'],
                    },
                    tableTemplate: 'Test string',
                    timeSeriesQuery: {
                      opsAnalyticsQuery: {
                        sql: 'Test string',
                      },
                      outputFullDuration: true,
                      prometheusQuery: 'Test string',
                      timeSeriesFilter: {
                        aggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        filter: 'Test string',
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesFilterRatio: {
                        denominator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        numerator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesQueryLanguage: 'Test string',
                      unitOverride: 'Test string',
                    },
                  },
                ],
                metricVisualization: 'Test string',
              },
              title: 'Test string',
              xyChart: {
                chartOptions: {
                  displayHorizontal: true,
                  mode: 'Test string',
                },
                dataSets: [
                  {
                    breakdowns: [
                      {
                        aggregationFunction: {
                          parameters: [
                            {
                              doubleValue: 42,
                              intValue: 'Test string',
                            },
                          ],
                          type: 'Test string',
                        },
                        column: 'Test string',
                        limit: 42,
                        sortOrder: 'Test string',
                      },
                    ],
                    dimensions: [
                      {
                        column: 'Test string',
                        columnType: 'Test string',
                        floatBinSize: 42,
                        maxBinCount: 42,
                        numericBinSize: 42,
                        sortColumn: 'Test string',
                        sortOrder: 'Test string',
                        timeBinSize: 'Test string',
                      },
                    ],
                    legendTemplate: 'Test string',
                    measures: [
                      {
                        aggregationFunction: {
                          parameters: [
                            {
                              doubleValue: 42,
                              intValue: 'Test string',
                            },
                          ],
                          type: 'Test string',
                        },
                        column: 'Test string',
                      },
                    ],
                    minAlignmentPeriod: 'Test string',
                    plotType: 'Test string',
                    targetAxis: 'Test string',
                    timeSeriesQuery: {
                      opsAnalyticsQuery: {
                        sql: 'Test string',
                      },
                      outputFullDuration: true,
                      prometheusQuery: 'Test string',
                      timeSeriesFilter: {
                        aggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        filter: 'Test string',
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesFilterRatio: {
                        denominator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        numerator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesQueryLanguage: 'Test string',
                      unitOverride: 'Test string',
                    },
                  },
                ],
                thresholds: [
                  {
                    color: 'Test string',
                    direction: 'Test string',
                    label: 'Test string',
                    targetAxis: 'Test string',
                    value: 42,
                  },
                ],
                timeshiftDuration: 'Test string',
                xAxis: {
                  label: 'Test string',
                  scale: 'Test string',
                },
                y2Axis: {
                  label: 'Test string',
                  scale: 'Test string',
                },
                yAxis: {
                  label: 'Test string',
                  scale: 'Test string',
                },
              },
            },
          ],
        },
        labels: {
          A: 'Test string',
        },
        mosaicLayout: {
          columns: 42,
          tiles: [
            {
              height: 42,
              widget: {
                alertChart: {
                  name: 'Test string',
                },
                blank: {},
                collapsibleGroup: {
                  collapsed: true,
                },
                errorReportingPanel: {
                  projectNames: ['Test string'],
                  services: ['Test string'],
                  versions: ['Test string'],
                },
                id: 'Test string',
                incidentList: {
                  monitoredResources: [
                    {
                      labels: {
                        A: 'Test string',
                      },
                      type: 'Test string',
                    },
                  ],
                  policyNames: ['Test string'],
                },
                logsPanel: {
                  filter: 'Test string',
                  resourceNames: ['Test string'],
                },
                pieChart: {
                  chartType: 'Test string',
                  dataSets: [
                    {
                      dimensions: [
                        {
                          column: 'Test string',
                          columnType: 'Test string',
                          floatBinSize: 42,
                          maxBinCount: 42,
                          numericBinSize: 42,
                          sortColumn: 'Test string',
                          sortOrder: 'Test string',
                          timeBinSize: 'Test string',
                        },
                      ],
                      measures: [
                        {
                          aggregationFunction: {
                            parameters: [
                              {
                                doubleValue: 42,
                                intValue: 'Test string',
                              },
                            ],
                            type: 'Test string',
                          },
                          column: 'Test string',
                        },
                      ],
                      minAlignmentPeriod: 'Test string',
                      sliceNameTemplate: 'Test string',
                      timeSeriesQuery: {
                        opsAnalyticsQuery: {
                          sql: 'Test string',
                        },
                        outputFullDuration: true,
                        prometheusQuery: 'Test string',
                        timeSeriesFilter: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                          pickTimeSeriesFilter: {
                            direction: 'Test string',
                            interval: {
                              endTime: 'Test string',
                              startTime: 'Test string',
                            },
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                          secondaryAggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          statisticalTimeSeriesFilter: {
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                        },
                        timeSeriesFilterRatio: {
                          denominator: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                          },
                          numerator: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                          },
                          pickTimeSeriesFilter: {
                            direction: 'Test string',
                            interval: {
                              endTime: 'Test string',
                              startTime: 'Test string',
                            },
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                          secondaryAggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          statisticalTimeSeriesFilter: {
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                        },
                        timeSeriesQueryLanguage: 'Test string',
                        unitOverride: 'Test string',
                      },
                    },
                  ],
                  showLabels: true,
                },
                scorecard: {
                  blankView: {},
                  gaugeView: {
                    lowerBound: 42,
                    upperBound: 42,
                  },
                  sparkChartView: {
                    minAlignmentPeriod: 'Test string',
                    sparkChartType: 'Test string',
                  },
                  thresholds: [
                    {
                      color: 'Test string',
                      direction: 'Test string',
                      label: 'Test string',
                      targetAxis: 'Test string',
                      value: 42,
                    },
                  ],
                  timeSeriesQuery: {
                    opsAnalyticsQuery: {
                      sql: 'Test string',
                    },
                    outputFullDuration: true,
                    prometheusQuery: 'Test string',
                    timeSeriesFilter: {
                      aggregation: {
                        alignmentPeriod: 'Test string',
                        crossSeriesReducer: 'Test string',
                        groupByFields: ['Test string'],
                        perSeriesAligner: 'Test string',
                      },
                      filter: 'Test string',
                      pickTimeSeriesFilter: {
                        direction: 'Test string',
                        interval: {
                          endTime: 'Test string',
                          startTime: 'Test string',
                        },
                        numTimeSeries: 42,
                        rankingMethod: 'Test string',
                      },
                      secondaryAggregation: {
                        alignmentPeriod: 'Test string',
                        crossSeriesReducer: 'Test string',
                        groupByFields: ['Test string'],
                        perSeriesAligner: 'Test string',
                      },
                      statisticalTimeSeriesFilter: {
                        numTimeSeries: 42,
                        rankingMethod: 'Test string',
                      },
                    },
                    timeSeriesFilterRatio: {
                      denominator: {
                        aggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        filter: 'Test string',
                      },
                      numerator: {
                        aggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        filter: 'Test string',
                      },
                      pickTimeSeriesFilter: {
                        direction: 'Test string',
                        interval: {
                          endTime: 'Test string',
                          startTime: 'Test string',
                        },
                        numTimeSeries: 42,
                        rankingMethod: 'Test string',
                      },
                      secondaryAggregation: {
                        alignmentPeriod: 'Test string',
                        crossSeriesReducer: 'Test string',
                        groupByFields: ['Test string'],
                        perSeriesAligner: 'Test string',
                      },
                      statisticalTimeSeriesFilter: {
                        numTimeSeries: 42,
                        rankingMethod: 'Test string',
                      },
                    },
                    timeSeriesQueryLanguage: 'Test string',
                    unitOverride: 'Test string',
                  },
                },
                sectionHeader: {
                  dividerBelow: true,
                  subtitle: 'Test string',
                },
                singleViewGroup: {},
                text: {
                  content: 'Test string',
                  format: 'Test string',
                  style: {
                    backgroundColor: 'Test string',
                    fontSize: 'Test string',
                    horizontalAlignment: 'Test string',
                    padding: 'Test string',
                    pointerLocation: 'Test string',
                    textColor: 'Test string',
                    verticalAlignment: 'Test string',
                  },
                },
                timeSeriesTable: {
                  columnSettings: [
                    {
                      column: 'Test string',
                      visible: true,
                    },
                  ],
                  dataSets: [
                    {
                      minAlignmentPeriod: 'Test string',
                      tableDisplayOptions: {
                        shownColumns: ['Test string'],
                      },
                      tableTemplate: 'Test string',
                      timeSeriesQuery: {
                        opsAnalyticsQuery: {
                          sql: 'Test string',
                        },
                        outputFullDuration: true,
                        prometheusQuery: 'Test string',
                        timeSeriesFilter: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                          pickTimeSeriesFilter: {
                            direction: 'Test string',
                            interval: {
                              endTime: 'Test string',
                              startTime: 'Test string',
                            },
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                          secondaryAggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          statisticalTimeSeriesFilter: {
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                        },
                        timeSeriesFilterRatio: {
                          denominator: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                          },
                          numerator: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                          },
                          pickTimeSeriesFilter: {
                            direction: 'Test string',
                            interval: {
                              endTime: 'Test string',
                              startTime: 'Test string',
                            },
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                          secondaryAggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          statisticalTimeSeriesFilter: {
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                        },
                        timeSeriesQueryLanguage: 'Test string',
                        unitOverride: 'Test string',
                      },
                    },
                  ],
                  metricVisualization: 'Test string',
                },
                title: 'Test string',
                xyChart: {
                  chartOptions: {
                    displayHorizontal: true,
                    mode: 'Test string',
                  },
                  dataSets: [
                    {
                      breakdowns: [
                        {
                          aggregationFunction: {
                            parameters: [
                              {
                                doubleValue: 42,
                                intValue: 'Test string',
                              },
                            ],
                            type: 'Test string',
                          },
                          column: 'Test string',
                          limit: 42,
                          sortOrder: 'Test string',
                        },
                      ],
                      dimensions: [
                        {
                          column: 'Test string',
                          columnType: 'Test string',
                          floatBinSize: 42,
                          maxBinCount: 42,
                          numericBinSize: 42,
                          sortColumn: 'Test string',
                          sortOrder: 'Test string',
                          timeBinSize: 'Test string',
                        },
                      ],
                      legendTemplate: 'Test string',
                      measures: [
                        {
                          aggregationFunction: {
                            parameters: [
                              {
                                doubleValue: 42,
                                intValue: 'Test string',
                              },
                            ],
                            type: 'Test string',
                          },
                          column: 'Test string',
                        },
                      ],
                      minAlignmentPeriod: 'Test string',
                      plotType: 'Test string',
                      targetAxis: 'Test string',
                      timeSeriesQuery: {
                        opsAnalyticsQuery: {
                          sql: 'Test string',
                        },
                        outputFullDuration: true,
                        prometheusQuery: 'Test string',
                        timeSeriesFilter: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                          pickTimeSeriesFilter: {
                            direction: 'Test string',
                            interval: {
                              endTime: 'Test string',
                              startTime: 'Test string',
                            },
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                          secondaryAggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          statisticalTimeSeriesFilter: {
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                        },
                        timeSeriesFilterRatio: {
                          denominator: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                          },
                          numerator: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                          },
                          pickTimeSeriesFilter: {
                            direction: 'Test string',
                            interval: {
                              endTime: 'Test string',
                              startTime: 'Test string',
                            },
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                          secondaryAggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          statisticalTimeSeriesFilter: {
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                        },
                        timeSeriesQueryLanguage: 'Test string',
                        unitOverride: 'Test string',
                      },
                    },
                  ],
                  thresholds: [
                    {
                      color: 'Test string',
                      direction: 'Test string',
                      label: 'Test string',
                      targetAxis: 'Test string',
                      value: 42,
                    },
                  ],
                  timeshiftDuration: 'Test string',
                  xAxis: {
                    label: 'Test string',
                    scale: 'Test string',
                  },
                  y2Axis: {
                    label: 'Test string',
                    scale: 'Test string',
                  },
                  yAxis: {
                    label: 'Test string',
                    scale: 'Test string',
                  },
                },
              },
              width: 42,
              xPos: 42,
              yPos: 42,
            },
          ],
        },
        name: 'Test string',
        rowLayout: {
          rows: [
            {
              weight: 'Test string',
              widgets: [
                {
                  alertChart: {
                    name: 'Test string',
                  },
                  blank: {},
                  collapsibleGroup: {
                    collapsed: true,
                  },
                  errorReportingPanel: {
                    projectNames: ['Test string'],
                    services: ['Test string'],
                    versions: ['Test string'],
                  },
                  id: 'Test string',
                  incidentList: {
                    monitoredResources: [
                      {
                        labels: {
                          A: 'Test string',
                        },
                        type: 'Test string',
                      },
                    ],
                    policyNames: ['Test string'],
                  },
                  logsPanel: {
                    filter: 'Test string',
                    resourceNames: ['Test string'],
                  },
                  pieChart: {
                    chartType: 'Test string',
                    dataSets: [
                      {
                        dimensions: [
                          {
                            column: 'Test string',
                            columnType: 'Test string',
                            floatBinSize: 42,
                            maxBinCount: 42,
                            numericBinSize: 42,
                            sortColumn: 'Test string',
                            sortOrder: 'Test string',
                            timeBinSize: 'Test string',
                          },
                        ],
                        measures: [
                          {
                            aggregationFunction: {
                              parameters: [
                                {
                                  doubleValue: 42,
                                  intValue: 'Test string',
                                },
                              ],
                              type: 'Test string',
                            },
                            column: 'Test string',
                          },
                        ],
                        minAlignmentPeriod: 'Test string',
                        sliceNameTemplate: 'Test string',
                        timeSeriesQuery: {
                          opsAnalyticsQuery: {
                            sql: 'Test string',
                          },
                          outputFullDuration: true,
                          prometheusQuery: 'Test string',
                          timeSeriesFilter: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesFilterRatio: {
                            denominator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            numerator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesQueryLanguage: 'Test string',
                          unitOverride: 'Test string',
                        },
                      },
                    ],
                    showLabels: true,
                  },
                  scorecard: {
                    blankView: {},
                    gaugeView: {
                      lowerBound: 42,
                      upperBound: 42,
                    },
                    sparkChartView: {
                      minAlignmentPeriod: 'Test string',
                      sparkChartType: 'Test string',
                    },
                    thresholds: [
                      {
                        color: 'Test string',
                        direction: 'Test string',
                        label: 'Test string',
                        targetAxis: 'Test string',
                        value: 42,
                      },
                    ],
                    timeSeriesQuery: {
                      opsAnalyticsQuery: {
                        sql: 'Test string',
                      },
                      outputFullDuration: true,
                      prometheusQuery: 'Test string',
                      timeSeriesFilter: {
                        aggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        filter: 'Test string',
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesFilterRatio: {
                        denominator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        numerator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesQueryLanguage: 'Test string',
                      unitOverride: 'Test string',
                    },
                  },
                  sectionHeader: {
                    dividerBelow: true,
                    subtitle: 'Test string',
                  },
                  singleViewGroup: {},
                  text: {
                    content: 'Test string',
                    format: 'Test string',
                    style: {
                      backgroundColor: 'Test string',
                      fontSize: 'Test string',
                      horizontalAlignment: 'Test string',
                      padding: 'Test string',
                      pointerLocation: 'Test string',
                      textColor: 'Test string',
                      verticalAlignment: 'Test string',
                    },
                  },
                  timeSeriesTable: {
                    columnSettings: [
                      {
                        column: 'Test string',
                        visible: true,
                      },
                    ],
                    dataSets: [
                      {
                        minAlignmentPeriod: 'Test string',
                        tableDisplayOptions: {
                          shownColumns: ['Test string'],
                        },
                        tableTemplate: 'Test string',
                        timeSeriesQuery: {
                          opsAnalyticsQuery: {
                            sql: 'Test string',
                          },
                          outputFullDuration: true,
                          prometheusQuery: 'Test string',
                          timeSeriesFilter: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesFilterRatio: {
                            denominator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            numerator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesQueryLanguage: 'Test string',
                          unitOverride: 'Test string',
                        },
                      },
                    ],
                    metricVisualization: 'Test string',
                  },
                  title: 'Test string',
                  xyChart: {
                    chartOptions: {
                      displayHorizontal: true,
                      mode: 'Test string',
                    },
                    dataSets: [
                      {
                        breakdowns: [
                          {
                            aggregationFunction: {
                              parameters: [
                                {
                                  doubleValue: 42,
                                  intValue: 'Test string',
                                },
                              ],
                              type: 'Test string',
                            },
                            column: 'Test string',
                            limit: 42,
                            sortOrder: 'Test string',
                          },
                        ],
                        dimensions: [
                          {
                            column: 'Test string',
                            columnType: 'Test string',
                            floatBinSize: 42,
                            maxBinCount: 42,
                            numericBinSize: 42,
                            sortColumn: 'Test string',
                            sortOrder: 'Test string',
                            timeBinSize: 'Test string',
                          },
                        ],
                        legendTemplate: 'Test string',
                        measures: [
                          {
                            aggregationFunction: {
                              parameters: [
                                {
                                  doubleValue: 42,
                                  intValue: 'Test string',
                                },
                              ],
                              type: 'Test string',
                            },
                            column: 'Test string',
                          },
                        ],
                        minAlignmentPeriod: 'Test string',
                        plotType: 'Test string',
                        targetAxis: 'Test string',
                        timeSeriesQuery: {
                          opsAnalyticsQuery: {
                            sql: 'Test string',
                          },
                          outputFullDuration: true,
                          prometheusQuery: 'Test string',
                          timeSeriesFilter: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesFilterRatio: {
                            denominator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            numerator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesQueryLanguage: 'Test string',
                          unitOverride: 'Test string',
                        },
                      },
                    ],
                    thresholds: [
                      {
                        color: 'Test string',
                        direction: 'Test string',
                        label: 'Test string',
                        targetAxis: 'Test string',
                        value: 42,
                      },
                    ],
                    timeshiftDuration: 'Test string',
                    xAxis: {
                      label: 'Test string',
                      scale: 'Test string',
                    },
                    y2Axis: {
                      label: 'Test string',
                      scale: 'Test string',
                    },
                    yAxis: {
                      label: 'Test string',
                      scale: 'Test string',
                    },
                  },
                },
              ],
            },
          ],
        },
      }
    );
    /** Deletes an existing custom dashboard.This method requires the monitoring.dashboards.delete permission on the specified dashboard. For more information, see Cloud Identity and Access Management (https://cloud.google.com/iam). */
    await gapi.client.monitoring.projects.dashboards.delete({
      name: 'Test string',
    });
    /** Fetches a specific dashboard.This method requires the monitoring.dashboards.get permission on the specified dashboard. For more information, see Cloud Identity and Access Management (https://cloud.google.com/iam). */
    await gapi.client.monitoring.projects.dashboards.get({
      name: 'Test string',
    });
    /** Lists the existing dashboards.This method requires the monitoring.dashboards.list permission on the specified project. For more information, see Cloud Identity and Access Management (https://cloud.google.com/iam). */
    await gapi.client.monitoring.projects.dashboards.list({
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Replaces an existing custom dashboard with a new definition.This method requires the monitoring.dashboards.update permission on the specified dashboard. For more information, see Cloud Identity and Access Management (https://cloud.google.com/iam). */
    await gapi.client.monitoring.projects.dashboards.patch(
      {
        name: 'Test string',
        validateOnly: true,
      },
      {
        annotations: {
          defaultResourceNames: ['Test string'],
          eventAnnotations: [
            {
              displayName: 'Test string',
              enabled: true,
              eventType: 'Test string',
              filter: 'Test string',
              resourceNames: ['Test string'],
            },
          ],
        },
        columnLayout: {
          columns: [
            {
              weight: 'Test string',
              widgets: [
                {
                  alertChart: {
                    name: 'Test string',
                  },
                  blank: {},
                  collapsibleGroup: {
                    collapsed: true,
                  },
                  errorReportingPanel: {
                    projectNames: ['Test string'],
                    services: ['Test string'],
                    versions: ['Test string'],
                  },
                  id: 'Test string',
                  incidentList: {
                    monitoredResources: [
                      {
                        labels: {
                          A: 'Test string',
                        },
                        type: 'Test string',
                      },
                    ],
                    policyNames: ['Test string'],
                  },
                  logsPanel: {
                    filter: 'Test string',
                    resourceNames: ['Test string'],
                  },
                  pieChart: {
                    chartType: 'Test string',
                    dataSets: [
                      {
                        dimensions: [
                          {
                            column: 'Test string',
                            columnType: 'Test string',
                            floatBinSize: 42,
                            maxBinCount: 42,
                            numericBinSize: 42,
                            sortColumn: 'Test string',
                            sortOrder: 'Test string',
                            timeBinSize: 'Test string',
                          },
                        ],
                        measures: [
                          {
                            aggregationFunction: {
                              parameters: [
                                {
                                  doubleValue: 42,
                                  intValue: 'Test string',
                                },
                              ],
                              type: 'Test string',
                            },
                            column: 'Test string',
                          },
                        ],
                        minAlignmentPeriod: 'Test string',
                        sliceNameTemplate: 'Test string',
                        timeSeriesQuery: {
                          opsAnalyticsQuery: {
                            sql: 'Test string',
                          },
                          outputFullDuration: true,
                          prometheusQuery: 'Test string',
                          timeSeriesFilter: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesFilterRatio: {
                            denominator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            numerator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesQueryLanguage: 'Test string',
                          unitOverride: 'Test string',
                        },
                      },
                    ],
                    showLabels: true,
                  },
                  scorecard: {
                    blankView: {},
                    gaugeView: {
                      lowerBound: 42,
                      upperBound: 42,
                    },
                    sparkChartView: {
                      minAlignmentPeriod: 'Test string',
                      sparkChartType: 'Test string',
                    },
                    thresholds: [
                      {
                        color: 'Test string',
                        direction: 'Test string',
                        label: 'Test string',
                        targetAxis: 'Test string',
                        value: 42,
                      },
                    ],
                    timeSeriesQuery: {
                      opsAnalyticsQuery: {
                        sql: 'Test string',
                      },
                      outputFullDuration: true,
                      prometheusQuery: 'Test string',
                      timeSeriesFilter: {
                        aggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        filter: 'Test string',
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesFilterRatio: {
                        denominator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        numerator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesQueryLanguage: 'Test string',
                      unitOverride: 'Test string',
                    },
                  },
                  sectionHeader: {
                    dividerBelow: true,
                    subtitle: 'Test string',
                  },
                  singleViewGroup: {},
                  text: {
                    content: 'Test string',
                    format: 'Test string',
                    style: {
                      backgroundColor: 'Test string',
                      fontSize: 'Test string',
                      horizontalAlignment: 'Test string',
                      padding: 'Test string',
                      pointerLocation: 'Test string',
                      textColor: 'Test string',
                      verticalAlignment: 'Test string',
                    },
                  },
                  timeSeriesTable: {
                    columnSettings: [
                      {
                        column: 'Test string',
                        visible: true,
                      },
                    ],
                    dataSets: [
                      {
                        minAlignmentPeriod: 'Test string',
                        tableDisplayOptions: {
                          shownColumns: ['Test string'],
                        },
                        tableTemplate: 'Test string',
                        timeSeriesQuery: {
                          opsAnalyticsQuery: {
                            sql: 'Test string',
                          },
                          outputFullDuration: true,
                          prometheusQuery: 'Test string',
                          timeSeriesFilter: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesFilterRatio: {
                            denominator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            numerator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesQueryLanguage: 'Test string',
                          unitOverride: 'Test string',
                        },
                      },
                    ],
                    metricVisualization: 'Test string',
                  },
                  title: 'Test string',
                  xyChart: {
                    chartOptions: {
                      displayHorizontal: true,
                      mode: 'Test string',
                    },
                    dataSets: [
                      {
                        breakdowns: [
                          {
                            aggregationFunction: {
                              parameters: [
                                {
                                  doubleValue: 42,
                                  intValue: 'Test string',
                                },
                              ],
                              type: 'Test string',
                            },
                            column: 'Test string',
                            limit: 42,
                            sortOrder: 'Test string',
                          },
                        ],
                        dimensions: [
                          {
                            column: 'Test string',
                            columnType: 'Test string',
                            floatBinSize: 42,
                            maxBinCount: 42,
                            numericBinSize: 42,
                            sortColumn: 'Test string',
                            sortOrder: 'Test string',
                            timeBinSize: 'Test string',
                          },
                        ],
                        legendTemplate: 'Test string',
                        measures: [
                          {
                            aggregationFunction: {
                              parameters: [
                                {
                                  doubleValue: 42,
                                  intValue: 'Test string',
                                },
                              ],
                              type: 'Test string',
                            },
                            column: 'Test string',
                          },
                        ],
                        minAlignmentPeriod: 'Test string',
                        plotType: 'Test string',
                        targetAxis: 'Test string',
                        timeSeriesQuery: {
                          opsAnalyticsQuery: {
                            sql: 'Test string',
                          },
                          outputFullDuration: true,
                          prometheusQuery: 'Test string',
                          timeSeriesFilter: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesFilterRatio: {
                            denominator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            numerator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesQueryLanguage: 'Test string',
                          unitOverride: 'Test string',
                        },
                      },
                    ],
                    thresholds: [
                      {
                        color: 'Test string',
                        direction: 'Test string',
                        label: 'Test string',
                        targetAxis: 'Test string',
                        value: 42,
                      },
                    ],
                    timeshiftDuration: 'Test string',
                    xAxis: {
                      label: 'Test string',
                      scale: 'Test string',
                    },
                    y2Axis: {
                      label: 'Test string',
                      scale: 'Test string',
                    },
                    yAxis: {
                      label: 'Test string',
                      scale: 'Test string',
                    },
                  },
                },
              ],
            },
          ],
        },
        dashboardFilters: [
          {
            applyToNewWidgets: true,
            filterType: 'Test string',
            labelKey: 'Test string',
            stringValue: 'Test string',
            templateVariable: 'Test string',
          },
        ],
        displayName: 'Test string',
        etag: 'Test string',
        gridLayout: {
          columns: 'Test string',
          widgets: [
            {
              alertChart: {
                name: 'Test string',
              },
              blank: {},
              collapsibleGroup: {
                collapsed: true,
              },
              errorReportingPanel: {
                projectNames: ['Test string'],
                services: ['Test string'],
                versions: ['Test string'],
              },
              id: 'Test string',
              incidentList: {
                monitoredResources: [
                  {
                    labels: {
                      A: 'Test string',
                    },
                    type: 'Test string',
                  },
                ],
                policyNames: ['Test string'],
              },
              logsPanel: {
                filter: 'Test string',
                resourceNames: ['Test string'],
              },
              pieChart: {
                chartType: 'Test string',
                dataSets: [
                  {
                    dimensions: [
                      {
                        column: 'Test string',
                        columnType: 'Test string',
                        floatBinSize: 42,
                        maxBinCount: 42,
                        numericBinSize: 42,
                        sortColumn: 'Test string',
                        sortOrder: 'Test string',
                        timeBinSize: 'Test string',
                      },
                    ],
                    measures: [
                      {
                        aggregationFunction: {
                          parameters: [
                            {
                              doubleValue: 42,
                              intValue: 'Test string',
                            },
                          ],
                          type: 'Test string',
                        },
                        column: 'Test string',
                      },
                    ],
                    minAlignmentPeriod: 'Test string',
                    sliceNameTemplate: 'Test string',
                    timeSeriesQuery: {
                      opsAnalyticsQuery: {
                        sql: 'Test string',
                      },
                      outputFullDuration: true,
                      prometheusQuery: 'Test string',
                      timeSeriesFilter: {
                        aggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        filter: 'Test string',
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesFilterRatio: {
                        denominator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        numerator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesQueryLanguage: 'Test string',
                      unitOverride: 'Test string',
                    },
                  },
                ],
                showLabels: true,
              },
              scorecard: {
                blankView: {},
                gaugeView: {
                  lowerBound: 42,
                  upperBound: 42,
                },
                sparkChartView: {
                  minAlignmentPeriod: 'Test string',
                  sparkChartType: 'Test string',
                },
                thresholds: [
                  {
                    color: 'Test string',
                    direction: 'Test string',
                    label: 'Test string',
                    targetAxis: 'Test string',
                    value: 42,
                  },
                ],
                timeSeriesQuery: {
                  opsAnalyticsQuery: {
                    sql: 'Test string',
                  },
                  outputFullDuration: true,
                  prometheusQuery: 'Test string',
                  timeSeriesFilter: {
                    aggregation: {
                      alignmentPeriod: 'Test string',
                      crossSeriesReducer: 'Test string',
                      groupByFields: ['Test string'],
                      perSeriesAligner: 'Test string',
                    },
                    filter: 'Test string',
                    pickTimeSeriesFilter: {
                      direction: 'Test string',
                      interval: {
                        endTime: 'Test string',
                        startTime: 'Test string',
                      },
                      numTimeSeries: 42,
                      rankingMethod: 'Test string',
                    },
                    secondaryAggregation: {
                      alignmentPeriod: 'Test string',
                      crossSeriesReducer: 'Test string',
                      groupByFields: ['Test string'],
                      perSeriesAligner: 'Test string',
                    },
                    statisticalTimeSeriesFilter: {
                      numTimeSeries: 42,
                      rankingMethod: 'Test string',
                    },
                  },
                  timeSeriesFilterRatio: {
                    denominator: {
                      aggregation: {
                        alignmentPeriod: 'Test string',
                        crossSeriesReducer: 'Test string',
                        groupByFields: ['Test string'],
                        perSeriesAligner: 'Test string',
                      },
                      filter: 'Test string',
                    },
                    numerator: {
                      aggregation: {
                        alignmentPeriod: 'Test string',
                        crossSeriesReducer: 'Test string',
                        groupByFields: ['Test string'],
                        perSeriesAligner: 'Test string',
                      },
                      filter: 'Test string',
                    },
                    pickTimeSeriesFilter: {
                      direction: 'Test string',
                      interval: {
                        endTime: 'Test string',
                        startTime: 'Test string',
                      },
                      numTimeSeries: 42,
                      rankingMethod: 'Test string',
                    },
                    secondaryAggregation: {
                      alignmentPeriod: 'Test string',
                      crossSeriesReducer: 'Test string',
                      groupByFields: ['Test string'],
                      perSeriesAligner: 'Test string',
                    },
                    statisticalTimeSeriesFilter: {
                      numTimeSeries: 42,
                      rankingMethod: 'Test string',
                    },
                  },
                  timeSeriesQueryLanguage: 'Test string',
                  unitOverride: 'Test string',
                },
              },
              sectionHeader: {
                dividerBelow: true,
                subtitle: 'Test string',
              },
              singleViewGroup: {},
              text: {
                content: 'Test string',
                format: 'Test string',
                style: {
                  backgroundColor: 'Test string',
                  fontSize: 'Test string',
                  horizontalAlignment: 'Test string',
                  padding: 'Test string',
                  pointerLocation: 'Test string',
                  textColor: 'Test string',
                  verticalAlignment: 'Test string',
                },
              },
              timeSeriesTable: {
                columnSettings: [
                  {
                    column: 'Test string',
                    visible: true,
                  },
                ],
                dataSets: [
                  {
                    minAlignmentPeriod: 'Test string',
                    tableDisplayOptions: {
                      shownColumns: ['Test string'],
                    },
                    tableTemplate: 'Test string',
                    timeSeriesQuery: {
                      opsAnalyticsQuery: {
                        sql: 'Test string',
                      },
                      outputFullDuration: true,
                      prometheusQuery: 'Test string',
                      timeSeriesFilter: {
                        aggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        filter: 'Test string',
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesFilterRatio: {
                        denominator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        numerator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesQueryLanguage: 'Test string',
                      unitOverride: 'Test string',
                    },
                  },
                ],
                metricVisualization: 'Test string',
              },
              title: 'Test string',
              xyChart: {
                chartOptions: {
                  displayHorizontal: true,
                  mode: 'Test string',
                },
                dataSets: [
                  {
                    breakdowns: [
                      {
                        aggregationFunction: {
                          parameters: [
                            {
                              doubleValue: 42,
                              intValue: 'Test string',
                            },
                          ],
                          type: 'Test string',
                        },
                        column: 'Test string',
                        limit: 42,
                        sortOrder: 'Test string',
                      },
                    ],
                    dimensions: [
                      {
                        column: 'Test string',
                        columnType: 'Test string',
                        floatBinSize: 42,
                        maxBinCount: 42,
                        numericBinSize: 42,
                        sortColumn: 'Test string',
                        sortOrder: 'Test string',
                        timeBinSize: 'Test string',
                      },
                    ],
                    legendTemplate: 'Test string',
                    measures: [
                      {
                        aggregationFunction: {
                          parameters: [
                            {
                              doubleValue: 42,
                              intValue: 'Test string',
                            },
                          ],
                          type: 'Test string',
                        },
                        column: 'Test string',
                      },
                    ],
                    minAlignmentPeriod: 'Test string',
                    plotType: 'Test string',
                    targetAxis: 'Test string',
                    timeSeriesQuery: {
                      opsAnalyticsQuery: {
                        sql: 'Test string',
                      },
                      outputFullDuration: true,
                      prometheusQuery: 'Test string',
                      timeSeriesFilter: {
                        aggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        filter: 'Test string',
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesFilterRatio: {
                        denominator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        numerator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesQueryLanguage: 'Test string',
                      unitOverride: 'Test string',
                    },
                  },
                ],
                thresholds: [
                  {
                    color: 'Test string',
                    direction: 'Test string',
                    label: 'Test string',
                    targetAxis: 'Test string',
                    value: 42,
                  },
                ],
                timeshiftDuration: 'Test string',
                xAxis: {
                  label: 'Test string',
                  scale: 'Test string',
                },
                y2Axis: {
                  label: 'Test string',
                  scale: 'Test string',
                },
                yAxis: {
                  label: 'Test string',
                  scale: 'Test string',
                },
              },
            },
          ],
        },
        labels: {
          A: 'Test string',
        },
        mosaicLayout: {
          columns: 42,
          tiles: [
            {
              height: 42,
              widget: {
                alertChart: {
                  name: 'Test string',
                },
                blank: {},
                collapsibleGroup: {
                  collapsed: true,
                },
                errorReportingPanel: {
                  projectNames: ['Test string'],
                  services: ['Test string'],
                  versions: ['Test string'],
                },
                id: 'Test string',
                incidentList: {
                  monitoredResources: [
                    {
                      labels: {
                        A: 'Test string',
                      },
                      type: 'Test string',
                    },
                  ],
                  policyNames: ['Test string'],
                },
                logsPanel: {
                  filter: 'Test string',
                  resourceNames: ['Test string'],
                },
                pieChart: {
                  chartType: 'Test string',
                  dataSets: [
                    {
                      dimensions: [
                        {
                          column: 'Test string',
                          columnType: 'Test string',
                          floatBinSize: 42,
                          maxBinCount: 42,
                          numericBinSize: 42,
                          sortColumn: 'Test string',
                          sortOrder: 'Test string',
                          timeBinSize: 'Test string',
                        },
                      ],
                      measures: [
                        {
                          aggregationFunction: {
                            parameters: [
                              {
                                doubleValue: 42,
                                intValue: 'Test string',
                              },
                            ],
                            type: 'Test string',
                          },
                          column: 'Test string',
                        },
                      ],
                      minAlignmentPeriod: 'Test string',
                      sliceNameTemplate: 'Test string',
                      timeSeriesQuery: {
                        opsAnalyticsQuery: {
                          sql: 'Test string',
                        },
                        outputFullDuration: true,
                        prometheusQuery: 'Test string',
                        timeSeriesFilter: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                          pickTimeSeriesFilter: {
                            direction: 'Test string',
                            interval: {
                              endTime: 'Test string',
                              startTime: 'Test string',
                            },
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                          secondaryAggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          statisticalTimeSeriesFilter: {
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                        },
                        timeSeriesFilterRatio: {
                          denominator: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                          },
                          numerator: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                          },
                          pickTimeSeriesFilter: {
                            direction: 'Test string',
                            interval: {
                              endTime: 'Test string',
                              startTime: 'Test string',
                            },
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                          secondaryAggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          statisticalTimeSeriesFilter: {
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                        },
                        timeSeriesQueryLanguage: 'Test string',
                        unitOverride: 'Test string',
                      },
                    },
                  ],
                  showLabels: true,
                },
                scorecard: {
                  blankView: {},
                  gaugeView: {
                    lowerBound: 42,
                    upperBound: 42,
                  },
                  sparkChartView: {
                    minAlignmentPeriod: 'Test string',
                    sparkChartType: 'Test string',
                  },
                  thresholds: [
                    {
                      color: 'Test string',
                      direction: 'Test string',
                      label: 'Test string',
                      targetAxis: 'Test string',
                      value: 42,
                    },
                  ],
                  timeSeriesQuery: {
                    opsAnalyticsQuery: {
                      sql: 'Test string',
                    },
                    outputFullDuration: true,
                    prometheusQuery: 'Test string',
                    timeSeriesFilter: {
                      aggregation: {
                        alignmentPeriod: 'Test string',
                        crossSeriesReducer: 'Test string',
                        groupByFields: ['Test string'],
                        perSeriesAligner: 'Test string',
                      },
                      filter: 'Test string',
                      pickTimeSeriesFilter: {
                        direction: 'Test string',
                        interval: {
                          endTime: 'Test string',
                          startTime: 'Test string',
                        },
                        numTimeSeries: 42,
                        rankingMethod: 'Test string',
                      },
                      secondaryAggregation: {
                        alignmentPeriod: 'Test string',
                        crossSeriesReducer: 'Test string',
                        groupByFields: ['Test string'],
                        perSeriesAligner: 'Test string',
                      },
                      statisticalTimeSeriesFilter: {
                        numTimeSeries: 42,
                        rankingMethod: 'Test string',
                      },
                    },
                    timeSeriesFilterRatio: {
                      denominator: {
                        aggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        filter: 'Test string',
                      },
                      numerator: {
                        aggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        filter: 'Test string',
                      },
                      pickTimeSeriesFilter: {
                        direction: 'Test string',
                        interval: {
                          endTime: 'Test string',
                          startTime: 'Test string',
                        },
                        numTimeSeries: 42,
                        rankingMethod: 'Test string',
                      },
                      secondaryAggregation: {
                        alignmentPeriod: 'Test string',
                        crossSeriesReducer: 'Test string',
                        groupByFields: ['Test string'],
                        perSeriesAligner: 'Test string',
                      },
                      statisticalTimeSeriesFilter: {
                        numTimeSeries: 42,
                        rankingMethod: 'Test string',
                      },
                    },
                    timeSeriesQueryLanguage: 'Test string',
                    unitOverride: 'Test string',
                  },
                },
                sectionHeader: {
                  dividerBelow: true,
                  subtitle: 'Test string',
                },
                singleViewGroup: {},
                text: {
                  content: 'Test string',
                  format: 'Test string',
                  style: {
                    backgroundColor: 'Test string',
                    fontSize: 'Test string',
                    horizontalAlignment: 'Test string',
                    padding: 'Test string',
                    pointerLocation: 'Test string',
                    textColor: 'Test string',
                    verticalAlignment: 'Test string',
                  },
                },
                timeSeriesTable: {
                  columnSettings: [
                    {
                      column: 'Test string',
                      visible: true,
                    },
                  ],
                  dataSets: [
                    {
                      minAlignmentPeriod: 'Test string',
                      tableDisplayOptions: {
                        shownColumns: ['Test string'],
                      },
                      tableTemplate: 'Test string',
                      timeSeriesQuery: {
                        opsAnalyticsQuery: {
                          sql: 'Test string',
                        },
                        outputFullDuration: true,
                        prometheusQuery: 'Test string',
                        timeSeriesFilter: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                          pickTimeSeriesFilter: {
                            direction: 'Test string',
                            interval: {
                              endTime: 'Test string',
                              startTime: 'Test string',
                            },
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                          secondaryAggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          statisticalTimeSeriesFilter: {
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                        },
                        timeSeriesFilterRatio: {
                          denominator: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                          },
                          numerator: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                          },
                          pickTimeSeriesFilter: {
                            direction: 'Test string',
                            interval: {
                              endTime: 'Test string',
                              startTime: 'Test string',
                            },
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                          secondaryAggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          statisticalTimeSeriesFilter: {
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                        },
                        timeSeriesQueryLanguage: 'Test string',
                        unitOverride: 'Test string',
                      },
                    },
                  ],
                  metricVisualization: 'Test string',
                },
                title: 'Test string',
                xyChart: {
                  chartOptions: {
                    displayHorizontal: true,
                    mode: 'Test string',
                  },
                  dataSets: [
                    {
                      breakdowns: [
                        {
                          aggregationFunction: {
                            parameters: [
                              {
                                doubleValue: 42,
                                intValue: 'Test string',
                              },
                            ],
                            type: 'Test string',
                          },
                          column: 'Test string',
                          limit: 42,
                          sortOrder: 'Test string',
                        },
                      ],
                      dimensions: [
                        {
                          column: 'Test string',
                          columnType: 'Test string',
                          floatBinSize: 42,
                          maxBinCount: 42,
                          numericBinSize: 42,
                          sortColumn: 'Test string',
                          sortOrder: 'Test string',
                          timeBinSize: 'Test string',
                        },
                      ],
                      legendTemplate: 'Test string',
                      measures: [
                        {
                          aggregationFunction: {
                            parameters: [
                              {
                                doubleValue: 42,
                                intValue: 'Test string',
                              },
                            ],
                            type: 'Test string',
                          },
                          column: 'Test string',
                        },
                      ],
                      minAlignmentPeriod: 'Test string',
                      plotType: 'Test string',
                      targetAxis: 'Test string',
                      timeSeriesQuery: {
                        opsAnalyticsQuery: {
                          sql: 'Test string',
                        },
                        outputFullDuration: true,
                        prometheusQuery: 'Test string',
                        timeSeriesFilter: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                          pickTimeSeriesFilter: {
                            direction: 'Test string',
                            interval: {
                              endTime: 'Test string',
                              startTime: 'Test string',
                            },
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                          secondaryAggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          statisticalTimeSeriesFilter: {
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                        },
                        timeSeriesFilterRatio: {
                          denominator: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                          },
                          numerator: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                          },
                          pickTimeSeriesFilter: {
                            direction: 'Test string',
                            interval: {
                              endTime: 'Test string',
                              startTime: 'Test string',
                            },
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                          secondaryAggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          statisticalTimeSeriesFilter: {
                            numTimeSeries: 42,
                            rankingMethod: 'Test string',
                          },
                        },
                        timeSeriesQueryLanguage: 'Test string',
                        unitOverride: 'Test string',
                      },
                    },
                  ],
                  thresholds: [
                    {
                      color: 'Test string',
                      direction: 'Test string',
                      label: 'Test string',
                      targetAxis: 'Test string',
                      value: 42,
                    },
                  ],
                  timeshiftDuration: 'Test string',
                  xAxis: {
                    label: 'Test string',
                    scale: 'Test string',
                  },
                  y2Axis: {
                    label: 'Test string',
                    scale: 'Test string',
                  },
                  yAxis: {
                    label: 'Test string',
                    scale: 'Test string',
                  },
                },
              },
              width: 42,
              xPos: 42,
              yPos: 42,
            },
          ],
        },
        name: 'Test string',
        rowLayout: {
          rows: [
            {
              weight: 'Test string',
              widgets: [
                {
                  alertChart: {
                    name: 'Test string',
                  },
                  blank: {},
                  collapsibleGroup: {
                    collapsed: true,
                  },
                  errorReportingPanel: {
                    projectNames: ['Test string'],
                    services: ['Test string'],
                    versions: ['Test string'],
                  },
                  id: 'Test string',
                  incidentList: {
                    monitoredResources: [
                      {
                        labels: {
                          A: 'Test string',
                        },
                        type: 'Test string',
                      },
                    ],
                    policyNames: ['Test string'],
                  },
                  logsPanel: {
                    filter: 'Test string',
                    resourceNames: ['Test string'],
                  },
                  pieChart: {
                    chartType: 'Test string',
                    dataSets: [
                      {
                        dimensions: [
                          {
                            column: 'Test string',
                            columnType: 'Test string',
                            floatBinSize: 42,
                            maxBinCount: 42,
                            numericBinSize: 42,
                            sortColumn: 'Test string',
                            sortOrder: 'Test string',
                            timeBinSize: 'Test string',
                          },
                        ],
                        measures: [
                          {
                            aggregationFunction: {
                              parameters: [
                                {
                                  doubleValue: 42,
                                  intValue: 'Test string',
                                },
                              ],
                              type: 'Test string',
                            },
                            column: 'Test string',
                          },
                        ],
                        minAlignmentPeriod: 'Test string',
                        sliceNameTemplate: 'Test string',
                        timeSeriesQuery: {
                          opsAnalyticsQuery: {
                            sql: 'Test string',
                          },
                          outputFullDuration: true,
                          prometheusQuery: 'Test string',
                          timeSeriesFilter: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesFilterRatio: {
                            denominator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            numerator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesQueryLanguage: 'Test string',
                          unitOverride: 'Test string',
                        },
                      },
                    ],
                    showLabels: true,
                  },
                  scorecard: {
                    blankView: {},
                    gaugeView: {
                      lowerBound: 42,
                      upperBound: 42,
                    },
                    sparkChartView: {
                      minAlignmentPeriod: 'Test string',
                      sparkChartType: 'Test string',
                    },
                    thresholds: [
                      {
                        color: 'Test string',
                        direction: 'Test string',
                        label: 'Test string',
                        targetAxis: 'Test string',
                        value: 42,
                      },
                    ],
                    timeSeriesQuery: {
                      opsAnalyticsQuery: {
                        sql: 'Test string',
                      },
                      outputFullDuration: true,
                      prometheusQuery: 'Test string',
                      timeSeriesFilter: {
                        aggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        filter: 'Test string',
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesFilterRatio: {
                        denominator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        numerator: {
                          aggregation: {
                            alignmentPeriod: 'Test string',
                            crossSeriesReducer: 'Test string',
                            groupByFields: ['Test string'],
                            perSeriesAligner: 'Test string',
                          },
                          filter: 'Test string',
                        },
                        pickTimeSeriesFilter: {
                          direction: 'Test string',
                          interval: {
                            endTime: 'Test string',
                            startTime: 'Test string',
                          },
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                        secondaryAggregation: {
                          alignmentPeriod: 'Test string',
                          crossSeriesReducer: 'Test string',
                          groupByFields: ['Test string'],
                          perSeriesAligner: 'Test string',
                        },
                        statisticalTimeSeriesFilter: {
                          numTimeSeries: 42,
                          rankingMethod: 'Test string',
                        },
                      },
                      timeSeriesQueryLanguage: 'Test string',
                      unitOverride: 'Test string',
                    },
                  },
                  sectionHeader: {
                    dividerBelow: true,
                    subtitle: 'Test string',
                  },
                  singleViewGroup: {},
                  text: {
                    content: 'Test string',
                    format: 'Test string',
                    style: {
                      backgroundColor: 'Test string',
                      fontSize: 'Test string',
                      horizontalAlignment: 'Test string',
                      padding: 'Test string',
                      pointerLocation: 'Test string',
                      textColor: 'Test string',
                      verticalAlignment: 'Test string',
                    },
                  },
                  timeSeriesTable: {
                    columnSettings: [
                      {
                        column: 'Test string',
                        visible: true,
                      },
                    ],
                    dataSets: [
                      {
                        minAlignmentPeriod: 'Test string',
                        tableDisplayOptions: {
                          shownColumns: ['Test string'],
                        },
                        tableTemplate: 'Test string',
                        timeSeriesQuery: {
                          opsAnalyticsQuery: {
                            sql: 'Test string',
                          },
                          outputFullDuration: true,
                          prometheusQuery: 'Test string',
                          timeSeriesFilter: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesFilterRatio: {
                            denominator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            numerator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesQueryLanguage: 'Test string',
                          unitOverride: 'Test string',
                        },
                      },
                    ],
                    metricVisualization: 'Test string',
                  },
                  title: 'Test string',
                  xyChart: {
                    chartOptions: {
                      displayHorizontal: true,
                      mode: 'Test string',
                    },
                    dataSets: [
                      {
                        breakdowns: [
                          {
                            aggregationFunction: {
                              parameters: [
                                {
                                  doubleValue: 42,
                                  intValue: 'Test string',
                                },
                              ],
                              type: 'Test string',
                            },
                            column: 'Test string',
                            limit: 42,
                            sortOrder: 'Test string',
                          },
                        ],
                        dimensions: [
                          {
                            column: 'Test string',
                            columnType: 'Test string',
                            floatBinSize: 42,
                            maxBinCount: 42,
                            numericBinSize: 42,
                            sortColumn: 'Test string',
                            sortOrder: 'Test string',
                            timeBinSize: 'Test string',
                          },
                        ],
                        legendTemplate: 'Test string',
                        measures: [
                          {
                            aggregationFunction: {
                              parameters: [
                                {
                                  doubleValue: 42,
                                  intValue: 'Test string',
                                },
                              ],
                              type: 'Test string',
                            },
                            column: 'Test string',
                          },
                        ],
                        minAlignmentPeriod: 'Test string',
                        plotType: 'Test string',
                        targetAxis: 'Test string',
                        timeSeriesQuery: {
                          opsAnalyticsQuery: {
                            sql: 'Test string',
                          },
                          outputFullDuration: true,
                          prometheusQuery: 'Test string',
                          timeSeriesFilter: {
                            aggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            filter: 'Test string',
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesFilterRatio: {
                            denominator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            numerator: {
                              aggregation: {
                                alignmentPeriod: 'Test string',
                                crossSeriesReducer: 'Test string',
                                groupByFields: ['Test string'],
                                perSeriesAligner: 'Test string',
                              },
                              filter: 'Test string',
                            },
                            pickTimeSeriesFilter: {
                              direction: 'Test string',
                              interval: {
                                endTime: 'Test string',
                                startTime: 'Test string',
                              },
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                            secondaryAggregation: {
                              alignmentPeriod: 'Test string',
                              crossSeriesReducer: 'Test string',
                              groupByFields: ['Test string'],
                              perSeriesAligner: 'Test string',
                            },
                            statisticalTimeSeriesFilter: {
                              numTimeSeries: 42,
                              rankingMethod: 'Test string',
                            },
                          },
                          timeSeriesQueryLanguage: 'Test string',
                          unitOverride: 'Test string',
                        },
                      },
                    ],
                    thresholds: [
                      {
                        color: 'Test string',
                        direction: 'Test string',
                        label: 'Test string',
                        targetAxis: 'Test string',
                        value: 42,
                      },
                    ],
                    timeshiftDuration: 'Test string',
                    xAxis: {
                      label: 'Test string',
                      scale: 'Test string',
                    },
                    y2Axis: {
                      label: 'Test string',
                      scale: 'Test string',
                    },
                    yAxis: {
                      label: 'Test string',
                      scale: 'Test string',
                    },
                  },
                },
              ],
            },
          ],
        },
      }
    );
    /** Lists labels for metrics. */
    await gapi.client.monitoring.projects.location.prometheus.api.v1.labels(
      {
        location: 'Test string',
        name: 'Test string',
      },
      {
        end: 'Test string',
        match: 'Test string',
        start: 'Test string',
      }
    );
    /** Evaluate a PromQL query at a single point in time. */
    await gapi.client.monitoring.projects.location.prometheus.api.v1.query(
      {
        location: 'Test string',
        name: 'Test string',
      },
      {
        query: 'Test string',
        time: 'Test string',
        timeout: 'Test string',
      }
    );
    /** Lists exemplars relevant to a given PromQL query, */
    await gapi.client.monitoring.projects.location.prometheus.api.v1.query_exemplars(
      {
        location: 'Test string',
        name: 'Test string',
      },
      {
        end: 'Test string',
        query: 'Test string',
        start: 'Test string',
      }
    );
    /** Evaluate a PromQL query with start, end time range. */
    await gapi.client.monitoring.projects.location.prometheus.api.v1.query_range(
      {
        location: 'Test string',
        name: 'Test string',
      },
      {
        end: 'Test string',
        query: 'Test string',
        start: 'Test string',
        step: 'Test string',
        timeout: 'Test string',
      }
    );
    /** Lists metadata for metrics. */
    await gapi.client.monitoring.projects.location.prometheus.api.v1.series(
      {
        location: 'Test string',
        name: 'Test string',
      },
      {
        end: 'Test string',
        start: 'Test string',
      }
    );
    /** Lists possible values for a given label name. */
    await gapi.client.monitoring.projects.location.prometheus.api.v1.label.values(
      {
        end: 'Test string',
        label: 'Test string',
        location: 'Test string',
        match: 'Test string',
        name: 'Test string',
        start: 'Test string',
      }
    );
    /** Lists metadata for metrics. */
    await gapi.client.monitoring.projects.location.prometheus.api.v1.metadata.list(
      {
        limit: 'Test string',
        location: 'Test string',
        metric: 'Test string',
        name: 'Test string',
      }
    );
  }
});
