/* Type definitions for non-npm package Cloud Run Admin API v1 0.0 */
// Project: https://cloud.google.com/run/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://run.googleapis.com/$discovery/rest?version=v1
// Revision: 20230402

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Cloud Run Admin API v1 */
    function load(urlOrObject: "https://run.googleapis.com/$discovery/rest?version=v1"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "run", version: "v1"): Promise<void>;
    /** @deprecated Please load APIs with discovery documents. */
    function load(name: "run", version: "v1", callback: () => any): void;

    namespace run {
        interface Addressable {
            url?: string;
        }
        interface AuditConfig {
            /** The configuration for logging of each type of permission. */
            auditLogConfigs?: AuditLogConfig[];
            /**
             * Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all
             * services.
             */
            service?: string;
        }
        interface AuditLogConfig {
            /** Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members. */
            exemptedMembers?: string[];
            /** The log type that this config enables. */
            logType?: string;
        }
        interface AuthorizedDomain {
            /** Relative name of the domain authorized for use. Example: `example.com`. */
            id?: string;
            /** Deprecated Read only. Full path to the `AuthorizedDomain` resource in the API. Example: `projects/myproject/authorizedDomains/example.com`. */
            name?: string;
        }
        interface Binding {
            /**
             * The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`,
             * then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which
             * resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            condition?: Expr;
            /**
             * Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on
             * the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service
             * account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific
             * Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example,
             * `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service
             * account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
             * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the
             * users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has
             * been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains
             * the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently
             * deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and
             * the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that
             * has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group
             * retains the role in the binding.
             */
            members?: string[];
            /** Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. */
            role?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface CancelExecutionRequest {
        }
        interface ConfigMapEnvSource {
            /** This field should not be used directly as it is meant to be inlined directly into the message. Use the "name" field instead. */
            localObjectReference?: LocalObjectReference;
            /** The ConfigMap to select from. */
            name?: string;
            /** Specify whether the ConfigMap must be defined. */
            optional?: boolean;
        }
        interface ConfigMapKeySelector {
            /** Required. Not supported by Cloud Run. */
            key?: string;
            /** Not supported by Cloud Run. */
            localObjectReference?: LocalObjectReference;
            /** Required. Not supported by Cloud Run. */
            name?: string;
            /** Not supported by Cloud Run. */
            optional?: boolean;
        }
        interface ConfigMapVolumeSource {
            /**
             * (Optional) Integer representation of mode bits to use on created files by default. Must be a value between 01 and 0777 (octal). If 0 or not set, it will default to 0644. Directories
             * within the path are not affected by this setting. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits.
             * So, the octal integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For
             * chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options
             * that affect the file mode, like fsGroup, and the result can be other mode bits set.
             */
            defaultMode?: number;
            /**
             * (Optional) If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value.
             * If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified that is not present in the Secret, the volume
             * setup will error unless it is marked optional.
             */
            items?: KeyToPath[];
            /** Name of the config. */
            name?: string;
            /** (Optional) Specify whether the Secret or its keys must be defined. */
            optional?: boolean;
        }
        interface Configuration {
            /** The API version for this call such as "serving.knative.dev/v1". */
            apiVersion?: string;
            /** The kind of resource, in this case always "Configuration". */
            kind?: string;
            /** Metadata associated with this Configuration, including name, namespace, labels, and annotations. */
            metadata?: ObjectMeta;
            /** Spec holds the desired state of the Configuration (from the client). */
            spec?: ConfigurationSpec;
            /** Status communicates the observed state of the Configuration (from the controller). */
            status?: ConfigurationStatus;
        }
        interface ConfigurationSpec {
            /** Template holds the latest specification for the Revision to be stamped out. */
            template?: RevisionTemplate;
        }
        interface ConfigurationStatus {
            /** Conditions communicate information about ongoing/complete reconciliation processes that bring the "spec" inline with the observed state of the world. */
            conditions?: GoogleCloudRunV1Condition[];
            /** LatestCreatedRevisionName is the last revision that was created from this Configuration. It might not be ready yet, so for the latest ready revision, use LatestReadyRevisionName. */
            latestCreatedRevisionName?: string;
            /** LatestReadyRevisionName holds the name of the latest Revision stamped out from this Configuration that has had its "Ready" condition become "True". */
            latestReadyRevisionName?: string;
            /**
             * ObservedGeneration is the 'Generation' of the Configuration that was last processed by the controller. The observed generation is updated even if the controller failed to process
             * the spec and create the Revision. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation, and the Ready condition's status is True
             * or False.
             */
            observedGeneration?: number;
        }
        interface Container {
            /** Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references are not supported in Cloud Run. */
            args?: string[];
            /** Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references are not supported in Cloud Run. */
            command?: string[];
            /**
             * List of environment variables to set in the container. EnvVar with duplicate names are generally allowed; if referencing a secret, the name must be unique for the container. For
             * non-secret EnvVar names, the Container will only get the last-declared one.
             */
            env?: EnvVar[];
            /** Not supported by Cloud Run. */
            envFrom?: EnvFromSource[];
            /**
             * Required. Name of the container image in Dockerhub, Google Artifact Registry, or Google Container Registry. If the host is not provided, Dockerhub is assumed. More info:
             * https://kubernetes.io/docs/concepts/containers/images
             */
            image?: string;
            /**
             * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. More info:
             * https://kubernetes.io/docs/concepts/containers/images#updating-images
             */
            imagePullPolicy?: string;
            /** Periodic probe of container liveness. Container will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes */
            livenessProbe?: Probe;
            /** Name of the container specified as a DNS_LABEL (RFC 1123). More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#dns-label-names */
            name?: string;
            /**
             * List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be
             * accessible. If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on.
             */
            ports?: ContainerPort[];
            /** Not supported by Cloud Run. */
            readinessProbe?: Probe;
            /** Compute Resources required by this container. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources */
            resources?: ResourceRequirements;
            /** Not supported by Cloud Run. */
            securityContext?: SecurityContext;
            /**
             * Startup probe of application within the container. All other probes are disabled if a startup probe is provided, until it succeeds. Container will not receive traffic if the probe
             * fails. If not provided, a default startup probe with TCP socket action is used. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
             */
            startupProbe?: Probe;
            /**
             * Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status,
             * such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to
             * /dev/termination-log.
             */
            terminationMessagePath?: string;
            /**
             * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure.
             * FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to
             * 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
             */
            terminationMessagePolicy?: string;
            /** Volume to mount into the container's filesystem. Only supports SecretVolumeSources. Pod volumes to mount into the container's filesystem. */
            volumeMounts?: VolumeMount[];
            /** Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. */
            workingDir?: string;
        }
        interface ContainerPort {
            /**
             * Port number the container listens on. If present, this must be a valid port number, 0 < x < 65536. If not present, it will default to port 8080. For more information, see
             * https://cloud.google.com/run/docs/container-contract#port
             */
            containerPort?: number;
            /** If specified, used to specify which protocol to use. Allowed values are "http1" and "h2c". */
            name?: string;
            /** Protocol for port. Must be "TCP". Defaults to "TCP". */
            protocol?: string;
        }
        interface DomainMapping {
            /** The API version for this call such as "domains.cloudrun.com/v1". */
            apiVersion?: string;
            /** The kind of resource, in this case "DomainMapping". */
            kind?: string;
            /** Metadata associated with this BuildTemplate. */
            metadata?: ObjectMeta;
            /** The spec for this DomainMapping. */
            spec?: DomainMappingSpec;
            /** The current status of the DomainMapping. */
            status?: DomainMappingStatus;
        }
        interface DomainMappingSpec {
            /** The mode of the certificate. */
            certificateMode?: string;
            /**
             * If set, the mapping will override any mapping set before this spec was set. It is recommended that the user leaves this empty to receive an error warning about a potential conflict
             * and only set it once the respective UI has given such a warning.
             */
            forceOverride?: boolean;
            /** The name of the Knative Route that this DomainMapping applies to. The route must exist. */
            routeName?: string;
        }
        interface DomainMappingStatus {
            /** Array of observed DomainMappingConditions, indicating the current state of the DomainMapping. */
            conditions?: GoogleCloudRunV1Condition[];
            /** The name of the route that the mapping currently points to. */
            mappedRouteName?: string;
            /**
             * ObservedGeneration is the 'Generation' of the DomainMapping that was last processed by the controller. Clients polling for completed reconciliation should poll until
             * observedGeneration = metadata.generation and the Ready condition's status is True or False.
             */
            observedGeneration?: number;
            /**
             * The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain
             * mapping.
             */
            resourceRecords?: ResourceRecord[];
            /** Optional. Not supported by Cloud Run. */
            url?: string;
        }
        interface EnvFromSource {
            /** The ConfigMap to select from */
            configMapRef?: ConfigMapEnvSource;
            /** An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER. */
            prefix?: string;
            /** The Secret to select from */
            secretRef?: SecretEnvSource;
        }
        interface EnvVar {
            /** Required. Name of the environment variable. Must be a C_IDENTIFIER. */
            name?: string;
            /** Value of the environment variable. Defaults to "". Variable references are not supported in Cloud Run. */
            value?: string;
            /** Source for the environment variable's value. Only supports secret_key_ref. Cannot be used if value is not empty. */
            valueFrom?: EnvVarSource;
        }
        interface EnvVarSource {
            /** Not supported by Cloud Run. Not supported in Cloud Run. */
            configMapKeyRef?: ConfigMapKeySelector;
            /** Selects a key (version) of a secret in Secret Manager. */
            secretKeyRef?: SecretKeySelector;
        }
        interface ExecAction {
            /**
             * Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is
             * not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as
             * live/healthy and non-zero is unhealthy.
             */
            command?: string[];
        }
        interface Execution {
            /**
             * Optional. APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject
             * unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
             */
            apiVersion?: string;
            /**
             * Optional. Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated.
             * In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
             */
            kind?: string;
            /** Optional. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata */
            metadata?: ObjectMeta;
            /** Optional. Specification of the desired behavior of an execution. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status */
            spec?: ExecutionSpec;
            /** Output only. Current status of an execution. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status */
            status?: ExecutionStatus;
        }
        interface ExecutionReference {
            /** Optional. Completion timestamp of the execution. */
            completionTimestamp?: string;
            /** Optional. Creation timestamp of the execution. */
            creationTimestamp?: string;
            /** Optional. Name of the execution. */
            name?: string;
        }
        interface ExecutionSpec {
            /**
             * Optional. Specifies the maximum desired number of tasks the execution should run at given time. Must be <= task_count. When the job is run, if this field is 0 or unset, the maximum
             * possible value will be used for that execution. The actual number of tasks running in steady state will be less than this number when there are fewer tasks waiting to be completed,
             * i.e. when the work left to do is less than max parallelism.
             */
            parallelism?: number;
            /**
             * Optional. Specifies the desired number of tasks the execution should run. Setting to 1 means that parallelism is limited to 1 and the success of that task signals the success of the
             * execution. Defaults to 1.
             */
            taskCount?: number;
            /** Optional. The template used to create tasks for this execution. */
            template?: TaskTemplateSpec;
        }
        interface ExecutionStatus {
            /** Optional. The number of tasks which reached phase Cancelled. */
            cancelledCount?: number;
            /**
             * Optional. Represents the time that the execution was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form
             * and is in UTC. +optional
             */
            completionTime?: string;
            /**
             * Optional. Conditions communicate information about ongoing/complete reconciliation processes that bring the "spec" inline with the observed state of the world. Execution-specific
             * conditions include: * `ResourcesAvailable`: `True` when underlying resources have been provisioned. * `Started`: `True` when the execution has started to execute. * `Completed`:
             * `True` when the execution has succeeded. `False` when the execution has failed.
             */
            conditions?: GoogleCloudRunV1Condition[];
            /** Optional. The number of tasks which reached phase Failed. */
            failedCount?: number;
            /** Optional. URI where logs for this execution can be found in Cloud Console. */
            logUri?: string;
            /** Optional. The 'generation' of the execution that was last processed by the controller. */
            observedGeneration?: number;
            /** Optional. The number of tasks which have retried at least once. */
            retriedCount?: number;
            /** Optional. The number of actively running tasks. */
            runningCount?: number;
            /**
             * Optional. Represents the time that the execution started to run. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form
             * and is in UTC.
             */
            startTime?: string;
            /** Optional. The number of tasks which reached phase Succeeded. */
            succeededCount?: number;
        }
        interface ExecutionTemplateSpec {
            /**
             * Optional. Optional metadata for this Execution, including labels and annotations. The following annotation keys set properties of the created execution: *
             * `run.googleapis.com/cloudsql-instances` sets Cloud SQL connections. Multiple values should be comma separated. * `run.googleapis.com/vpc-access-connector` sets a Serverless VPC
             * Access connector. * `run.googleapis.com/vpc-access-egress` sets VPC egress. Supported values are `all-traffic`, `all` (deprecated), and `private-ranges-only`. `all-traffic` and
             * `all` provide the same functionality. `all` is deprecated but will continue to be supported. Prefer `all-traffic`.
             */
            metadata?: ObjectMeta;
            /** Required. ExecutionSpec holds the desired configuration for executions of this job. */
            spec?: ExecutionSpec;
        }
        interface Expr {
            /** Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. */
            description?: string;
            /** Textual representation of an expression in Common Expression Language syntax. */
            expression?: string;
            /** Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. */
            location?: string;
            /** Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. */
            title?: string;
        }
        interface GoogleCloudRunV1Condition {
            /** Optional. Last time the condition transitioned from one status to another. */
            lastTransitionTime?: string;
            /** Optional. Human readable message indicating details about the current status. */
            message?: string;
            /**
             * Optional. One-word CamelCase reason for the condition's last transition. These are intended to be stable, unique values which the client may use to trigger error handling logic,
             * whereas messages which may be changed later by the server.
             */
            reason?: string;
            /** Optional. How to interpret this condition. One of Error, Warning, or Info. Conditions of severity Info do not contribute to resource readiness. */
            severity?: string;
            /** Status of the condition, one of True, False, Unknown. */
            status?: string;
            /**
             * type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types
             * common to all resources include: * "Ready" or "Completed": True when the Resource is ready.
             */
            type?: string;
        }
        interface GoogleRpcStatus {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?: number;
            /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
            details?: Array<{ [P in string]: any }>;
            /**
             * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the
             * client.
             */
            message?: string;
        }
        interface GRPCAction {
            /** Port number of the gRPC service. Number must be in the range 1 to 65535. */
            port?: number;
            /**
             * Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). If this is not specified, the
             * default behavior is defined by gRPC.
             */
            service?: string;
        }
        interface HTTPGetAction {
            /** Not supported by Cloud Run. */
            host?: string;
            /** Custom headers to set in the request. HTTP allows repeated headers. */
            httpHeaders?: HTTPHeader[];
            /** Path to access on the HTTP server. */
            path?: string;
            /** Port number to access on the container. Number must be in the range 1 to 65535. */
            port?: number;
            /** Not supported by Cloud Run. */
            scheme?: string;
        }
        interface HTTPHeader {
            /** Required. The header field name */
            name?: string;
            /** The header field value */
            value?: string;
        }
        interface Job {
            /**
             * Optional. APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject
             * unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
             */
            apiVersion?: string;
            /**
             * Optional. Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated.
             * In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
             */
            kind?: string;
            /** Optional. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata */
            metadata?: ObjectMeta;
            /** Optional. Specification of the desired behavior of a job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status */
            spec?: JobSpec;
            /** Output only. Current status of a job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status */
            status?: JobStatus;
        }
        interface JobSpec {
            /** Optional. Describes the execution that will be created when running a job. */
            template?: ExecutionTemplateSpec;
        }
        interface JobStatus {
            /**
             * Conditions communicate information about ongoing/complete reconciliation processes that bring the "spec" inline with the observed state of the world. Job-specific conditions
             * include: * `Ready`: `True` when the job is ready to be executed.
             */
            conditions?: GoogleCloudRunV1Condition[];
            /** Number of executions created for this job. */
            executionCount?: number;
            /** A pointer to the most recently created execution for this job. This is set regardless of the eventual state of the execution. */
            latestCreatedExecution?: ExecutionReference;
            /** The 'generation' of the job that was last processed by the controller. */
            observedGeneration?: number;
        }
        interface KeyToPath {
            /** The Cloud Secret Manager secret version. Can be 'latest' for the latest value, or an integer or a secret alias for a specific version. The key to project. */
            key?: string;
            /**
             * (Optional) Mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0 or not set, the Volume's default mode will be used. Notes * Internally, a umask of 0222
             * will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal integer value should look exactly as the chmod numeric notation with a
             * leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755
             * (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode
             * bits set.
             */
            mode?: number;
            /** The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. */
            path?: string;
        }
        interface ListAuthorizedDomainsResponse {
            /** The authorized domains belonging to the user. */
            domains?: AuthorizedDomain[];
            /** Continuation token for fetching the next page of results. */
            nextPageToken?: string;
        }
        interface ListConfigurationsResponse {
            /** The API version for this call such as "serving.knative.dev/v1". */
            apiVersion?: string;
            /** List of Configurations. */
            items?: Configuration[];
            /** The kind of this resource, in this case "ConfigurationList". */
            kind?: string;
            /** Metadata associated with this Configuration list. */
            metadata?: ListMeta;
            /** Locations that could not be reached. */
            unreachable?: string[];
        }
        interface ListDomainMappingsResponse {
            /** The API version for this call such as "domains.cloudrun.com/v1". */
            apiVersion?: string;
            /** List of DomainMappings. */
            items?: DomainMapping[];
            /** The kind of this resource, in this case "DomainMappingList". */
            kind?: string;
            /** Metadata associated with this DomainMapping list. */
            metadata?: ListMeta;
            /** Locations that could not be reached. */
            unreachable?: string[];
        }
        interface ListExecutionsResponse {
            /** The API version for this call such as "run.googleapis.com/v1". */
            apiVersion?: string;
            /** List of Executions. */
            items?: Execution[];
            /** The kind of this resource, in this case "ExecutionsList". */
            kind?: string;
            /** Metadata associated with this executions list. */
            metadata?: ListMeta;
            /** Locations that could not be reached. */
            unreachable?: string[];
        }
        interface ListJobsResponse {
            /** The API version for this call such as "run.googleapis.com/v1". */
            apiVersion?: string;
            /** List of Jobs. */
            items?: Job[];
            /** The kind of this resource, in this case "JobsList". */
            kind?: string;
            /** Metadata associated with this jobs list. */
            metadata?: ListMeta;
            /** Locations that could not be reached. */
            unreachable?: string[];
        }
        interface ListLocationsResponse {
            /** A list of locations that matches the specified filter in the request. */
            locations?: Location[];
            /** The standard List next-page token. */
            nextPageToken?: string;
        }
        interface ListMeta {
            /**
             * Continuation token is a value emitted when the count of items is larger than the user/system limit. To retrieve the next page of items, pass the value of `continue` as the next
             * request's `page_token`.
             */
            continue?: string;
            /**
             * Opaque string that identifies the server's internal version of this object. It can be used by clients to determine when objects have changed. If the message is passed back to the
             * server, it must be left unmodified. https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
             */
            resourceVersion?: string;
            /** URL representing this object. */
            selfLink?: string;
        }
        interface ListRevisionsResponse {
            /** The API version for this call such as "serving.knative.dev/v1". */
            apiVersion?: string;
            /** List of Revisions. */
            items?: Revision[];
            /** The kind of this resource, in this case "RevisionList". */
            kind?: string;
            /** Metadata associated with this revision list. */
            metadata?: ListMeta;
            /** Locations that could not be reached. */
            unreachable?: string[];
        }
        interface ListRoutesResponse {
            /** The API version for this call such as "serving.knative.dev/v1". */
            apiVersion?: string;
            /** List of Routes. */
            items?: Route[];
            /** The kind of this resource, in this case always "RouteList". */
            kind?: string;
            /** Metadata associated with this Route list. */
            metadata?: ListMeta;
            /** Locations that could not be reached. */
            unreachable?: string[];
        }
        interface ListServicesResponse {
            /** The API version for this call; returns "serving.knative.dev/v1". */
            apiVersion?: string;
            /** List of Services. */
            items?: Service[];
            /** The kind of this resource; returns "ServiceList". */
            kind?: string;
            /** Metadata associated with this Service list. */
            metadata?: ListMeta;
            /** For calls against the global endpoint, returns the list of Cloud locations that could not be reached. For regional calls, this field is not used. */
            unreachable?: string[];
        }
        interface ListTasksResponse {
            /** The API version for this call such as "run.googleapis.com/v1". */
            apiVersion?: string;
            /** List of Tasks. */
            items?: Task[];
            /** The kind of this resource, in this case "TasksList". */
            kind?: string;
            /** Metadata associated with this tasks list. */
            metadata?: ListMeta;
            /** Locations that could not be reached. */
            unreachable?: string[];
        }
        interface LocalObjectReference {
            /** Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names */
            name?: string;
        }
        interface Location {
            /** The friendly name for this location, typically a nearby city name. For example, "Tokyo". */
            displayName?: string;
            /** Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"} */
            labels?: { [P in string]: string };
            /** The canonical id for this location. For example: `"us-east1"`. */
            locationId?: string;
            /** Service-specific metadata. For example the available capacity at the given location. */
            metadata?: { [P in string]: any };
            /** Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"` */
            name?: string;
        }
        interface ObjectMeta {
            /**
             * Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when
             * modifying objects. In Cloud Run, annotations with 'run.googleapis.com/' and 'autoscaling.knative.dev' are restricted, and the accepted annotations will be different depending on the
             * resource type. * `autoscaling.knative.dev/maxScale`: Revision. * `autoscaling.knative.dev/minScale`: Revision. * `run.googleapis.com/binary-authorization-breakglass`: Service, Job,
             * * `run.googleapis.com/binary-authorization`: Service, Job, Execution. * `run.googleapis.com/client-name`: All resources. * `run.googleapis.com/cloudsql-instances`: Revision,
             * Execution. * `run.googleapis.com/cpu-throttling`: Revision. * `run.googleapis.com/custom-audiences`: Service. * `run.googleapis.com/description`: Service. *
             * `run.googleapis.com/encryption-key-shutdown-hours`: Revision * `run.googleapis.com/encryption-key`: Revision, Execution. * `run.googleapis.com/execution-environment`: Revision,
             * Execution. * `run.googleapis.com/gc-traffic-tags`: Service. * `run.googleapis.com/ingress`: Service. * `run.googleapis.com/launch-stage`: Service, Job. *
             * `run.googleapis.com/network-interfaces`: Revision, Execution. * `run.googleapis.com/post-key-revocation-action-type`: Revision. * `run.googleapis.com/secrets`: Revision, Execution.
             * * `run.googleapis.com/secure-session-agent`: Revision. * `run.googleapis.com/sessionAffinity`: Revision. * `run.googleapis.com/startup-cpu-boost`: Revision. *
             * `run.googleapis.com/vpc-access-connector`: Revision, Execution. * `run.googleapis.com/vpc-access-egress`: Revision, Execution. Execution. More info:
             * https://kubernetes.io/docs/user-guide/annotations
             */
            annotations?: { [P in string]: string };
            /** Not supported by Cloud Run */
            clusterName?: string;
            /** UTC timestamp representing the server time when this object was created. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata */
            creationTimestamp?: string;
            /** Not supported by Cloud Run */
            deletionGracePeriodSeconds?: number;
            /** The read-only soft deletion timestamp for this resource. In Cloud Run, users are not able to set this field. Instead, they must call the corresponding Delete API. */
            deletionTimestamp?: string;
            /** Not supported by Cloud Run */
            finalizers?: string[];
            /** Not supported by Cloud Run */
            generateName?: string;
            /** A system-provided sequence number representing a specific generation of the desired state. */
            generation?: number;
            /**
             * Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes. More info:
             * https://kubernetes.io/docs/user-guide/labels
             */
            labels?: { [P in string]: string };
            /**
             * Required. The name of the resource. In Cloud Run, name is required when creating top-level resources (Service, Job), must be unique within a Cloud Run project/region, and cannot be
             * changed once created. More info: https://kubernetes.io/docs/user-guide/identifiers#names
             */
            name?: string;
            /** Required. Defines the space within each name must be unique within a Cloud Run region. In Cloud Run, it must be project ID or number. */
            namespace?: string;
            /** Not supported by Cloud Run */
            ownerReferences?: OwnerReference[];
            /**
             * Opaque, system-generated value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic
             * concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit
             * the value to disable conflict-detection. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
             */
            resourceVersion?: string;
            /** URL representing this object. */
            selfLink?: string;
            /** Unique, system-generated identifier for this resource. More info: https://kubernetes.io/docs/user-guide/identifiers#uids */
            uid?: string;
        }
        interface OwnerReference {
            /** This is not supported or used by Cloud Run. */
            apiVersion?: string;
            /** This is not supported or used by Cloud Run. */
            blockOwnerDeletion?: boolean;
            /** This is not supported or used by Cloud Run. */
            controller?: boolean;
            /** This is not supported or used by Cloud Run. */
            kind?: string;
            /** This is not supported or used by Cloud Run. */
            name?: string;
            /** This is not supported or used by Cloud Run. */
            uid?: string;
        }
        interface Policy {
            /** Specifies cloud audit logging configuration for this policy. */
            auditConfigs?: AuditConfig[];
            /**
             * Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings`
             * must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a
             * principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another
             * 1,450 principals to the `bindings` in the `Policy`.
             */
            bindings?: Binding[];
            /**
             * `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make
             * use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems
             * are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM
             * Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1`
             * policy, and all of the conditions in the version `3` policy are lost.
             */
            etag?: string;
            /**
             * Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings
             * must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a
             * policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use
             * IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1`
             * policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave
             * the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            version?: number;
        }
        interface Probe {
            /** Not supported by Cloud Run. */
            exec?: ExecAction;
            /** Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. */
            failureThreshold?: number;
            /** GRPCAction specifies an action involving a GRPC port. */
            grpc?: GRPCAction;
            /** HTTPGet specifies the http request to perform. */
            httpGet?: HTTPGetAction;
            /**
             * Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value
             * for startup probe is 240. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
             */
            initialDelaySeconds?: number;
            /**
             * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be
             * greater or equal than timeout_seconds.
             */
            periodSeconds?: number;
            /** Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 if set. */
            successThreshold?: number;
            /** TCPSocket specifies an action involving a TCP port. */
            tcpSocket?: TCPSocketAction;
            /**
             * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than period_seconds. More info:
             * https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
             */
            timeoutSeconds?: number;
        }
        interface ResourceRecord {
            /** Relative name of the object affected by this record. Only applicable for `CNAME` records. Example: 'www'. */
            name?: string;
            /** Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1). */
            rrdata?: string;
            /** Resource record type. Example: `AAAA`. */
            type?: string;
        }
        interface ResourceRequirements {
            /**
             * Only memory and CPU are supported. Limits describes the maximum amount of compute resources allowed. The values of the map is string form of the 'quantity' k8s type:
             * https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
             */
            limits?: { [P in string]: string };
            /**
             * Only memory and CPU are supported. Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is
             * explicitly specified, otherwise to an implementation-defined value. The values of the map is string form of the 'quantity' k8s type:
             * https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
             */
            requests?: { [P in string]: string };
        }
        interface Revision {
            /** The API version for this call such as "serving.knative.dev/v1". */
            apiVersion?: string;
            /** The kind of this resource, in this case "Revision". */
            kind?: string;
            /** Metadata associated with this Revision, including name, namespace, labels, and annotations. */
            metadata?: ObjectMeta;
            /** Spec holds the desired state of the Revision (from the client). */
            spec?: RevisionSpec;
            /** Status communicates the observed state of the Revision (from the controller). */
            status?: RevisionStatus;
        }
        interface RevisionSpec {
            /** ContainerConcurrency specifies the maximum allowed in-flight (concurrent) requests per container instance of the Revision. If not specified, defaults to 80. */
            containerConcurrency?: number;
            /**
             * Containers holds the single container that defines the unit of execution for this Revision. In the context of a Revision, we disallow a number of fields on this Container,
             * including: name and lifecycle. In Cloud Run, only a single container may be provided. The runtime contract is documented here:
             * https://github.com/knative/specs/blob/main/specs/serving/runtime-contract.md
             */
            containers?: Container[];
            /** Not supported by Cloud Run. */
            enableServiceLinks?: boolean;
            /** Not supported by Cloud Run. */
            imagePullSecrets?: LocalObjectReference[];
            /**
             * Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what
             * permissions the revision has. If not provided, the revision will use the project's default service account.
             */
            serviceAccountName?: string;
            /**
             * TimeoutSeconds holds the max duration the instance is allowed for responding to a request. Cloud Run: defaults to 300 seconds (5 minutes). Maximum allowed value is 3600 seconds (1
             * hour).
             */
            timeoutSeconds?: number;
            volumes?: Volume[];
        }
        interface RevisionStatus {
            /**
             * Conditions communicate information about ongoing/complete reconciliation processes that bring the "spec" inline with the observed state of the world. As a Revision is being
             * prepared, it will incrementally update conditions. Revision-specific conditions include: * `ResourcesAvailable`: `True` when underlying resources have been provisioned. *
             * `ContainerHealthy`: `True` when the Revision readiness check completes. * `Active`: `True` when the Revision may receive traffic.
             */
            conditions?: GoogleCloudRunV1Condition[];
            /**
             * ImageDigest holds the resolved digest for the image specified within .Spec.Container.Image. The digest is resolved during the creation of Revision. This field holds the digest value
             * regardless of whether a tag or digest was originally specified in the Container object.
             */
            imageDigest?: string;
            /** Optional. Specifies the generated logging url for this particular revision based on the revision url template specified in the controller's config. */
            logUrl?: string;
            /**
             * ObservedGeneration is the 'Generation' of the Revision that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration =
             * metadata.generation, and the Ready condition's status is True or False.
             */
            observedGeneration?: number;
            /** Not currently used by Cloud Run. */
            serviceName?: string;
        }
        interface RevisionTemplate {
            /**
             * Optional metadata for this Revision, including labels and annotations. Name will be generated by the Configuration. The following annotation keys set properties of the created
             * revision: * `autoscaling.knative.dev/minScale` sets the minimum number of instances. * `autoscaling.knative.dev/maxScale` sets the maximum number of instances. *
             * `run.googleapis.com/cloudsql-instances` sets Cloud SQL connections. Multiple values should be comma separated. * `run.googleapis.com/vpc-access-connector` sets a Serverless VPC
             * Access connector. * `run.googleapis.com/vpc-access-egress` sets VPC egress. Supported values are `all-traffic`, `all` (deprecated), and `private-ranges-only`. `all-traffic` and
             * `all` provide the same functionality. `all` is deprecated but will continue to be supported. Prefer `all-traffic`.
             */
            metadata?: ObjectMeta;
            /** RevisionSpec holds the desired state of the Revision (from the client). */
            spec?: RevisionSpec;
        }
        interface Route {
            /** The API version for this call such as "serving.knative.dev/v1". */
            apiVersion?: string;
            /** The kind of this resource, in this case always "Route". */
            kind?: string;
            /** Metadata associated with this Route, including name, namespace, labels, and annotations. */
            metadata?: ObjectMeta;
            /** Spec holds the desired state of the Route (from the client). */
            spec?: RouteSpec;
            /** Status communicates the observed state of the Route (from the controller). */
            status?: RouteStatus;
        }
        interface RouteSpec {
            /** Traffic specifies how to distribute traffic over a collection of Knative Revisions and Configurations. Cloud Run currently supports a single configurationName. */
            traffic?: TrafficTarget[];
        }
        interface RouteStatus {
            /** Similar to url, information on where the service is available on HTTP. */
            address?: Addressable;
            /** Conditions communicates information about ongoing/complete reconciliation processes that bring the "spec" inline with the observed state of the world. */
            conditions?: GoogleCloudRunV1Condition[];
            /**
             * ObservedGeneration is the 'Generation' of the Route that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration =
             * metadata.generation and the Ready condition's status is True or False. Note that providing a TrafficTarget that has latest_revision=True will result in a Route that does not
             * increment either its metadata.generation or its observedGeneration, as new "latest ready" revisions from the Configuration are processed without an update to the Route's spec.
             */
            observedGeneration?: number;
            /**
             * Traffic holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the
             * LatestReadyRevisionName that was last observed.
             */
            traffic?: TrafficTarget[];
            /** URL holds the url that will distribute traffic over the provided traffic targets. It generally has the form: https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app */
            url?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface RunJobRequest {
        }
        interface SecretEnvSource {
            /** This field should not be used directly as it is meant to be inlined directly into the message. Use the "name" field instead. */
            localObjectReference?: LocalObjectReference;
            /** The Secret to select from. */
            name?: string;
            /** Specify whether the Secret must be defined */
            optional?: boolean;
        }
        interface SecretKeySelector {
            /**
             * Required. A Cloud Secret Manager secret version. Must be 'latest' for the latest version, an integer for a specific version, or a version alias. The key of the secret to select
             * from. Must be a valid secret key.
             */
            key?: string;
            /** This field should not be used directly as it is meant to be inlined directly into the message. Use the "name" field instead. */
            localObjectReference?: LocalObjectReference;
            /**
             * The name of the secret in Cloud Secret Manager. By default, the secret is assumed to be in the same project. If the secret is in another project, you must define an alias. An alias
             * definition has the form: :projects//secrets/. If multiple alias definitions are needed, they must be separated by commas. The alias definitions must be set on the
             * run.googleapis.com/secrets annotation. The name of the secret in the pod's namespace to select from.
             */
            name?: string;
            /** Specify whether the Secret or its key must be defined. */
            optional?: boolean;
        }
        interface SecretVolumeSource {
            /**
             * Integer representation of mode bits to use on created files by default. Must be a value between 01 and 0777 (octal). If 0 or not set, it will default to 0444. Directories within the
             * path are not affected by this setting. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal
             * integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640
             * (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect
             * the file mode, like fsGroup, and the result can be other mode bits set.
             */
            defaultMode?: number;
            /**
             * A list of secret versions to mount in the volume. If no items are specified, the volume will expose a file with the same name as the secret name. The contents of the file will be
             * the data in the latest version of the secret. If items are specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the
             * file exposed in the volume. When items are defined, they must specify both a key and a path.
             */
            items?: KeyToPath[];
            /** Not supported by Cloud Run. */
            optional?: boolean;
            /**
             * The name of the secret in Cloud Secret Manager. By default, the secret is assumed to be in the same project. If the secret is in another project, you must define an alias. An alias
             * definition has the form: :projects//secrets/. If multiple alias definitions are needed, they must be separated by commas. The alias definitions must be set on the
             * run.googleapis.com/secrets annotation. Name of the secret in the container's namespace to use.
             */
            secretName?: string;
        }
        interface SecurityContext {
            /**
             * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both
             * SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
             */
            runAsUser?: number;
        }
        interface Service {
            /** The API version for this call. It must be "serving.knative.dev/v1". */
            apiVersion?: string;
            /** The kind of resource. It must be "Service". */
            kind?: string;
            /**
             * Metadata associated with this Service, including name, namespace, labels, and annotations. In Cloud Run, annotations with 'run.googleapis.com/' and 'autoscaling.knative.dev' are
             * restricted, and the accepted annotations will be different depending on the resource type. The following Cloud Run-specific annotations are accepted in Service.metadata.annotations.
             * * `run.googleapis.com/binary-authorization-breakglass` * `run.googleapis.com/binary-authorization` * `run.googleapis.com/client-name` * `run.googleapis.com/custom-audiences` *
             * `run.googleapis.com/description` * `run.googleapis.com/gc-traffic-tags` * `run.googleapis.com/ingress` * `run.googleapis.com/ingress` sets the ingress settings for the Service. See
             * [the ingress settings documentation](/run/docs/securing/ingress) for details on configuring ingress settings. * `run.googleapis.com/ingress-status` is output-only and contains the
             * currently active ingress settings for the Service. `run.googleapis.com/ingress-status` may differ from `run.googleapis.com/ingress` while the system is processing a change to
             * `run.googleapis.com/ingress` or if the system failed to process a change to `run.googleapis.com/ingress`. When the system has processed all changes successfully
             * `run.googleapis.com/ingress-status` and `run.googleapis.com/ingress` are equal.
             */
            metadata?: ObjectMeta;
            /** Holds the desired state of the Service (from the client). */
            spec?: ServiceSpec;
            /** Communicates the system-controlled state of the Service. */
            status?: ServiceStatus;
        }
        interface ServiceSpec {
            /** Holds the latest specification for the Revision to be stamped out. */
            template?: RevisionTemplate;
            /** Specifies how to distribute traffic over a collection of Knative Revisions and Configurations to the Service's main URL. */
            traffic?: TrafficTarget[];
        }
        interface ServiceStatus {
            /** Similar to url, information on where the service is available on HTTP. */
            address?: Addressable;
            /**
             * Conditions communicate information about ongoing/complete reconciliation processes that bring the `spec` inline with the observed state of the world. Service-specific conditions
             * include: * `ConfigurationsReady`: `True` when the underlying Configuration is ready. * `RoutesReady`: `True` when the underlying Route is ready. * `Ready`: `True` when all
             * underlying resources are ready.
             */
            conditions?: GoogleCloudRunV1Condition[];
            /** Name of the last revision that was created from this Service's Configuration. It might not be ready yet, for that use LatestReadyRevisionName. */
            latestCreatedRevisionName?: string;
            /** Name of the latest Revision from this Service's Configuration that has had its `Ready` condition become `True`. */
            latestReadyRevisionName?: string;
            /**
             * Returns the generation last fully processed by the system. This will only match metadata.generation when reconciliation is complete. Clients polling for completed reconciliation
             * should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False.
             */
            observedGeneration?: number;
            /**
             * Holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the
             * LatestReadyRevisionName that we last observed.
             */
            traffic?: TrafficTarget[];
            /** URL that will distribute traffic over the provided traffic targets. It generally has the form https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app */
            url?: string;
        }
        interface SetIamPolicyRequest {
            /**
             * REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud
             * services (such as Projects) might reject them.
             */
            policy?: Policy;
            /**
             * OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used:
             * `paths: "bindings, etag"`
             */
            updateMask?: string;
        }
        interface Status {
            /** Suggested HTTP return code for this status, 0 if not set. */
            code?: number;
            /**
             * Extended data associated with the reason. Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema
             * except that defined by the reason type.
             */
            details?: StatusDetails;
            /** A human-readable description of the status of this operation. */
            message?: string;
            /** Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds */
            metadata?: ListMeta;
            /**
             * A machine-readable description of why this operation is in the "Failure" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but
             * does not override it.
             */
            reason?: string;
            /** Status of the operation. One of: "Success" or "Failure". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status */
            status?: string;
        }
        interface StatusCause {
            /**
             * The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed. Fields
             * may appear more than once in an array of causes due to fields having multiple errors. Examples: "name" - the field "name" on the current resource "items[0].name" - the field "name"
             * on the first array entry in "items"
             */
            field?: string;
            /** A human-readable description of the cause of the error. This field may be presented as-is to a reader. */
            message?: string;
            /** A machine-readable description of the cause of the error. If this value is empty there is no information available. */
            reason?: string;
        }
        interface StatusDetails {
            /** The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes. */
            causes?: StatusCause[];
            /** The group attribute of the resource associated with the status StatusReason. */
            group?: string;
            /**
             * The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info:
             * https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
             */
            kind?: string;
            /** The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described). */
            name?: string;
            /**
             * If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may
             * indicate how long to wait before taking the alternate action.
             */
            retryAfterSeconds?: number;
            /** UID of the resource. (when there is a single resource which can be described). More info: https://kubernetes.io/docs/user-guide/identifiers#uids */
            uid?: string;
        }
        interface Task {
            /**
             * Optional. APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject
             * unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
             */
            apiVersion?: string;
            /**
             * Optional. Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated.
             * In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
             */
            kind?: string;
            /** Optional. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata */
            metadata?: ObjectMeta;
            /** Optional. Specification of the desired behavior of a task. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status */
            spec?: TaskSpec;
            /** Output only. Current status of a task. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status */
            status?: TaskStatus;
        }
        interface TaskAttemptResult {
            /**
             * Optional. The exit code of this attempt. This may be unset if the container was unable to exit cleanly with a code due to some other failure. See status field for possible failure
             * details.
             */
            exitCode?: number;
            /** Optional. The status of this attempt. If the status code is OK, then the attempt succeeded. */
            status?: GoogleRpcStatus;
        }
        interface TaskSpec {
            /** Optional. List of containers belonging to the task. We disallow a number of fields on this Container. Only a single container may be provided. */
            containers?: Container[];
            /** Optional. Number of retries allowed per task, before marking this job failed. Defaults to 3. */
            maxRetries?: number;
            /**
             * Optional. Email address of the IAM service account associated with the task of a job execution. The service account represents the identity of the running task, and determines what
             * permissions the task has. If not provided, the task will use the project's default service account.
             */
            serviceAccountName?: string;
            /**
             * Optional. Duration in seconds the task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task,
             * meaning each retry can run for the full timeout. Defaults to 600 seconds.
             */
            timeoutSeconds?: string;
            /** Optional. List of volumes that can be mounted by containers belonging to the task. More info: https://kubernetes.io/docs/concepts/storage/volumes */
            volumes?: Volume[];
        }
        interface TaskStatus {
            /**
             * Optional. Represents time when the task was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in
             * UTC.
             */
            completionTime?: string;
            /**
             * Optional. Conditions communicate information about ongoing/complete reconciliation processes that bring the "spec" inline with the observed state of the world. Task-specific
             * conditions include: * `Started`: `True` when the task has started to execute. * `Completed`: `True` when the task has succeeded. `False` when the task has failed.
             */
            conditions?: GoogleCloudRunV1Condition[];
            /** Required. Index of the task, unique per execution, and beginning at 0. */
            index?: number;
            /** Optional. Result of the last attempt of this task. */
            lastAttemptResult?: TaskAttemptResult;
            /** Optional. URI where logs for this task can be found in Cloud Console. */
            logUri?: string;
            /** Optional. The 'generation' of the task that was last processed by the controller. */
            observedGeneration?: number;
            /** Optional. The number of times this task was retried. Instances are retried when they fail up to the maxRetries limit. */
            retried?: number;
            /**
             * Optional. Represents time when the task started to run. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is
             * in UTC.
             */
            startTime?: string;
        }
        interface TaskTemplateSpec {
            /** Optional. Specification of the desired behavior of the task. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status */
            spec?: TaskSpec;
        }
        interface TCPSocketAction {
            /** Not supported by Cloud Run. */
            host?: string;
            /** Port number to access on the container. Number must be in the range 1 to 65535. */
            port?: number;
        }
        interface TestIamPermissionsRequest {
            /**
             * The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM
             * Overview](https://cloud.google.com/iam/docs/overview#permissions).
             */
            permissions?: string[];
        }
        interface TestIamPermissionsResponse {
            /** A subset of `TestPermissionsRequest.permissions` that the caller is allowed. */
            permissions?: string[];
        }
        interface TrafficTarget {
            /** [Deprecated] Not supported in Cloud Run. It must be empty. */
            configurationName?: string;
            /**
             * Uses the "status.latestReadyRevisionName" of the Service to determine the traffic target. When it changes, traffic will automatically migrate from the prior "latest ready" revision
             * to the new one. This field must be false if RevisionName is set. This field defaults to true otherwise. If the field is set to true on Status, this means that the Revision was
             * resolved from the Service's latest ready revision.
             */
            latestRevision?: boolean;
            /** Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified. */
            percent?: number;
            /** Points this traffic target to a specific Revision. This field is mutually exclusive with latest_revision. */
            revisionName?: string;
            /** Tag is used to expose a dedicated url for referencing this target exclusively. */
            tag?: string;
            /**
             * Output only. URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. https://) and a
             * hostname, but may not contain anything else (e.g. basic auth, url path, etc.)
             */
            url?: string;
        }
        interface Volume {
            /** Not supported in Cloud Run. */
            configMap?: ConfigMapVolumeSource;
            /** Volume's name. In Cloud Run Fully Managed, the name 'cloudsql' is reserved. */
            name?: string;
            /** The secret's value will be presented as the content of a file whose name is defined in the item path. If no items are defined, the name of the file is the secretName. */
            secret?: SecretVolumeSource;
        }
        interface VolumeMount {
            /** Required. Path within the container at which the volume should be mounted. Must not contain ':'. */
            mountPath?: string;
            /** Required. The name of the volume. There must be a corresponding Volume with the same name. */
            name?: string;
            /** Only true is accepted for Secret Volumes. Defaults to true for Secrets Volumes. */
            readOnly?: boolean;
            /** Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root). */
            subPath?: string;
        }
        interface AuthorizeddomainsResource {
            /** List authorized domains. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Maximum results to return per page. */
                pageSize?: number;
                /** Continuation token for fetching the next page of results. */
                pageToken?: string;
                /** Name of the parent Project resource. Example: `projects/myproject`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ListAuthorizedDomainsResponse>;
        }
        interface ConfigurationsResource {
            /** Get information about a configuration. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the configuration to retrieve. For Cloud Run, replace {namespace_id} with the project ID or number. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Configuration>;
            /** List configurations. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Optional. Encoded string to continue paging. */
                continue?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Not supported by Cloud Run. */
                fieldSelector?: string;
                /** Not supported by Cloud Run. */
                includeUninitialized?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn. */
                labelSelector?: string;
                /** Optional. The maximum number of the records that should be returned. */
                limit?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The namespace from which the configurations should be listed. For Cloud Run, replace {namespace_id} with the project ID or number. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Not supported by Cloud Run. */
                resourceVersion?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Not supported by Cloud Run. */
                watch?: boolean;
            }): Request<ListConfigurationsResponse>;
        }
        interface DomainmappingsResource {
            /** Create a new domain mapping. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * The namespace in which the domain mapping should be created. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form
                 * namespaces/{namespace}. For example: namespaces/PROJECT_ID
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: DomainMapping;
            }): Request<DomainMapping>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * The namespace in which the domain mapping should be created. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form
                 * namespaces/{namespace}. For example: namespaces/PROJECT_ID
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: DomainMapping): Request<DomainMapping>;
            /** Delete a domain mapping. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** Cloud Run currently ignores this parameter. */
                apiVersion?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Cloud Run currently ignores this parameter. */
                kind?: string;
                /**
                 * The name of the domain mapping to delete. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For
                 * example: namespaces/PROJECT_ID
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see
                 * kubernetes.io/docs/concepts/architecture/garbage-collection/ for more information.
                 */
                propagationPolicy?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Status>;
            /** Get information about a domain mapping. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The name of the domain mapping to retrieve. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For
                 * example: namespaces/PROJECT_ID
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<DomainMapping>;
            /** List all domain mappings. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Optional. Encoded string to continue paging. */
                continue?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run. */
                fieldSelector?: string;
                /** Not currently used by Cloud Run. */
                includeUninitialized?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn. */
                labelSelector?: string;
                /** Optional. The maximum number of records that should be returned. */
                limit?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * The namespace from which the domain mappings should be listed. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form
                 * namespaces/{namespace}. For example: namespaces/PROJECT_ID
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run. */
                resourceVersion?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run. */
                watch?: boolean;
            }): Request<ListDomainMappingsResponse>;
        }
        interface ExecutionsResource {
            /** Cancel an execution. */
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the execution to cancel. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: CancelExecutionRequest;
            }): Request<Execution>;
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the execution to cancel. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: CancelExecutionRequest): Request<Execution>;
            /** Delete an execution. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** Optional. Cloud Run currently ignores this parameter. */
                apiVersion?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. Cloud Run currently ignores this parameter. */
                kind?: string;
                /** Required. The name of the execution to delete. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Optional. Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see
                 * https://kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information.
                 */
                propagationPolicy?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Status>;
            /** Get information about an execution. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the execution to retrieve. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Execution>;
            /** List executions. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Optional. Optional encoded string to continue paging. */
                continue?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. Not supported by Cloud Run. */
                fieldSelector?: string;
                /** Optional. Not supported by Cloud Run. */
                includeUninitialized?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn. */
                labelSelector?: string;
                /** Optional. The maximum number of the records that should be returned. */
                limit?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The namespace from which the executions should be listed. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example:
                 * namespaces/PROJECT_ID
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. Not supported by Cloud Run. */
                resourceVersion?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Optional. Not supported by Cloud Run. */
                watch?: boolean;
            }): Request<ListExecutionsResponse>;
        }
        interface JobsResource {
            /** Create a job. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The namespace in which the job should be created. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example:
                 * namespaces/PROJECT_ID
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: Job;
            }): Request<Job>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The namespace in which the job should be created. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example:
                 * namespaces/PROJECT_ID
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: Job): Request<Job>;
            /** Delete a job. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** Optional. Cloud Run currently ignores this parameter. */
                apiVersion?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. Cloud Run currently ignores this parameter. */
                kind?: string;
                /** Required. The name of the job to delete. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Optional. Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see
                 * kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information.
                 */
                propagationPolicy?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Status>;
            /** Get information about a job. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the job to retrieve. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Job>;
            /** List jobs. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Optional. Optional encoded string to continue paging. */
                continue?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. Not supported by Cloud Run. */
                fieldSelector?: string;
                /** Optional. Not supported by Cloud Run. */
                includeUninitialized?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Optional. Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn. */
                labelSelector?: string;
                /** Optional. The maximum number of records that should be returned. */
                limit?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The namespace from which the jobs should be listed. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example:
                 * namespaces/PROJECT_ID
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. Not supported by Cloud Run. */
                resourceVersion?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Optional. Not supported by Cloud Run. */
                watch?: boolean;
            }): Request<ListJobsResponse>;
            /**
             * Replace a job. Only the spec and metadata labels and annotations are modifiable. After the Replace request, Cloud Run will work to make the 'status' match the requested 'spec'. May
             * provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control.
             */
            replaceJob(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the job being replaced. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: Job;
            }): Request<Job>;
            replaceJob(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the job being replaced. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: Job): Request<Job>;
            /** Trigger creation of a new execution of this job. */
            run(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the job to run. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: RunJobRequest;
            }): Request<Execution>;
            run(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the job to run. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: RunJobRequest): Request<Execution>;
        }
        interface RevisionsResource {
            /** Delete a revision. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** Cloud Run currently ignores this parameter. */
                apiVersion?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Cloud Run currently ignores this parameter. */
                kind?: string;
                /**
                 * The name of the revision to delete. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example:
                 * namespaces/PROJECT_ID
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see
                 * https://kubernetes.io/docs/concepts/architecture/garbage-collection/ for more information.
                 */
                propagationPolicy?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Status>;
            /** Get information about a revision. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The name of the revision to retrieve. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example:
                 * namespaces/PROJECT_ID
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Revision>;
            /** List revisions. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Optional. Encoded string to continue paging. */
                continue?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run. */
                fieldSelector?: string;
                /** Not currently used by Cloud Run. */
                includeUninitialized?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn. */
                labelSelector?: string;
                /** Optional. The maximum number of records that should be returned. */
                limit?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * The namespace from which the revisions should be listed. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form
                 * namespaces/{namespace}. For example: namespaces/PROJECT_ID
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run. */
                resourceVersion?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run. */
                watch?: boolean;
            }): Request<ListRevisionsResponse>;
        }
        interface RoutesResource {
            /** Get information about a route. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The name of the route to retrieve. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example:
                 * namespaces/PROJECT_ID
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Route>;
            /** List routes. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Optional. Encoded string to continue paging. */
                continue?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run. */
                fieldSelector?: string;
                /** Not currently used by Cloud Run. */
                includeUninitialized?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn. */
                labelSelector?: string;
                /** Optional. The maximum number of records that should be returned. */
                limit?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * The namespace from which the routes should be listed. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}.
                 * For example: namespaces/PROJECT_ID
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run. */
                resourceVersion?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run. */
                watch?: boolean;
            }): Request<ListRoutesResponse>;
        }
        interface ServicesResource {
            /** Creates a new Service. Service creation will trigger a new deployment. Use GetService, and check service.status to determine if the Service is ready. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The resource's parent. In Cloud Run, it may be one of the following: * `{project_id_or_number}` * `namespaces/{project_id_or_number}` *
                 * `namespaces/{project_id_or_number}/services` * `projects/{project_id_or_number}/locations/{region}` * `projects/{project_id_or_number}/regions/{region}`
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: Service;
            }): Request<Service>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The resource's parent. In Cloud Run, it may be one of the following: * `{project_id_or_number}` * `namespaces/{project_id_or_number}` *
                 * `namespaces/{project_id_or_number}/services` * `projects/{project_id_or_number}/locations/{region}` * `projects/{project_id_or_number}/regions/{region}`
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: Service): Request<Service>;
            /** Deletes the provided service. This will cause the Service to stop serving traffic and will delete all associated Revisions. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** Not supported, and ignored by Cloud Run. */
                apiVersion?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Not supported, and ignored by Cloud Run. */
                kind?: string;
                /**
                 * Required. The fully qualified name of the service to delete. It can be any of the following forms: * `namespaces/{project_id_or_number}/services/{service_name}` (only when the
                 * `endpoint` is regional) * `projects/{project_id_or_number}/locations/{region}/services/{service_name}` *
                 * `projects/{project_id_or_number}/regions/{region}/services/{service_name}`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Not supported, and ignored by Cloud Run. */
                propagationPolicy?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Status>;
            /** Gets information about a service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The fully qualified name of the service to retrieve. It can be any of the following forms: * `namespaces/{project_id_or_number}/services/{service_name}` (only when the
                 * `endpoint` is regional) * `projects/{project_id_or_number}/locations/{region}/services/{service_name}` *
                 * `projects/{project_id_or_number}/regions/{region}/services/{service_name}`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Service>;
            /** Lists services for the given project and region. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Encoded string to continue paging. */
                continue?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Not supported, and ignored by Cloud Run. */
                fieldSelector?: string;
                /** Not supported, and ignored by Cloud Run. */
                includeUninitialized?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn. */
                labelSelector?: string;
                /** The maximum number of records that should be returned. */
                limit?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The parent from where the resources should be listed. In Cloud Run, it may be one of the following: * `{project_id_or_number}` * `namespaces/{project_id_or_number}` *
                 * `namespaces/{project_id_or_number}/services` * `projects/{project_id_or_number}/locations/{region}` * `projects/{project_id_or_number}/regions/{region}`
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Not supported, and ignored by Cloud Run. */
                resourceVersion?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Not supported, and ignored by Cloud Run. */
                watch?: boolean;
            }): Request<ListServicesResponse>;
            /**
             * Replaces a service. Only the spec and metadata labels and annotations are modifiable. After the Update request, Cloud Run will work to make the 'status' match the requested 'spec'.
             * May provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control.
             */
            replaceService(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The fully qualified name of the service to replace. It can be any of the following forms: * `namespaces/{project_id_or_number}/services/{service_name}` (only when the
                 * `endpoint` is regional) * `projects/{project_id_or_number}/locations/{region}/services/{service_name}` *
                 * `projects/{project_id_or_number}/regions/{region}/services/{service_name}`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: Service;
            }): Request<Service>;
            replaceService(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The fully qualified name of the service to replace. It can be any of the following forms: * `namespaces/{project_id_or_number}/services/{service_name}` (only when the
                 * `endpoint` is regional) * `projects/{project_id_or_number}/locations/{region}/services/{service_name}` *
                 * `projects/{project_id_or_number}/regions/{region}/services/{service_name}`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: Service): Request<Service>;
        }
        interface TasksResource {
            /** Get information about a task. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Required. The name of the task to retrieve. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Task>;
            /** List tasks. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Optional. Optional encoded string to continue paging. */
                continue?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Optional. Not supported by Cloud Run. */
                fieldSelector?: string;
                /** Optional. Not supported by Cloud Run. */
                includeUninitialized?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Optional. Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn. For example, to list all tasks of execution "foo" in succeeded
                 * state: `run.googleapis.com/execution=foo,run.googleapis.com/runningState=Succeeded`. Supported states are: * `Pending`: Initial state of all tasks. The task has not yet started
                 * but eventually will. * `Running`: Container instances for this task are running or will be running shortly. * `Succeeded`: No more container instances to run for the task, and
                 * the last attempt succeeded. * `Failed`: No more container instances to run for the task, and the last attempt failed. This task has run out of retry attempts. * `Cancelled`:
                 * Task was running but got stopped because its parent execution has been aborted. * `Abandoned`: The task has not yet started and never will because its parent execution has been
                 * aborted.
                 */
                labelSelector?: string;
                /** Optional. The maximum number of records that should be returned. */
                limit?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The namespace from which the tasks should be listed. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example:
                 * namespaces/PROJECT_ID
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Optional. Not supported by Cloud Run. */
                resourceVersion?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Optional. Not supported by Cloud Run. */
                watch?: boolean;
            }): Request<ListTasksResponse>;
        }
        interface NamespacesResource {
            authorizeddomains: AuthorizeddomainsResource;
            configurations: ConfigurationsResource;
            domainmappings: DomainmappingsResource;
            executions: ExecutionsResource;
            jobs: JobsResource;
            revisions: RevisionsResource;
            routes: RoutesResource;
            services: ServicesResource;
            tasks: TasksResource;
        }
        interface AuthorizeddomainsResource {
            /** List authorized domains. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Maximum results to return per page. */
                pageSize?: number;
                /** Continuation token for fetching the next page of results. */
                pageToken?: string;
                /** Name of the parent Project resource. Example: `projects/myproject`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ListAuthorizedDomainsResponse>;
        }
        interface AuthorizeddomainsResource {
            /** List authorized domains. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Maximum results to return per page. */
                pageSize?: number;
                /** Continuation token for fetching the next page of results. */
                pageToken?: string;
                /** Name of the parent Project resource. Example: `projects/myproject`. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ListAuthorizedDomainsResponse>;
        }
        interface ConfigurationsResource {
            /** Get information about a configuration. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the configuration to retrieve. For Cloud Run, replace {namespace_id} with the project ID or number. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Configuration>;
            /** List configurations. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Optional. Encoded string to continue paging. */
                continue?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Not supported by Cloud Run. */
                fieldSelector?: string;
                /** Not supported by Cloud Run. */
                includeUninitialized?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn. */
                labelSelector?: string;
                /** Optional. The maximum number of the records that should be returned. */
                limit?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The namespace from which the configurations should be listed. For Cloud Run, replace {namespace_id} with the project ID or number. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Not supported by Cloud Run. */
                resourceVersion?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Not supported by Cloud Run. */
                watch?: boolean;
            }): Request<ListConfigurationsResponse>;
        }
        interface DomainmappingsResource {
            /** Create a new domain mapping. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * The namespace in which the domain mapping should be created. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form
                 * namespaces/{namespace}. For example: namespaces/PROJECT_ID
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: DomainMapping;
            }): Request<DomainMapping>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * The namespace in which the domain mapping should be created. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form
                 * namespaces/{namespace}. For example: namespaces/PROJECT_ID
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: DomainMapping): Request<DomainMapping>;
            /** Delete a domain mapping. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** Cloud Run currently ignores this parameter. */
                apiVersion?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Cloud Run currently ignores this parameter. */
                kind?: string;
                /**
                 * The name of the domain mapping to delete. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For
                 * example: namespaces/PROJECT_ID
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see
                 * kubernetes.io/docs/concepts/architecture/garbage-collection/ for more information.
                 */
                propagationPolicy?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Status>;
            /** Get information about a domain mapping. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The name of the domain mapping to retrieve. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For
                 * example: namespaces/PROJECT_ID
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<DomainMapping>;
            /** List all domain mappings. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Optional. Encoded string to continue paging. */
                continue?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run. */
                fieldSelector?: string;
                /** Not currently used by Cloud Run. */
                includeUninitialized?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn. */
                labelSelector?: string;
                /** Optional. The maximum number of records that should be returned. */
                limit?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * The namespace from which the domain mappings should be listed. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form
                 * namespaces/{namespace}. For example: namespaces/PROJECT_ID
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run. */
                resourceVersion?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run. */
                watch?: boolean;
            }): Request<ListDomainMappingsResponse>;
        }
        interface JobsResource {
            /** Get the IAM Access Control policy currently in effect for the given job. This result does not include any inherited policies. */
            getIamPolicy(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for
                 * policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy
                 * in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional
                 * role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM
                 * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
                 */
                "options.requestedPolicyVersion"?: number;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                 * field.
                 */
                resource: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Policy>;
            /** Sets the IAM Access control policy for the specified job. Overwrites any existing policy. */
            setIamPolicy(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                 * field.
                 */
                resource: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: SetIamPolicyRequest): Request<Policy>;
            /** Returns permissions that a caller has on the specified job. There are no permissions required for making this API call. */
            testIamPermissions(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                 * this field.
                 */
                resource: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: TestIamPermissionsRequest): Request<TestIamPermissionsResponse>;
        }
        interface RevisionsResource {
            /** Delete a revision. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** Cloud Run currently ignores this parameter. */
                apiVersion?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Cloud Run currently ignores this parameter. */
                kind?: string;
                /**
                 * The name of the revision to delete. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example:
                 * namespaces/PROJECT_ID
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see
                 * https://kubernetes.io/docs/concepts/architecture/garbage-collection/ for more information.
                 */
                propagationPolicy?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Status>;
            /** Get information about a revision. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The name of the revision to retrieve. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example:
                 * namespaces/PROJECT_ID
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Revision>;
            /** List revisions. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Optional. Encoded string to continue paging. */
                continue?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run. */
                fieldSelector?: string;
                /** Not currently used by Cloud Run. */
                includeUninitialized?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn. */
                labelSelector?: string;
                /** Optional. The maximum number of records that should be returned. */
                limit?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * The namespace from which the revisions should be listed. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form
                 * namespaces/{namespace}. For example: namespaces/PROJECT_ID
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run. */
                resourceVersion?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run. */
                watch?: boolean;
            }): Request<ListRevisionsResponse>;
        }
        interface RoutesResource {
            /** Get information about a route. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The name of the route to retrieve. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example:
                 * namespaces/PROJECT_ID
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Route>;
            /** List routes. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Optional. Encoded string to continue paging. */
                continue?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run. */
                fieldSelector?: string;
                /** Not currently used by Cloud Run. */
                includeUninitialized?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn. */
                labelSelector?: string;
                /** Optional. The maximum number of records that should be returned. */
                limit?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * The namespace from which the routes should be listed. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}.
                 * For example: namespaces/PROJECT_ID
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run. */
                resourceVersion?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run. */
                watch?: boolean;
            }): Request<ListRoutesResponse>;
        }
        interface ServicesResource {
            /** Creates a new Service. Service creation will trigger a new deployment. Use GetService, and check service.status to determine if the Service is ready. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The resource's parent. In Cloud Run, it may be one of the following: * `{project_id_or_number}` * `namespaces/{project_id_or_number}` *
                 * `namespaces/{project_id_or_number}/services` * `projects/{project_id_or_number}/locations/{region}` * `projects/{project_id_or_number}/regions/{region}`
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: Service;
            }): Request<Service>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The resource's parent. In Cloud Run, it may be one of the following: * `{project_id_or_number}` * `namespaces/{project_id_or_number}` *
                 * `namespaces/{project_id_or_number}/services` * `projects/{project_id_or_number}/locations/{region}` * `projects/{project_id_or_number}/regions/{region}`
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: Service): Request<Service>;
            /** Deletes the provided service. This will cause the Service to stop serving traffic and will delete all associated Revisions. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** Not supported, and ignored by Cloud Run. */
                apiVersion?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Not supported, and ignored by Cloud Run. */
                kind?: string;
                /**
                 * Required. The fully qualified name of the service to delete. It can be any of the following forms: * `namespaces/{project_id_or_number}/services/{service_name}` (only when the
                 * `endpoint` is regional) * `projects/{project_id_or_number}/locations/{region}/services/{service_name}` *
                 * `projects/{project_id_or_number}/regions/{region}/services/{service_name}`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Not supported, and ignored by Cloud Run. */
                propagationPolicy?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Status>;
            /** Gets information about a service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The fully qualified name of the service to retrieve. It can be any of the following forms: * `namespaces/{project_id_or_number}/services/{service_name}` (only when the
                 * `endpoint` is regional) * `projects/{project_id_or_number}/locations/{region}/services/{service_name}` *
                 * `projects/{project_id_or_number}/regions/{region}/services/{service_name}`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Service>;
            /** Gets the IAM Access Control policy currently in effect for the given Cloud Run service. This result does not include any inherited policies. */
            getIamPolicy(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for
                 * policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy
                 * in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional
                 * role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM
                 * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
                 */
                "options.requestedPolicyVersion"?: number;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                 * field.
                 */
                resource: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Policy>;
            /** Lists services for the given project and region. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Encoded string to continue paging. */
                continue?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Not supported, and ignored by Cloud Run. */
                fieldSelector?: string;
                /** Not supported, and ignored by Cloud Run. */
                includeUninitialized?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn. */
                labelSelector?: string;
                /** The maximum number of records that should be returned. */
                limit?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The parent from where the resources should be listed. In Cloud Run, it may be one of the following: * `{project_id_or_number}` * `namespaces/{project_id_or_number}` *
                 * `namespaces/{project_id_or_number}/services` * `projects/{project_id_or_number}/locations/{region}` * `projects/{project_id_or_number}/regions/{region}`
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Not supported, and ignored by Cloud Run. */
                resourceVersion?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Not supported, and ignored by Cloud Run. */
                watch?: boolean;
            }): Request<ListServicesResponse>;
            /**
             * Replaces a service. Only the spec and metadata labels and annotations are modifiable. After the Update request, Cloud Run will work to make the 'status' match the requested 'spec'.
             * May provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control.
             */
            replaceService(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The fully qualified name of the service to replace. It can be any of the following forms: * `namespaces/{project_id_or_number}/services/{service_name}` (only when the
                 * `endpoint` is regional) * `projects/{project_id_or_number}/locations/{region}/services/{service_name}` *
                 * `projects/{project_id_or_number}/regions/{region}/services/{service_name}`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: Service;
            }): Request<Service>;
            replaceService(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all` */
                dryRun?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The fully qualified name of the service to replace. It can be any of the following forms: * `namespaces/{project_id_or_number}/services/{service_name}` (only when the
                 * `endpoint` is regional) * `projects/{project_id_or_number}/locations/{region}/services/{service_name}` *
                 * `projects/{project_id_or_number}/regions/{region}/services/{service_name}`
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: Service): Request<Service>;
            /** Sets the IAM Access control policy for the specified Service. Overwrites any existing policy. */
            setIamPolicy(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                 * field.
                 */
                resource: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: SetIamPolicyRequest): Request<Policy>;
            /** Returns permissions that a caller has on the specified Project. There are no permissions required for making this API call. */
            testIamPermissions(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                 * this field.
                 */
                resource: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: TestIamPermissionsRequest): Request<TestIamPermissionsResponse>;
        }
        interface LocationsResource {
            /** Lists information about the supported locations for this service. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in
                 * [AIP-160](https://google.aip.dev/160).
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource that owns the locations collection, if applicable. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of results to return. If not set, the service selects a default. */
                pageSize?: number;
                /** A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ListLocationsResponse>;
            authorizeddomains: AuthorizeddomainsResource;
            configurations: ConfigurationsResource;
            domainmappings: DomainmappingsResource;
            jobs: JobsResource;
            revisions: RevisionsResource;
            routes: RoutesResource;
            services: ServicesResource;
        }
        interface ProjectsResource {
            authorizeddomains: AuthorizeddomainsResource;
            locations: LocationsResource;
        }

        const namespaces: NamespacesResource;

        const projects: ProjectsResource;
    }
}
