/* Type definitions for non-npm package Cloud SQL Admin API v1beta4 0.0 */
// Project: https://developers.google.com/cloud-sql/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://sqladmin.googleapis.com/$discovery/rest?version=v1beta4
// Revision: 20240825

/// <reference types="gapi.client" />

declare namespace gapi.client {
  /** Load Cloud SQL Admin API v1beta4 */
  function load(
    urlOrObject: 'https://sqladmin.googleapis.com/$discovery/rest?version=v1beta4'
  ): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(name: 'sqladmin', version: 'v1beta4'): Promise<void>;
  /** @deprecated Please load APIs with discovery documents. */
  function load(
    name: 'sqladmin',
    version: 'v1beta4',
    callback: () => any
  ): void;

  namespace sql {
    interface AclEntry {
      /** The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. */
      expirationTime?: string;
      /** This is always `sql#aclEntry`. */
      kind?: string;
      /** Optional. A label to identify this entry. */
      name?: string;
      /** The allowlisted value for the access control list. */
      value?: string;
    }
    interface AcquireSsrsLeaseContext {
      /** Lease duration needed for the SSRS setup. */
      duration?: string;
      /** The report database to be used for the SSRS setup. */
      reportDatabase?: string;
      /** The username to be used as the service login to connect to the report database for SSRS setup. */
      serviceLogin?: string;
      /** The username to be used as the setup login to connect to the database server for SSRS setup. */
      setupLogin?: string;
    }
    interface AdvancedMachineFeatures {
      /** The number of threads per physical core. */
      threadsPerCore?: number;
    }
    interface ApiWarning {
      /** Code to uniquely identify the warning type. */
      code?: string;
      /** The warning message. */
      message?: string;
      /** The region name for REGION_UNREACHABLE warning. */
      region?: string;
    }
    interface AvailableDatabaseVersion {
      /** The database version's display name. */
      displayName?: string;
      /** The version's major version name. */
      majorVersion?: string;
      /** The database version name. For MySQL 8.0, this string provides the database major and minor version. */
      name?: string;
    }
    interface BackupConfiguration {
      /** Backup retention settings. */
      backupRetentionSettings?: BackupRetentionSettings;
      /** (MySQL only) Whether binary log is enabled. If backup configuration is disabled, binarylog must be disabled as well. */
      binaryLogEnabled?: boolean;
      /** Whether this configuration is enabled. */
      enabled?: boolean;
      /** This is always `sql#backupConfiguration`. */
      kind?: string;
      /** Location of the backup */
      location?: string;
      /** Whether point in time recovery is enabled. */
      pointInTimeRecoveryEnabled?: boolean;
      /** Reserved for future use. */
      replicationLogArchivingEnabled?: boolean;
      /** Start time for the daily backup configuration in UTC timezone in the 24 hour format - `HH:MM`. */
      startTime?: string;
      /** Output only. This value contains the storage location of transactional logs for the database for point-in-time recovery. */
      transactionalLogStorageState?: string;
      /** The number of days of transaction logs we retain for point in time restore, from 1-7. */
      transactionLogRetentionDays?: number;
    }
    interface BackupContext {
      /** The identifier of the backup. */
      backupId?: string;
      /** This is always `sql#backupContext`. */
      kind?: string;
    }
    interface BackupReencryptionConfig {
      /** Backup re-encryption limit */
      backupLimit?: number;
      /** Type of backups users want to re-encrypt. */
      backupType?: string;
    }
    interface BackupRetentionSettings {
      /** Depending on the value of retention_unit, this is used to determine if a backup needs to be deleted. If retention_unit is 'COUNT', we will retain this many backups. */
      retainedBackups?: number;
      /** The unit that 'retained_backups' represents. */
      retentionUnit?: string;
    }
    interface BackupRun {
      /** Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT. */
      backupKind?: string;
      /** The description of this run, only applicable to on-demand backups. */
      description?: string;
      /** Encryption configuration specific to a backup. */
      diskEncryptionConfiguration?: DiskEncryptionConfiguration;
      /** Encryption status specific to a backup. */
      diskEncryptionStatus?: DiskEncryptionStatus;
      /** The time the backup operation completed in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. */
      endTime?: string;
      /** The time the run was enqueued in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. */
      enqueuedTime?: string;
      /** Information about why the backup operation failed. This is only present if the run has the FAILED status. */
      error?: OperationError;
      /** The identifier for this backup run. Unique only for a specific Cloud SQL instance. */
      id?: string;
      /** Name of the database instance. */
      instance?: string;
      /** This is always `sql#backupRun`. */
      kind?: string;
      /** Location of the backups. */
      location?: string;
      /** Output only. The maximum chargeable bytes for the backup. */
      maxChargeableBytes?: string;
      /** The URI of this resource. */
      selfLink?: string;
      /** The time the backup operation actually started in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. */
      startTime?: string;
      /** The status of this run. */
      status?: string;
      /** Backup time zone to prevent restores to an instance with a different time zone. Now relevant only for SQL Server. */
      timeZone?: string;
      /** The type of this run; can be either "AUTOMATED" or "ON_DEMAND" or "FINAL". This field defaults to "ON_DEMAND" and is ignored, when specified for insert requests. */
      type?: string;
      /** The start time of the backup window during which this the backup was attempted in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. */
      windowStartTime?: string;
    }
    interface BackupRunsListResponse {
      /** A list of backup runs in reverse chronological order of the enqueued time. */
      items?: BackupRun[];
      /** This is always `sql#backupRunsList`. */
      kind?: string;
      /** The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results. */
      nextPageToken?: string;
    }
    interface BinLogCoordinates {
      /** Name of the binary log file for a Cloud SQL instance. */
      binLogFileName?: string;
      /** Position (offset) within the binary log file. */
      binLogPosition?: string;
      /** This is always `sql#binLogCoordinates`. */
      kind?: string;
    }
    interface CloneContext {
      /** The name of the allocated ip range for the private ip Cloud SQL instance. For example: "google-managed-services-default". If set, the cloned instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. Reserved for future use. */
      allocatedIpRange?: string;
      /** Binary log coordinates, if specified, identify the position up to which the source instance is cloned. If not specified, the source instance is cloned up to the most recent binary log coordinates. */
      binLogCoordinates?: BinLogCoordinates;
      /** (SQL Server only) Clone only the specified databases from the source instance. Clone all databases if empty. */
      databaseNames?: string[];
      /** Name of the Cloud SQL instance to be created as a clone. */
      destinationInstanceName?: string;
      /** This is always `sql#cloneContext`. */
      kind?: string;
      /** Reserved for future use. */
      pitrTimestampMs?: string;
      /** Timestamp, if specified, identifies the time to which the source instance is cloned. */
      pointInTime?: string;
      /** Optional. Copy clone and point-in-time recovery clone of a regional instance in the specified zones. If not specified, clone to the same secondary zone as the source instance. This value cannot be the same as the preferred_zone field. */
      preferredSecondaryZone?: string;
      /** Optional. Copy clone and point-in-time recovery clone of an instance to the specified zone. If no zone is specified, clone to the same primary zone as the source instance. */
      preferredZone?: string;
    }
    interface ConnectSettings {
      /** `SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type. */
      backendType?: string;
      /** The database engine type and version. The `databaseVersion` field cannot be changed after instance creation. MySQL instances: `MYSQL_8_0`, `MYSQL_5_7` (default), or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`, `POSTGRES_11` or `POSTGRES_12` (default), `POSTGRES_13`, or `POSTGRES_14`. SQL Server instances: `SQLSERVER_2017_STANDARD` (default), `SQLSERVER_2017_ENTERPRISE`, `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or `SQLSERVER_2019_WEB`. */
      databaseVersion?: string;
      /** The dns name of the instance. */
      dnsName?: string;
      /** The assigned IP addresses for the instance. */
      ipAddresses?: IpMapping[];
      /** This is always `sql#connectSettings`. */
      kind?: string;
      /** Whether PSC connectivity is enabled for this instance. */
      pscEnabled?: boolean;
      /** The cloud region for the instance. e.g. `us-central1`, `europe-west1`. The region cannot be changed after instance creation. */
      region?: string;
      /** SSL configuration. */
      serverCaCert?: SslCert;
      /** Specify what type of CA is used for the server certificate. */
      serverCaMode?: string;
    }
    interface Database {
      /** The Cloud SQL charset value. */
      charset?: string;
      /** The Cloud SQL collation value. */
      collation?: string;
      /** This field is deprecated and will be removed from a future version of the API. */
      etag?: string;
      /** The name of the Cloud SQL instance. This does not include the project ID. */
      instance?: string;
      /** This is always `sql#database`. */
      kind?: string;
      /** The name of the database in the Cloud SQL instance. This does not include the project ID or instance name. */
      name?: string;
      /** The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. */
      project?: string;
      /** The URI of this resource. */
      selfLink?: string;
      sqlserverDatabaseDetails?: SqlServerDatabaseDetails;
    }
    interface DatabaseFlags {
      /** The name of the flag. These flags are passed at instance startup, so include both server options and system variables. Flags are specified with underscores, not hyphens. For more information, see [Configuring Database Flags](https://cloud.google.com/sql/docs/mysql/flags) in the Cloud SQL documentation. */
      name?: string;
      /** The value of the flag. Boolean flags are set to `on` for true and `off` for false. This field must be omitted if the flag doesn't take a value. */
      value?: string;
    }
    interface DatabaseInstance {
      /** Output only. List all maintenance versions applicable on the instance */
      availableMaintenanceVersions?: string[];
      /** The backend type. `SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type. */
      backendType?: string;
      /** Connection name of the Cloud SQL instance used in connection strings. */
      connectionName?: string;
      /** Output only. The time when the instance was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. */
      createTime?: string;
      /** The current disk usage of the instance in bytes. This property has been deprecated. Use the "cloudsql.googleapis.com/database/disk/bytes_used" metric in Cloud Monitoring API instead. Please see [this announcement](https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ) for details. */
      currentDiskSize?: string;
      /** Output only. Stores the current database version running on the instance including minor version such as `MYSQL_8_0_18`. */
      databaseInstalledVersion?: string;
      /** The database engine type and version. The `databaseVersion` field cannot be changed after instance creation. */
      databaseVersion?: string;
      /** Disk encryption configuration specific to an instance. */
      diskEncryptionConfiguration?: DiskEncryptionConfiguration;
      /** Disk encryption status specific to an instance. */
      diskEncryptionStatus?: DiskEncryptionStatus;
      /** Output only. The dns name of the instance. */
      dnsName?: string;
      /** This field is deprecated and will be removed from a future version of the API. Use the `settings.settingsVersion` field instead. */
      etag?: string;
      /** The name and status of the failover replica. */
      failoverReplica?: {
        /** The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only failover to the failover replica when the status is true. */
        available?: boolean;
        /** The name of the failover replica. If specified at instance creation, a failover replica is created for the instance. The name doesn't include the project ID. */
        name?: string;
      };
      /** The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone. WARNING: Changing this might restart the instance. */
      gceZone?: string;
      /** Gemini instance configuration. */
      geminiConfig?: GeminiInstanceConfig;
      /** The instance type. */
      instanceType?: string;
      /** The assigned IP addresses for the instance. */
      ipAddresses?: IpMapping[];
      /** The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances. */
      ipv6Address?: string;
      /** This is always `sql#instance`. */
      kind?: string;
      /** The current software version on the instance. */
      maintenanceVersion?: string;
      /** The name of the instance which will act as primary in the replication setup. */
      masterInstanceName?: string;
      /** The maximum disk size of the instance in bytes. */
      maxDiskSize?: string;
      /** Name of the Cloud SQL instance. This does not include the project ID. */
      name?: string;
      /** Configuration specific to on-premises instances. */
      onPremisesConfiguration?: OnPremisesConfiguration;
      /** This field represents the report generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job */
      outOfDiskReport?: SqlOutOfDiskReport;
      /** Output only. DEPRECATED: please use write_endpoint instead. */
      primaryDnsName?: string;
      /** The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable. */
      project?: string;
      /** Output only. The link to service attachment of PSC instance. */
      pscServiceAttachmentLink?: string;
      /** The geographical region of the Cloud SQL instance. It can be one of the [regions](https://cloud.google.com/sql/docs/mysql/locations#location-r) where Cloud SQL operates: For example, `asia-east1`, `europe-west1`, and `us-central1`. The default value is `us-central1`. */
      region?: string;
      /** Configuration specific to failover replicas and read replicas. */
      replicaConfiguration?: ReplicaConfiguration;
      /** The replicas of the instance. */
      replicaNames?: string[];
      /** A primary instance and disaster recovery (DR) replica pair. A DR replica is a cross-region replica that you designate for failover in the event that the primary instance experiences regional failure. Only applicable to MySQL. */
      replicationCluster?: ReplicationCluster;
      /** Initial root password. Use only on creation. You must set root passwords before you can connect to PostgreSQL instances. */
      rootPassword?: string;
      /** Output only. This status indicates whether the instance satisfies PZI. The status is reserved for future use. */
      satisfiesPzi?: boolean;
      /** This status indicates whether the instance satisfies PZS. The status is reserved for future use. */
      satisfiesPzs?: boolean;
      /** The start time of any upcoming scheduled maintenance for this instance. */
      scheduledMaintenance?: SqlScheduledMaintenance;
      /** The Compute Engine zone that the failover instance is currently serving from for a regional instance. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary/failover zone. */
      secondaryGceZone?: string;
      /** The URI of this resource. */
      selfLink?: string;
      /** SSL configuration. */
      serverCaCert?: SslCert;
      /** The service account email address assigned to the instance. \This property is read-only. */
      serviceAccountEmailAddress?: string;
      /** The user settings. */
      settings?: Settings;
      /** The SQL network architecture for the instance. */
      sqlNetworkArchitecture?: string;
      /** The current serving state of the Cloud SQL instance. */
      state?: string;
      /** If the instance state is SUSPENDED, the reason for the suspension. */
      suspensionReason?: string[];
      /** Input only. Whether Cloud SQL is enabled to switch storing point-in-time recovery log files from a data disk to Cloud Storage. */
      switchTransactionLogsToCloudStorageEnabled?: boolean;
      /** Output only. All database versions that are available for upgrade. */
      upgradableDatabaseVersions?: AvailableDatabaseVersion[];
      /** Output only. The dns name of the primary instance in a replication group. */
      writeEndpoint?: string;
    }
    interface DatabasesListResponse {
      /** List of database resources in the instance. */
      items?: Database[];
      /** This is always `sql#databasesList`. */
      kind?: string;
    }
    interface DataCacheConfig {
      /** Whether data cache is enabled for the instance. */
      dataCacheEnabled?: boolean;
    }
    interface DemoteContext {
      /** This is always `sql#demoteContext`. */
      kind?: string;
      /** Required. The name of the instance which acts as an on-premises primary instance in the replication setup. */
      sourceRepresentativeInstanceName?: string;
    }
    interface DemoteMasterConfiguration {
      /** This is always `sql#demoteMasterConfiguration`. */
      kind?: string;
      /** MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named `master.info` in the data directory. */
      mysqlReplicaConfiguration?: DemoteMasterMySqlReplicaConfiguration;
    }
    interface DemoteMasterContext {
      /** This is always `sql#demoteMasterContext`. */
      kind?: string;
      /** The name of the instance which will act as on-premises primary instance in the replication setup. */
      masterInstanceName?: string;
      /** Configuration specific to read-replicas replicating from the on-premises primary instance. */
      replicaConfiguration?: DemoteMasterConfiguration;
      /** Flag to skip replication setup on the instance. */
      skipReplicationSetup?: boolean;
      /** Verify the GTID consistency for demote operation. Default value: `True`. Setting this flag to `false` enables you to bypass the GTID consistency check between on-premises primary instance and Cloud SQL instance during the demotion operation but also exposes you to the risk of future replication failures. Change the value only if you know the reason for the GTID divergence and are confident that doing so will not cause any replication issues. */
      verifyGtidConsistency?: boolean;
    }
    interface DemoteMasterMySqlReplicaConfiguration {
      /** PEM representation of the trusted CA's x509 certificate. */
      caCertificate?: string;
      /** PEM representation of the replica's x509 certificate. */
      clientCertificate?: string;
      /** PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate. The format of the replica's private key can be either PKCS #1 or PKCS #8. */
      clientKey?: string;
      /** This is always `sql#demoteMasterMysqlReplicaConfiguration`. */
      kind?: string;
      /** The password for the replication connection. */
      password?: string;
      /** The username for the replication connection. */
      username?: string;
    }
    interface DenyMaintenancePeriod {
      /** "deny maintenance period" end date. If the year of the end date is empty, the year of the start date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01 */
      endDate?: string;
      /** "deny maintenance period" start date. If the year of the start date is empty, the year of the end date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01 */
      startDate?: string;
      /** Time in UTC when the "deny maintenance period" starts on start_date and ends on end_date. The time is in format: HH:mm:SS, i.e., 00:00:00 */
      time?: string;
    }
    interface DiskEncryptionConfiguration {
      /** This is always `sql#diskEncryptionConfiguration`. */
      kind?: string;
      /** Resource name of KMS key for disk encryption */
      kmsKeyName?: string;
    }
    interface DiskEncryptionStatus {
      /** This is always `sql#diskEncryptionStatus`. */
      kind?: string;
      /** KMS key version used to encrypt the Cloud SQL instance resource */
      kmsKeyVersionName?: string;
    }
    interface Empty {}
    interface ExportContext {
      /** Options for exporting BAK files (SQL Server-only) */
      bakExportOptions?: {
        /** Type of this bak file will be export, FULL or DIFF, SQL Server only */
        bakType?: string;
        /** Deprecated: copy_only is deprecated. Use differential_base instead */
        copyOnly?: boolean;
        /** Whether or not the backup can be used as a differential base copy_only backup can not be served as differential base */
        differentialBase?: boolean;
        /** Optional. The end timestamp when transaction log will be included in the export operation. [RFC 3339](https://tools.ietf.org/html/rfc3339) format (for example, `2023-10-01T16:19:00.094`) in UTC. When omitted, all available logs until current time will be included. Only applied to Cloud SQL for SQL Server. */
        exportLogEndTime?: string;
        /** Optional. The begin timestamp when transaction log will be included in the export operation. [RFC 3339](https://tools.ietf.org/html/rfc3339) format (for example, `2023-10-01T16:19:00.094`) in UTC. When omitted, all available logs from the beginning of retention period will be included. Only applied to Cloud SQL for SQL Server. */
        exportLogStartTime?: string;
        /** Option for specifying how many stripes to use for the export. If blank, and the value of the striped field is true, the number of stripes is automatically chosen. */
        stripeCount?: number;
        /** Whether or not the export should be striped. */
        striped?: boolean;
      };
      /** Options for exporting data as CSV. `MySQL` and `PostgreSQL` instances only. */
      csvExportOptions?: {
        /** Specifies the character that should appear before a data character that needs to be escaped. */
        escapeCharacter?: string;
        /** Specifies the character that separates columns within each row (line) of the file. */
        fieldsTerminatedBy?: string;
        /** This is used to separate lines. If a line does not contain all fields, the rest of the columns are set to their default values. */
        linesTerminatedBy?: string;
        /** Specifies the quoting character to be used when a data value is quoted. */
        quoteCharacter?: string;
        /** The select query used to extract the data. */
        selectQuery?: string;
      };
      /** Databases to be exported. `MySQL instances:` If `fileType` is `SQL` and no database is specified, all databases are exported, except for the `mysql` system database. If `fileType` is `CSV`, you can specify one database, either by using this property or by using the `csvExportOptions.selectQuery` property, which takes precedence over this property. `PostgreSQL instances:` You must specify one database to be exported. If `fileType` is `CSV`, this database must match the one specified in the `csvExportOptions.selectQuery` property. `SQL Server instances:` You must specify one database to be exported, and the `fileType` must be `BAK`. */
      databases?: string[];
      /** The file type for the specified uri. */
      fileType?: string;
      /** This is always `sql#exportContext`. */
      kind?: string;
      /** Option for export offload. */
      offload?: boolean;
      /** Options for exporting data as SQL statements. */
      sqlExportOptions?: {
        /** Options for exporting from MySQL. */
        mysqlExportOptions?: {
          /** Option to include SQL statement required to set up replication. If set to `1`, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates, and --set-gtid-purged is set to ON. If set to `2`, the CHANGE MASTER TO statement is written as a SQL comment and has no effect. If set to any value other than `1`, --set-gtid-purged is set to OFF. */
          masterData?: number;
        };
        /** Optional. Whether or not the export should be parallel. */
        parallel?: boolean;
        /** Options for exporting from a Cloud SQL for PostgreSQL instance. */
        postgresExportOptions?: {
          /** Optional. Use this option to include DROP SQL statements. These statements are used to delete database objects before running the import operation. */
          clean?: boolean;
          /** Optional. Option to include an IF EXISTS SQL statement with each DROP statement produced by clean. */
          ifExists?: boolean;
        };
        /** Export only schemas. */
        schemaOnly?: boolean;
        /** Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table. */
        tables?: string[];
        /** Optional. The number of threads to use for parallel export. */
        threads?: number;
      };
      /** The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form `gs://bucketName/fileName`. If the file already exists, the request succeeds, but the operation fails. If `fileType` is `SQL` and the filename ends with .gz, the contents are compressed. */
      uri?: string;
    }
    interface FailoverContext {
      /** This is always `sql#failoverContext`. */
      kind?: string;
      /** The current settings version of this instance. Request will be rejected if this version doesn't match the current settings version. */
      settingsVersion?: string;
    }
    interface Flag {
      /** Use this field if only certain integers are accepted. Can be combined with min_value and max_value to add additional values. */
      allowedIntValues?: string[];
      /** For `STRING` flags, a list of strings that the value can be set to. */
      allowedStringValues?: string[];
      /** The database version this flag applies to. Can be MySQL instances: `MYSQL_8_0`, `MYSQL_8_0_18`, `MYSQL_8_0_26`, `MYSQL_5_7`, or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`, `POSTGRES_11` or `POSTGRES_12`. SQL Server instances: `SQLSERVER_2017_STANDARD`, `SQLSERVER_2017_ENTERPRISE`, `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or `SQLSERVER_2019_WEB`. See [the complete list](/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion). */
      appliesTo?: string[];
      /** Whether or not the flag is considered in beta. */
      inBeta?: boolean;
      /** This is always `sql#flag`. */
      kind?: string;
      /** For `INTEGER` flags, the maximum allowed value. */
      maxValue?: string;
      /** For `INTEGER` flags, the minimum allowed value. */
      minValue?: string;
      /** This is the name of the flag. Flag names always use underscores, not hyphens, for example: `max_allowed_packet` */
      name?: string;
      /** Indicates whether changing this flag will trigger a database restart. Only applicable to Second Generation instances. */
      requiresRestart?: boolean;
      /** The type of the flag. Flags are typed to being `BOOLEAN`, `STRING`, `INTEGER` or `NONE`. `NONE` is used for flags which do not take a value, such as `skip_grant_tables`. */
      type?: string;
    }
    interface FlagsListResponse {
      /** List of flags. */
      items?: Flag[];
      /** This is always `sql#flagsList`. */
      kind?: string;
    }
    interface GeminiInstanceConfig {
      /** Output only. Whether the active query is enabled. */
      activeQueryEnabled?: boolean;
      /** Output only. Whether Gemini is enabled. */
      entitled?: boolean;
      /** Output only. Whether the flag recommender is enabled. */
      flagRecommenderEnabled?: boolean;
      /** Output only. Whether the vacuum management is enabled. */
      googleVacuumMgmtEnabled?: boolean;
      /** Output only. Whether the index advisor is enabled. */
      indexAdvisorEnabled?: boolean;
      /** Output only. Whether canceling the out-of-memory (OOM) session is enabled. */
      oomSessionCancelEnabled?: boolean;
    }
    interface GenerateEphemeralCertRequest {
      /** Optional. Access token to include in the signed certificate. */
      access_token?: string;
      /** PEM encoded public key to include in the signed certificate. */
      public_key?: string;
      /** Optional. Optional snapshot read timestamp to trade freshness for performance. */
      readTime?: string;
      /** Optional. If set, it will contain the cert valid duration. */
      validDuration?: string;
    }
    interface GenerateEphemeralCertResponse {
      /** Generated cert */
      ephemeralCert?: SslCert;
    }
    interface ImportContext {
      /** Import parameters specific to SQL Server .BAK files */
      bakImportOptions?: {
        /** Type of the bak content, FULL or DIFF. */
        bakType?: string;
        encryptionOptions?: {
          /** Path to the Certificate (.cer) in Cloud Storage, in the form `gs://bucketName/fileName`. The instance must have write permissions to the bucket and read access to the file. */
          certPath?: string;
          /** Password that encrypts the private key */
          pvkPassword?: string;
          /** Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form `gs://bucketName/fileName`. The instance must have write permissions to the bucket and read access to the file. */
          pvkPath?: string;
        };
        /** Whether or not the backup importing will restore database with NORECOVERY option Applies only to Cloud SQL for SQL Server. */
        noRecovery?: boolean;
        /** Whether or not the backup importing request will just bring database online without downloading Bak content only one of "no_recovery" and "recovery_only" can be true otherwise error will return. Applies only to Cloud SQL for SQL Server. */
        recoveryOnly?: boolean;
        /** Optional. The timestamp when the import should stop. This timestamp is in the [RFC 3339](https://tools.ietf.org/html/rfc3339) format (for example, `2023-10-01T16:19:00.094`). This field is equivalent to the STOPAT keyword and applies to Cloud SQL for SQL Server only. */
        stopAt?: string;
        /** Optional. The marked transaction where the import should stop. This field is equivalent to the STOPATMARK keyword and applies to Cloud SQL for SQL Server only. */
        stopAtMark?: string;
        /** Whether or not the backup set being restored is striped. Applies only to Cloud SQL for SQL Server. */
        striped?: boolean;
      };
      /** Options for importing data as CSV. */
      csvImportOptions?: {
        /** The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data. */
        columns?: string[];
        /** Specifies the character that should appear before a data character that needs to be escaped. */
        escapeCharacter?: string;
        /** Specifies the character that separates columns within each row (line) of the file. */
        fieldsTerminatedBy?: string;
        /** This is used to separate lines. If a line does not contain all fields, the rest of the columns are set to their default values. */
        linesTerminatedBy?: string;
        /** Specifies the quoting character to be used when a data value is quoted. */
        quoteCharacter?: string;
        /** The table to which CSV data is imported. */
        table?: string;
      };
      /** The target database for the import. If `fileType` is `SQL`, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If `fileType` is `CSV`, one database must be specified. */
      database?: string;
      /** The file type for the specified uri. * `SQL`: The file contains SQL statements. * `CSV`: The file contains CSV data. * `BAK`: The file contains backup data for a SQL Server instance. */
      fileType?: string;
      /** The PostgreSQL user for this import operation. PostgreSQL instances only. */
      importUser?: string;
      /** This is always `sql#importContext`. */
      kind?: string;
      /** Optional. Options for importing data from SQL statements. */
      sqlImportOptions?: {
        /** Optional. Whether or not the import should be parallel. */
        parallel?: boolean;
        /** Optional. Options for importing from a Cloud SQL for PostgreSQL instance. */
        postgresImportOptions?: {
          /** Optional. The --clean flag for the pg_restore utility. This flag applies only if you enabled Cloud SQL to import files in parallel. */
          clean?: boolean;
          /** Optional. The --if-exists flag for the pg_restore utility. This flag applies only if you enabled Cloud SQL to import files in parallel. */
          ifExists?: boolean;
        };
        /** Optional. The number of threads to use for parallel import. */
        threads?: number;
      };
      /** Path to the import file in Cloud Storage, in the form `gs://bucketName/fileName`. Compressed gzip files (.gz) are supported when `fileType` is `SQL`. The instance must have write permissions to the bucket and read access to the file. */
      uri?: string;
    }
    interface InsightsConfig {
      /** Whether Query Insights feature is enabled. */
      queryInsightsEnabled?: boolean;
      /** Number of query execution plans captured by Insights per minute for all queries combined. Default is 5. */
      queryPlansPerMinute?: number;
      /** Maximum query length stored in bytes. Default value: 1024 bytes. Range: 256-4500 bytes. Query length more than this field value will be truncated to this value. When unset, query length will be the default value. Changing query length will restart the database. */
      queryStringLength?: number;
      /** Whether Query Insights will record application tags from query when enabled. */
      recordApplicationTags?: boolean;
      /** Whether Query Insights will record client address when enabled. */
      recordClientAddress?: boolean;
    }
    interface InstanceReference {
      /** The name of the Cloud SQL instance being referenced. This does not include the project ID. */
      name?: string;
      /** The project ID of the Cloud SQL instance being referenced. The default is the same project ID as the instance references it. */
      project?: string;
      /** The region of the Cloud SQL instance being referenced. */
      region?: string;
    }
    interface InstancesAcquireSsrsLeaseRequest {
      /** Contains details about the acquire SSRS lease operation. */
      acquireSsrsLeaseContext?: AcquireSsrsLeaseContext;
    }
    interface InstancesCloneRequest {
      /** Contains details about the clone operation. */
      cloneContext?: CloneContext;
    }
    interface InstancesDemoteMasterRequest {
      /** Contains details about the demoteMaster operation. */
      demoteMasterContext?: DemoteMasterContext;
    }
    interface InstancesDemoteRequest {
      /** Required. This context is used to demote an existing standalone instance to be a Cloud SQL read replica for an external database server. */
      demoteContext?: DemoteContext;
    }
    interface InstancesExportRequest {
      /** Contains details about the export operation. */
      exportContext?: ExportContext;
    }
    interface InstancesFailoverRequest {
      /** Failover Context. */
      failoverContext?: FailoverContext;
    }
    interface InstancesImportRequest {
      /** Contains details about the import operation. */
      importContext?: ImportContext;
    }
    interface InstancesListResponse {
      /** List of database instance resources. */
      items?: DatabaseInstance[];
      /** This is always `sql#instancesList`. */
      kind?: string;
      /** The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results. */
      nextPageToken?: string;
      /** List of warnings that occurred while handling the request. */
      warnings?: ApiWarning[];
    }
    interface InstancesListServerCasResponse {
      activeVersion?: string;
      /** List of server CA certificates for the instance. */
      certs?: SslCert[];
      /** This is always `sql#instancesListServerCas`. */
      kind?: string;
    }
    interface InstancesReencryptRequest {
      /** Configuration specific to backup re-encryption */
      backupReencryptionConfig?: BackupReencryptionConfig;
    }
    interface InstancesRestoreBackupRequest {
      /** Parameters required to perform the restore backup operation. */
      restoreBackupContext?: RestoreBackupContext;
    }
    interface InstancesRotateServerCaRequest {
      /** Contains details about the rotate server CA operation. */
      rotateServerCaContext?: RotateServerCaContext;
    }
    interface InstancesTruncateLogRequest {
      /** Contains details about the truncate log operation. */
      truncateLogContext?: TruncateLogContext;
    }
    interface IpConfiguration {
      /** The name of the allocated ip range for the private ip Cloud SQL instance. For example: "google-managed-services-default". If set, the instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?.` */
      allocatedIpRange?: string;
      /** The list of external networks that are allowed to connect to the instance using the IP. In 'CIDR' notation, also known as 'slash' notation (for example: `157.197.200.0/24`). */
      authorizedNetworks?: AclEntry[];
      /** Controls connectivity to private IP instances from Google services, such as BigQuery. */
      enablePrivatePathForGoogleCloudServices?: boolean;
      /** Whether the instance is assigned a public IP address or not. */
      ipv4Enabled?: boolean;
      /** The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set. */
      privateNetwork?: string;
      /** PSC settings for this instance. */
      pscConfig?: PscConfig;
      /** Use `ssl_mode` instead. Whether SSL/TLS connections over IP are enforced. If set to false, then allow both non-SSL/non-TLS and SSL/TLS connections. For SSL/TLS connections, the client certificate won't be verified. If set to true, then only allow connections encrypted with SSL/TLS and with valid client certificates. If you want to enforce SSL/TLS without enforcing the requirement for valid client certificates, then use the `ssl_mode` flag instead of the legacy `require_ssl` flag. */
      requireSsl?: boolean;
      /** Specify what type of CA is used for the server certificate. */
      serverCaMode?: string;
      /** Specify how SSL/TLS is enforced in database connections. If you must use the `require_ssl` flag for backward compatibility, then only the following value pairs are valid: For PostgreSQL and MySQL: * `ssl_mode=ALLOW_UNENCRYPTED_AND_ENCRYPTED` and `require_ssl=false` * `ssl_mode=ENCRYPTED_ONLY` and `require_ssl=false` * `ssl_mode=TRUSTED_CLIENT_CERTIFICATE_REQUIRED` and `require_ssl=true` For SQL Server: * `ssl_mode=ALLOW_UNENCRYPTED_AND_ENCRYPTED` and `require_ssl=false` * `ssl_mode=ENCRYPTED_ONLY` and `require_ssl=true` The value of `ssl_mode` has priority over the value of `require_ssl`. For example, for the pair `ssl_mode=ENCRYPTED_ONLY` and `require_ssl=false`, `ssl_mode=ENCRYPTED_ONLY` means accept only SSL connections, while `require_ssl=false` means accept both non-SSL and SSL connections. In this case, MySQL and PostgreSQL databases respect `ssl_mode` and accepts only SSL connections. */
      sslMode?: string;
    }
    interface IpMapping {
      /** The IP address assigned. */
      ipAddress?: string;
      /** The due time for this IP to be retired in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. This field is only available when the IP is scheduled to be retired. */
      timeToRetire?: string;
      /** The type of this IP address. A `PRIMARY` address is a public address that can accept incoming connections. A `PRIVATE` address is a private address that can accept incoming connections. An `OUTGOING` address is the source address of connections originating from the instance, if supported. */
      type?: string;
    }
    interface LocationPreference {
      /** The App Engine application to follow, it must be in the same region as the Cloud SQL instance. WARNING: Changing this might restart the instance. */
      followGaeApplication?: string;
      /** This is always `sql#locationPreference`. */
      kind?: string;
      /** The preferred Compute Engine zone for the secondary/failover (for example: us-central1-a, us-central1-b, etc.). To disable this field, set it to 'no_secondary_zone'. */
      secondaryZone?: string;
      /** The preferred Compute Engine zone (for example: us-central1-a, us-central1-b, etc.). WARNING: Changing this might restart the instance. */
      zone?: string;
    }
    interface MaintenanceWindow {
      /** Day of week - `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, or `SUNDAY`. Specify in the UTC time zone. Returned in output as an integer, 1 to 7, where `1` equals Monday. */
      day?: number;
      /** Hour of day - 0 to 23. Specify in the UTC time zone. */
      hour?: number;
      /** This is always `sql#maintenanceWindow`. */
      kind?: string;
      /** Maintenance timing settings: `canary`, `stable`, or `week5`. For more information, see [About maintenance on Cloud SQL instances](https://cloud.google.com/sql/docs/mysql/maintenance). */
      updateTrack?: string;
    }
    interface MySqlReplicaConfiguration {
      /** PEM representation of the trusted CA's x509 certificate. */
      caCertificate?: string;
      /** PEM representation of the replica's x509 certificate. */
      clientCertificate?: string;
      /** PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate. */
      clientKey?: string;
      /** Seconds to wait between connect retries. MySQL's default is 60 seconds. */
      connectRetryInterval?: number;
      /** Path to a SQL dump file in Google Cloud Storage from which the replica instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps have the binlog co-ordinates from which replication begins. This can be accomplished by setting --master-data to 1 when using mysqldump. */
      dumpFilePath?: string;
      /** This is always `sql#mysqlReplicaConfiguration`. */
      kind?: string;
      /** Interval in milliseconds between replication heartbeats. */
      masterHeartbeatPeriod?: string;
      /** The password for the replication connection. */
      password?: string;
      /** A list of permissible ciphers to use for SSL encryption. */
      sslCipher?: string;
      /** The username for the replication connection. */
      username?: string;
      /** Whether or not to check the primary instance's Common Name value in the certificate that it sends during the SSL handshake. */
      verifyServerCertificate?: boolean;
    }
    interface MySqlSyncConfig {
      /** Flags to use for the initial dump. */
      initialSyncFlags?: SyncFlags[];
    }
    interface OnPremisesConfiguration {
      /** PEM representation of the trusted CA's x509 certificate. */
      caCertificate?: string;
      /** PEM representation of the replica's x509 certificate. */
      clientCertificate?: string;
      /** PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate. */
      clientKey?: string;
      /** The dump file to create the Cloud SQL replica. */
      dumpFilePath?: string;
      /** The host and port of the on-premises instance in host:port format */
      hostPort?: string;
      /** This is always `sql#onPremisesConfiguration`. */
      kind?: string;
      /** The password for connecting to on-premises instance. */
      password?: string;
      /** The reference to Cloud SQL instance if the source is Cloud SQL. */
      sourceInstance?: InstanceReference;
      /** The username for connecting to on-premises instance. */
      username?: string;
    }
    interface Operation {
      /** The context for acquire SSRS lease operation, if applicable. */
      acquireSsrsLeaseContext?: AcquireSsrsLeaseContext;
      /** An Admin API warning message. */
      apiWarning?: ApiWarning;
      /** The context for backup operation, if applicable. */
      backupContext?: BackupContext;
      /** The time this operation finished in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. */
      endTime?: string;
      /** If errors occurred during processing of this operation, this field will be populated. */
      error?: OperationErrors;
      /** The context for export operation, if applicable. */
      exportContext?: ExportContext;
      /** The context for import operation, if applicable. */
      importContext?: ImportContext;
      /** The time this operation was enqueued in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. */
      insertTime?: string;
      /** This is always `sql#operation`. */
      kind?: string;
      /** An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation. */
      name?: string;
      /** The type of the operation. Valid values are: * `CREATE` * `DELETE` * `UPDATE` * `RESTART` * `IMPORT` * `EXPORT` * `BACKUP_VOLUME` * `RESTORE_VOLUME` * `CREATE_USER` * `DELETE_USER` * `CREATE_DATABASE` * `DELETE_DATABASE` */
      operationType?: string;
      /** The URI of this resource. */
      selfLink?: string;
      /** The time this operation actually started in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. */
      startTime?: string;
      /** The status of an operation. */
      status?: string;
      /** Name of the database instance related to this operation. */
      targetId?: string;
      targetLink?: string;
      /** The project ID of the target instance related to this operation. */
      targetProject?: string;
      /** The email address of the user who initiated this operation. */
      user?: string;
    }
    interface OperationError {
      /** Identifies the specific error that occurred. */
      code?: string;
      /** This is always `sql#operationError`. */
      kind?: string;
      /** Additional information about the error encountered. */
      message?: string;
    }
    interface OperationErrors {
      /** The list of errors encountered while processing this operation. */
      errors?: OperationError[];
      /** This is always `sql#operationErrors`. */
      kind?: string;
    }
    interface OperationMetadata {
      /** Output only. API version used to start the operation. */
      apiVersion?: string;
      /** Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. */
      cancelRequested?: boolean;
      /** Output only. The time the operation was created. */
      createTime?: string;
      /** Output only. The time the operation finished running. */
      endTime?: string;
      /** Output only. Human-readable status of the operation, if any. */
      statusDetail?: string;
      /** Output only. Server-defined resource path for the target of the operation. */
      target?: string;
      /** Output only. Name of the verb executed by the operation. */
      verb?: string;
    }
    interface OperationsListResponse {
      /** List of operation resources. */
      items?: Operation[];
      /** This is always `sql#operationsList`. */
      kind?: string;
      /** The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results. */
      nextPageToken?: string;
    }
    interface PasswordStatus {
      /** If true, user does not have login privileges. */
      locked?: boolean;
      /** The expiration time of the current password. */
      passwordExpirationTime?: string;
    }
    interface PasswordValidationPolicy {
      /** The complexity of the password. */
      complexity?: string;
      /** This field is deprecated and will be removed in a future version of the API. */
      disallowCompromisedCredentials?: boolean;
      /** Disallow username as a part of the password. */
      disallowUsernameSubstring?: boolean;
      /** Whether the password policy is enabled or not. */
      enablePasswordPolicy?: boolean;
      /** Minimum number of characters allowed. */
      minLength?: number;
      /** Minimum interval after which the password can be changed. This flag is only supported for PostgreSQL. */
      passwordChangeInterval?: string;
      /** Number of previous passwords that cannot be reused. */
      reuseInterval?: number;
    }
    interface PerformDiskShrinkContext {
      /** The target disk shrink size in GigaBytes. */
      targetSizeGb?: string;
    }
    interface PscConfig {
      /** Optional. The list of consumer projects that are allow-listed for PSC connections to this instance. This instance can be connected to with PSC from any network in these projects. Each consumer project in this list may be represented by a project number (numeric) or by a project id (alphanumeric). */
      allowedConsumerProjects?: string[];
      /** Whether PSC connectivity is enabled for this instance. */
      pscEnabled?: boolean;
    }
    interface ReplicaConfiguration {
      /** Optional. Specifies if a SQL Server replica is a cascadable replica. A cascadable replica is a SQL Server cross region replica that supports replica(s) under it. */
      cascadableReplica?: boolean;
      /** Specifies if the replica is the failover target. If the field is set to `true` the replica will be designated as a failover replica. In case the primary instance fails, the replica instance will be promoted as the new primary instance. Only one replica can be specified as failover target, and the replica has to be in different zone with the primary instance. */
      failoverTarget?: boolean;
      /** This is always `sql#replicaConfiguration`. */
      kind?: string;
      /** MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named `master.info` in the data directory. */
      mysqlReplicaConfiguration?: MySqlReplicaConfiguration;
    }
    interface ReplicationCluster {
      /** Output only. Read-only field that indicates whether the replica is a DR replica. This field is not set if the instance is a primary instance. */
      drReplica?: boolean;
      /** Optional. If the instance is a primary instance, then this field identifies the disaster recovery (DR) replica. A DR replica is an optional configuration for Enterprise Plus edition instances. If the instance is a read replica, then the field is not set. Set this field to a replica name to designate a DR replica for a primary instance. Remove the replica name to remove the DR replica designation. */
      failoverDrReplicaName?: string;
      /** Output only. If set, it indicates this instance has a private service access (PSA) dns endpoint that is pointing to the primary instance of the cluster. If this instance is the primary, the dns should be pointing to this instance. After Switchover or Replica failover, this DNS endpoint points to the promoted instance. This is a read-only field, returned to the user as information. This field can exist even if a standalone instance does not yet have a replica, or had a DR replica that was deleted. */
      psaWriteEndpoint?: string;
    }
    interface Reschedule {
      /** Required. The type of the reschedule. */
      rescheduleType?: string;
      /** Optional. Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. */
      scheduleTime?: string;
    }
    interface RestoreBackupContext {
      /** The ID of the backup run to restore from. */
      backupRunId?: string;
      /** The ID of the instance that the backup was taken from. */
      instanceId?: string;
      /** This is always `sql#restoreBackupContext`. */
      kind?: string;
      /** The full project ID of the source instance. */
      project?: string;
    }
    interface RotateServerCaContext {
      /** This is always `sql#rotateServerCaContext`. */
      kind?: string;
      /** The fingerprint of the next version to be rotated to. If left unspecified, will be rotated to the most recently added server CA version. */
      nextVersion?: string;
    }
    interface Settings {
      /** The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: * `ALWAYS`: The instance is on, and remains so even in the absence of connection requests. * `NEVER`: The instance is off; it is not activated, even if a connection request arrives. */
      activationPolicy?: string;
      /** Active Directory configuration, relevant only for Cloud SQL for SQL Server. */
      activeDirectoryConfig?: SqlActiveDirectoryConfig;
      /** Specifies advanced machine configuration for the instances relevant only for SQL Server. */
      advancedMachineFeatures?: AdvancedMachineFeatures;
      /** The App Engine app IDs that can access this instance. (Deprecated) Applied to First Generation instances only. */
      authorizedGaeApplications?: string[];
      /** Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data accessibility. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available)./ For more information, see [Overview of the High Availability Configuration](https://cloud.google.com/sql/docs/mysql/high-availability). */
      availabilityType?: string;
      /** The daily backup configuration for the instance. */
      backupConfiguration?: BackupConfiguration;
      /** The name of server Instance collation. */
      collation?: string;
      /** Specifies if connections must use Cloud SQL connectors. Option values include the following: `NOT_REQUIRED` (Cloud SQL instances can be connected without Cloud SQL Connectors) and `REQUIRED` (Only allow connections that use Cloud SQL Connectors) Note that using REQUIRED disables all existing authorized networks. If this field is not specified when creating a new instance, NOT_REQUIRED is used. If this field is not specified when patching or updating an existing instance, it is left unchanged in the instance. */
      connectorEnforcement?: string;
      /** Configuration specific to read replica instances. Indicates whether database flags for crash-safe replication are enabled. This property was only applicable to First Generation instances. */
      crashSafeReplicationEnabled?: boolean;
      /** The database flags passed to the instance at startup. */
      databaseFlags?: DatabaseFlags[];
      /** Configuration specific to read replica instances. Indicates whether replication is enabled or not. WARNING: Changing this restarts the instance. */
      databaseReplicationEnabled?: boolean;
      /** Configuration for data cache. */
      dataCacheConfig?: DataCacheConfig;
      /** The size of data disk, in GB. The data disk size minimum is 10GB. */
      dataDiskSizeGb?: string;
      /** The type of data disk: `PD_SSD` (default) or `PD_HDD`. Not used for First Generation instances. */
      dataDiskType?: string;
      /** Configuration to protect against accidental instance deletion. */
      deletionProtectionEnabled?: boolean;
      /** Deny maintenance periods */
      denyMaintenancePeriods?: DenyMaintenancePeriod[];
      /** Optional. The edition of the instance. */
      edition?: string;
      /** Optional. By default, Cloud SQL instances have schema extraction disabled for Dataplex. When this parameter is set to true, schema extraction for Dataplex on Cloud SQL instances is activated. */
      enableDataplexIntegration?: boolean;
      /** Optional. When this parameter is set to true, Cloud SQL instances can connect to Vertex AI to pass requests for real-time predictions and insights to the AI. The default value is false. This applies only to Cloud SQL for PostgreSQL instances. */
      enableGoogleMlIntegration?: boolean;
      /** Insights configuration, for now relevant only for Postgres. */
      insightsConfig?: InsightsConfig;
      /** The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled for Second Generation instances. */
      ipConfiguration?: IpConfiguration;
      /** This is always `sql#settings`. */
      kind?: string;
      /** The location preference settings. This allows the instance to be located as near as possible to either an App Engine app or Compute Engine zone for better performance. App Engine co-location was only applicable to First Generation instances. */
      locationPreference?: LocationPreference;
      /** The maintenance window for this instance. This specifies when the instance can be restarted for maintenance purposes. */
      maintenanceWindow?: MaintenanceWindow;
      /** The local user password validation policy of the instance. */
      passwordValidationPolicy?: PasswordValidationPolicy;
      /** The pricing plan for this instance. This can be either `PER_USE` or `PACKAGE`. Only `PER_USE` is supported for Second Generation instances. */
      pricingPlan?: string;
      /** The type of replication this instance uses. This can be either `ASYNCHRONOUS` or `SYNCHRONOUS`. (Deprecated) This property was only applicable to First Generation instances. */
      replicationType?: string;
      /** The version of instance settings. This is a required field for update method to make sure concurrent updates are handled properly. During update, use the most recent settingsVersion value for this instance and do not try to update this value. */
      settingsVersion?: string;
      /** SQL Server specific audit configuration. */
      sqlServerAuditConfig?: SqlServerAuditConfig;
      /** Configuration to increase storage size automatically. The default value is true. */
      storageAutoResize?: boolean;
      /** The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit. */
      storageAutoResizeLimit?: string;
      /** The tier (or machine type) for this instance, for example `db-custom-1-3840`. WARNING: Changing this restarts the instance. */
      tier?: string;
      /** Server timezone, relevant only for Cloud SQL for SQL Server. */
      timeZone?: string;
      /** User-provided labels, represented as a dictionary where each label is a single key value pair. */
      userLabels?: {[P in string]: string};
    }
    interface SqlActiveDirectoryConfig {
      /** The name of the domain (e.g., mydomain.com). */
      domain?: string;
      /** This is always sql#activeDirectoryConfig. */
      kind?: string;
    }
    interface SqlExternalSyncSettingError {
      /** Additional information about the error encountered. */
      detail?: string;
      /** Can be `sql#externalSyncSettingError` or `sql#externalSyncSettingWarning`. */
      kind?: string;
      /** Identifies the specific error that occurred. */
      type?: string;
    }
    interface SqlInstancesAcquireSsrsLeaseResponse {
      /** The unique identifier for this operation. */
      operationId?: string;
    }
    interface SqlInstancesGetDiskShrinkConfigResponse {
      /** This is always `sql#getDiskShrinkConfig`. */
      kind?: string;
      /** Additional message to customers. */
      message?: string;
      /** The minimum size to which a disk can be shrunk in GigaBytes. */
      minimalTargetSizeGb?: string;
    }
    interface SqlInstancesGetLatestRecoveryTimeResponse {
      /** This is always `sql#getLatestRecoveryTime`. */
      kind?: string;
      /** Timestamp, identifies the latest recovery time of the source instance. */
      latestRecoveryTime?: string;
    }
    interface SqlInstancesReleaseSsrsLeaseResponse {
      /** The operation ID. */
      operationId?: string;
    }
    interface SqlInstancesRescheduleMaintenanceRequestBody {
      /** Required. The type of the reschedule the user wants. */
      reschedule?: Reschedule;
    }
    interface SqlInstancesResetReplicaSizeRequest {}
    interface SqlInstancesStartExternalSyncRequest {
      /** Optional. MigrationType configures the migration to use physical files or logical dump files. If not set, then the logical dump file configuration is used. Valid values are `LOGICAL` or `PHYSICAL`. Only applicable to MySQL. */
      migrationType?: string;
      /** MySQL-specific settings for start external sync. */
      mysqlSyncConfig?: MySqlSyncConfig;
      /** Whether to skip the verification step (VESS). */
      skipVerification?: boolean;
      /** External sync mode. */
      syncMode?: string;
      /** Optional. Parallel level for initial data sync. Currently only applicable for MySQL. */
      syncParallelLevel?: string;
    }
    interface SqlInstancesVerifyExternalSyncSettingsRequest {
      /** Optional. MigrationType configures the migration to use physical files or logical dump files. If not set, then the logical dump file configuration is used. Valid values are `LOGICAL` or `PHYSICAL`. Only applicable to MySQL. */
      migrationType?: string;
      /** Optional. MySQL-specific settings for start external sync. */
      mysqlSyncConfig?: MySqlSyncConfig;
      /** External sync mode */
      syncMode?: string;
      /** Optional. Parallel level for initial data sync. Only applicable for PostgreSQL. */
      syncParallelLevel?: string;
      /** Flag to enable verifying connection only */
      verifyConnectionOnly?: boolean;
      /** Optional. Flag to verify settings required by replication setup only */
      verifyReplicationOnly?: boolean;
    }
    interface SqlInstancesVerifyExternalSyncSettingsResponse {
      /** List of migration violations. */
      errors?: SqlExternalSyncSettingError[];
      /** This is always `sql#migrationSettingErrorList`. */
      kind?: string;
      /** List of migration warnings. */
      warnings?: SqlExternalSyncSettingError[];
    }
    interface SqlOutOfDiskReport {
      /** The minimum recommended increase size in GigaBytes This field is consumed by the frontend * Writers: * the proactive database wellness job for OOD. * Readers: */
      sqlMinRecommendedIncreaseSizeGb?: number;
      /** This field represents the state generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job */
      sqlOutOfDiskState?: string;
    }
    interface SqlScheduledMaintenance {
      canDefer?: boolean;
      /** If the scheduled maintenance can be rescheduled. */
      canReschedule?: boolean;
      /** Maintenance cannot be rescheduled to start beyond this deadline. */
      scheduleDeadlineTime?: string;
      /** The start time of any upcoming scheduled maintenance for this instance. */
      startTime?: string;
    }
    interface SqlServerAuditConfig {
      /** The name of the destination bucket (e.g., gs://mybucket). */
      bucket?: string;
      /** This is always sql#sqlServerAuditConfig */
      kind?: string;
      /** How long to keep generated audit files. */
      retentionInterval?: string;
      /** How often to upload generated audit files. */
      uploadInterval?: string;
    }
    interface SqlServerDatabaseDetails {
      /** The version of SQL Server with which the database is to be made compatible */
      compatibilityLevel?: number;
      /** The recovery model of a SQL Server database */
      recoveryModel?: string;
    }
    interface SqlServerUserDetails {
      /** If the user has been disabled */
      disabled?: boolean;
      /** The server roles for this user */
      serverRoles?: string[];
    }
    interface SslCert {
      /** PEM representation. */
      cert?: string;
      /** Serial number, as extracted from the certificate. */
      certSerialNumber?: string;
      /** User supplied name. Constrained to [a-zA-Z.-_ ]+. */
      commonName?: string;
      /** The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. */
      createTime?: string;
      /** The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. */
      expirationTime?: string;
      /** Name of the database instance. */
      instance?: string;
      /** This is always `sql#sslCert`. */
      kind?: string;
      /** The URI of this resource. */
      selfLink?: string;
      /** Sha1 Fingerprint. */
      sha1Fingerprint?: string;
    }
    interface SslCertDetail {
      /** The public information about the cert. */
      certInfo?: SslCert;
      /** The private key for the client cert, in pem format. Keep private in order to protect your security. */
      certPrivateKey?: string;
    }
    interface SslCertsCreateEphemeralRequest {
      /** Access token to include in the signed certificate. */
      access_token?: string;
      /** PEM encoded public key to include in the signed certificate. */
      public_key?: string;
    }
    interface SslCertsInsertRequest {
      /** User supplied name. Must be a distinct name from the other certificates for this instance. */
      commonName?: string;
    }
    interface SslCertsInsertResponse {
      /** The new client certificate and private key. */
      clientCert?: SslCertDetail;
      /** This is always `sql#sslCertsInsert`. */
      kind?: string;
      /** The operation to track the ssl certs insert request. */
      operation?: Operation;
      /** The server Certificate Authority's certificate. If this is missing you can force a new one to be generated by calling resetSslConfig method on instances resource. */
      serverCaCert?: SslCert;
    }
    interface SslCertsListResponse {
      /** List of client certificates for the instance. */
      items?: SslCert[];
      /** This is always `sql#sslCertsList`. */
      kind?: string;
    }
    interface SyncFlags {
      /** The name of the flag. */
      name?: string;
      /** The value of the flag. This field must be omitted if the flag doesn't take a value. */
      value?: string;
    }
    interface Tier {
      /** The maximum disk size of this tier in bytes. */
      DiskQuota?: string;
      /** This is always `sql#tier`. */
      kind?: string;
      /** The maximum RAM usage of this tier in bytes. */
      RAM?: string;
      /** The applicable regions for this tier. */
      region?: string[];
      /** An identifier for the machine type, for example, `db-custom-1-3840`. For related information, see [Pricing](/sql/pricing). */
      tier?: string;
    }
    interface TiersListResponse {
      /** List of tiers. */
      items?: Tier[];
      /** This is always `sql#tiersList`. */
      kind?: string;
    }
    interface TruncateLogContext {
      /** This is always `sql#truncateLogContext`. */
      kind?: string;
      /** The type of log to truncate. Valid values are `MYSQL_GENERAL_TABLE` and `MYSQL_SLOW_TABLE`. */
      logType?: string;
    }
    interface User {
      /** Dual password status for the user. */
      dualPasswordType?: string;
      /** This field is deprecated and will be removed from a future version of the API. */
      etag?: string;
      /** Optional. The host from which the user can connect. For `insert` operations, host defaults to an empty string. For `update` operations, host is specified as part of the request URL. The host name cannot be updated after insertion. For a MySQL instance, it's required; for a PostgreSQL or SQL Server instance, it's optional. */
      host?: string;
      /** The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for *update* because it is already specified on the URL. */
      instance?: string;
      /** This is always `sql#user`. */
      kind?: string;
      /** The name of the user in the Cloud SQL instance. Can be omitted for `update` because it is already specified in the URL. */
      name?: string;
      /** The password for the user. */
      password?: string;
      /** User level password validation policy. */
      passwordPolicy?: UserPasswordValidationPolicy;
      /** The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for *update* because it is already specified on the URL. */
      project?: string;
      sqlserverUserDetails?: SqlServerUserDetails;
      /** The user type. It determines the method to authenticate the user during login. The default is the database's built-in user type. */
      type?: string;
    }
    interface UserPasswordValidationPolicy {
      /** Number of failed login attempts allowed before user get locked. */
      allowedFailedAttempts?: number;
      /** If true, failed login attempts check will be enabled. */
      enableFailedAttemptsCheck?: boolean;
      /** If true, the user must specify the current password before changing the password. This flag is supported only for MySQL. */
      enablePasswordVerification?: boolean;
      /** Expiration duration after password is updated. */
      passwordExpirationDuration?: string;
      /** Output only. Read-only password status. */
      status?: PasswordStatus;
    }
    interface UsersListResponse {
      /** List of user resources in the instance. */
      items?: User[];
      /** This is always *sql#usersList*. */
      kind?: string;
      /** Unused. */
      nextPageToken?: string;
    }
    interface BackupRunsResource {
      /** Deletes the backup taken by a backup run. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The ID of the backup run to delete. To find a backup run ID, use the [list](https://cloud.google.com/sql/docs/mysql/admin-api/rest/v1beta4/backupRuns/list) method. */
        id: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Retrieves a resource containing information about a backup run. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The ID of this backup run. */
        id: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<BackupRun>;
      /** Creates a new backup run on demand. */
      insert(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: BackupRun;
      }): Request<Operation>;
      insert(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: BackupRun
      ): Request<Operation>;
      /** Lists all backup runs associated with the project or a given instance and configuration in the reverse chronological order of the backup initiation time. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID, or "-" for all instances. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Maximum number of backup runs per response. */
        maxResults?: number;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** A previously-returned page token representing part of the larger set of results to view. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<BackupRunsListResponse>;
    }
    interface ConnectResource {
      /** Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database. */
      generateEphemeralCert(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: GenerateEphemeralCertRequest;
      }): Request<GenerateEphemeralCertResponse>;
      generateEphemeralCert(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: GenerateEphemeralCertRequest
      ): Request<GenerateEphemeralCertResponse>;
      /** Retrieves connect settings about a Cloud SQL instance. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Optional. Optional snapshot read timestamp to trade freshness for performance. */
        readTime?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<ConnectSettings>;
    }
    interface DatabasesResource {
      /** Deletes a database from a Cloud SQL instance. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Name of the database to be deleted in the instance. */
        database: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Database instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Retrieves a resource containing information about a database inside a Cloud SQL instance. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Name of the database in the instance. */
        database: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Database instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Database>;
      /** Inserts a resource containing information about a database inside a Cloud SQL instance. **Note:** You can't modify the default character set and collation. */
      insert(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Database instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: Database;
      }): Request<Operation>;
      insert(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Database instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: Database
      ): Request<Operation>;
      /** Lists databases in the specified Cloud SQL instance. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<DatabasesListResponse>;
      /** Partially updates a resource containing information about a database inside a Cloud SQL instance. This method supports patch semantics. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Name of the database to be updated in the instance. */
        database: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Database instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: Database;
      }): Request<Operation>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Name of the database to be updated in the instance. */
          database: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Database instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: Database
      ): Request<Operation>;
      /** Updates a resource containing information about a database inside a Cloud SQL instance. */
      update(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Name of the database to be updated in the instance. */
        database: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Database instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: Database;
      }): Request<Operation>;
      update(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Name of the database to be updated in the instance. */
          database: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Database instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: Database
      ): Request<Operation>;
    }
    interface FlagsResource {
      /** Lists all available database flags for Cloud SQL instances. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Database type and version you want to retrieve flags for. By default, this method returns flags for all database types and versions. */
        databaseVersion?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<FlagsListResponse>;
    }
    interface InstancesResource {
      /** Acquire a lease for the setup of SQL Server Reporting Services (SSRS). */
      acquireSsrsLease(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Required. Cloud SQL instance ID. This doesn't include the project ID. It's composed of lowercase letters, numbers, and hyphens, and it must start with a letter. The total length must be 98 characters or less (Example: instance-id). */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Required. ID of the project that contains the instance (Example: project-id). */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: InstancesAcquireSsrsLeaseRequest;
      }): Request<SqlInstancesAcquireSsrsLeaseResponse>;
      acquireSsrsLease(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Required. Cloud SQL instance ID. This doesn't include the project ID. It's composed of lowercase letters, numbers, and hyphens, and it must start with a letter. The total length must be 98 characters or less (Example: instance-id). */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Required. ID of the project that contains the instance (Example: project-id). */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: InstancesAcquireSsrsLeaseRequest
      ): Request<SqlInstancesAcquireSsrsLeaseResponse>;
      /** Add a new trusted Certificate Authority (CA) version for the specified instance. Required to prepare for a certificate rotation. If a CA version was previously added but never used in a certificate rotation, this operation replaces that version. There cannot be more than one CA version waiting to be rotated in. For instances that have enabled Certificate Authority Service (CAS) based server CA, please use AddServerCertificate to add a new server certificate. */
      addServerCa(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Creates a Cloud SQL instance as a clone of the source instance. Using this operation might cause your instance to restart. */
      clone(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The ID of the Cloud SQL instance to be cloned (source). This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the source as well as the clone Cloud SQL instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: InstancesCloneRequest;
      }): Request<Operation>;
      clone(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** The ID of the Cloud SQL instance to be cloned (source). This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the source as well as the clone Cloud SQL instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: InstancesCloneRequest
      ): Request<Operation>;
      /** Deletes a Cloud SQL instance. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance to be deleted. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Demotes an existing standalone instance to be a Cloud SQL read replica for an external database server. */
      demote(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Required. The name of the Cloud SQL instance. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Required. The project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: InstancesDemoteRequest;
      }): Request<Operation>;
      demote(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Required. The name of the Cloud SQL instance. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Required. The project ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: InstancesDemoteRequest
      ): Request<Operation>;
      /** Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server. */
      demoteMaster(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance name. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: InstancesDemoteMasterRequest;
      }): Request<Operation>;
      demoteMaster(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance name. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: InstancesDemoteMasterRequest
      ): Request<Operation>;
      /** Exports data from a Cloud SQL instance to a Cloud Storage bucket as a SQL dump or CSV file. */
      export(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** The Cloud SQL instance ID. This doesn't include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance to be exported. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: InstancesExportRequest;
      }): Request<Operation>;
      export(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** The Cloud SQL instance ID. This doesn't include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project that contains the instance to be exported. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: InstancesExportRequest
      ): Request<Operation>;
      /** Initiates a manual failover of a high availability (HA) primary instance to a standby instance, which becomes the primary instance. Users are then rerouted to the new primary. For more information, see the [Overview of high availability](https://cloud.google.com/sql/docs/mysql/high-availability) page in the Cloud SQL documentation. If using Legacy HA (MySQL only), this causes the instance to failover to its failover replica instance. */
      failover(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** ID of the project that contains the read replica. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: InstancesFailoverRequest;
      }): Request<Operation>;
      failover(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** ID of the project that contains the read replica. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: InstancesFailoverRequest
      ): Request<Operation>;
      /** Retrieves a resource containing information about a Cloud SQL instance. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Database instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<DatabaseInstance>;
      /** Imports data into a Cloud SQL instance from a SQL dump or CSV file in Cloud Storage. */
      import(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: InstancesImportRequest;
      }): Request<Operation>;
      import(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: InstancesImportRequest
      ): Request<Operation>;
      /** Creates a new Cloud SQL instance. */
      insert(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project to which the newly created Cloud SQL instances should belong. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: DatabaseInstance;
      }): Request<Operation>;
      insert(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project to which the newly created Cloud SQL instances should belong. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: DatabaseInstance
      ): Request<Operation>;
      /** Lists instances under a given project. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** A filter expression that filters resources listed in the response. The expression is in the form of field:value. For example, 'instanceType:CLOUD_SQL_INSTANCE'. Fields can be nested as needed as per their JSON representation, such as 'settings.userLabels.auto_start:true'. Multiple filter queries are space-separated. For example. 'state:RUNNABLE instanceType:CLOUD_SQL_INSTANCE'. By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. */
        filter?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** The maximum number of instances to return. The service may return fewer than this value. If unspecified, at most 500 instances are returned. The maximum value is 1000; values above 1000 are coerced to 1000. */
        maxResults?: number;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** A previously-returned page token representing part of the larger set of results to view. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project for which to list Cloud SQL instances. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<InstancesListResponse>;
      /** Lists all of the trusted Certificate Authorities (CAs) for the specified instance. There can be up to three CAs listed: the CA that was used to sign the certificate that is currently in use, a CA that has been added but not yet used to sign a certificate, and a CA used to sign a certificate that has previously rotated out. */
      listServerCas(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<InstancesListServerCasResponse>;
      /** Partially updates settings of a Cloud SQL instance by merging the request with the current configuration. This method supports patch semantics. */
      patch(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: DatabaseInstance;
      }): Request<Operation>;
      patch(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: DatabaseInstance
      ): Request<Operation>;
      /** Promotes the read replica instance to be an independent Cloud SQL primary instance. Using this operation might cause your instance to restart. */
      promoteReplica(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Set to true to invoke a replica failover to the designated DR replica. As part of replica failover, the promote operation attempts to add the original primary instance as a replica of the promoted DR replica when the original primary instance comes back online. If set to false or not specified, then the original primary instance becomes an independent Cloud SQL primary instance. Only applicable to MySQL. */
        failover?: boolean;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL read replica instance name. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** ID of the project that contains the read replica. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Reencrypt CMEK instance with latest key version. */
      reencrypt(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: InstancesReencryptRequest;
      }): Request<Operation>;
      reencrypt(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: InstancesReencryptRequest
      ): Request<Operation>;
      /** Release a lease for the setup of SQL Server Reporting Services (SSRS). */
      releaseSsrsLease(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Required. The Cloud SQL instance ID. This doesn't include the project ID. It's composed of lowercase letters, numbers, and hyphens, and it must start with a letter. The total length must be 98 characters or less (Example: instance-id). */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Required. The ID of the project that contains the instance (Example: project-id). */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<SqlInstancesReleaseSsrsLeaseResponse>;
      /** Deletes all client certificates and generates a new server SSL certificate for the instance. */
      resetSslConfig(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Restarts a Cloud SQL instance. */
      restart(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance to be restarted. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Restores a backup of a Cloud SQL instance. Using this operation might cause your instance to restart. */
      restoreBackup(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: InstancesRestoreBackupRequest;
      }): Request<Operation>;
      restoreBackup(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: InstancesRestoreBackupRequest
      ): Request<Operation>;
      /** Rotates the server certificate to one signed by the Certificate Authority (CA) version previously added with the addServerCA method. For instances that have enabled Certificate Authority Service (CAS) based server CA, please use RotateServerCertificate to rotate the server certificate. */
      rotateServerCa(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: InstancesRotateServerCaRequest;
      }): Request<Operation>;
      rotateServerCa(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: InstancesRotateServerCaRequest
      ): Request<Operation>;
      /** Starts the replication in the read replica instance. */
      startReplica(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL read replica instance name. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** ID of the project that contains the read replica. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Stops the replication in the read replica instance. */
      stopReplica(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL read replica instance name. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** ID of the project that contains the read replica. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Switches over from the primary instance to the designated DR replica instance. */
      switchover(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Optional. (MySQL only) Cloud SQL instance operations timeout, which is a sum of all database operations. Default value is 10 minutes and can be modified to a maximum value of 24 hours. */
        dbTimeout?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL read replica instance name. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** ID of the project that contains the replica. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Truncate MySQL general and slow query log tables MySQL only. */
      truncateLog(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the Cloud SQL project. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: InstancesTruncateLogRequest;
      }): Request<Operation>;
      truncateLog(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the Cloud SQL project. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: InstancesTruncateLogRequest
      ): Request<Operation>;
      /** Updates settings of a Cloud SQL instance. Using this operation might cause your instance to restart. */
      update(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: DatabaseInstance;
      }): Request<Operation>;
      update(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: DatabaseInstance
      ): Request<Operation>;
    }
    interface OperationsResource {
      /** Cancels an instance operation that has been performed on an instance. */
      cancel(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Instance operation ID. */
        operation: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<{}>;
      /** Retrieves an instance operation that has been performed on an instance. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Instance operation ID. */
        operation: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Lists all instance operations that have been performed on the given Cloud SQL instance in the reverse chronological order of the start time. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Maximum number of operations per response. */
        maxResults?: number;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** A previously-returned page token representing part of the larger set of results to view. */
        pageToken?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<OperationsListResponse>;
    }
    interface InstancesResource {
      /** Get Disk Shrink Config for a given instance. */
      getDiskShrinkConfig(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<SqlInstancesGetDiskShrinkConfigResponse>;
      /** Get Latest Recovery Time for a given instance. */
      getLatestRecoveryTime(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<SqlInstancesGetLatestRecoveryTimeResponse>;
      /** Perform Disk Shrink on primary instance. */
      performDiskShrink(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: PerformDiskShrinkContext;
      }): Request<Operation>;
      performDiskShrink(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: PerformDiskShrinkContext
      ): Request<Operation>;
      /** Reschedules the maintenance on the given instance. */
      rescheduleMaintenance(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: SqlInstancesRescheduleMaintenanceRequestBody;
      }): Request<Operation>;
      rescheduleMaintenance(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: SqlInstancesRescheduleMaintenanceRequestBody
      ): Request<Operation>;
      /** Reset Replica Size to primary instance disk size. */
      resetReplicaSize(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL read replica instance name. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** ID of the project that contains the read replica. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: SqlInstancesResetReplicaSizeRequest;
      }): Request<Operation>;
      resetReplicaSize(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL read replica instance name. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** ID of the project that contains the read replica. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: SqlInstancesResetReplicaSizeRequest
      ): Request<Operation>;
      /** Start External primary instance migration. */
      startExternalSync(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: SqlInstancesStartExternalSyncRequest;
      }): Request<Operation>;
      startExternalSync(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: SqlInstancesStartExternalSyncRequest
      ): Request<Operation>;
      /** Verify External primary instance external sync settings. */
      verifyExternalSyncSettings(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: SqlInstancesVerifyExternalSyncSettingsRequest;
      }): Request<SqlInstancesVerifyExternalSyncSettingsResponse>;
      verifyExternalSyncSettings(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: SqlInstancesVerifyExternalSyncSettingsRequest
      ): Request<SqlInstancesVerifyExternalSyncSettingsResponse>;
    }
    interface ProjectsResource {
      instances: InstancesResource;
    }
    interface SslCertsResource {
      /** Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database. */
      createEphemeral(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the Cloud SQL project. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: SslCertsCreateEphemeralRequest;
      }): Request<SslCert>;
      createEphemeral(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the Cloud SQL project. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: SslCertsCreateEphemeralRequest
      ): Request<SslCert>;
      /** Deletes the SSL certificate. For First Generation instances, the certificate remains valid until the instance is restarted. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Sha1 FingerPrint. */
        sha1Fingerprint: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Retrieves a particular SSL certificate. Does not include the private key (required for usage). The private key must be saved from the response to initial creation. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Sha1 FingerPrint. */
        sha1Fingerprint: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<SslCert>;
      /** Creates an SSL certificate and returns it along with the private key and server certificate authority. The new certificate will not be usable until the instance is restarted. */
      insert(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: SslCertsInsertRequest;
      }): Request<SslCertsInsertResponse>;
      insert(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Cloud SQL instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: SslCertsInsertRequest
      ): Request<SslCertsInsertResponse>;
      /** Lists all of the current SSL certificates for the instance. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Cloud SQL instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<SslCertsListResponse>;
    }
    interface TiersResource {
      /** Lists all available machine types (tiers) for Cloud SQL, for example, `db-custom-1-3840`. For related information, see [Pricing](/sql/pricing). */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project for which to list tiers. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<TiersListResponse>;
    }
    interface UsersResource {
      /** Deletes a user from a Cloud SQL instance. */
      delete(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Host of the user in the instance. */
        host?: string;
        /** Database instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Name of the user in the instance. */
        name?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<Operation>;
      /** Retrieves a resource containing information about a user. */
      get(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Host of a user of the instance. */
        host?: string;
        /** Database instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** User of the instance. */
        name: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<User>;
      /** Creates a new user in a Cloud SQL instance. */
      insert(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Database instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: User;
      }): Request<Operation>;
      insert(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Database instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: User
      ): Request<Operation>;
      /** Lists users in the specified Cloud SQL instance. */
      list(request?: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Database instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
      }): Request<UsersListResponse>;
      /** Updates an existing user in a Cloud SQL instance. */
      update(request: {
        /** V1 error format. */
        '$.xgafv'?: string;
        /** OAuth access token. */
        access_token?: string;
        /** Data format for response. */
        alt?: string;
        /** JSONP */
        callback?: string;
        /** Selector specifying which fields to include in a partial response. */
        fields?: string;
        /** Optional. Host of the user in the instance. */
        host?: string;
        /** Database instance ID. This does not include the project ID. */
        instance: string;
        /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
        key?: string;
        /** Name of the user in the instance. */
        name?: string;
        /** OAuth 2.0 token for the current user. */
        oauth_token?: string;
        /** Returns response with indentations and line breaks. */
        prettyPrint?: boolean;
        /** Project ID of the project that contains the instance. */
        project: string;
        /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
        quotaUser?: string;
        /** Upload protocol for media (e.g. "raw", "multipart"). */
        upload_protocol?: string;
        /** Legacy upload protocol for media (e.g. "media", "multipart"). */
        uploadType?: string;
        /** Request body */
        resource: User;
      }): Request<Operation>;
      update(
        request: {
          /** V1 error format. */
          '$.xgafv'?: string;
          /** OAuth access token. */
          access_token?: string;
          /** Data format for response. */
          alt?: string;
          /** JSONP */
          callback?: string;
          /** Selector specifying which fields to include in a partial response. */
          fields?: string;
          /** Optional. Host of the user in the instance. */
          host?: string;
          /** Database instance ID. This does not include the project ID. */
          instance: string;
          /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
          key?: string;
          /** Name of the user in the instance. */
          name?: string;
          /** OAuth 2.0 token for the current user. */
          oauth_token?: string;
          /** Returns response with indentations and line breaks. */
          prettyPrint?: boolean;
          /** Project ID of the project that contains the instance. */
          project: string;
          /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
          quotaUser?: string;
          /** Upload protocol for media (e.g. "raw", "multipart"). */
          upload_protocol?: string;
          /** Legacy upload protocol for media (e.g. "media", "multipart"). */
          uploadType?: string;
        },
        body: User
      ): Request<Operation>;
    }

    const backupRuns: BackupRunsResource;

    const connect: ConnectResource;

    const databases: DatabasesResource;

    const flags: FlagsResource;

    const instances: InstancesResource;

    const operations: OperationsResource;

    const projects: ProjectsResource;

    const sslCerts: SslCertsResource;

    const tiers: TiersResource;

    const users: UsersResource;
  }
}
