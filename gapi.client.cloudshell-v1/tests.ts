/* This is stub file for gapi.client.cloudshell-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20250606

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://cloudshell.googleapis.com/$discovery/rest?version=v1',
  );
  /** now we can use gapi.client.cloudshell */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
    'https://www.googleapis.com/auth/cloud-platform',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`. */
    await gapi.client.cloudshell.operations.cancel(
      {
        name: 'Test string',
      },
      {},
    );
    /** Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. */
    await gapi.client.cloudshell.operations.delete({
      name: 'Test string',
    });
    /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
    await gapi.client.cloudshell.operations.get({
      name: 'Test string',
    });
    /** Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. */
    await gapi.client.cloudshell.operations.list({
      filter: 'Test string',
      name: 'Test string',
      pageSize: 42,
      pageToken: 'Test string',
    });
    /** Adds a public SSH key to an environment, allowing clients with the corresponding private key to connect to that environment via SSH. If a key with the same content already exists, this will error with ALREADY_EXISTS. */
    await gapi.client.cloudshell.users.environments.addPublicKey(
      {
        environment: 'Test string',
      },
      {
        key: 'Test string',
      },
    );
    /** Sends OAuth credentials to a running environment on behalf of a user. When this completes, the environment will be authorized to run various Google Cloud command line tools without requiring the user to manually authenticate. */
    await gapi.client.cloudshell.users.environments.authorize(
      {
        name: 'Test string',
      },
      {
        accessToken: 'Test string',
        expireTime: 'Test string',
        idToken: 'Test string',
      },
    );
    /** Gets an environment. Returns NOT_FOUND if the environment does not exist. */
    await gapi.client.cloudshell.users.environments.get({
      name: 'Test string',
    });
    /** Removes a public SSH key from an environment. Clients will no longer be able to connect to the environment using the corresponding private key. If a key with the same content is not present, this will error with NOT_FOUND. */
    await gapi.client.cloudshell.users.environments.removePublicKey(
      {
        environment: 'Test string',
      },
      {
        key: 'Test string',
      },
    );
    /** Starts an existing environment, allowing clients to connect to it. The returned operation will contain an instance of StartEnvironmentMetadata in its metadata field. Users can wait for the environment to start by polling this operation via GetOperation. Once the environment has finished starting and is ready to accept connections, the operation will contain a StartEnvironmentResponse in its response field. */
    await gapi.client.cloudshell.users.environments.start(
      {
        name: 'Test string',
      },
      {
        accessToken: 'Test string',
        publicKeys: ['Test string'],
      },
    );
  }
});
