/* This is stub file for gapi.client.chromewebstore-v1.1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20251006

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://chromewebstore.googleapis.com/$discovery/rest?version=v1.1',
  );
  /** now we can use gapi.client.chromewebstore */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** See, edit, update, or publish your Chrome Web Store extensions, themes, apps, and licences you have access to */
    'https://www.googleapis.com/auth/chromewebstore',
    /** See and download your Chrome Web Store extensions and apps, and see licenses you have access to */
    'https://www.googleapis.com/auth/chromewebstore.readonly',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Gets your own Chrome Web Store item. */
    await gapi.client.chromewebstore.items.get({
      itemId: 'Test string',
      projection: 'Test string',
    });
    /** Inserts a new item. */
    await gapi.client.chromewebstore.items.insert({
      publisherEmail: 'Test string',
    });
    /** Publishes an item. */
    await gapi.client.chromewebstore.items.publish(
      {
        deployPercentage: 42,
        itemId: 'Test string',
        publishTarget: 'Test string',
        reviewExemption: true,
      },
      {
        deployPercentage: 42,
        reviewExemption: true,
        target: 'Test string',
      },
    );
    /** Updates an existing item. */
    await gapi.client.chromewebstore.items.update(
      {
        itemId: 'Test string',
      },
      {
        crxVersion: 'Test string',
        id: 'Test string',
        itemError: [
          {
            error_code: 'Test string',
            error_detail: 'Test string',
          },
        ],
        kind: 'Test string',
        publicKey: 'Test string',
        uploadState: 'Test string',
      },
    );
  }
});
