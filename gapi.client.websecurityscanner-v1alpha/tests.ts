/* This is stub file for gapi.client.websecurityscanner-v1alpha definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20250709

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://websecurityscanner.googleapis.com/$discovery/rest?version=v1alpha',
  );
  /** now we can use gapi.client.websecurityscanner */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
    'https://www.googleapis.com/auth/cloud-platform',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Creates a new ScanConfig. */
    await gapi.client.websecurityscanner.projects.scanConfigs.create(
      {
        parent: 'Test string',
      },
      {
        authentication: {
          customAccount: {
            loginUrl: 'Test string',
            password: 'Test string',
            username: 'Test string',
          },
          googleAccount: {
            password: 'Test string',
            username: 'Test string',
          },
        },
        blacklistPatterns: ['Test string'],
        displayName: 'Test string',
        latestRun: {
          endTime: 'Test string',
          executionState: 'Test string',
          hasVulnerabilities: true,
          name: 'Test string',
          progressPercent: 42,
          resultState: 'Test string',
          startTime: 'Test string',
          urlsCrawledCount: 'Test string',
          urlsTestedCount: 'Test string',
        },
        maxQps: 42,
        name: 'Test string',
        schedule: {
          intervalDurationDays: 42,
          scheduleTime: 'Test string',
        },
        startingUrls: ['Test string'],
        targetPlatforms: ['Test string'],
        userAgent: 'Test string',
      },
    );
    /** Deletes an existing ScanConfig and its child resources. */
    await gapi.client.websecurityscanner.projects.scanConfigs.delete({
      name: 'Test string',
    });
    /** Gets a ScanConfig. */
    await gapi.client.websecurityscanner.projects.scanConfigs.get({
      name: 'Test string',
    });
    /** Lists ScanConfigs under a given project. */
    await gapi.client.websecurityscanner.projects.scanConfigs.list({
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Updates a ScanConfig. This method support partial update of a ScanConfig. */
    await gapi.client.websecurityscanner.projects.scanConfigs.patch(
      {
        name: 'Test string',
        updateMask: 'Test string',
      },
      {
        authentication: {
          customAccount: {
            loginUrl: 'Test string',
            password: 'Test string',
            username: 'Test string',
          },
          googleAccount: {
            password: 'Test string',
            username: 'Test string',
          },
        },
        blacklistPatterns: ['Test string'],
        displayName: 'Test string',
        latestRun: {
          endTime: 'Test string',
          executionState: 'Test string',
          hasVulnerabilities: true,
          name: 'Test string',
          progressPercent: 42,
          resultState: 'Test string',
          startTime: 'Test string',
          urlsCrawledCount: 'Test string',
          urlsTestedCount: 'Test string',
        },
        maxQps: 42,
        name: 'Test string',
        schedule: {
          intervalDurationDays: 42,
          scheduleTime: 'Test string',
        },
        startingUrls: ['Test string'],
        targetPlatforms: ['Test string'],
        userAgent: 'Test string',
      },
    );
    /** Start a ScanRun according to the given ScanConfig. */
    await gapi.client.websecurityscanner.projects.scanConfigs.start(
      {
        name: 'Test string',
      },
      {},
    );
    /** Gets a ScanRun. */
    await gapi.client.websecurityscanner.projects.scanConfigs.scanRuns.get({
      name: 'Test string',
    });
    /** Lists ScanRuns under a given ScanConfig, in descending order of ScanRun stop time. */
    await gapi.client.websecurityscanner.projects.scanConfigs.scanRuns.list({
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
    /** Stops a ScanRun. The stopped ScanRun is returned. */
    await gapi.client.websecurityscanner.projects.scanConfigs.scanRuns.stop(
      {
        name: 'Test string',
      },
      {},
    );
    /** List CrawledUrls under a given ScanRun. */
    await gapi.client.websecurityscanner.projects.scanConfigs.scanRuns.crawledUrls.list(
      {
        pageSize: 42,
        pageToken: 'Test string',
        parent: 'Test string',
      },
    );
    /** Gets a Finding. */
    await gapi.client.websecurityscanner.projects.scanConfigs.scanRuns.findings.get(
      {
        name: 'Test string',
      },
    );
    /** List Findings under a given ScanRun. */
    await gapi.client.websecurityscanner.projects.scanConfigs.scanRuns.findings.list(
      {
        filter: 'Test string',
        pageSize: 42,
        pageToken: 'Test string',
        parent: 'Test string',
      },
    );
    /** List all FindingTypeStats under a given ScanRun. */
    await gapi.client.websecurityscanner.projects.scanConfigs.scanRuns.findingTypeStats.list(
      {
        parent: 'Test string',
      },
    );
  }
});
