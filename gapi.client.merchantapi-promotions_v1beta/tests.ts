/* This is stub file for gapi.client.merchantapi-promotions_v1beta definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20250414

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://merchantapi.googleapis.com/$discovery/rest?version=promotions_v1beta',
  );
  /** now we can use gapi.client.merchantapi */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** Manage your product listings and accounts for Google Shopping */
    'https://www.googleapis.com/auth/content',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** Retrieves the promotion from your Merchant Center account. After inserting or updating a promotion input, it may take several minutes before the updated promotion can be retrieved. */
    await gapi.client.merchantapi.accounts.promotions.get({
      name: 'Test string',
    });
    /** Inserts a promotion for your Merchant Center account. If the promotion already exists, then it updates the promotion instead. */
    await gapi.client.merchantapi.accounts.promotions.insert(
      {
        parent: 'Test string',
      },
      {
        dataSource: 'Test string',
        promotion: {
          attributes: {
            brandExclusion: ['Test string'],
            brandInclusion: ['Test string'],
            couponValueType: 'Test string',
            freeGiftDescription: 'Test string',
            freeGiftItemId: 'Test string',
            freeGiftValue: {
              amountMicros: 'Test string',
              currencyCode: 'Test string',
            },
            genericRedemptionCode: 'Test string',
            getThisQuantityDiscounted: 'Test string',
            itemGroupIdExclusion: ['Test string'],
            itemGroupIdInclusion: ['Test string'],
            itemIdExclusion: ['Test string'],
            itemIdInclusion: ['Test string'],
            limitQuantity: 'Test string',
            limitValue: {
              amountMicros: 'Test string',
              currencyCode: 'Test string',
            },
            longTitle: 'Test string',
            minimumPurchaseAmount: {
              amountMicros: 'Test string',
              currencyCode: 'Test string',
            },
            minimumPurchaseQuantity: 'Test string',
            moneyOffAmount: {
              amountMicros: 'Test string',
              currencyCode: 'Test string',
            },
            offerType: 'Test string',
            percentOff: 'Test string',
            productApplicability: 'Test string',
            productTypeExclusion: ['Test string'],
            productTypeInclusion: ['Test string'],
            promotionDestinations: ['Test string'],
            promotionDisplayTimePeriod: {
              endTime: 'Test string',
              startTime: 'Test string',
            },
            promotionEffectiveTimePeriod: {
              endTime: 'Test string',
              startTime: 'Test string',
            },
            promotionUrl: 'Test string',
            storeApplicability: 'Test string',
            storeCodesExclusion: ['Test string'],
            storeCodesInclusion: ['Test string'],
          },
          contentLanguage: 'Test string',
          customAttributes: [
            {
              groupValues: undefined,
              name: 'Test string',
              value: 'Test string',
            },
          ],
          dataSource: 'Test string',
          name: 'Test string',
          promotionId: 'Test string',
          promotionStatus: {
            creationDate: 'Test string',
            destinationStatuses: [
              {
                reportingContext: 'Test string',
                status: 'Test string',
              },
            ],
            itemLevelIssues: [
              {
                applicableCountries: ['Test string'],
                attribute: 'Test string',
                code: 'Test string',
                description: 'Test string',
                detail: 'Test string',
                documentation: 'Test string',
                reportingContext: 'Test string',
                resolution: 'Test string',
                severity: 'Test string',
              },
            ],
            lastUpdateDate: 'Test string',
          },
          redemptionChannel: ['Test string'],
          targetCountry: 'Test string',
          versionNumber: 'Test string',
        },
      },
    );
    /** Lists the promotions in your Merchant Center account. The response might contain fewer items than specified by `pageSize`. Rely on `pageToken` to determine if there are more items to be requested. After inserting or updating a promotion, it may take several minutes before the updated processed promotion can be retrieved. */
    await gapi.client.merchantapi.accounts.promotions.list({
      pageSize: 42,
      pageToken: 'Test string',
      parent: 'Test string',
    });
  }
});
