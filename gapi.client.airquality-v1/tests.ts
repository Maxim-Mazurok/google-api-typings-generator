/* This is stub file for gapi.client.airquality-v1 definition tests */
// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator

// Revision: 20250818

gapi.load('client', async () => {
  /** now we can use gapi.client */

  await gapi.client.load(
    'https://airquality.googleapis.com/$discovery/rest?version=v1',
  );
  /** now we can use gapi.client.airquality */

  /** don't forget to authenticate your client before sending any request to resources: */
  /** declare client_id registered in Google Developers Console */
  const client_id = '<<PUT YOUR CLIENT ID HERE>>';
  const scope = [
    /** See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. */
    'https://www.googleapis.com/auth/cloud-platform',
  ];
  const immediate = false;
  gapi.auth.authorize({client_id, scope, immediate}, authResult => {
    if (authResult && !authResult.error) {
      /** handle successful authorization */
      void run();
    } else {
      /** handle authorization error */
    }
  });

  async function run() {
    /** The Current Conditions endpoint provides hourly air quality information in more than 100 countries, up to a 500 x 500 meters resolution. Includes over 70 local indexes and global air quality index and categories. */
    await gapi.client.airquality.currentConditions.lookup(
      {},
      {
        customLocalAqis: [
          {
            aqi: 'Test string',
            regionCode: 'Test string',
          },
        ],
        extraComputations: ['Test string'],
        languageCode: 'Test string',
        location: {
          latitude: 42,
          longitude: 42,
        },
        uaqiColorPalette: 'Test string',
        universalAqi: true,
      },
    );
    /** Returns air quality forecast for a specific location for a given time range. */
    await gapi.client.airquality.forecast.lookup(
      {},
      {
        customLocalAqis: [
          {
            aqi: 'Test string',
            regionCode: 'Test string',
          },
        ],
        dateTime: 'Test string',
        extraComputations: ['Test string'],
        languageCode: 'Test string',
        location: {
          latitude: 42,
          longitude: 42,
        },
        pageSize: 42,
        pageToken: 'Test string',
        period: {
          endTime: 'Test string',
          startTime: 'Test string',
        },
        uaqiColorPalette: 'Test string',
        universalAqi: true,
      },
    );
    /** Returns air quality history for a specific location for a given time range. */
    await gapi.client.airquality.history.lookup(
      {},
      {
        customLocalAqis: [
          {
            aqi: 'Test string',
            regionCode: 'Test string',
          },
        ],
        dateTime: 'Test string',
        extraComputations: ['Test string'],
        hours: 42,
        languageCode: 'Test string',
        location: {
          latitude: 42,
          longitude: 42,
        },
        pageSize: 42,
        pageToken: 'Test string',
        period: {
          endTime: 'Test string',
          startTime: 'Test string',
        },
        uaqiColorPalette: 'Test string',
        universalAqi: true,
      },
    );
    /** Returns a bytes array containing the data of the tile PNG image. */
    await gapi.client.airquality.mapTypes.heatmapTiles.lookupHeatmapTile({
      mapType: 'Test string',
      x: 42,
      y: 42,
      zoom: 42,
    });
  }
});
