/* Type definitions for non-npm package Dialogflow API v3 3.0 */
// Project: https://cloud.google.com/dialogflow/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
//                 Nick Amoscato <https://github.com/namoscato>
//                 Declan Vong <https://github.com/declanvong>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://dialogflow.googleapis.com/$discovery/rest?version=v3
// Revision: 20201204

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Dialogflow API v3 */
    function load(name: "dialogflow", version: "v3"): PromiseLike<void>;
    function load(name: "dialogflow", version: "v3", callback: () => any): void;

    namespace dialogflow {
        interface GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata {
            /** Name of the created version. Format: `projects//locations//agents//flows//versions/`. */
            version?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1ExportAgentResponse {
            /** Uncompressed raw byte content for agent. */
            agentContent?: string;
            /** The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in ExportAgentRequest. */
            agentUri?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1PageInfo {
            /** Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page. Format: `projects//locations//agents//flows//pages/`. */
            currentPage?: string;
            /** Optional for both WebhookRequest and WebhookResponse. Information about the form. */
            formInfo?: GoogleCloudDialogflowCxV3beta1PageInfoFormInfo;
        }
        interface GoogleCloudDialogflowCxV3beta1PageInfoFormInfo {
            /** Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the webhook cannot add or remove any form parameter. */
            parameterInfo?: GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo[];
        }
        interface GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo {
            /** Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter, unique within the form. This field cannot be modified by the webhook. */
            displayName?: string;
            /** Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just collected on the last conversation turn. */
            justCollected?: boolean;
            /**
             * Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user
             * specifies them. Required parameters must be filled before form filling concludes.
             */
            required?: boolean;
            /**
             * Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can be set to INVALID by the webhook to invalidate the parameter; other
             * values set by the webhook will be ignored.
             */
            state?: string;
            /** Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by the webhook to change the parameter value. */
            value?: any;
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessage {
            /** Indicates that the conversation succeeded. */
            conversationSuccess?: GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess;
            /**
             * Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` or
             * `END_PAGE` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.
             */
            endInteraction?: any;
            /** Hands off conversation to a human agent. */
            liveAgentHandoff?: GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff;
            /**
             * Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only
             * and not supposed to be defined by the user.
             */
            mixedAudio?: GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio;
            /** A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message. */
            outputAudioText?: GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText;
            /** Returns a response containing a custom, platform-specific payload. */
            payload?: { [P in string]: any };
            /**
             * Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or
             * process the URI in any way.
             */
            playAudio?: GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio;
            /** Returns a text response. */
            text?: GoogleCloudDialogflowCxV3beta1ResponseMessageText;
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess {
            /** Custom metadata. Dialogflow doesn't impose any structure on this. */
            metadata?: { [P in string]: any };
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction {
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff {
            /** Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this. */
            metadata?: { [P in string]: any };
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio {
            /** Segments this audio response is composed of. */
            segments?: GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment[];
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment {
            /** Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request. */
            allowPlaybackInterruption?: boolean;
            /** Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request. */
            audio?: string;
            /** Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it. */
            uri?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText {
            /** Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request. */
            allowPlaybackInterruption?: boolean;
            /** The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml). */
            ssml?: string;
            /** The raw text to be synthesized. */
            text?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio {
            /** Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request. */
            allowPlaybackInterruption?: boolean;
            /** Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it. */
            audioUri?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1ResponseMessageText {
            /** Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request. */
            allowPlaybackInterruption?: boolean;
            /** Required. A collection of text responses. */
            text?: string[];
        }
        interface GoogleCloudDialogflowCxV3beta1SessionInfo {
            /**
             * Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents during the session. Parameters can be created, updated, or removed by the
             * webhook. To remove a parameter from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map is keyed by parameters' display names.
             */
            parameters?: { [P in string]: any };
            /**
             * Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This field can be used by the webhook to identify a user. Format:
             * `projects//locations//agents//sessions/`.
             */
            session?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1WebhookRequest {
            /** Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller. */
            detectIntentResponseId?: string;
            /** Always present. Information about the fulfillment that triggered this webhook call. */
            fulfillmentInfo?: GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo;
            /** Information about the last matched intent. */
            intentInfo?: GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo;
            /** The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response; */
            messages?: GoogleCloudDialogflowCxV3beta1ResponseMessage[];
            /** Information about page status. */
            pageInfo?: GoogleCloudDialogflowCxV3beta1PageInfo;
            /** Custom data set in QueryParameters.payload. */
            payload?: { [P in string]: any };
            /** Information about session status. */
            sessionInfo?: GoogleCloudDialogflowCxV3beta1SessionInfo;
        }
        interface GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo {
            /** Always present. The tag used to identify which fulfillment is being called. */
            tag?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo {
            /** Always present. The unique identifier of the last matched intent. Format: `projects//locations//agents//intents/`. */
            lastMatchedIntent?: string;
            /**
             * Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user's utterance. All
             * parameters defined in the matched intent that are identified will be surfaced here.
             */
            parameters?: { [P in string]: GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue };
        }
        interface GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue {
            /** Always present. Original text value extracted from user utterance. */
            originalValue?: string;
            /** Always present. Structured value for the parameter extracted from user utterance. */
            resolvedValue?: any;
        }
        interface GoogleCloudDialogflowCxV3beta1WebhookResponse {
            /** The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend to send any response to the user. */
            fulfillmentResponse?: GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse;
            /** Information about page status. This field can be omitted by the webhook if it does not intend to modify page status. */
            pageInfo?: GoogleCloudDialogflowCxV3beta1PageInfo;
            /** Value to append directly to QueryResult.webhook_payloads. */
            payload?: { [P in string]: any };
            /** Information about session status. This field can be omitted by the webhook if it does not intend to modify session status. */
            sessionInfo?: GoogleCloudDialogflowCxV3beta1SessionInfo;
            /** The target flow to transition to. Format: `projects//locations//agents//flows/`. */
            targetFlow?: string;
            /** The target page to transition to. Format: `projects//locations//agents//flows//pages/`. */
            targetPage?: string;
        }
        interface GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse {
            /** Merge behavior for `messages`. */
            mergeBehavior?: string;
            /** The list of rich message responses to present to the user. */
            messages?: GoogleCloudDialogflowCxV3beta1ResponseMessage[];
        }
        interface GoogleCloudDialogflowV2AnnotatedMessagePart {
            /**
             * The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the
             * phrase part with a system entity.
             */
            entityType?: string;
            /**
             * The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type
             * `@sys.unit-currency`, this may contain: { "amount": 5, "currency": "USD" }
             */
            formattedValue?: any;
            /** A part of a message possibly annotated with an entity. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse {
            /** The collection of updated or created entity types. */
            entityTypes?: GoogleCloudDialogflowV2EntityType[];
        }
        interface GoogleCloudDialogflowV2BatchUpdateIntentsResponse {
            /** The collection of updated or created intents. */
            intents?: GoogleCloudDialogflowV2Intent[];
        }
        interface GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse {
            /** The collection of updated or created entity types. */
            entityTypes?: GoogleCloudDialogflowV2beta1EntityType[];
        }
        interface GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse {
            /** The collection of updated or created intents. */
            intents?: GoogleCloudDialogflowV2beta1Intent[];
        }
        interface GoogleCloudDialogflowV2beta1Context {
            /**
             * Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire
             * automatically after 20 minutes if there are no matching queries.
             */
            lifespanCount?: number;
            /**
             * Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
             * `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to
             * lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID`
             * is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with
             * these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
             */
            name?: string;
            /**
             * Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table,
             * dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type
             * is a composite entity: map - Else: string or number, depending on parameter value type - MapValue value: - If parameter's entity type is a composite entity: map from composite
             * entity property names to property values - Else: parameter value
             */
            parameters?: { [P in string]: any };
        }
        interface GoogleCloudDialogflowV2beta1EntityType {
            /** Optional. Indicates whether the entity type can be automatically expanded. */
            autoExpansionMode?: string;
            /** Required. The name of the entity type. */
            displayName?: string;
            /** Optional. Enables fuzzy entity extraction during classification. */
            enableFuzzyExtraction?: boolean;
            /** Optional. The collection of entity entries associated with the entity type. */
            entities?: GoogleCloudDialogflowV2beta1EntityTypeEntity[];
            /** Required. Indicates the kind of entity type. */
            kind?: string;
            /**
             * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: -
             * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            name?: string;
        }
        interface GoogleCloudDialogflowV2beta1EntityTypeEntity {
            /**
             * Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity
             * types: * This collection must contain exactly one synonym equal to `value`.
             */
            synonyms?: string[];
            /**
             * Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A
             * reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).
             */
            value?: string;
        }
        interface GoogleCloudDialogflowV2beta1EventInput {
            /**
             * Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note
             * that queries in the same session do not necessarily need to specify the same language.
             */
            languageCode?: string;
            /** Required. The unique identifier of the event. */
            name?: string;
            /**
             * The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON
             * object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite
             * entity: map - Else: string or number, depending on parameter value type - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property
             * names to property values - Else: parameter value
             */
            parameters?: { [P in string]: any };
        }
        interface GoogleCloudDialogflowV2beta1ExportAgentResponse {
            /** Zip compressed raw byte content for agent. */
            agentContent?: string;
            /** The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`. */
            agentUri?: string;
        }
        interface GoogleCloudDialogflowV2beta1Intent {
            /** Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces. */
            action?: string;
            /** Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform). */
            defaultResponsePlatforms?: string[];
            /** Required. The name of this intent. */
            displayName?: string;
            /**
             * Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an
             * end user. Default is false.
             */
            endInteraction?: boolean;
            /**
             * Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for
             * an event to trigger this intent. Event names are limited to 150 characters.
             */
            events?: string[];
            /** Output only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output. */
            followupIntentInfo?: GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo[];
            /** Optional. The list of context names required for this intent to be triggered. Formats: - `projects//agent/sessions/-/contexts/` - `projects//locations//agent/sessions/-/contexts/` */
            inputContextNames?: string[];
            /** Optional. Indicates whether this is a fallback intent. */
            isFallback?: boolean;
            /** Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console. */
            messages?: GoogleCloudDialogflowV2beta1IntentMessage[];
            /**
             * Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference
             * in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.
             */
            mlDisabled?: boolean;
            /**
             * Optional. Indicates whether Machine Learning is enabled for the intent. Note: If `ml_enabled` setting is set to false, then this intent is not taken into account during inference in
             * `ML ONLY` match mode. Also, auto-markup in the UI is turned off. DEPRECATED! Please use `ml_disabled` field instead. NOTE: If both `ml_enabled` and `ml_disabled` are either not set
             * or false, then the default value is determined as follows: - Before April 15th, 2018 the default is: ml_enabled = false / ml_disabled = true. - After April 15th, 2018 the default
             * is: ml_enabled = true / ml_disabled = false.
             */
            mlEnabled?: boolean;
            /**
             * Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
             * `projects//locations//agent/intents/`
             */
            name?: string;
            /**
             * Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the
             * `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.
             */
            outputContexts?: GoogleCloudDialogflowV2beta1Context[];
            /** Optional. The collection of parameters associated with the intent. */
            parameters?: GoogleCloudDialogflowV2beta1IntentParameter[];
            /**
             * Optional. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or
             * BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.
             */
            parentFollowupIntentName?: string;
            /**
             * Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which
             * corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
             */
            priority?: number;
            /** Optional. Indicates whether to delete all contexts in the current session when this intent is matched. */
            resetContexts?: boolean;
            /**
             * Output only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. Format:
             * `projects//agent/intents/`.
             */
            rootFollowupIntentName?: string;
            /** Optional. The collection of examples that the agent is trained on. */
            trainingPhrases?: GoogleCloudDialogflowV2beta1IntentTrainingPhrase[];
            /** Optional. Indicates whether webhooks are enabled for the intent. */
            webhookState?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo {
            /** The unique identifier of the followup intent. Format: `projects//agent/intents/`. */
            followupIntentName?: string;
            /** The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`. */
            parentFollowupIntentName?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessage {
            /** Displays a basic card for Actions on Google. */
            basicCard?: GoogleCloudDialogflowV2beta1IntentMessageBasicCard;
            /** Browse carousel card for Actions on Google. */
            browseCarouselCard?: GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard;
            /** Displays a card. */
            card?: GoogleCloudDialogflowV2beta1IntentMessageCard;
            /** Displays a carousel card for Actions on Google. */
            carouselSelect?: GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect;
            /** Displays an image. */
            image?: GoogleCloudDialogflowV2beta1IntentMessageImage;
            /** Displays a link out suggestion chip for Actions on Google. */
            linkOutSuggestion?: GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion;
            /** Displays a list card for Actions on Google. */
            listSelect?: GoogleCloudDialogflowV2beta1IntentMessageListSelect;
            /** The media content card for Actions on Google. */
            mediaContent?: GoogleCloudDialogflowV2beta1IntentMessageMediaContent;
            /** A custom platform-specific response. */
            payload?: { [P in string]: any };
            /** Optional. The platform that this message is intended for. */
            platform?: string;
            /** Displays quick replies. */
            quickReplies?: GoogleCloudDialogflowV2beta1IntentMessageQuickReplies;
            /** Rich Business Messaging (RBM) carousel rich card response. */
            rbmCarouselRichCard?: GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard;
            /** Standalone Rich Business Messaging (RBM) rich card response. */
            rbmStandaloneRichCard?: GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard;
            /** Rich Business Messaging (RBM) text response. RBM allows businesses to send enriched and branded versions of SMS. See https://jibe.google.com/business-messaging. */
            rbmText?: GoogleCloudDialogflowV2beta1IntentMessageRbmText;
            /** Returns a voice or text-only response for Actions on Google. */
            simpleResponses?: GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses;
            /** Displays suggestion chips for Actions on Google. */
            suggestions?: GoogleCloudDialogflowV2beta1IntentMessageSuggestions;
            /** Table card for Actions on Google. */
            tableCard?: GoogleCloudDialogflowV2beta1IntentMessageTableCard;
            /** Plays audio from a file in Telephony Gateway. */
            telephonyPlayAudio?: GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio;
            /** Synthesizes speech in Telephony Gateway. */
            telephonySynthesizeSpeech?: GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech;
            /** Transfers the call in Telephony Gateway. */
            telephonyTransferCall?: GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall;
            /** Returns a text response. */
            text?: GoogleCloudDialogflowV2beta1IntentMessageText;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageBasicCard {
            /** Optional. The collection of card buttons. */
            buttons?: GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton[];
            /** Required, unless image is present. The body text of the card. */
            formattedText?: string;
            /** Optional. The image for the card. */
            image?: GoogleCloudDialogflowV2beta1IntentMessageImage;
            /** Optional. The subtitle of the card. */
            subtitle?: string;
            /** Optional. The title of the card. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton {
            /** Required. Action to take when a user taps on the button. */
            openUriAction?: GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction;
            /** Required. The title of the button. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction {
            /** Required. The HTTP or HTTPS scheme URI. */
            uri?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard {
            /** Optional. Settings for displaying the image. Applies to every image in items. */
            imageDisplayOptions?: string;
            /** Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten. */
            items?: GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem[];
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem {
            /** Optional. Description of the carousel item. Maximum of four lines of text. */
            description?: string;
            /** Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text. */
            footer?: string;
            /** Optional. Hero image for the carousel item. */
            image?: GoogleCloudDialogflowV2beta1IntentMessageImage;
            /** Required. Action to present to the user. */
            openUriAction?: GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction;
            /** Required. Title of the carousel item. Maximum of two lines of text. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction {
            /** Required. URL */
            url?: string;
            /** Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser. */
            urlTypeHint?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageCard {
            /** Optional. The collection of card buttons. */
            buttons?: GoogleCloudDialogflowV2beta1IntentMessageCardButton[];
            /** Optional. The public URI to an image file for the card. */
            imageUri?: string;
            /** Optional. The subtitle of the card. */
            subtitle?: string;
            /** Optional. The title of the card. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageCardButton {
            /** Optional. The text to send back to the Dialogflow API or a URI to open. */
            postback?: string;
            /** Optional. The text to show on the button. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect {
            /** Required. Carousel items. */
            items?: GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem[];
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem {
            /** Optional. The body text of the card. */
            description?: string;
            /** Optional. The image to display. */
            image?: GoogleCloudDialogflowV2beta1IntentMessageImage;
            /** Required. Additional info about the option item. */
            info?: GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo;
            /** Required. Title of the carousel item. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageColumnProperties {
            /** Required. Column heading. */
            header?: string;
            /** Optional. Defines text alignment for all cells in this column. */
            horizontalAlignment?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageImage {
            /** A text description of the image to be used for accessibility, e.g., screen readers. Required if image_uri is set for CarouselSelect. */
            accessibilityText?: string;
            /** Optional. The public URI to an image file. */
            imageUri?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion {
            /** Required. The name of the app or site this chip is linking to. */
            destinationName?: string;
            /** Required. The URI of the app or site to open when the user taps the suggestion chip. */
            uri?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageListSelect {
            /** Required. List items. */
            items?: GoogleCloudDialogflowV2beta1IntentMessageListSelectItem[];
            /** Optional. Subtitle of the list. */
            subtitle?: string;
            /** Optional. The overall title of the list. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageListSelectItem {
            /** Optional. The main text describing the item. */
            description?: string;
            /** Optional. The image to display. */
            image?: GoogleCloudDialogflowV2beta1IntentMessageImage;
            /** Required. Additional information about this option. */
            info?: GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo;
            /** Required. The title of the list item. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageMediaContent {
            /** Required. List of media objects. */
            mediaObjects?: GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject[];
            /** Optional. What type of media is the content (ie "audio"). */
            mediaType?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject {
            /** Required. Url where the media is stored. */
            contentUrl?: string;
            /** Optional. Description of media card. */
            description?: string;
            /** Optional. Icon to display above media content. */
            icon?: GoogleCloudDialogflowV2beta1IntentMessageImage;
            /** Optional. Image to display above media content. */
            largeImage?: GoogleCloudDialogflowV2beta1IntentMessageImage;
            /** Required. Name of media card. */
            name?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageQuickReplies {
            /** Optional. The collection of quick replies. */
            quickReplies?: string[];
            /** Optional. The title of the collection of quick replies. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent {
            /** Optional. Description of the card (at most 2000 bytes). At least one of the title, description or media must be set. */
            description?: string;
            /** Optional. However at least one of the title, description or media must be set. Media (image, GIF or a video) to include in the card. */
            media?: GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia;
            /** Optional. List of suggestions to include in the card. */
            suggestions?: GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion[];
            /** Optional. Title of the card (at most 200 bytes). At least one of the title, description or media must be set. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia {
            /**
             * Required. Publicly reachable URI of the file. The RBM platform determines the MIME type of the file from the content-type field in the HTTP headers when the platform fetches the
             * file. The content-type field must be present and accurate in the HTTP response from the URL.
             */
            fileUri?: string;
            /**
             * Required for cards with vertical orientation. The height of the media within a rich card with a vertical layout. For a standalone card with horizontal layout, height is not
             * customizable, and this field is ignored.
             */
            height?: string;
            /**
             * Optional. Publicly reachable URI of the thumbnail.If you don't provide a thumbnail URI, the RBM platform displays a blank placeholder thumbnail until the user's device downloads the
             * file. Depending on the user's setting, the file may not download automatically and may require the user to tap a download button.
             */
            thumbnailUri?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard {
            /** Required. The cards in the carousel. A carousel must have at least 2 cards and at most 10. */
            cardContents?: GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent[];
            /** Required. The width of the cards in the carousel. */
            cardWidth?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard {
            /** Required. Card content. */
            cardContent?: GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent;
            /** Required. Orientation of the card. */
            cardOrientation?: string;
            /** Required if orientation is horizontal. Image preview alignment for standalone cards with horizontal layout. */
            thumbnailImageAlignment?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction {
            /** Suggested client side action: Dial a phone number */
            dial?: GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial;
            /** Suggested client side action: Open a URI on device */
            openUrl?: GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri;
            /**
             * Opaque payload that the Dialogflow receives in a user event when the user taps the suggested action. This data will be also forwarded to webhook to allow performing custom business
             * logic.
             */
            postbackData?: string;
            /** Suggested client side action: Share user location */
            shareLocation?: any;
            /** Text to display alongside the action. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial {
            /**
             * Required. The phone number to fill in the default dialer app. This field should be in [E.164](https://en.wikipedia.org/wiki/E.164) format. An example of a correctly formatted phone
             * number: +15556767888.
             */
            phoneNumber?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri {
            /** Required. The uri to open on the user device */
            uri?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation {
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply {
            /**
             * Opaque payload that the Dialogflow receives in a user event when the user taps the suggested reply. This data will be also forwarded to webhook to allow performing custom business
             * logic.
             */
            postbackData?: string;
            /** Suggested reply text. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion {
            /** Predefined client side actions that user can choose */
            action?: GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction;
            /** Predefined replies for user to select instead of typing */
            reply?: GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageRbmText {
            /** Optional. One or more suggestions to show to the user. */
            rbmSuggestion?: GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion[];
            /** Required. Text sent and displayed to the user. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo {
            /** Required. A unique key that will be sent back to the agent if this response is given. */
            key?: string;
            /** Optional. A list of synonyms that can also be used to trigger this item in dialog. */
            synonyms?: string[];
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse {
            /** Optional. The text to display. */
            displayText?: string;
            /** One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech. */
            ssml?: string;
            /** One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml. */
            textToSpeech?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses {
            /** Required. The list of simple responses. */
            simpleResponses?: GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse[];
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageSuggestion {
            /** Required. The text shown the in the suggestion chip. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageSuggestions {
            /** Required. The list of suggested replies. */
            suggestions?: GoogleCloudDialogflowV2beta1IntentMessageSuggestion[];
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageTableCard {
            /** Optional. List of buttons for the card. */
            buttons?: GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton[];
            /** Optional. Display properties for the columns in this table. */
            columnProperties?: GoogleCloudDialogflowV2beta1IntentMessageColumnProperties[];
            /** Optional. Image which should be displayed on the card. */
            image?: GoogleCloudDialogflowV2beta1IntentMessageImage;
            /** Optional. Rows in this table of data. */
            rows?: GoogleCloudDialogflowV2beta1IntentMessageTableCardRow[];
            /** Optional. Subtitle to the title. */
            subtitle?: string;
            /** Required. Title of the card. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageTableCardCell {
            /** Required. Text in this cell. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageTableCardRow {
            /** Optional. List of cells that make up this row. */
            cells?: GoogleCloudDialogflowV2beta1IntentMessageTableCardCell[];
            /** Optional. Whether to add a visual divider after this row. */
            dividerAfter?: boolean;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio {
            /**
             * Required. URI to a Google Cloud Storage object containing the audio to play, e.g., "gs://bucket/object". The object must contain a single channel (mono) of linear PCM audio (2 bytes
             * / sample) at 8kHz. This object must be readable by the `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` service account where is the number of the Telephony Gateway project
             * (usually the same as the Dialogflow agent project). If the Google Cloud Storage bucket is in the Telephony Gateway project, this permission is added by default when enabling the
             * Dialogflow V2 API. For audio from other sources, consider using the `TelephonySynthesizeSpeech` message with SSML.
             */
            audioUri?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech {
            /** The SSML to be synthesized. For more information, see [SSML](https://developers.google.com/actions/reference/ssml). */
            ssml?: string;
            /** The raw text to be synthesized. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall {
            /** Required. The phone number to transfer the call to in [E.164 format](https://en.wikipedia.org/wiki/E.164). We currently only allow transferring to US numbers (+1xxxyyyzzzz). */
            phoneNumber?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentMessageText {
            /** Optional. The collection of the agent's responses. */
            text?: string[];
        }
        interface GoogleCloudDialogflowV2beta1IntentParameter {
            /**
             * Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax:
             * `#context_name.parameter_name`.
             */
            defaultValue?: string;
            /** Required. The name of the parameter. */
            displayName?: string;
            /** Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided. */
            entityTypeDisplayName?: string;
            /** Optional. Indicates whether the parameter represents a list of values. */
            isList?: boolean;
            /** Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value. */
            mandatory?: boolean;
            /** The unique identifier of this parameter. */
            name?: string;
            /** Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter. */
            prompts?: string[];
            /**
             * Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as
             * `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`.
             */
            value?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentTrainingPhrase {
            /** Output only. The unique identifier of this training phrase. */
            name?: string;
            /**
             * Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases
             * like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the
             * training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must
             * create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a
             * part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set.
             */
            parts?: GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart[];
            /** Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased. */
            timesAddedCount?: number;
            /** Required. The type of the training phrase. */
            type?: string;
        }
        interface GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart {
            /** Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase. */
            alias?: string;
            /** Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase. */
            entityType?: string;
            /** Required. The text for this part. */
            text?: string;
            /**
             * Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated
             * part with the API, you must set this to true.
             */
            userDefined?: boolean;
        }
        interface GoogleCloudDialogflowV2beta1KnowledgeAnswers {
            /** A list of answers from Knowledge Connector. */
            answers?: GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer[];
        }
        interface GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer {
            /** The piece of text from the `source` knowledge base document that answers this conversational query. */
            answer?: string;
            /** The corresponding FAQ question if the answer was extracted from a FAQ Document, empty otherwise. */
            faqQuestion?: string;
            /**
             * The system's confidence score that this Knowledge answer is a good match for this conversational query. The range is from 0.0 (completely uncertain) to 1.0 (completely certain).
             * Note: The confidence score is likely to vary somewhat (possibly even for identical requests), as the underlying model is under constant improvement. It may be deprecated in the
             * future. We recommend using `match_confidence_level` which should be generally more stable.
             */
            matchConfidence?: number;
            /**
             * The system's confidence level that this knowledge answer is a good match for this conversational query. NOTE: The confidence level for a given `` pair may change without notice, as
             * it depends on models that are constantly being improved. However, it will change less frequently than the confidence score below, and should be preferred for referencing the quality
             * of an answer.
             */
            matchConfidenceLevel?: string;
            /** Indicates which Knowledge Document this answer was extracted from. Format: `projects//knowledgeBases//documents/`. */
            source?: string;
        }
        interface GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata {
            /** Required. Output only. The current state of this operation. */
            state?: string;
        }
        interface GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest {
            /**
             * Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional
             * information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { "telephony": { "caller_id": "+18558363987" } } Note: The caller
             * ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition
             * agents.
             */
            payload?: { [P in string]: any };
            /** The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers. */
            source?: string;
            /** Optional. The version of the protocol used for this request. This field is AoG-specific. */
            version?: string;
        }
        interface GoogleCloudDialogflowV2beta1QueryResult {
            /** The action name from the matched intent. */
            action?: string;
            /**
             * This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter
             * values have been collected, or if the matched intent doesn't contain any required parameters.
             */
            allRequiredParamsPresent?: boolean;
            /**
             * Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its
             * structure. The data may contain: - webhook call latency - webhook errors
             */
            diagnosticInfo?: { [P in string]: any };
            /** The collection of rich messages to present to the user. */
            fulfillmentMessages?: GoogleCloudDialogflowV2beta1IntentMessage[];
            /** The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred. */
            fulfillmentText?: string;
            /**
             * The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and
             * `is_fallback`.
             */
            intent?: GoogleCloudDialogflowV2beta1Intent;
            /**
             * The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help
             * match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation.
             * If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.
             */
            intentDetectionConfidence?: number;
            /** The result from Knowledge Connector (if any), ordered by decreasing `KnowledgeAnswers.match_confidence`. */
            knowledgeAnswers?: GoogleCloudDialogflowV2beta1KnowledgeAnswers;
            /**
             * The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
             * language codes.
             */
            languageCode?: string;
            /** The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query. */
            outputContexts?: GoogleCloudDialogflowV2beta1Context[];
            /**
             * The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of
             * a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else:
             * string or number, depending on parameter value type - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values
             * - Else: parameter value
             */
            parameters?: { [P in string]: any };
            /**
             * The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided
             * as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is
             * enabled, `query_text` will contain the corrected user input.
             */
            queryText?: string;
            /** The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request. */
            sentimentAnalysisResult?: GoogleCloudDialogflowV2beta1SentimentAnalysisResult;
            /**
             * The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a
             * sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the
             * streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.
             */
            speechRecognitionConfidence?: number;
            /** If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response. */
            webhookPayload?: { [P in string]: any };
            /** If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response. */
            webhookSource?: string;
        }
        interface GoogleCloudDialogflowV2beta1Sentiment {
            /** A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative). */
            magnitude?: number;
            /** Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment). */
            score?: number;
        }
        interface GoogleCloudDialogflowV2beta1SentimentAnalysisResult {
            /** The sentiment analysis result for `query_text`. */
            queryTextSentiment?: GoogleCloudDialogflowV2beta1Sentiment;
        }
        interface GoogleCloudDialogflowV2beta1SessionEntityType {
            /** Required. The collection of entities associated with this session entity type. */
            entities?: GoogleCloudDialogflowV2beta1EntityTypeEntity[];
            /** Required. Indicates whether the additional data should override or supplement the custom entity type definition. */
            entityOverrideMode?: string;
            /**
             * Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
             * `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we assume
             * default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display
             * name of an existing entity type in the same agent that will be overridden or supplemented.
             */
            name?: string;
        }
        interface GoogleCloudDialogflowV2beta1WebhookRequest {
            /** Alternative query results from KnowledgeService. */
            alternativeQueryResults?: GoogleCloudDialogflowV2beta1QueryResult[];
            /** Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call. */
            originalDetectIntentRequest?: GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest;
            /** The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`. */
            queryResult?: GoogleCloudDialogflowV2beta1QueryResult;
            /** The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`. */
            responseId?: string;
            /**
             * The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Supported formats: - `projects//agent/sessions/, -
             * `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`,
             */
            session?: string;
        }
        interface GoogleCloudDialogflowV2beta1WebhookResponse {
            /**
             * Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an
             * end user. Default is false.
             */
            endInteraction?: boolean;
            /** Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields. */
            followupEventInput?: GoogleCloudDialogflowV2beta1EventInput;
            /**
             * Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API
             * caller.
             */
            fulfillmentMessages?: GoogleCloudDialogflowV2beta1IntentMessage[];
            /**
             * Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to
             * populate QueryResult.fulfillment_text sent to the integration or API caller.
             */
            fulfillmentText?: string;
            /**
             * Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to
             * populate QueryResult.output_contexts sent to the integration or API caller.
             */
            outputContexts?: GoogleCloudDialogflowV2beta1Context[];
            /**
             * Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this
             * field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant
             * integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook
             * format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
             */
            payload?: { [P in string]: any };
            /**
             * Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data
             * from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods.
             */
            sessionEntityTypes?: GoogleCloudDialogflowV2beta1SessionEntityType[];
            /**
             * Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent
             * to the integration or API caller.
             */
            source?: string;
        }
        interface GoogleCloudDialogflowV2Context {
            /**
             * Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire
             * automatically after 20 minutes if there are no matching queries.
             */
            lifespanCount?: number;
            /**
             * Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
             * always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft'
             * environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or
             * create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
             */
            name?: string;
            /**
             * Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table,
             * dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type
             * is a composite entity: map - Else: string or number, depending on parameter value type - MapValue value: - If parameter's entity type is a composite entity: map from composite
             * entity property names to property values - Else: parameter value
             */
            parameters?: { [P in string]: any };
        }
        interface GoogleCloudDialogflowV2ConversationEvent {
            /** The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`. */
            conversation?: string;
            /** More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL. */
            errorStatus?: GoogleRpcStatus;
            /** Payload of NEW_MESSAGE event. */
            newMessagePayload?: GoogleCloudDialogflowV2Message;
            /** The type of the event that this notification refers to. */
            type?: string;
        }
        interface GoogleCloudDialogflowV2EntityType {
            /** Optional. Indicates whether the entity type can be automatically expanded. */
            autoExpansionMode?: string;
            /** Required. The name of the entity type. */
            displayName?: string;
            /** Optional. Enables fuzzy entity extraction during classification. */
            enableFuzzyExtraction?: boolean;
            /** Optional. The collection of entity entries associated with the entity type. */
            entities?: GoogleCloudDialogflowV2EntityTypeEntity[];
            /** Required. Indicates the kind of entity type. */
            kind?: string;
            /** The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`. */
            name?: string;
        }
        interface GoogleCloudDialogflowV2EntityTypeEntity {
            /**
             * Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity
             * types: * This collection must contain exactly one synonym equal to `value`.
             */
            synonyms?: string[];
            /**
             * Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A
             * reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).
             */
            value?: string;
        }
        interface GoogleCloudDialogflowV2EventInput {
            /**
             * Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note
             * that queries in the same session do not necessarily need to specify the same language.
             */
            languageCode?: string;
            /** Required. The unique identifier of the event. */
            name?: string;
            /**
             * The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON
             * object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite
             * entity: map - Else: string or number, depending on parameter value type - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property
             * names to property values - Else: parameter value
             */
            parameters?: { [P in string]: any };
        }
        interface GoogleCloudDialogflowV2ExportAgentResponse {
            /** Zip compressed raw byte content for agent. */
            agentContent?: string;
            /** The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`. */
            agentUri?: string;
        }
        interface GoogleCloudDialogflowV2Intent {
            /** Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces. */
            action?: string;
            /** Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform). */
            defaultResponsePlatforms?: string[];
            /** Required. The name of this intent. */
            displayName?: string;
            /**
             * Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for
             * an event to trigger this intent. Event names are limited to 150 characters.
             */
            events?: string[];
            /** Read-only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output. */
            followupIntentInfo?: GoogleCloudDialogflowV2IntentFollowupIntentInfo[];
            /** Optional. The list of context names required for this intent to be triggered. Format: `projects//agent/sessions/-/contexts/`. */
            inputContextNames?: string[];
            /** Optional. Indicates whether this is a fallback intent. */
            isFallback?: boolean;
            /** Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console. */
            messages?: GoogleCloudDialogflowV2IntentMessage[];
            /**
             * Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference
             * in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.
             */
            mlDisabled?: boolean;
            /** Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`. */
            name?: string;
            /**
             * Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the
             * `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.
             */
            outputContexts?: GoogleCloudDialogflowV2Context[];
            /** Optional. The collection of parameters associated with the intent. */
            parameters?: GoogleCloudDialogflowV2IntentParameter[];
            /**
             * Read-only after creation. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent
             * or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.
             */
            parentFollowupIntentName?: string;
            /**
             * Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which
             * corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
             */
            priority?: number;
            /** Optional. Indicates whether to delete all contexts in the current session when this intent is matched. */
            resetContexts?: boolean;
            /**
             * Read-only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. We populate this field only
             * in the output. Format: `projects//agent/intents/`.
             */
            rootFollowupIntentName?: string;
            /** Optional. The collection of examples that the agent is trained on. */
            trainingPhrases?: GoogleCloudDialogflowV2IntentTrainingPhrase[];
            /** Optional. Indicates whether webhooks are enabled for the intent. */
            webhookState?: string;
        }
        interface GoogleCloudDialogflowV2IntentFollowupIntentInfo {
            /** The unique identifier of the followup intent. Format: `projects//agent/intents/`. */
            followupIntentName?: string;
            /** The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`. */
            parentFollowupIntentName?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessage {
            /** The basic card response for Actions on Google. */
            basicCard?: GoogleCloudDialogflowV2IntentMessageBasicCard;
            /** Browse carousel card for Actions on Google. */
            browseCarouselCard?: GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard;
            /** The card response. */
            card?: GoogleCloudDialogflowV2IntentMessageCard;
            /** The carousel card response for Actions on Google. */
            carouselSelect?: GoogleCloudDialogflowV2IntentMessageCarouselSelect;
            /** The image response. */
            image?: GoogleCloudDialogflowV2IntentMessageImage;
            /** The link out suggestion chip for Actions on Google. */
            linkOutSuggestion?: GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion;
            /** The list card response for Actions on Google. */
            listSelect?: GoogleCloudDialogflowV2IntentMessageListSelect;
            /** The media content card for Actions on Google. */
            mediaContent?: GoogleCloudDialogflowV2IntentMessageMediaContent;
            /** A custom platform-specific response. */
            payload?: { [P in string]: any };
            /** Optional. The platform that this message is intended for. */
            platform?: string;
            /** The quick replies response. */
            quickReplies?: GoogleCloudDialogflowV2IntentMessageQuickReplies;
            /** The voice and text-only responses for Actions on Google. */
            simpleResponses?: GoogleCloudDialogflowV2IntentMessageSimpleResponses;
            /** The suggestion chips for Actions on Google. */
            suggestions?: GoogleCloudDialogflowV2IntentMessageSuggestions;
            /** Table card for Actions on Google. */
            tableCard?: GoogleCloudDialogflowV2IntentMessageTableCard;
            /** The text response. */
            text?: GoogleCloudDialogflowV2IntentMessageText;
        }
        interface GoogleCloudDialogflowV2IntentMessageBasicCard {
            /** Optional. The collection of card buttons. */
            buttons?: GoogleCloudDialogflowV2IntentMessageBasicCardButton[];
            /** Required, unless image is present. The body text of the card. */
            formattedText?: string;
            /** Optional. The image for the card. */
            image?: GoogleCloudDialogflowV2IntentMessageImage;
            /** Optional. The subtitle of the card. */
            subtitle?: string;
            /** Optional. The title of the card. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageBasicCardButton {
            /** Required. Action to take when a user taps on the button. */
            openUriAction?: GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction;
            /** Required. The title of the button. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction {
            /** Required. The HTTP or HTTPS scheme URI. */
            uri?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard {
            /** Optional. Settings for displaying the image. Applies to every image in items. */
            imageDisplayOptions?: string;
            /** Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten. */
            items?: GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem[];
        }
        interface GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem {
            /** Optional. Description of the carousel item. Maximum of four lines of text. */
            description?: string;
            /** Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text. */
            footer?: string;
            /** Optional. Hero image for the carousel item. */
            image?: GoogleCloudDialogflowV2IntentMessageImage;
            /** Required. Action to present to the user. */
            openUriAction?: GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction;
            /** Required. Title of the carousel item. Maximum of two lines of text. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction {
            /** Required. URL */
            url?: string;
            /** Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser. */
            urlTypeHint?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageCard {
            /** Optional. The collection of card buttons. */
            buttons?: GoogleCloudDialogflowV2IntentMessageCardButton[];
            /** Optional. The public URI to an image file for the card. */
            imageUri?: string;
            /** Optional. The subtitle of the card. */
            subtitle?: string;
            /** Optional. The title of the card. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageCardButton {
            /** Optional. The text to send back to the Dialogflow API or a URI to open. */
            postback?: string;
            /** Optional. The text to show on the button. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageCarouselSelect {
            /** Required. Carousel items. */
            items?: GoogleCloudDialogflowV2IntentMessageCarouselSelectItem[];
        }
        interface GoogleCloudDialogflowV2IntentMessageCarouselSelectItem {
            /** Optional. The body text of the card. */
            description?: string;
            /** Optional. The image to display. */
            image?: GoogleCloudDialogflowV2IntentMessageImage;
            /** Required. Additional info about the option item. */
            info?: GoogleCloudDialogflowV2IntentMessageSelectItemInfo;
            /** Required. Title of the carousel item. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageColumnProperties {
            /** Required. Column heading. */
            header?: string;
            /** Optional. Defines text alignment for all cells in this column. */
            horizontalAlignment?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageImage {
            /** Optional. A text description of the image to be used for accessibility, e.g., screen readers. */
            accessibilityText?: string;
            /** Optional. The public URI to an image file. */
            imageUri?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion {
            /** Required. The name of the app or site this chip is linking to. */
            destinationName?: string;
            /** Required. The URI of the app or site to open when the user taps the suggestion chip. */
            uri?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageListSelect {
            /** Required. List items. */
            items?: GoogleCloudDialogflowV2IntentMessageListSelectItem[];
            /** Optional. Subtitle of the list. */
            subtitle?: string;
            /** Optional. The overall title of the list. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageListSelectItem {
            /** Optional. The main text describing the item. */
            description?: string;
            /** Optional. The image to display. */
            image?: GoogleCloudDialogflowV2IntentMessageImage;
            /** Required. Additional information about this option. */
            info?: GoogleCloudDialogflowV2IntentMessageSelectItemInfo;
            /** Required. The title of the list item. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageMediaContent {
            /** Required. List of media objects. */
            mediaObjects?: GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject[];
            /** Optional. What type of media is the content (ie "audio"). */
            mediaType?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject {
            /** Required. Url where the media is stored. */
            contentUrl?: string;
            /** Optional. Description of media card. */
            description?: string;
            /** Optional. Icon to display above media content. */
            icon?: GoogleCloudDialogflowV2IntentMessageImage;
            /** Optional. Image to display above media content. */
            largeImage?: GoogleCloudDialogflowV2IntentMessageImage;
            /** Required. Name of media card. */
            name?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageQuickReplies {
            /** Optional. The collection of quick replies. */
            quickReplies?: string[];
            /** Optional. The title of the collection of quick replies. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageSelectItemInfo {
            /** Required. A unique key that will be sent back to the agent if this response is given. */
            key?: string;
            /** Optional. A list of synonyms that can also be used to trigger this item in dialog. */
            synonyms?: string[];
        }
        interface GoogleCloudDialogflowV2IntentMessageSimpleResponse {
            /** Optional. The text to display. */
            displayText?: string;
            /** One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech. */
            ssml?: string;
            /** One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml. */
            textToSpeech?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageSimpleResponses {
            /** Required. The list of simple responses. */
            simpleResponses?: GoogleCloudDialogflowV2IntentMessageSimpleResponse[];
        }
        interface GoogleCloudDialogflowV2IntentMessageSuggestion {
            /** Required. The text shown the in the suggestion chip. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageSuggestions {
            /** Required. The list of suggested replies. */
            suggestions?: GoogleCloudDialogflowV2IntentMessageSuggestion[];
        }
        interface GoogleCloudDialogflowV2IntentMessageTableCard {
            /** Optional. List of buttons for the card. */
            buttons?: GoogleCloudDialogflowV2IntentMessageBasicCardButton[];
            /** Optional. Display properties for the columns in this table. */
            columnProperties?: GoogleCloudDialogflowV2IntentMessageColumnProperties[];
            /** Optional. Image which should be displayed on the card. */
            image?: GoogleCloudDialogflowV2IntentMessageImage;
            /** Optional. Rows in this table of data. */
            rows?: GoogleCloudDialogflowV2IntentMessageTableCardRow[];
            /** Optional. Subtitle to the title. */
            subtitle?: string;
            /** Required. Title of the card. */
            title?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageTableCardCell {
            /** Required. Text in this cell. */
            text?: string;
        }
        interface GoogleCloudDialogflowV2IntentMessageTableCardRow {
            /** Optional. List of cells that make up this row. */
            cells?: GoogleCloudDialogflowV2IntentMessageTableCardCell[];
            /** Optional. Whether to add a visual divider after this row. */
            dividerAfter?: boolean;
        }
        interface GoogleCloudDialogflowV2IntentMessageText {
            /** Optional. The collection of the agent's responses. */
            text?: string[];
        }
        interface GoogleCloudDialogflowV2IntentParameter {
            /**
             * Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax:
             * `#context_name.parameter_name`.
             */
            defaultValue?: string;
            /** Required. The name of the parameter. */
            displayName?: string;
            /** Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided. */
            entityTypeDisplayName?: string;
            /** Optional. Indicates whether the parameter represents a list of values. */
            isList?: boolean;
            /** Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value. */
            mandatory?: boolean;
            /** The unique identifier of this parameter. */
            name?: string;
            /** Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter. */
            prompts?: string[];
            /**
             * Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as
             * `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`.
             */
            value?: string;
        }
        interface GoogleCloudDialogflowV2IntentTrainingPhrase {
            /** Output only. The unique identifier of this training phrase. */
            name?: string;
            /**
             * Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases
             * like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the
             * training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must
             * create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a
             * part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set.
             */
            parts?: GoogleCloudDialogflowV2IntentTrainingPhrasePart[];
            /** Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased. */
            timesAddedCount?: number;
            /** Required. The type of the training phrase. */
            type?: string;
        }
        interface GoogleCloudDialogflowV2IntentTrainingPhrasePart {
            /** Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase. */
            alias?: string;
            /** Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase. */
            entityType?: string;
            /** Required. The text for this part. */
            text?: string;
            /**
             * Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated
             * part with the API, you must set this to true.
             */
            userDefined?: boolean;
        }
        interface GoogleCloudDialogflowV2Message {
            /** Required. The message content. */
            content?: string;
            /** Output only. The time when the message was created. */
            createTime?: string;
            /** Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US". */
            languageCode?: string;
            /** Output only. The annotation for the message. */
            messageAnnotation?: GoogleCloudDialogflowV2MessageAnnotation;
            /** The unique identifier of the message. Format: `projects//locations//conversations//messages/`. */
            name?: string;
            /** Output only. The participant that sends this message. */
            participant?: string;
            /** Output only. The role of the participant. */
            participantRole?: string;
        }
        interface GoogleCloudDialogflowV2MessageAnnotation {
            /** Indicates whether the text message contains entities. */
            containEntities?: boolean;
            /** The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text]. */
            parts?: GoogleCloudDialogflowV2AnnotatedMessagePart[];
        }
        interface GoogleCloudDialogflowV2OriginalDetectIntentRequest {
            /**
             * Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional
             * information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { "telephony": { "caller_id": "+18558363987" } } Note: The caller
             * ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition
             * agents.
             */
            payload?: { [P in string]: any };
            /** The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers. */
            source?: string;
            /** Optional. The version of the protocol used for this request. This field is AoG-specific. */
            version?: string;
        }
        interface GoogleCloudDialogflowV2QueryResult {
            /** The action name from the matched intent. */
            action?: string;
            /**
             * This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter
             * values have been collected, or if the matched intent doesn't contain any required parameters.
             */
            allRequiredParamsPresent?: boolean;
            /**
             * Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its
             * structure. The data may contain: - webhook call latency - webhook errors
             */
            diagnosticInfo?: { [P in string]: any };
            /** The collection of rich messages to present to the user. */
            fulfillmentMessages?: GoogleCloudDialogflowV2IntentMessage[];
            /** The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred. */
            fulfillmentText?: string;
            /**
             * The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and
             * `is_fallback`.
             */
            intent?: GoogleCloudDialogflowV2Intent;
            /**
             * The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help
             * match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation.
             * If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.
             */
            intentDetectionConfidence?: number;
            /**
             * The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
             * language codes.
             */
            languageCode?: string;
            /** The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query. */
            outputContexts?: GoogleCloudDialogflowV2Context[];
            /**
             * The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of
             * a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else:
             * string or number, depending on parameter value type - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values
             * - Else: parameter value
             */
            parameters?: { [P in string]: any };
            /**
             * The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided
             * as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is
             * enabled, `query_text` will contain the corrected user input.
             */
            queryText?: string;
            /** The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request. */
            sentimentAnalysisResult?: GoogleCloudDialogflowV2SentimentAnalysisResult;
            /**
             * The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a
             * sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the
             * streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.
             */
            speechRecognitionConfidence?: number;
            /** If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response. */
            webhookPayload?: { [P in string]: any };
            /** If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response. */
            webhookSource?: string;
        }
        interface GoogleCloudDialogflowV2Sentiment {
            /** A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative). */
            magnitude?: number;
            /** Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment). */
            score?: number;
        }
        interface GoogleCloudDialogflowV2SentimentAnalysisResult {
            /** The sentiment analysis result for `query_text`. */
            queryTextSentiment?: GoogleCloudDialogflowV2Sentiment;
        }
        interface GoogleCloudDialogflowV2SessionEntityType {
            /** Required. The collection of entities associated with this session entity type. */
            entities?: GoogleCloudDialogflowV2EntityTypeEntity[];
            /** Required. Indicates whether the additional data should override or supplement the custom entity type definition. */
            entityOverrideMode?: string;
            /**
             * Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If
             * `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing
             * entity type in the same agent that will be overridden or supplemented.
             */
            name?: string;
        }
        interface GoogleCloudDialogflowV2WebhookRequest {
            /** Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call. */
            originalDetectIntentRequest?: GoogleCloudDialogflowV2OriginalDetectIntentRequest;
            /** The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`. */
            queryResult?: GoogleCloudDialogflowV2QueryResult;
            /** The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`. */
            responseId?: string;
            /**
             * The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Format: `projects//agent/sessions/`, or
             * `projects//agent/environments//users//sessions/`.
             */
            session?: string;
        }
        interface GoogleCloudDialogflowV2WebhookResponse {
            /** Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields. */
            followupEventInput?: GoogleCloudDialogflowV2EventInput;
            /**
             * Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API
             * caller.
             */
            fulfillmentMessages?: GoogleCloudDialogflowV2IntentMessage[];
            /**
             * Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to
             * populate QueryResult.fulfillment_text sent to the integration or API caller.
             */
            fulfillmentText?: string;
            /**
             * Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to
             * populate QueryResult.output_contexts sent to the integration or API caller.
             */
            outputContexts?: GoogleCloudDialogflowV2Context[];
            /**
             * Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this
             * field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant
             * integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook
             * format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
             */
            payload?: { [P in string]: any };
            /**
             * Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data
             * from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods.
             */
            sessionEntityTypes?: GoogleCloudDialogflowV2SessionEntityType[];
            /**
             * Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent
             * to the integration or API caller.
             */
            source?: string;
        }
        interface GoogleLongrunningListOperationsResponse {
            /** The standard List next-page token. */
            nextPageToken?: string;
            /** A list of operations that matches the specified filter in the request. */
            operations?: GoogleLongrunningOperation[];
        }
        interface GoogleLongrunningOperation {
            /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */
            done?: boolean;
            /** The error result of the operation in case of failure or cancellation. */
            error?: GoogleRpcStatus;
            /**
             * Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such
             * metadata. Any method that returns a long-running operation should document the metadata type, if any.
             */
            metadata?: { [P in string]: any };
            /**
             * The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending
             * with `operations/{unique_id}`.
             */
            name?: string;
            /**
             * The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the
             * original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the
             * original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
             */
            response?: { [P in string]: any };
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleProtobufEmpty {
        }
        interface GoogleRpcStatus {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?: number;
            /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
            details?: Array<{ [P in string]: any }>;
            /**
             * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the
             * client.
             */
            message?: string;
        }
        interface OperationsResource {
            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support
             * this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the
             * operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a
             * google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
             */
            cancel(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningOperation>;
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services
             * to override the binding to use different resource name schemes, such as `users/∗/operations`. To override the binding, API services can add a binding such as
             * `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must
             * ensure the name binding is the parent resource, without the operations collection id.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** The standard list filter. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation's parent resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The standard list page size. */
                pageSize?: number;
                /** The standard list page token. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningListOperationsResponse>;
        }
        interface LocationsResource {
            operations: OperationsResource;
        }
        interface OperationsResource {
            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support
             * this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the
             * operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a
             * google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
             */
            cancel(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningOperation>;
            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services
             * to override the binding to use different resource name schemes, such as `users/∗/operations`. To override the binding, API services can add a binding such as
             * `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must
             * ensure the name binding is the parent resource, without the operations collection id.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** The standard list filter. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation's parent resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The standard list page size. */
                pageSize?: number;
                /** The standard list page token. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningListOperationsResponse>;
        }
        interface ProjectsResource {
            locations: LocationsResource;
            operations: OperationsResource;
        }

        const projects: ProjectsResource;
    }
}
